#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Weather

#include "Basic.hpp"

#include "UDS_and_UDW_State_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "RandomWeatherVariation_State_structs.hpp"
#include "UDW_WOV_State_structs.hpp"
#include "UDW_WeatherState_Structure_structs.hpp"
#include "UDS_Particle_Collision_Mode_structs.hpp"
#include "UDS_Season_structs.hpp"
#include "UDS_Weather_Display_Names_structs.hpp"
#include "UDS_Weather_State_Variable_structs.hpp"
#include "UDS_TemperatureType_structs.hpp"
#include "UDS_Temperature_Sample_Location_structs.hpp"
#include "UDS_ControlPointMode_structs.hpp"
#include "UDS_RandomWeatherTiming_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Active Occlusion State
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Active_Occlusion_State final
{
public:
	class UUDS_OcclusionState_C*                  State;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_OcclusionState_C*                  K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Active_Occlusion_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Active_Occlusion_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Active_Occlusion_State) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Active_Occlusion_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Active_Occlusion_State, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Active_Occlusion_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Active_Occlusion_State, Temp_bool_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Active_Occlusion_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Active_Occlusion_State, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Active_Occlusion_State::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Add Constructed Components
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Add_Constructed_Components final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Add_Constructed_Components) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Add_Constructed_Components");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Add_Constructed_Components) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Add_Constructed_Components");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Constructed_Components, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Add_Constructed_Components::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'Ultra_Dynamic_Weather_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Add Weather Override Volume to Array
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array final
{
public:
	class AWeather_Override_Volume_C*             Weather_Override_Volume;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, Weather_Override_Volume) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::Weather_Override_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, CallFunc_Array_Contains_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Allow Render Target Drawing
// 0x0003 (0x0003 - 0x0000)
struct Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing) == 0x000003, "Wrong size on Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing, CallFunc_BooleanNOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Allow_Render_Target_Drawing::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Any Manual Overrides Applied
// 0x000A (0x000A - 0x0000)
struct Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied) == 0x00000A, "Wrong size on Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_3) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_4) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_5) == 0x000006, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_6) == 0x000007, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_7) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied, CallFunc_BooleanOR_ReturnValue_8) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Any_Manual_Overrides_Applied::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Climate Preset Object
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object final
{
public:
	class UUDS_Climate_Preset_C*                  Climate;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map; // 0x0010(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map_1; // 0x0060(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map_2; // 0x00B0(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map_3; // 0x0100(0x0050)()
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Summer_Range; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Autumn_Range; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Winter_Range; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Spring_Range; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object) == 0x000190, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, Climate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::Climate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Summer_Range) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Summer_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Autumn_Range) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Autumn_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Winter_Range) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Winter_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Spring_Range) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Spring_Range' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Interior Temperature with Occlusion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion final
{
public:
	double                                        Temp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Occlusion;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, Temp) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::Temp' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, Occlusion) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, Out) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Local Temperature Effects
// 0x02C8 (0x02C8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects final
{
public:
	double                                        Temp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Occlusion;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_Out;                                          // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Total_Offset;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Unconverted_Temperature;                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_Interior_Temp;                               // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB[0x1];                                      // 0x01AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITemperature_Volume_Interface_C> K2Node_DynamicCast_AsTemperature_Volume_Interface; // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Query_Temperature_Volume_Offset;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Query_Temperature_Volume_Interior_Temp;   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Query_Temperature_Volume_Interior_Alpha;  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects) == 0x0002C8, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Temp) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Temp' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Occlusion) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Location) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Temp_Out) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Temp_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Total_Offset) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Total_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Unconverted_Temperature) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Unconverted_Temperature' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Local_Interior_Temp) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Local_Interior_Temp' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Temp_object_Variable) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Temp_int_Array_Index_Variable) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Lerp_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, K2Node_MakeArray_Array) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_LineTraceMultiForObjects_OutHits) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A9, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001AA, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_Time) == 0x0001AC, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_Distance) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_Location) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_Normal) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_BoneName) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_HitItem) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_ElementIndex) == 0x000244, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_FaceIndex) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_TraceStart) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_BreakHitResult_TraceEnd) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, K2Node_DynamicCast_AsTemperature_Volume_Interface) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::K2Node_DynamicCast_AsTemperature_Volume_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_DoesImplementInterface_ReturnValue) == 0x000291, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Query_Temperature_Volume_Offset) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Query_Temperature_Volume_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Query_Temperature_Volume_Interior_Temp) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Query_Temperature_Volume_Interior_Temp' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Query_Temperature_Volume_Interior_Alpha) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Query_Temperature_Volume_Interior_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Lerp_ReturnValue_1) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Local_Temperature_Effects::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Manual State Override Values
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values final
{
public:
	bool                                          For_Local_Weather;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, For_Local_Weather) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::For_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, Index_0) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, CallFunc_Array_Get_Item) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C_Apply_Manual_State_Override_Values::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Max to Material Effects
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects final
{
public:
	class UUDS_Weather_Settings_C*                Weather_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Coverage;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wetness;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Weather_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Weather_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Snow_Coverage) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Snow_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Wetness) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Param_Dust_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Radial Storm Actors to Local Weather
// 0x0150 (0x0150 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather final
{
public:
	bool                                          For_Local_Weather;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Storm_Array;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        Unchanged_Cloud_Coverage;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Weather_in_Storm;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Powered_Alpha;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            Storm_Weather;                                     // 0x0030(0x0050)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radial_Storm_Alpha;                                // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radial_Storm_Distance;                             // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRadial_Storm_Weather_Interface_C> K2Node_DynamicCast_AsRadial_Storm_Weather_Interface; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Radial_Storm_Weather_Data_World_Location; // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Radial_Storm_Weather_Data_Outer_Radius; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Radial_Storm_Weather_Data_Inner_Radius; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Radial_Storm_Weather_Data_Alpha;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Get_Radial_Storm_Weather_Data_Weather_State; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Radial_Storm_Weather_Data_Affect_Material_State; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_Select_Default_1;                           // 0x0138(0x0010)(ReferenceParm)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather) == 0x000150, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, For_Local_Weather) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::For_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Storm_Array) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Storm_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Unchanged_Cloud_Coverage) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Unchanged_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Weather_in_Storm) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Weather_in_Storm' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Powered_Alpha) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Powered_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Storm_Weather) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Storm_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Radial_Storm_Alpha) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Radial_Storm_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Radial_Storm_Distance) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Radial_Storm_Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Temp_int_Array_Index_Variable) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Temp_bool_Variable) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, K2Node_DynamicCast_AsRadial_Storm_Weather_Interface) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::K2Node_DynamicCast_AsRadial_Storm_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Get_Radial_Storm_Weather_Data_World_Location) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Get_Radial_Storm_Weather_Data_World_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Get_Radial_Storm_Weather_Data_Outer_Radius) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Get_Radial_Storm_Weather_Data_Outer_Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Get_Radial_Storm_Weather_Data_Inner_Radius) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Get_Radial_Storm_Weather_Data_Inner_Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Get_Radial_Storm_Weather_Data_Alpha) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Get_Radial_Storm_Weather_Data_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Get_Radial_Storm_Weather_Data_Weather_State) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Get_Radial_Storm_Weather_Data_Weather_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Get_Radial_Storm_Weather_Data_Affect_Material_State) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Get_Radial_Storm_Weather_Data_Affect_Material_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000101, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_IsValid_ReturnValue) == 0x000102, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000103, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000104, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_BooleanAND_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_MapRangeClamped_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, Temp_bool_Variable_1) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather, CallFunc_Vector_Distance2D_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Apply_Radial_Storm_Actors_to_Local_Weather::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Sound Effects Volume Levels
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels final
{
public:
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_2; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_3; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_4; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_5; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels, CallFunc_SetFloatParameter_InFloat_ImplicitCast_2) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels::CallFunc_SetFloatParameter_InFloat_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels, CallFunc_SetFloatParameter_InFloat_ImplicitCast_3) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels::CallFunc_SetFloatParameter_InFloat_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels, CallFunc_SetFloatParameter_InFloat_ImplicitCast_4) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels::CallFunc_SetFloatParameter_InFloat_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels, CallFunc_SetFloatParameter_InFloat_ImplicitCast_5) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Effects_Volume_Levels::CallFunc_SetFloatParameter_InFloat_ImplicitCast_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Sound Update Periods
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods final
{
public:
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Apply_Sound_Update_Periods::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Weather Changes Above Cloud Layer
// 0x00F8 (0x00F8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer final
{
public:
	bool                                          For_Local_Weather;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                State_Object;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Above_Clouds;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_8;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer) == 0x0000F8, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, For_Local_Weather) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::For_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, State_Object) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::State_Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, Above_Clouds) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::Above_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_4) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_5) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_6) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_7) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_8) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, Temp_bool_Variable) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, K2Node_Select_Default) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BooleanAND_ReturnValue) == 0x0000F1, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Weather Override Volume State
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State final
{
public:
	class AWeather_Override_Volume_C*             WOV;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          For_Local_Weather;                                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Current_Volume_Alpha;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Yaw_Angles_Out;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_1;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, WOV) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::WOV' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, Alpha) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, For_Local_Weather) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::For_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, Current_Volume_Alpha) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::Current_Volume_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, Temp_bool_Variable) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_BreakVector2D_X) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, K2Node_Select_Default) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_Lerp_Yaw_Angles_Out) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_Lerp_Yaw_Angles_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, Temp_bool_Variable_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State, K2Node_Select_Default_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volume_State::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Weather Override Volumes
// 0x0230 (0x0230 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes final
{
public:
	bool                                          For_Local_Weather;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AWeather_Override_Volume_C*, double> WOVs_Applied;                                      // 0x0008(0x0050)(Parm, OutParm)
	TMap<class AWeather_Override_Volume_C*, double> WOV_Map;                                           // 0x0058(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AWeather_Override_Volume_C*>     WOV_Array;                                         // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x00C8(0x0010)(ReferenceParm)
	TArray<class AWeather_Override_Volume_C*>     CallFunc_Map_Keys_Keys;                            // 0x00D8(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AWeather_Override_Volume_C*, double> CallFunc_Get_WOVs_Applied_to_Location_Applied_WOV_Map; // 0x0120(0x0050)()
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Values_Values_1;                      // 0x0178(0x0010)(ReferenceParm)
	TArray<class AWeather_Override_Volume_C*>     CallFunc_Map_Keys_Keys_1;                          // 0x0188(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_3;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AWeather_Override_Volume_C*, double> CallFunc_Get_WOVs_Applied_to_Location_Applied_WOV_Map_1; // 0x01B0(0x0050)()
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_4;                         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_216[0x2];                                      // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeather_Override_Volume_C*>     CallFunc_Map_Keys_Keys_2;                          // 0x0218(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes) == 0x000230, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, For_Local_Weather) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::For_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, WOVs_Applied) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::WOVs_Applied' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, WOV_Map) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::WOV_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Current_Volume) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, WOV_Array) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::WOV_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Map_Values_Values) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Map_Keys_Keys) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Array_Index_Variable_1) == 0x0000FC, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Array_Index_Variable_2) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable_1) == 0x00010C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable_2) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000114, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue_2) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Get_WOVs_Applied_to_Location_Applied_WOV_Map) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Get_WOVs_Applied_to_Location_Applied_WOV_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Map_Values_Values_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Map_Keys_Keys_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item_2) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item_3) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_1) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001AC, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Get_WOVs_Applied_to_Location_Applied_WOV_Map_1) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Get_WOVs_Applied_to_Location_Applied_WOV_Map_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_BooleanOR_ReturnValue) == 0x000201, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Get_Item_4) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_2) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_IsValid_ReturnValue) == 0x000214, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue_2) == 0x000215, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Map_Keys_Keys_2) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes, CallFunc_Array_RemoveItem_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Override_Volumes::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Bind to Game User Settings
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Bind_to_Game_User_Settings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Bind to UDS Dispatchers
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Hour)>                   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Bind_to_UDS_Dispatchers::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Call Custom Weather Behavior
// 0x0170 (0x0170 - 0x0000)
struct Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Active_Sources;                                    // 0x0000(0x0050)(Edit, BlueprintVisible)
	bool                                          Updating_Global_Sources;                           // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  Source_Map_Buffer;                                 // 0x0058(0x0050)(Edit, BlueprintVisible)
	TArray<class UUDS_Weather_Settings_C*>        Keys_Buffer;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x00E8(0x0010)(ReferenceParm)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_State_Sources_Sources;                // 0x00F8(0x0050)()
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior) == 0x000170, "Wrong size on Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Active_Sources) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Active_Sources' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Updating_Global_Sources) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Updating_Global_Sources' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Source_Map_Buffer) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Source_Map_Buffer' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Keys_Buffer) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Keys_Buffer' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Temp_int_Array_Index_Variable_1) == 0x0000C4, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_BooleanOR_ReturnValue) == 0x0000D5, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Map_Keys_Keys) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Get_State_Sources_Sources) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Get_State_Sources_Sources' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, Temp_int_Loop_Counter_Variable_1) == 0x00014C, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_BooleanAND_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Add_IntInt_ReturnValue_1) == 0x000154, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Array_RemoveItem_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Array_Length_ReturnValue_1) == 0x000164, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior, CallFunc_Less_IntInt_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Call_Custom_Weather_Behavior::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Call Editor Dispatchers
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers final
{
public:
	class FString                                 CallFunc_Get_Display_Name_for_Current_Weather_As_String; // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Cloudy_Yes;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Dusty_Yes;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Snowing_Yes;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Raining_Yes;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers, CallFunc_Get_Display_Name_for_Current_Weather_As_String) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers::CallFunc_Get_Display_Name_for_Current_Weather_As_String' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers, CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers::CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers, CallFunc_Currently_Cloudy_Yes) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers::CallFunc_Currently_Cloudy_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers, CallFunc_Currently_Dusty_Yes) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers::CallFunc_Currently_Dusty_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers, CallFunc_Currently_Snowing_Yes) == 0x000013, "Member 'Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers::CallFunc_Currently_Snowing_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers, CallFunc_Currently_Raining_Yes) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Call_Editor_Dispatchers::CallFunc_Currently_Raining_Yes' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change to Random Weather Variation
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation final
{
public:
	double                                        Time_to_Transition_to_Random_Weather__Seconds_;    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      Random_Weather_Mode;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation, Time_to_Transition_to_Random_Weather__Seconds_) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation::Time_to_Transition_to_Random_Weather__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation, Random_Weather_Mode) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation::Random_Weather_Mode' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change Weather
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_Weather final
{
public:
	class UUDS_Weather_Settings_C*                New_Weather_Type;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Time_to_Transition_to_New_Weather__Seconds_;       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_Weather) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Change_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather, New_Weather_Type) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_Weather::New_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather, Time_to_Transition_to_New_Weather__Seconds_) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Change_Weather::Time_to_Transition_to_New_Weather__Seconds_' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change Wind Direction
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_Wind_Direction final
{
public:
	double                                        New_Wind_Direction;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Change_Duration;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_Wind_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_Wind_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_Wind_Direction) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Change_Wind_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, New_Wind_Direction) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::New_Wind_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, Change_Duration) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::Change_Duration' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_RotateAngleAxis_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_Dot_VectorVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_DegAcos_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Wind_Direction, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Change_Wind_Direction::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for Events to Dispatch
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Display_Name_for_Current_Weather_As_String; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Dusty_Yes;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Dusty_Yes_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Cloudy_Yes;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Cloudy_Yes_1;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Snowing_Yes;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Snowing_Yes_1;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Raining_Yes;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Raining_Yes_1;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Get_Display_Name_for_Current_Weather_As_String) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Get_Display_Name_for_Current_Weather_As_String' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Dusty_Yes) == 0x00001B, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Dusty_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Dusty_Yes_1) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Dusty_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001D, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001E, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001F, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_3) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Cloudy_Yes) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Cloudy_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_4) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Cloudy_Yes_1) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Cloudy_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Snowing_Yes) == 0x000025, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Snowing_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Snowing_Yes_1) == 0x000026, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Snowing_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Raining_Yes) == 0x000027, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Raining_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Raining_Yes_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Raining_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_2) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x00002B, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_3) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_4) == 0x00002E, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for Render Target Recentering
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering final
{
public:
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Set_Location_Mapping_Vector4;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Target_Needs_Recenter_Yes;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Target_Needs_Recenter_Yes_1;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Target_Needs_Recenter_Yes_2;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_Conv_IntToBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_Set_Location_Mapping_Vector4) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_Set_Location_Mapping_Vector4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_Target_Needs_Recenter_Yes) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_Target_Needs_Recenter_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_Target_Needs_Recenter_Yes_1) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_Target_Needs_Recenter_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_IsValid_ReturnValue_1) == 0x000033, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering, CallFunc_Target_Needs_Recenter_Yes_2) == 0x000035, "Member 'Ultra_Dynamic_Weather_C_Check_for_Render_Target_Recentering::CallFunc_Target_Needs_Recenter_Yes_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for Weather Value Update Threshold
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold final
{
public:
	double                                        New_Value;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer_Value;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threshold;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range_Max;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_Needed_Bool;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_State_Variable                   State_Variable;                                    // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, New_Value) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::New_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Buffer_Value) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Buffer_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Threshold) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Range_Max) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Range_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Update_Needed_Bool) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Update_Needed_Bool' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, State_Variable) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::State_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, K2Node_SwitchEnum_CmpSuccess) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_BooleanOR_ReturnValue_1) == 0x000042, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check Point for Puddles Snow Or Dust
// 0x04C8 (0x04C8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ground_Normal;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Physical_Material;                                 // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Puddle_Depth;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Depth_0;                                      // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Depth_0;                                      // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Mask;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Mask_Cancel;                                       // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Weather_Mask_Rain;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Weather_Mask;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Puddle_Mask;                                       // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Mask;                                         // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Small_Cloud_Sample;                                // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Large_Cloud_Sample;                                // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeatherMask_C*                         K2Node_DynamicCast_AsWeather_Mask;                 // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Masking_At_Location_Mask;       // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Calculate_Masking_At_Location_Cancel_All_Masks; // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness;    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust;       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ClampAxes2D_ReturnValue;                  // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue;                        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_1;                      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_2;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_3;                      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_8;      // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust) == 0x0004C8, "Wrong size on Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Ground_Normal) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Ground_Normal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Physical_Material) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Physical_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Puddle_Depth) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Puddle_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Snow_Depth_0) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Snow_Depth_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Dust_Depth_0) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Dust_Depth_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Dust_Mask) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Dust_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Mask_Cancel) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Mask_Cancel' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Weather_Mask_Rain) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Weather_Mask_Rain' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Weather_Mask) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Weather_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Puddle_Mask) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Puddle_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Snow_Mask) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Snow_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Small_Cloud_Sample) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Small_Cloud_Sample' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Large_Cloud_Sample) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Large_Cloud_Sample' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_object_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_SwitchInteger_CmpSuccess) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_struct_Variable) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_bool_Variable) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_X) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Conv_IntToBool_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BooleanOR_ReturnValue) == 0x000119, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_MakeArray_Array) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BoxOverlapComponents_OutComponents) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_real_Variable) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Get_Item) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_DynamicCast_AsWeather_Mask) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_DynamicCast_AsWeather_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Calculate_Masking_At_Location_Mask) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Calculate_Masking_At_Location_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Calculate_Masking_At_Location_Cancel_All_Masks) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Calculate_Masking_At_Location_Cancel_All_Masks' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Apply_Max_to_Material_Effects_Wetness) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Apply_Max_to_Material_Effects_Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Apply_Max_to_Material_Effects_Dust) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Apply_Max_to_Material_Effects_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MapRangeClamped_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_1) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_Select_Default) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_int_Loop_Counter_Variable) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_ClampAxes2D_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_ClampAxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Less_IntInt_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_IntInt_ReturnValue) == 0x000234, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_2) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_2) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_3) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_3) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue_1) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue_1) == 0x0002A4, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue_2) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue_3) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue_2) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue_3) == 0x0002CC, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_IntInt_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0002D4, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002DC, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Contains_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Contains_ReturnValue_1) == 0x0002E1, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_X_1) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Y_1) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Z_1) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_int_Variable) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_Select_Default_1) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_X_2) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Y_2) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Z_2) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_4) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_4) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_1) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_5) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_5) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue_1) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_6) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_6) == 0x0003F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue_2) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_7) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_7) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue_3) == 0x000420, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000428, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_2) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000440, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_SelectFloat_ReturnValue) == 0x000448, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_8) == 0x000458, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_3) == 0x000460, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Get_Item_1) == 0x000468, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000478, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000480, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_4) == 0x000488, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Get_Item_2) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_SelectFloat_ReturnValue_1) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_8) == 0x0004A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_8) == 0x0004B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MakeVector2D_ReturnValue) == 0x0004B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check to Change Temperature Scale
// 0x0180 (0x0180 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFloatRangeBound                       K2Node_MakeStruct_FloatRangeBound;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_1;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWeather_Override_Volume_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	struct FFloatRangeBound                       K2Node_MakeStruct_FloatRangeBound_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFloatRange                            K2Node_MakeStruct_FloatRange;                      // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_2;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_3;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_3;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_4;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_5;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_4;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_6;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_7;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_5;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_8;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_6;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_9;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_10;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_7;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_11;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Input_ImplicitCast; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Input_ImplicitCast_1; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast_1;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale) == 0x000180, "Wrong size on Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_1) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, K2Node_MakeStruct_FloatRangeBound) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::K2Node_MakeStruct_FloatRangeBound' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, K2Node_MakeStruct_FloatRangeBound_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::K2Node_MakeStruct_FloatRangeBound_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Array_Get_Item) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, K2Node_MakeStruct_FloatRange) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::K2Node_MakeStruct_FloatRange' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_3) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_4) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y_2) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_5) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_4) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X_3) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y_3) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_6) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_7) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_5) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_8) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_6) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_9) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_10) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_7) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeLiteralByte_ReturnValue) == 0x000151, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_11) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Less_ByteByte_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000161, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000162, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BooleanAND_ReturnValue) == 0x000163, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Input_ImplicitCast) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Input_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Input_ImplicitCast_1) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Input_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, K2Node_MakeStruct_Value_ImplicitCast) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::K2Node_MakeStruct_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, K2Node_MakeStruct_Value_ImplicitCast_1) == 0x00017C, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::K2Node_MakeStruct_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Clear All Material Parameters to Zero Coverage
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage final
{
public:
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, K2Node_MakeStruct_LinearColor) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Clear All Render Targets
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_Clear_All_Render_Targets final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Allow_Render_Target_Drawing_ReturnValue;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Clear_All_Render_Targets) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Clear_All_Render_Targets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Clear_All_Render_Targets) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_Clear_All_Render_Targets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Render_Targets, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Render_Targets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Render_Targets, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Render_Targets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Render_Targets, CallFunc_Allow_Render_Target_Drawing_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Render_Targets::CallFunc_Allow_Render_Target_Drawing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Render_Targets, CallFunc_IsValid_ReturnValue_2) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Render_Targets::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Clients Transition Start
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Clients_Transition_Start final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Clients_Transition_Start) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Clients_Transition_Start");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Clients_Transition_Start) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Clients_Transition_Start");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clients_Transition_Start, Duration) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Clients_Transition_Start::Duration' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Close Thunder Sound Delay
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, Delay) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::Delay' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Combined Wind Direction
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Combined_Wind_Direction final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Base_Wind_Direction;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZero2D_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Yaw_Angles_Out;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Combined_Wind_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Combined_Wind_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, Base_Wind_Direction) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::Base_Wind_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_IsZero2D_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_IsZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_BreakVector2D_X) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Lerp_Yaw_Angles_Out) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Lerp_Yaw_Angles_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_PerlinNoise1D_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Func_Dust_0 final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x00C0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Func_Dust_0) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Func_Dust_0");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Func_Dust_0) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Func_Dust_0");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, Size) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Conv_IntToBool_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_FClamp_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_BreakVector_X) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_MakeVector4_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_Lerp_B_ImplicitCast) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_MakeVector_Y_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Func_Dust_0, CallFunc_MakeVector_X_ImplicitCast) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Func_Dust_0::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Construct Weather Mask Target State
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State final
{
public:
	class UUDS_RenderTarget_State_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_Mask_Target_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Construct Weather State Object if Invalid
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Construct_Weather_State_Object_if_Invalid::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Construct WOV Render Target State
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State final
{
public:
	class UUDS_RenderTarget_State_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Construct_WOV_Render_Target_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Construction Script Function
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Construction_Script_Function final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0008(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDW_WeatherControlledActor_Interface_C> K2Node_DynamicCast_AsUDW_Weather_Controlled_Actor_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Construction_Script_Function) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Construction_Script_Function");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Construction_Script_Function) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Construction_Script_Function");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, K2Node_DynamicCast_AsUDW_Weather_Controlled_Actor_Interface) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::K2Node_DynamicCast_AsUDW_Weather_Controlled_Actor_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Construction_Script_Function, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Construction_Script_Function::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Convert Temperature Scale
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Convert_Temperature_Scale final
{
public:
	double                                        Input;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          In_Scale;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Out_Scale;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Relative_Degrees;                                  // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Snap;                                              // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Output;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Convert_Temperature_Scale");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Convert_Temperature_Scale");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Input) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Input' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, In_Scale) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::In_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Out_Scale) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Out_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Relative_Degrees) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Relative_Degrees' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Snap) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Snap' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Output) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Temp_byte_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, K2Node_Select_Default) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_GridSnap_Float_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_SelectFloat_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Copy Weather State
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Weather_C_Copy_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Material_Effects;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Copy_Sources;                                      // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_State_Sources_Sources;                // 0x0018(0x0050)()
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Copy_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Copy_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Copy_Weather_State) == 0x000068, "Wrong size on Ultra_Dynamic_Weather_C_Copy_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Source) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Source' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Target) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Set_Material_Effects) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Set_Material_Effects' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Copy_Sources) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Copy_Sources' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, CallFunc_Get_State_Sources_Sources) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::CallFunc_Get_State_Sources_Sources' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Copy Weather State Structure to Object
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            Struct;                                            // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object, Struct) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State_Structure_to_Object::Struct' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Create Cloud Reference Array
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array final
{
public:
	int32                                         Pixel_Y;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Pixel_X;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Source_Render_Target;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0040(0x0008)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_ReadRenderTargetRawPixel_ReturnValue;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array) == 0x0000B8, "Wrong size on Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Pixel_Y) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Pixel_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Pixel_X) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Pixel_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Source_Render_Target) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Source_Render_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, K2Node_DynamicCast_AsTexture_2D) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Temp_int_Variable_1) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_ReadRenderTargetRawPixel_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_ReadRenderTargetRawPixel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_R) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_G) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_B) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_A) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Create Current Local Weather State
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State final
{
public:
	struct FVector                                Test_Location;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radial_Storm_Alpha;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radial_Storm_Distance;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Above_Clouds;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Affecting_Local_Weather;                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance_from_Spline_Center;                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Volume_Alpha;                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AWeather_Override_Volume_C*, double> CallFunc_Apply_Weather_Override_Volumes_WOVs_Applied; // 0x0050(0x0050)()
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State) == 0x0000A0, "Wrong size on Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Test_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Test_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Radial_Storm_Alpha) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Radial_Storm_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Radial_Storm_Distance) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Radial_Storm_Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Above_Clouds) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Above_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Affecting_Local_Weather) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Affecting_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Distance_from_Spline_Center) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Distance_from_Spline_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Current_Volume) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Current_Volume_Alpha) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Current_Volume_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Apply_Weather_Override_Volumes_WOVs_Applied) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Apply_Weather_Override_Volumes_WOVs_Applied' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Dust Velocity
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Dust_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Dust_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Current_Dust_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Rain Velocity
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Rain_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Rain_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Current_Rain_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Snow Velocity
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Snow_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Snow_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Current_Snow_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Wind Debris Velocity
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Cloudy
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Cloudy final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Cloudy) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Cloudy");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Cloudy) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Cloudy");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Cloudy, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Cloudy::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Cloudy, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Cloudy::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Dusty
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Dusty final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Dusty) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Dusty");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Dusty) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Dusty");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Dusty, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Dusty::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Dusty, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Dusty::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Raining
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Raining final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Raining) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Raining");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Raining) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Raining");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Raining, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Raining::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Raining, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Raining::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Snowing
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Snowing final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Snowing) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Snowing");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Snowing) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Snowing");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Snowing, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Snowing::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Snowing, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Snowing::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Daily Season Update
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Daily_Season_Update final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Daily_Season_Update) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Daily_Season_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Daily_Season_Update) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Daily_Season_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Daily_Season_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Daily_Season_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.DLWE Active Update
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_DLWE_Active_Update final
{
public:
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_DLWE_Active_Update) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_DLWE_Active_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_DLWE_Active_Update) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_DLWE_Active_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_BooleanOR_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust Niagara System Asset
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Out;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_Particle_Collision_Mode                  Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          K2Node_Select_Default;                             // 0x00A8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset) == 0x0000D0, "Wrong size on Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset, K2Node_Select_Default) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Dust_Niagara_System_Asset::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust Spawn Rate
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Dust_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust Sprite Alpha
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust System Finished
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_System_Finished final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_System_Finished) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_System_Finished");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_System_Finished) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Dust_System_Finished");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_System_Finished, PSystem) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_System_Finished::PSystem' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Editor Tick
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Editor_Tick final
{
public:
	struct FVector                                Editor_Camera_Location;                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Editor_Camera_Rotation_0;                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Delta_Time;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Completed;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lightning_Flash_Period_Period;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_4;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_5;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Editor_Tick) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Editor_Tick");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Editor_Tick) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Editor_Tick");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, Editor_Camera_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::Editor_Camera_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, Editor_Camera_Rotation_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::Editor_Camera_Rotation_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, Delta_Time) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::Delta_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, Completed) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::Completed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Lightning_Flash_Period_Period) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Lightning_Flash_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_5) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Editor_Tick, K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Editor_Tick::K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ExecuteUbergraph_Ultra_Dynamic_Weather
// 0x0158 (0x0158 - 0x0000)
struct Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delta_Time;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_CustomEvent_New_Weather_Type;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Transition_to_New_Weather__Seconds_; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Duration;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Transition_to_Random_Weather__Seconds_; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      K2Node_CustomEvent_Random_Weather_Mode;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x0060(0x0010)(ReferenceParm)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDW_WeatherControlledActor_Interface_C> K2Node_DynamicCast_AsUDW_Weather_Controlled_Actor_Interface; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Angle_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Use_Custom_Lightning_Location;  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Custom_Lightning_Location;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Custom_Target_Location;         // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Lightning_Bolt_Seed;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Angle;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Thunder_Lightning_Threshold;    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUDW_Startup_Interface_C> K2Node_DynamicCast_AsUDW_Startup_Interface;        // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Sky_C*                   K2Node_Event_UDS;                                  // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_1;    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather) == 0x000158, "Wrong size on Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Delta_Time) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Delta_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_EndPlayReason) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_New_Weather_Type) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_New_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Transition_to_New_Weather__Seconds_) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Transition_to_New_Weather__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Duration) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Transition_to_Random_Weather__Seconds_) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Transition_to_Random_Weather__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Random_Weather_Mode) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Random_Weather_Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000059, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsUDW_Weather_Controlled_Actor_Interface) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsUDW_Weather_Controlled_Actor_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000B9, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Use_Custom_Lightning_Location) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Use_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Custom_Lightning_Location) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Custom_Target_Location) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Custom_Target_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Lightning_Bolt_Seed) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Lightning_Bolt_Seed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Thunder_Lightning_Threshold) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Thunder_Lightning_Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsUDW_Startup_Interface) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsUDW_Startup_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue_1) == 0x000139, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00013A, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_UDS) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_UDS' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000149, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue) == 0x00014A, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x00014B, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue) == 0x00014C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Runtime_Or_Initializing_ReturnValue_1) == 0x00014D, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Runtime_Or_Initializing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue_1) == 0x00014E, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue) == 0x00014F, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Fade DLWE Target Over Time
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time final
{
public:
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0020(0x0008)(NoDestructor)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x0040(0x0008)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Conv_IntToBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Filter Probability Map
// 0x01C0 (0x01C0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Filter_Probability_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Probability_Map;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUDS_Weather_Settings_C*                Current_Random_Type;                               // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Filtered_Probability_Map;                          // 0x0058(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Map;                                               // 0x00A8(0x0050)(Edit, BlueprintVisible)
	TArray<class UUDS_Weather_Settings_C*>        Weather_Types_to_Filter;                           // 0x00F8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0130(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys_1;                          // 0x0160(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_2;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Filter_Probability_Map) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Filter_Probability_Map");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Filter_Probability_Map) == 0x0001C0, "Wrong size on Ultra_Dynamic_Weather_C_Filter_Probability_Map");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Probability_Map) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Current_Random_Type) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Current_Random_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Filtered_Probability_Map) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Map) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Weather_Types_to_Filter) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Weather_Types_to_Filter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable_2) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000124, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000125, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Add_ReturnValue) == 0x00014C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000151, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_BooleanAND_ReturnValue) == 0x000152, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000153, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x000154, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_BooleanAND_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_BooleanOR_ReturnValue) == 0x000159, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Keys_Keys_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Abs_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item_2) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Remove_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue_2) == 0x0001AC, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_AddUnique_ReturnValue) == 0x0001B4, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Add_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Filter Radial Storm Array
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRadial_Storm_Weather_Interface_C> K2Node_DynamicCast_AsRadial_Storm_Weather_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Storm_in_Effective_Range__In_Range;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, K2Node_DynamicCast_AsRadial_Storm_Weather_Interface) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::K2Node_DynamicCast_AsRadial_Storm_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Is_Storm_in_Effective_Range__In_Range) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Is_Storm_in_Effective_Range__In_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Filter_Radial_Storm_Array::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Filter Weather Override Volumes Array
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Vector_Distance2D_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Flash Lightning
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Flash_Lightning final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Custom_Lightning_Location_0;                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Custom_Lightning_Location_0;                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Custom_Target_Location;                            // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lightning_Bolt_Seed;                               // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Flash_Lightning) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Flash_Lightning");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Flash_Lightning) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Flash_Lightning");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Angle) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Use_Custom_Lightning_Location_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Use_Custom_Lightning_Location_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Custom_Lightning_Location_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Custom_Lightning_Location_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Custom_Target_Location) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Custom_Target_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Lightning_Bolt_Seed) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Lightning_Bolt_Seed' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Fog Vertical Velocity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Generate Weather State At Location
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Settings_Object;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class AWeather_Override_Volume_C*, double> WOVs_Applied_at_Location;                          // 0x0020(0x0050)(Parm, OutParm)
	TMap<class AWeather_Override_Volume_C*, double> CallFunc_Apply_Weather_Override_Volumes_WOVs_Applied; // 0x0070(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location) == 0x0000C8, "Wrong size on Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location, Settings_Object) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location::Settings_Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location, WOVs_Applied_at_Location) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location::WOVs_Applied_at_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location, CallFunc_Apply_Weather_Override_Volumes_WOVs_Applied) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location::CallFunc_Apply_Weather_Override_Volumes_WOVs_Applied' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Generate_Weather_State_At_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Control Point Location
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Control_Point_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Control_Point_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Control_Point_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Control_Point_Location) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Control_Point_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Control_Point_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Control_Point_Location::Location' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Pawn Locations
// 0x0170 (0x0170 - 0x0000)
struct Ultra_Dynamic_Weather_C__Pawn_Locations final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0038(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_ControlPointMode                         Temp_byte_Variable;                                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Pawn_Locations) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Pawn_Locations");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Pawn_Locations) == 0x000170, "Wrong size on Ultra_Dynamic_Weather_C__Pawn_Locations");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetCameraLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetCameraRotation_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000038, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, Temp_byte_Variable) == 0x000121, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BreakVector_X) == 0x000128, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BreakVector_Y) == 0x000130, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BreakVector_Z) == 0x000138, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, K2Node_Select_Default) == 0x000140, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000159, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_IsDedicatedServer_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_IsValid_ReturnValue) == 0x000169, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Not_PreBool_ReturnValue) == 0x00016A, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Current Sound Occlusion Values
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values final
{
public:
	double                                        Non_Directional_Occlusion;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X__Occlusion;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y__Occlusion;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X__Occlusion_0;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y__Occlusion_0;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Upward_Occlusion;                                  // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_OcclusionState_C*                  CallFunc_Active_Occlusion_State_State;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_X__Occlusion_ImplicitCast;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Y__Occlusion_ImplicitCast;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_X__Occlusion_ImplicitCast_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Y__Occlusion_ImplicitCast_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, Non_Directional_Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::Non_Directional_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, X__Occlusion) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::X__Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, Y__Occlusion) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::Y__Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, X__Occlusion_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::X__Occlusion_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, Y__Occlusion_0) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::Y__Occlusion_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, Upward_Occlusion) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::Upward_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, CallFunc_Active_Occlusion_State_State) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::CallFunc_Active_Occlusion_State_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, K2Node_FunctionResult_X__Occlusion_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::K2Node_FunctionResult_X__Occlusion_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, K2Node_FunctionResult_Y__Occlusion_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::K2Node_FunctionResult_Y__Occlusion_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, K2Node_FunctionResult_X__Occlusion_ImplicitCast_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::K2Node_FunctionResult_X__Occlusion_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values, K2Node_FunctionResult_Y__Occlusion_ImplicitCast_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Sound_Occlusion_Values::K2Node_FunctionResult_Y__Occlusion_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Current Temperature
// 0x01F0 (0x01F0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Current_Temperature final
{
public:
	EUDS_Temperature_Sample_Location              Sample_Location;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Custom_Sample_Location;                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Scale;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Output;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AWeather_Override_Volume_C*, double> WOV_Map;                                           // 0x0030(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                Sample_Location_Vector;                            // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Occlusion_Value;                                   // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Unconverted_Temperature;                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Temperature_Temperature;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AWeather_Override_Volume_C*, double> CallFunc_Generate_Weather_State_At_Location_WOVs_Applied_at_Location; // 0x00B0(0x0050)()
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeather_Override_Volume_C*>     CallFunc_Map_Keys_Keys;                            // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Temperature_Out;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Apply_Local_Temperature_Effects_Temp_Out; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_PlayerOcclusion_C*                 K2Node_Select_Default;                             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Custom_Global_Occlusion_Sample_Global_Occlusion; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Temperature_Out_1;                    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_OcclusionState_C*                  CallFunc_Active_Occlusion_State_State;             // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x01E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Current_Temperature) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Current_Temperature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Current_Temperature) == 0x0001F0, "Wrong size on Ultra_Dynamic_Weather_C_Get_Current_Temperature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Sample_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Sample_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Custom_Sample_Location) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Custom_Sample_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Scale) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Output) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, WOV_Map) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::WOV_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Sample_Location_Vector) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Sample_Location_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Occlusion_Value) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Occlusion_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Unconverted_Temperature) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Unconverted_Temperature' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Calculate_Temperature_Temperature) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Calculate_Temperature_Temperature' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Generate_Weather_State_At_Location_WOVs_Applied_at_Location) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Generate_Weather_State_At_Location_WOVs_Applied_at_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Map_Keys_Keys) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_int_Array_Index_Variable) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Array_Get_Item) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Map_Find_Value) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Map_Find_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Get_Temperature_Out) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Get_Temperature_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000141, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Apply_Local_Temperature_Effects_Temp_Out) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Apply_Local_Temperature_Effects_Temp_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_bool_Variable) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_SwitchEnum_CmpSuccess) == 0x000151, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_Select_Default) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_SwitchEnum_CmpSuccess_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Custom_Global_Occlusion_Sample_Global_Occlusion) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Custom_Global_Occlusion_Sample_Global_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Lerp_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Get_Temperature_Out_1) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Get_Temperature_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_PerlinNoise1D_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_int_Loop_Counter_Variable) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Less_IntInt_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_IntInt_ReturnValue) == 0x0001C4, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Active_Occlusion_State_State) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Active_Occlusion_State_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Convert_Temperature_Scale_Output) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Convert_Temperature_Scale_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Display Name for Current Weather
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather final
{
public:
	class FString                                 As_String;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    As_Enumerator;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Chosen_Enum;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_4;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_5;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_6;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_7;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_8;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_9;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_10;                             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_11;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_12;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_1;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_13;                             // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_2;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_3;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_4;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_5;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, As_String) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::As_String' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, As_Enumerator) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::As_Enumerator' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Chosen_Enum) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Chosen_Enum' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_1) == 0x000013, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_int_Variable) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_3) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_4) == 0x00001B, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_5) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_int_Variable_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_6) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_7) == 0x000025, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_int_Variable_2) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_8) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_9) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_10) == 0x00002E, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_11) == 0x00002F, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000033, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default) == 0x000035, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_12) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_FFloor_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Clamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_1) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x00004D, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_13) == 0x00004E, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_2) == 0x000062, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_3) == 0x000063, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_FFloor_ReturnValue_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Clamp_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_4) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Round_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Clamp_ReturnValue_2) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_5) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Local Weather State Values
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Intensity_0;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_0;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_0;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Lightning_0;                                 // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Wind_Intensity_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Wind_Intensity_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Rain_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Rain_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Snow_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Snow_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Param_Dust_0) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Param_Fog_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Param_Lightning_0) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Param_Lightning_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get New Target Global Weather State
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Changing;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Manual_State;                                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, Changing) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, Manual_State) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::Manual_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'Ultra_Dynamic_Weather_C_Get_New_Target_Global_Weather_State::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Normalized Wind Direction
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction final
{
public:
	struct FVector                                Wind_Vector;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction, Wind_Vector) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction::Wind_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Normalized_Wind_Direction::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Projection Box Scene Capture 2D
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D final
{
public:
	class USceneCaptureComponent2D*               Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D, Temp_struct_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_Projection_Box_Scene_Capture_2D::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Random Weather Forecast
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast final
{
public:
	TArray<class UUDS_Weather_Settings_C*>        Upcoming_Weather_Objects;                          // 0x0000(0x0010)(Parm, OutParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast, Upcoming_Weather_Objects) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast::Upcoming_Weather_Objects' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Get_Random_Weather_Forecast::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Season
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Season final
{
public:
	double                                        Season_0;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   Season_Enum;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Season) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Season");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Season) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Season");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Season, Season_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Season::Season_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Season, Season_Enum) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Season::Season_Enum' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Season, CallFunc_FFloor_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Get_Season::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Season, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Season::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Season, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Season::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Sound Directional Occlusion
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion final
{
public:
	TArray<double>                                Out;                                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_OcclusionState_C*                  CallFunc_Active_Occlusion_State_State;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	TArray<double>                                K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm)
	TArray<double>                                K2Node_Select_Default;                             // 0x0048(0x0010)(ReferenceParm)
	double                                        K2Node_MakeArray__0__ImplicitCast;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeArray__1__ImplicitCast;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeArray__2__ImplicitCast;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeArray__3__ImplicitCast;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, CallFunc_Active_Occlusion_State_State) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::CallFunc_Active_Occlusion_State_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray_Array) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray_Array_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__0__ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__1__ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__2__ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__2__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__3__ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__3__ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Sound Global Occlusion
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_OcclusionState_C*                  CallFunc_Active_Occlusion_State_State;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, CallFunc_Active_Occlusion_State_State) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::CallFunc_Active_Occlusion_State_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Sound Upward Occlusion
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_OcclusionState_C*                  CallFunc_Active_Occlusion_State_State;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion, CallFunc_Active_Occlusion_State_State) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion::CallFunc_Active_Occlusion_State_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Starting Radial Storms
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms final
{
public:
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Radial_Storms::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Starting Weather Override Volumes
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeather_Override_Volume_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Target Heat Distortion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion final
{
public:
	double                                        CallFunc_Get_Current_Temperature_Output;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion, CallFunc_Get_Current_Temperature_Output) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion::CallFunc_Get_Current_Temperature_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Target_Heat_Distortion::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get UDS Values Controlled by UDW
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Amount;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Direction;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Speed_Multiplier;                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fog_Vertical_Velocity;                             // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW, Param_Fog_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW, Dust_Amount) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW::Dust_Amount' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW, Cloud_Direction) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW::Cloud_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW, Wind_Speed_Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW::Wind_Speed_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW, Fog_Vertical_Velocity) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Values_Controlled_by_UDW::Fog_Vertical_Velocity' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get UDS Weather Override Bool
// 0x0003 (0x0003 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool final
{
public:
	bool                                          Cloud_Coverage_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Fog_0;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Dust_0;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool) == 0x000003, "Wrong size on Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool, Param_Fog_0) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool, Param_Dust_0) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Weather_Override_Bool::Param_Dust_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get UDW State for Saving
// 0x05E0 (0x05E0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving final
{
public:
	struct FUDS_and_UDW_State                     UDW_State;                                         // 0x0000(0x0200)(Parm, OutParm, HasGetValueTypeHash)
	struct FUDS_and_UDW_State                     State;                                             // 0x0200(0x0200)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDW_WOV_State                         CallFunc_Get_State_for_Saving_State;               // 0x0428(0x00D0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomWeatherVariation_State          CallFunc_Get_State_for_Saving_State_1;             // 0x0500(0x0040)(HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            CallFunc_Weather_State_Object_to_Structure_Structure; // 0x0540(0x0050)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            CallFunc_Weather_State_Object_to_Structure_Structure_1; // 0x0590(0x0050)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving) == 0x0005E0, "Wrong size on Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, UDW_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::UDW_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, State) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, Temp_int_Array_Index_Variable) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, Temp_int_Loop_Counter_Variable) == 0x000404, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Add_IntInt_ReturnValue) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Array_Get_Item) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Array_Length_ReturnValue) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Array_Add_ReturnValue) == 0x00041C, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Less_IntInt_ReturnValue) == 0x000420, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Get_State_for_Saving_State) == 0x000428, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Get_State_for_Saving_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Array_Add_ReturnValue_1) == 0x0004F8, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_IsValid_ReturnValue) == 0x0004FC, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Get_State_for_Saving_State_1) == 0x000500, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Get_State_for_Saving_State_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Weather_State_Object_to_Structure_Structure) == 0x000540, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Weather_State_Object_to_Structure_Structure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving, CallFunc_Weather_State_Object_to_Structure_Structure_1) == 0x000590, "Member 'Ultra_Dynamic_Weather_C_Get_UDW_State_for_Saving::CallFunc_Weather_State_Object_to_Structure_Structure_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Weather Presets Used By Local Weather
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Sources;                                           // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather, Sources) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Presets_Used_By_Local_Weather::Sources' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get WOVs Applied to Location
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AWeather_Override_Volume_C*>     WOV_Array;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class AWeather_Override_Volume_C*, double> Applied_WOV_Map;                                   // 0x0028(0x0050)(Parm, OutParm)
	TMap<class AWeather_Override_Volume_C*, double> Volume_Map;                                        // 0x0078(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Sample_Point_for_Current_Alpha_Alpha;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, WOV_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::WOV_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, Applied_WOV_Map) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::Applied_WOV_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, Volume_Map) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::Volume_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, Current_Volume) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Sample_Point_for_Current_Alpha_Alpha) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Sample_Point_for_Current_Alpha_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E9, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location, CallFunc_Max_ReturnValue) == 0x0000FC, "Member 'Ultra_Dynamic_Weather_C_Get_WOVs_Applied_to_Location::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Global Lightning Internal
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Global_Lightning_Internal final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lightning_Threshold;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Global_Lightning_Internal");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Global_Lightning_Internal");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal, Angle) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Global_Lightning_Internal::Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal, Lightning_Threshold) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Global_Lightning_Internal::Lightning_Threshold' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Hourly Season Update
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Hourly_Season_Update final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Hourly_Season_Update) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Hourly_Season_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Hourly_Season_Update) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Hourly_Season_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Hourly_Season_Update, Hour) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Hourly_Season_Update::Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Hourly_Season_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Hourly_Season_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Dust at Location
// 0x0B40 (0x0B40 - 0x0000)
struct Ultra_Dynamic_Weather_C__Dust_at_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Dust_0;                                      // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Affect_Puddles;                                    // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_Puddle;                                        // 0x002A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Dust_1;                                      // 0x002B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dust_Hit;                                          // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Puddle_Hit;                                        // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Landscape_Hit;                                     // 0x0030(0x00E8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Hit_Puddle_Fluid_Volume;                           // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Puddle_Actor;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0140(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0328(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0410(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Puddle_Depth; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Snow_Depth; // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Dust_Depth; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0460(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A[0x2];                                      // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0498(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x04A8(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_BreakVector_X;                            // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPuddle_Fluid_Volume_Interface_C> K2Node_DynamicCast_AsPuddle_Fluid_Volume_Interface; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0530(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0550(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x063D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x063E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F[0x1];                                      // 0x063F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x06B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_4;                          // 0x0728(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits_1;       // 0x0768(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue_1;   // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_779[0x3];                                      // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x0788(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_872[0x2];                                      // 0x0872(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x08E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x08F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_4;                // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x0918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0960(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0A49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_5;            // 0x0A4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_5;         // 0x0A4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_5;                    // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_5;                // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0x4];                                      // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_5;                // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_5;             // 0x0A70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_5;                  // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_5;            // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_5;                 // 0x0AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_5;                // 0x0AC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_5;            // 0x0AC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_5;             // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_5;                // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_5;                 // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_5;            // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_5;               // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_5;              // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_5;                // 0x0B08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Interact_with_Puddle_Effective_Depth;     // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B34[0x4];                                      // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Dust_at_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Dust_at_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Dust_at_Location) == 0x000B40, "Wrong size on Ultra_Dynamic_Weather_C__Dust_at_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Radius) == 0x000018, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Speed) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Speed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Param_Dust_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Affect_Puddles) == 0x000029, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Affect_Puddles' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Hit_Puddle) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Hit_Puddle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Param_Dust_1) == 0x00002B, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Param_Dust_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Dust_Hit) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Dust_Hit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Puddle_Hit) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Puddle_Hit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Landscape_Hit) == 0x000030, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Landscape_Hit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Hit_Puddle_Fluid_Volume) == 0x000118, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Hit_Puddle_Fluid_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Puddle_Actor) == 0x000120, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Puddle_Actor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_int_Array_Index_Variable) == 0x000128, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_bool_True_if_break_was_hit_Variable) == 0x00012C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Not_PreBool_ReturnValue) == 0x00012D, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_int_Array_Index_Variable_1) == 0x000138, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_object_Variable) == 0x000140, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_MapRangeClamped_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bBlockingHit) == 0x000160, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bInitialOverlap) == 0x000161, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000240, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000241, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Time_1) == 0x000244, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Distance_1) == 0x000248, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Location_1) == 0x000250, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000268, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Normal_1) == 0x000280, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000298, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_PhysMat_1) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitActor_1) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitComponent_1) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitBoneName_1) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_BoneName_1) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitItem_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ElementIndex_1) == 0x0002DC, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceStart_1) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceEnd_1) == 0x000300, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_IsValid_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_MakeArray_Array) == 0x000328, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000338, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000339, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Time_2) == 0x00033C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Distance_2) == 0x000340, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Location_2) == 0x000348, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000360, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Normal_2) == 0x000378, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000390, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_PhysMat_2) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitActor_2) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitComponent_2) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitBoneName_2) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_BoneName_2) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitItem_2) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ElementIndex_2) == 0x0003D4, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_FaceIndex_2) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceStart_2) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceEnd_2) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_MakeArray_Array_1) == 0x000410, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Puddle_Depth) == 0x000420, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Puddle_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Snow_Depth) == 0x000428, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Snow_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Dust_Depth) == 0x000430, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Check_Point_for_Puddles_Snow_Or_Dust_Dust_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_FMax_ReturnValue) == 0x000438, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_MakeVector_ReturnValue) == 0x000440, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000458, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000459, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BooleanAND_ReturnValue) == 0x00045A, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BooleanAND_ReturnValue_1) == 0x00045B, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_object_Variable_1) == 0x000460, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000470, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BooleanOR_ReturnValue) == 0x000488, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Not_PreBool_ReturnValue_1) == 0x000489, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, Temp_int_Loop_Counter_Variable_1) == 0x00048C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BooleanAND_ReturnValue_2) == 0x000490, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Add_IntInt_ReturnValue_1) == 0x000494, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_MakeArray_Array_2) == 0x000498, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_MakeArray_Array_3) == 0x0004A8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakVector_X) == 0x0004B8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakVector_Y) == 0x0004C0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakVector_Z) == 0x0004C8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_DynamicCast_AsPuddle_Fluid_Volume_Interface) == 0x0004D0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_DynamicCast_AsPuddle_Fluid_Volume_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_DynamicCast_bSuccess) == 0x0004E0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0004E8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000500, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000518, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000530, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000540, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000548, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Array_Get_Item) == 0x000550, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Array_Length_ReturnValue) == 0x000638, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Less_IntInt_ReturnValue) == 0x00063C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bBlockingHit_3) == 0x00063D, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x00063E, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Time_3) == 0x000640, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Distance_3) == 0x000644, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Location_3) == 0x000648, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000660, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Normal_3) == 0x000678, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000690, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_PhysMat_3) == 0x0006A8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitActor_3) == 0x0006B0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitComponent_3) == 0x0006B8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitBoneName_3) == 0x0006C0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_BoneName_3) == 0x0006C8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitItem_3) == 0x0006D0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ElementIndex_3) == 0x0006D4, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_FaceIndex_3) == 0x0006D8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceStart_3) == 0x0006E0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceEnd_3) == 0x0006F8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BooleanAND_ReturnValue_3) == 0x000710, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_GetObjectClass_ReturnValue) == 0x000718, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Array_Contains_ReturnValue) == 0x000720, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, K2Node_MakeArray_Array_4) == 0x000728, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_MakeVector_ReturnValue_1) == 0x000738, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000750, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_LineTraceMultiForObjects_OutHits_1) == 0x000768, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_LineTraceMultiForObjects_OutHits_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_LineTraceMultiForObjects_ReturnValue_1) == 0x000778, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_LineTraceMultiForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Array_Length_ReturnValue_1) == 0x00077C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Less_IntInt_ReturnValue_1) == 0x000780, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Array_Get_Item_1) == 0x000788, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bBlockingHit_4) == 0x000870, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x000871, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Time_4) == 0x000874, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Distance_4) == 0x000878, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Location_4) == 0x000880, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactPoint_4) == 0x000898, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Normal_4) == 0x0008B0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactNormal_4) == 0x0008C8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_PhysMat_4) == 0x0008E0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitActor_4) == 0x0008E8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitComponent_4) == 0x0008F0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitBoneName_4) == 0x0008F8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_BoneName_4) == 0x000900, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_BoneName_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitItem_4) == 0x000908, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ElementIndex_4) == 0x00090C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_FaceIndex_4) == 0x000910, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceStart_4) == 0x000918, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceEnd_4) == 0x000930, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000948, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000960, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000A48, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_DoesImplementInterface_ReturnValue) == 0x000A49, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bBlockingHit_5) == 0x000A4A, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bBlockingHit_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_bInitialOverlap_5) == 0x000A4B, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_bInitialOverlap_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Time_5) == 0x000A4C, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Time_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Distance_5) == 0x000A50, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Distance_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Location_5) == 0x000A58, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Location_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactPoint_5) == 0x000A70, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactPoint_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_Normal_5) == 0x000A88, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_Normal_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ImpactNormal_5) == 0x000AA0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ImpactNormal_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_PhysMat_5) == 0x000AB8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_PhysMat_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitActor_5) == 0x000AC0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitActor_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitComponent_5) == 0x000AC8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitComponent_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitBoneName_5) == 0x000AD0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitBoneName_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_BoneName_5) == 0x000AD8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_BoneName_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_HitItem_5) == 0x000AE0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_HitItem_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_ElementIndex_5) == 0x000AE4, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_ElementIndex_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_FaceIndex_5) == 0x000AE8, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_FaceIndex_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceStart_5) == 0x000AF0, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceStart_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_BreakHitResult_TraceEnd_5) == 0x000B08, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_BreakHitResult_TraceEnd_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000B20, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Interact_with_Puddle_Effective_Depth) == 0x000B28, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Interact_with_Puddle_Effective_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000B30, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_at_Location, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000B38, "Member 'Ultra_Dynamic_Weather_C__Dust_at_Location::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Increment Global Material Effects
// 0x0003 (0x0003 - 0x0000)
struct Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects final
{
public:
	bool                                          CallFunc_Increment_Material_State_Changed;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects) == 0x000003, "Wrong size on Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Increment_Material_State_Changed) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Increment_Material_State_Changed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Increment Transition Between States
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Increment_Transition_Between_States final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Increment_Transition_Between_States");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Increment_Transition_Between_States");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Ease_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Increment Wind Direction Transition
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Yaw_Angles_Out;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_RotateAngleAxis_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_Dot_VectorVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_DegAcos_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_SafeDivide_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_Lerp_Yaw_Angles_Out) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_Lerp_Yaw_Angles_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Increment_Wind_Direction_Transition::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Occlusion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Occlusion final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_OcclusionState_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Occlusion) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Occlusion, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Occlusion::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Occlusion, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Initialize_Occlusion::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Occlusion, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Initialize_Occlusion::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Random Weather Variation
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Weather
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Weather final
{
public:
	class AUltra_Dynamic_Sky_C*                   UDS;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Weather) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather, UDS) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather::UDS' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Instant Sound Update
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Instant_Sound_Update final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Instant_Sound_Update) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Instant_Sound_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Instant_Sound_Update) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Instant_Sound_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Instant_Sound_Update, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Instant_Sound_Update::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Invalidate VHFM Level
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level final
{
public:
	double                                        Threshold;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Buffer;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current;                                           // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Continue;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invalidated;                                       // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxElement_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_MakeBoxSphereBounds_ReturnValue;          // 0x0080(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level) == 0x0000C0, "Wrong size on Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Threshold) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Distance) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Buffer) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Buffer' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Current) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Continue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Continue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Invalidated) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Invalidated' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_Vector_GetAbs_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_GetMaxElement_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_MakeBoxSphereBounds_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_MakeBoxSphereBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Invalidate VHFM With Material States
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States final
{
public:
	struct FVector                                Current_State;                                     // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Invalidate_VHFM_Level_Continue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Invalidate_VHFM_Level_Continue_1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Invalidate_VHFM_Level_Continue_2;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, Current_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::Current_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_Invalidate_VHFM_Level_Continue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_Invalidate_VHFM_Level_Continue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_Invalidate_VHFM_Level_Continue_1) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_Invalidate_VHFM_Level_Continue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_Invalidate_VHFM_Level_Continue_2) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_Invalidate_VHFM_Level_Continue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lerp Between Weather States
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States final
{
public:
	class UUDS_Weather_Settings_C*                A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Target_State;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Material_Effects;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Bias_for_Material_Effects;                     // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lerp_Sources;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Biased_Alpha;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_8;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_9;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_10;                      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, A) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, B) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Alpha) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Target_State) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Target_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Set_Material_Effects) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Set_Material_Effects' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Use_Bias_for_Material_Effects) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Use_Bias_for_Material_Effects' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Lerp_Sources) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Lerp_Sources' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Biased_Alpha) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Biased_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_FMax_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Ease_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Ease_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_3) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_4) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_5) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_6) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_7) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_8) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_9) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_10) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lerp State Source Maps
// 0x0200 (0x0200 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps final
{
public:
	class UUDS_Weather_Settings_C*                A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Target_Object;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  State_Sources_B;                                   // 0x0020(0x0050)(Edit, BlueprintVisible)
	TMap<class UUDS_Weather_Settings_C*, double>  State_Sources_A;                                   // 0x0070(0x0050)(Edit, BlueprintVisible)
	TArray<class UUDS_Weather_Settings_C*>        Keys_Buffer;                                       // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_State_Sources_Sources;                // 0x00D0(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_State_Sources_Sources_1;              // 0x0120(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0188(0x0010)(ReferenceParm)
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys_1;                          // 0x0198(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps) == 0x000200, "Wrong size on Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, A) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, B) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Alpha) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Target_Object) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Target_Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, State_Sources_B) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::State_Sources_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, State_Sources_A) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::State_Sources_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Keys_Buffer) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Keys_Buffer' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Get_State_Sources_Sources) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Get_State_Sources_Sources' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Get_State_Sources_Sources_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Get_State_Sources_Sources_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Temp_int_Loop_Counter_Variable) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Add_IntInt_ReturnValue) == 0x000174, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Temp_int_Array_Index_Variable) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Temp_int_Loop_Counter_Variable_1) == 0x00017C, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Add_IntInt_ReturnValue_1) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Map_Keys_Keys) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Map_Keys_Keys_1) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Less_IntInt_ReturnValue) == 0x0001AC, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, Temp_int_Array_Index_Variable_1) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Array_AddUnique_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Map_Find_Value) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Map_Find_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Map_Find_Value_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Map_Find_ReturnValue_1) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps, CallFunc_Lerp_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Lerp_State_Source_Maps::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lerp Yaw Angles
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles final
{
public:
	double                                        Angle_A;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle_B;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Angle_A) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Angle_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Angle_B) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Angle_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Alpha) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Out) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_SelectFloat_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Level Editor Lightning Flash Spawning
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning final
{
public:
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lightning_Flash_Period_Period;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning, CallFunc_Lightning_Flash_Period_Period) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning::CallFunc_Lightning_Flash_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_Lightning_Flash_Spawning::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Level Editor WOV Update
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Level_Editor_WOV_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Bolt Target Offset
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_SelectVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Distance Range
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Distance_Range final
{
public:
	double                                        Range;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Distance_Range");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Distance_Range");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, Range) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Flash Location
// 0x0150 (0x0150 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Flash_Location final
{
public:
	bool                                          Found_Valid_Location;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Loc;                                               // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Tested_Location;                           // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Valid_Location;                                    // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Random_Value_in_Float_Range_Structure_Out; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lightning_World_Height_Height;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Flash_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location) == 0x000150, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Flash_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Found_Valid_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Found_Valid_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Loc) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Loc' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Current_Tested_Location) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Current_Tested_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Valid_Location) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Valid_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Temp_bool_Variable) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Temp_int_Variable) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BooleanAND_ReturnValue) == 0x00005E, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Random_Value_in_Float_Range_Structure_Out) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Random_Value_in_Float_Range_Structure_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BreakRotator_Roll) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BreakRotator_Pitch) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BreakRotator_Yaw) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Lightning_World_Height_Height) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Lightning_World_Height_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_SelectFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeRotator_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x00013C, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Flash Period
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Flash_Period final
{
public:
	double                                        Period;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Flash_Period");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Flash_Period");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, Period) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Period, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Period::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Night Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Night_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Night_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Night_Scale");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Night_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Night_Scale");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Night_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Night_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Night_Scale, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Night_Scale::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Night_Scale, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Night_Scale::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning World Height
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_World_Height final
{
public:
	double                                        Height;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_World_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_World_Height");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_World_Height) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_World_Height");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_World_Height, Height) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_World_Height::Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_World_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_World_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Load Required Assets
// 0x0160 (0x0160 - 0x0000)
struct Ultra_Dynamic_Weather_C_Load_Required_Assets final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_2;                          // 0x0020(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_3;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_4;                          // 0x0040(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Rain_Niagara_System_Asset_Out;            // 0x0050(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_5;                          // 0x0078(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Snow_Niagara_System_Asset_Out;            // 0x0088(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_6;                          // 0x00B0(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Dust_Niagara_System_Asset_Out;            // 0x00C0(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_7;                          // 0x00E8(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Wind_Debris_Niagara_System_Asset_Out;     // 0x00F8(0x0028)(HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_8;                          // 0x0120(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_9;                          // 0x0130(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_10;                         // 0x0140(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_11;                         // 0x0150(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Load_Required_Assets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Load_Required_Assets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Load_Required_Assets) == 0x000160, "Wrong size on Ultra_Dynamic_Weather_C_Load_Required_Assets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_3) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_4) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_Rain_Niagara_System_Asset_Out) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_Rain_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_5) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_Snow_Niagara_System_Asset_Out) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_Snow_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_6) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_Dust_Niagara_System_Asset_Out) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_Dust_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_7) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_Wind_Debris_Niagara_System_Asset_Out) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_Wind_Debris_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_8) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_9) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_10) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, K2Node_MakeArray_Array_11) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::K2Node_MakeArray_Array_11' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Load Soft Object Array
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Load_Soft_Object_Array final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Load_Soft_Object_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Load_Soft_Object_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, In) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Soft_Object_Array, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Load_Soft_Object_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Dust Component
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Dust_Component final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UNiagaraComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Dust_Component) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Dust_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Dust_Component) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Make_Dust_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Dust_Component, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Dust_Component::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Dust_Component, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Make_Dust_Component::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Dust_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Make_Dust_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Lightning Flash Systems
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue_1;               // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems) == 0x0000D0, "Wrong size on Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems, Temp_struct_Variable_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems, CallFunc_AddComponent_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Make_Lightning_Flash_Systems::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Obscured Lightning Component
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UNiagaraComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Make_Obscured_Lightning_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Outdoor Sound Mix
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Rain Component
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Rain_Component final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UNiagaraComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Rain_Component) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Rain_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Rain_Component) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Make_Rain_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Rain_Component, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Rain_Component::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Rain_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Make_Rain_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Rain_Component, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Make_Rain_Component::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Random Stream
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Random_Stream final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x000C(0x0008)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Random_Stream) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Random_Stream");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Random_Stream) == 0x000014, "Wrong size on Ultra_Dynamic_Weather_C_Make_Random_Stream");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_MakeRandomStream_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Snow Component
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Snow_Component final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UNiagaraComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Snow_Component) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Snow_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Snow_Component) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Make_Snow_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Snow_Component, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Snow_Component::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Snow_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Make_Snow_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Snow_Component, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Make_Snow_Component::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Wind Debris Component
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UNiagaraComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Make_Wind_Debris_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Manual Override to State Value
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value final
{
public:
	class UUDS_Weather_Settings_C*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value, Target) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value::Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value, Index_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value, Temp_int_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value, Temp_int_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value, K2Node_Select_Default_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Manual_Override_to_State_Value::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Material Effect Draw Color from State
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, Alpha) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, Color) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, K2Node_MakeStruct_A_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, K2Node_MakeStruct_B_ImplicitCast) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, K2Node_MakeStruct_G_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State, K2Node_MakeStruct_R_ImplicitCast) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Material_Effect_Draw_Color_from_State::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Monitor Local Weather Changes
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, K2Node_SwitchEnum_CmpSuccess_1) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Obscured Lightning Current Spawn Rate
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Obscured_Lightning_Current_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Obscured Lightning System Finished
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished, PSystem) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Obscured_Lightning_System_Finished::PSystem' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Open Editor Readme Entry
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry final
{
public:
	class FString                                 Entry_Row;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUDS_Utility_Opener_Interface_C> K2Node_DynamicCast_AsUDS_Utility_Opener_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry, Entry_Row) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry::Entry_Row' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry, K2Node_DynamicCast_AsUDS_Utility_Opener_Interface) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry::K2Node_DynamicCast_AsUDS_Utility_Opener_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Open Editor Readme Entry Set
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set final
{
public:
	TArray<class FName>                           Entries;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDS_Utility_Opener_Interface_C> K2Node_DynamicCast_AsUDS_Utility_Opener_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set, Entries) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set::Entries' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set, K2Node_DynamicCast_AsUDS_Utility_Opener_Interface) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set::K2Node_DynamicCast_AsUDS_Utility_Opener_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Open_Editor_Readme_Entry_Set::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Populate Weather State
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Populate_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Coverage_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_0;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_0;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Lightning_0;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Intensity_0;                                  // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Wetness_0;                                // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Snow;                                     // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Dust;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Populate_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Populate_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Populate_Weather_State) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Populate_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Cloud_Coverage_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Rain_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Rain_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Snow_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Snow_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Param_Lightning_0) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Param_Lightning_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Wind_Intensity_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Wind_Intensity_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Param_Fog_0) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Param_Dust_0) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Material_Wetness_0) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Material_Wetness_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Material_Snow) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Material_Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Material_Dust) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Material_Dust' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.PPWF Intensity
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_PPWF_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_PPWF_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_PPWF_Intensity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_PPWF_Intensity) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_PPWF_Intensity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Query Project Settings
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Query_Project_Settings final
{
public:
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Query_Project_Settings) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Query_Project_Settings");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Query_Project_Settings) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Query_Project_Settings");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00000E, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GetConsoleVariableIntValue_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GetConsoleVariableIntValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rain Niagara System Asset
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Out;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_Particle_Collision_Mode                  Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          K2Node_Select_Default;                             // 0x00A8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset) == 0x0000D0, "Wrong size on Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset, K2Node_Select_Default) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Rain_Niagara_System_Asset::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rain Spawn Rate
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rain_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rain_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Rain_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rain System Finished
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rain_System_Finished final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rain_System_Finished) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rain_System_Finished");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rain_System_Finished) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Rain_System_Finished");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_System_Finished, PSystem) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rain_System_Finished::PSystem' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rainbow Strength
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rainbow_Strength final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rainbow_Strength) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rainbow_Strength");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rainbow_Strength) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Rainbow_Strength");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_FMax_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_FMax_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Randomize Screen Frost Offset
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset final
{
public:
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset, K2Node_MakeStruct_G_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset, K2Node_MakeStruct_R_ImplicitCast) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Randomize_Screen_Frost_Offset::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_ReceiveEndPlay");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ReceiveEndPlay) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_ReceiveEndPlay");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Recenter DLWE Render Target
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target final
{
public:
	struct FVector2D                              Target_Size;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Canvas;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0030(0x0008)(NoDestructor)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x0050(0x0008)(NoDestructor)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target) == 0x0000C8, "Wrong size on Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Target_Size) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Target_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Canvas) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BreakVector2D_X) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Round_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Round_ReturnValue_1) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Report Removal Of Mask Component
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component final
{
public:
	class UWeatherMask_C*                         Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, CallFunc_Array_RemoveItem_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Report Removed Radial Storm
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm final
{
public:
	class AActor*                                 Storm;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm, Storm) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm::Storm' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm, Success) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm::Success' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Report_Removed_Radial_Storm::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Runtime Or Initializing
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_Runtime_Or_Initializing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Runtime_Or_Initializing) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Runtime_Or_Initializing");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Runtime_Or_Initializing) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_Runtime_Or_Initializing");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Runtime_Or_Initializing, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Runtime_Or_Initializing::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Runtime_Or_Initializing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Runtime_Or_Initializing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Runtime_Or_Initializing, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Runtime_Or_Initializing::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Runtime_Or_Initializing, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Runtime_Or_Initializing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Screen Droplets Periodic Updates
// 0x0258 (0x0258 - 0x0000)
struct Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates final
{
public:
	TArray<class AActor*>                         Pawn_in_Array;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates) == 0x000258, "Wrong size on Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, Pawn_in_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::Pawn_in_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetForwardVector_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetPlayerPawn_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, K2Node_MakeArray_Array) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_FClamp_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Normal_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_LineTraceSingle_OutHit) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_LineTraceSingle_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Normal_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Dot_VectorVector_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Screen Frost Startup
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Screen_Frost_Startup final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Screen_Frost_Startup) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Screen_Frost_Startup");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Screen_Frost_Startup) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Screen_Frost_Startup");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Frost_Startup, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Screen_Frost_Startup::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Frost_Startup, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Screen_Frost_Startup::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Frost_Startup, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Screen_Frost_Startup::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Second Frame Startup Functions
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Second_Frame_Startup_Functions::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set All Update Checks
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_All_Update_Checks final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_All_Update_Checks) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_All_Update_Checks");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_All_Update_Checks) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Set_All_Update_Checks");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_All_Update_Checks, On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_All_Update_Checks::On' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Current Control Point Location
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Control_Point_Location::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Current Global Weather State
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State final
{
public:
	bool                                          Using_Manual_State;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Setting_Global_Mat_State;                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          B_State_Changed;                                   // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Get_New_Target_Global_Weather_State_Out;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_New_Target_Global_Weather_State_Changing; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_New_Target_Global_Weather_State_Manual_State; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Any_Manual_Overrides_Applied_ReturnValue; // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, Using_Manual_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::Using_Manual_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, Setting_Global_Mat_State) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::Setting_Global_Mat_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, B_State_Changed) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::B_State_Changed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Get_New_Target_Global_Weather_State_Out) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Get_New_Target_Global_Weather_State_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Get_New_Target_Global_Weather_State_Changing) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Get_New_Target_Global_Weather_State_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Get_New_Target_Global_Weather_State_Manual_State) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Get_New_Target_Global_Weather_State_Manual_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_1) == 0x000013, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_3) == 0x000016, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Any_Manual_Overrides_Applied_ReturnValue) == 0x000017, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Any_Manual_Overrides_Applied_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_4) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust Parameters
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_Parameters final
{
public:
	double                                        Snow_Dust_Depth;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_Parameters) == 0x0000A8, "Wrong size on Ultra_Dynamic_Weather_C_Dust_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Snow_Dust_Depth) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Snow_Dust_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Temp_real_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Temp_real_Variable_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Temp_real_Variable_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Temp_real_Variable_3) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SafeDivide_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SafeDivide_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, Temp_int_Variable_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, K2Node_Select_Default) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, K2Node_Select_Default_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Dust_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Random Time Offset
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Random_Time_Offset final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Random_Time_Offset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Set_Random_Time_Offset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Replicated Old Weather State
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State final
{
public:
	struct FUDW_WeatherState_Structure            CallFunc_Weather_State_Object_to_Structure_Structure; // 0x0000(0x0050)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_State_Sources_Sources;                // 0x0050(0x0050)()
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State) == 0x0000A0, "Wrong size on Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State, CallFunc_Weather_State_Object_to_Structure_Structure) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State::CallFunc_Weather_State_Object_to_Structure_Structure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State, CallFunc_Get_State_Sources_Sources) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Set_Replicated_Old_Weather_State::CallFunc_Get_State_Sources_Sources' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Season
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Season final
{
public:
	double                                        Season_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Season) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Season");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Season) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Set_Season");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Season, Season_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Season::Season_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Season, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Season::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Shared Weather Particle Parameters
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters final
{
public:
	class UNiagaraComponent*                      System;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_8;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_9;   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_10;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_11;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_12;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_13;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, System) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_8) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_9) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_10) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_11) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_12) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_13) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_13' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set UDS Reference
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_UDS_Reference final
{
public:
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_UDS_Reference) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_UDS_Reference");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_UDS_Reference) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Set_UDS_Reference");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_UDS_Reference, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_UDS_Reference::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_UDS_Reference, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_UDS_Reference::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Weather Values Prepped for UDS
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS final
{
public:
	double                                        CallFunc_Fog_Vertical_Velocity_Out;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sky_Cloud_Speed_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS, CallFunc_Fog_Vertical_Velocity_Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS::CallFunc_Fog_Vertical_Velocity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS, CallFunc_Sky_Cloud_Speed_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS::CallFunc_Sky_Cloud_Speed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_Weather_Values_Prepped_for_UDS::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set WOV Render Target Mapping
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_SnappedToGrid_ReturnValue;         // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Set_Location_Mapping_Vector4;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Vector_SnappedToGrid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Vector_SnappedToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Set_Location_Mapping_Vector4) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Set_Location_Mapping_Vector4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping, CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Set_WOV_Render_Target_Mapping::CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Sky Cloud Speed
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Sky_Cloud_Speed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Sky_Cloud_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Sky_Cloud_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Dust Velocity Randomization
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization final
{
public:
	double                                        Low_Wind;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        High_Wind;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, Low_Wind) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::Low_Wind' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, High_Wind) == 0x000008, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::High_Wind' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Snow Niagara System Asset
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Out;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_Particle_Collision_Mode                  Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          K2Node_Select_Default;                             // 0x00A8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset) == 0x0000D0, "Wrong size on Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset, K2Node_Select_Default) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Snow_Niagara_System_Asset::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Snow Spawn Rate
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Snow_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Snow_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Snow_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Snow System Finished
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Snow_System_Finished final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Snow_System_Finished) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Snow_System_Finished");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Snow_System_Finished) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Snow_System_Finished");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_System_Finished, PSystem) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Snow_System_Finished::PSystem' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Sort Weather Override Volumes
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes final
{
public:
	TArray<class AWeather_Override_Volume_C*>     Erase_Volumes;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 Priorities;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class AWeather_Override_Volume_C*>     Sorted_List_of_Volumes;                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Inserted;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Erase_Volumes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Erase_Volumes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Priorities) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Priorities' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Sorted_List_of_Volumes) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Sorted_List_of_Volumes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Current_Volume) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Inserted) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Inserted' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Array_Index_Variable) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue_1) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Get_Item) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Get_Item_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Sparse Movement Updates
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Sparse_Movement_Updates final
{
public:
	double                                        Distance_Moved;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Sparse_Movement_Updates) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Sparse_Movement_Updates");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Sparse_Movement_Updates) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Sparse_Movement_Updates");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sparse_Movement_Updates, Distance_Moved) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Sparse_Movement_Updates::Distance_Moved' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sparse_Movement_Updates, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Sparse_Movement_Updates::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sparse_Movement_Updates, CallFunc_Vector_Distance_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Sparse_Movement_Updates::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Active Timers
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Active_Timers final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_4;                // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_5;                // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Active_Timers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Active_Timers");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Active_Timers) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Start_Active_Timers");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_3) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_4) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_5) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Lightning Flash
// 0x03A0 (0x03A0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Lightning_Flash final
{
public:
	class UNiagaraComponent*                      Lightning_Niagara_System;                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lightning_Intensity_Day_Night_Scale_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Random_Value_in_Float_Range_Structure_Out; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRangeFromStream_ReturnValue; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Close_Thunder_Sound_Delay_Delay;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Lightning_Bolt_Target_Offset_Out;         // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Lightning_Flash_Location_Found_Valid_Location; // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_213[0x5];                                      // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Lightning_Flash_Location_Loc;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lightning_Distance_Range_Range;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0288(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Lightning_Flash");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash) == 0x0003A0, "Wrong size on Ultra_Dynamic_Weather_C_Start_Lightning_Flash");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, Lightning_Niagara_System) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::Lightning_Niagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetTriggerParameter_self_CastInput) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Vector_Distance_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_MapRangeClamped_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Lightning_Intensity_Day_Night_Scale_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Lightning_Intensity_Day_Night_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Not_PreBool_ReturnValue_1) == 0x000099, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Not_PreBool_ReturnValue_2) == 0x00009A, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Random_Value_in_Float_Range_Structure_Out) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Random_Value_in_Float_Range_Structure_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_RandomIntegerInRangeFromStream_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_RandomIntegerInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, Temp_bool_Variable) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000AD, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, K2Node_Select_Default) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SelectInt_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BooleanAND_ReturnValue) == 0x0000BD, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Close_Thunder_Sound_Delay_Delay) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Close_Thunder_Sound_Delay_Delay' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Lightning_Bolt_Target_Offset_Out) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Lightning_Bolt_Target_Offset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_GetForwardVector_ReturnValue_1) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BreakVector_X_1) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BreakVector_Y_1) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BreakVector_Z_1) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BooleanAND_ReturnValue_1) == 0x000211, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Lightning_Flash_Location_Found_Valid_Location) == 0x000212, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Lightning_Flash_Location_Found_Valid_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Lightning_Flash_Location_Loc) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Lightning_Flash_Location_Loc' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_IsDedicatedServer_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Not_PreBool_ReturnValue_3) == 0x000231, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Lightning_Distance_Range_Range) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Lightning_Distance_Range_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_FClamp_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_BooleanAND_ReturnValue_2) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_Add_VectorVector_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_FindLookAtRotation_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000374, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x00038C, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000394, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Lightning_Flash, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Start_Lightning_Flash::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Up DLWE Interaction System
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_RenderTarget_State_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Allow_Render_Target_Drawing_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System, CallFunc_Allow_Render_Target_Drawing_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System::CallFunc_Allow_Render_Target_Drawing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Start_Up_DLWE_Interaction_System::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Up Render Targets
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Up_Render_Targets final
{
public:
	bool                                          CallFunc_Allow_Render_Target_Drawing_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Up_Render_Targets) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Up_Render_Targets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Up_Render_Targets) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Start_Up_Render_Targets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Up_Render_Targets, CallFunc_Allow_Render_Target_Drawing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Up_Render_Targets::CallFunc_Allow_Render_Target_Drawing_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Startup Static Mode
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Startup_Static_Mode final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Startup_Static_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Startup_Static_Mode");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Startup_Static_Mode) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Startup_Static_Mode");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Startup_Static_Mode, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Startup_Static_Mode::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Mode Tick
// 0x0128 (0x0128 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Mode_Tick final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0018(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Mode_Tick) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Mode_Tick");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Mode_Tick) == 0x000128, "Wrong size on Ultra_Dynamic_Weather_C_Static_Mode_Tick");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, CallFunc_GetCameraLocation_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Mode_Tick, K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Static_Mode_Tick::K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - DLWE
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___DLWE final
{
public:
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___DLWE");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___DLWE");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, K2Node_MakeStruct_LinearColor) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, K2Node_MakeStruct_R_ImplicitCast) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, K2Node_MakeStruct_G_ImplicitCast) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, K2Node_MakeStruct_B_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___DLWE, K2Node_MakeStruct_A_ImplicitCast) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___DLWE::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Dust
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Dust final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Dust_Niagara_System_Asset_Out;            // 0x0000(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Dust) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Dust");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Dust) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Dust");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_Dust_Niagara_System_Asset_Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_Dust_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, K2Node_DynamicCast_AsNiagara_System) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Dust, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Dust::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Heat Distortion
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion final
{
public:
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0018(0x0010)(NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Weight_ImplicitCast;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, K2Node_MakeStruct_WeightedBlendable) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, K2Node_MakeStruct_Weight_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::K2Node_MakeStruct_Weight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Lightning
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Lightning final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lightning_World_Height_Height;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Lightning");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Lightning");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_Lightning_World_Height_Height) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_Lightning_World_Height_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, K2Node_DynamicCast_AsNiagara_System) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Lightning, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Lightning::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Material Effects
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects final
{
public:
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Material_Effects::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Occlusion
// 0x0003 (0x0003 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Occlusion final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Occlusion) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Occlusion) == 0x000003, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Occlusion, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Occlusion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Occlusion, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Occlusion::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Post Process Wind Fog
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, K2Node_DynamicCast_AsMaterial_Interface) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Post Processing
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0030(0x0010)()
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing, K2Node_MakeArray_Array) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing, K2Node_MakeArray_Array_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing, K2Node_MakeStruct_WeightedBlendables) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Post_Processing::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Rain
// 0x0188 (0x0188 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Rain final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Rain_Niagara_System_Asset_Out;            // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterial>               K2Node_Select_Default;                             // 0x0068(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_DynamicCast_AsMaterial;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterial>               K2Node_Select_Default_1;                           // 0x00B0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_DynamicCast_AsMaterial_1;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_2;                           // 0x00F0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Rain) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Rain");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Rain) == 0x000188, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Rain");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_bool_Variable_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_real_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_real_Variable_1) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_real_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_real_Variable_3) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_real_Variable_4) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Rain_Niagara_System_Asset_Out) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Rain_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_AsNiagara_System) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000062, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000063, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_BooleanOR_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_BooleanOR_ReturnValue_1) == 0x000065, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_Select_Default) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, Temp_bool_Variable_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_AsMaterial) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_AsMaterial' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_Select_Default_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_AsMaterial_1) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_AsMaterial_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_Select_Default_2) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Not_PreBool_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_AsMaterial_Interface) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Not_PreBool_ReturnValue_2) == 0x000131, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, K2Node_Select_Default_3) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_BooleanAND_ReturnValue_1) == 0x00014C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00015C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000164, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x00016C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000174, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x00017C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rain, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x000184, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rain::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Rainbow
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Rainbow final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0020(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Rainbow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Rainbow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, K2Node_DynamicCast_AsTexture_2D) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, K2Node_Select_Default) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, K2Node_DynamicCast_AsMaterial_Interface) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Screen Droplets
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets final
{
public:
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0018(0x0010)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Weight_ImplicitCast;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, K2Node_MakeStruct_WeightedBlendable) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, K2Node_DynamicCast_AsMaterial_Interface) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_BooleanAND_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, K2Node_MakeStruct_Weight_ImplicitCast) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::K2Node_MakeStruct_Weight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Screen Frost
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost final
{
public:
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0020(0x0010)(NoDestructor)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_1;    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Weight_ImplicitCast;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost) == 0x0000A0, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_MakeStruct_WeightedBlendable) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_DynamicCast_AsTexture_2D) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_DynamicCast_AsTexture_2D_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Runtime_Or_Initializing_ReturnValue_1) == 0x000051, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Runtime_Or_Initializing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_DynamicCast_AsMaterial_Interface) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, K2Node_MakeStruct_Weight_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::K2Node_MakeStruct_Weight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Shared Particles
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_BooleanAND_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Shared_Particles::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Snow
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Snow final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Snow_Niagara_System_Asset_Out;            // 0x0000(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0048(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomTimeDilation_Dilation_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Snow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Snow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Snow) == 0x0000B8, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Snow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_Snow_Niagara_System_Asset_Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_Snow_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, K2Node_DynamicCast_AsNiagara_System) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, Temp_bool_Variable) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, K2Node_DynamicCast_AsMaterial_Interface) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_SetCustomTimeDilation_Dilation_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_SetCustomTimeDilation_Dilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Snow, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Snow::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Sound Effects
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects final
{
public:
	bool                                          Spatialization;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base_1;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, Spatialization) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::Spatialization' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, K2Node_DynamicCast_AsSound_Base) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, K2Node_DynamicCast_AsSound_Base_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::K2Node_DynamicCast_AsSound_Base_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Sound_Effects::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Static Properties - Wind Debris
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          CallFunc_Wind_Debris_Niagara_System_Asset_Out;     // 0x0000(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris) == 0x000068, "Wrong size on Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, CallFunc_Wind_Debris_Niagara_System_Asset_Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::CallFunc_Wind_Debris_Niagara_System_Asset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, K2Node_DynamicCast_AsNiagara_System) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, K2Node_DynamicCast_AsTexture_2D) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Static_Properties___Wind_Debris::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Target Screen Frost Strength
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_OcclusionState_C*                  CallFunc_Active_Occlusion_State_State;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_Active_Occlusion_State_State) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_Active_Occlusion_State_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_FMax_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Target_Screen_Frost_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Test Actor for Weather Exposure
// 0x0188 (0x0188 - 0x0000)
struct Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Test_Colliding_Components_Only;                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Custom_Component_for_Bounds;                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_Exposure;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Exposure;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Exposure;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Exposure;                                     // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Direction_Exposure;                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weather_Exposure;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_Extent;                                      // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_Origin;                                      // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin_1;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent_1;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	double                                        CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0150(0x0010)(ReferenceParm)
	double                                        CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value_1; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure) == 0x000188, "Wrong size on Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Actor) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Actor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Test_Colliding_Components_Only) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Test_Colliding_Components_Only' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Custom_Component_for_Bounds) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Custom_Component_for_Bounds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Rain_Exposure) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Rain_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Snow_Exposure) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Snow_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Wind_Exposure) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Wind_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Dust_Exposure) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Dust_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Wind_Direction_Exposure) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Wind_Direction_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Weather_Exposure) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Weather_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Actor_Extent) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Actor_Extent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Actor_Origin) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Actor_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetComponentBounds_Origin) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetComponentBounds_BoxExtent) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetComponentBounds_SphereRadius) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetActorBounds_Origin) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetActorBounds_BoxExtent) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetActorBounds_Origin_1) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetActorBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetActorBounds_BoxExtent_1) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetActorBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, K2Node_MakeArray_Array) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, K2Node_MakeArray_Array_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Test Component for Wind Exposure
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Exposure;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, Wind_Exposure) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::Wind_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetComponentBounds_Origin) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetComponentBounds_BoxExtent) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetComponentBounds_SphereRadius) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Toggle Post Process Material
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_to_Remove;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_Select_Default;                             // 0x0018(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_Select_Default_1;                           // 0x0030(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, Index_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, Enabled) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, Index_to_Remove) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::Index_to_Remove' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, Temp_int_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, Temp_int_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, CallFunc_Array_RemoveItem_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, K2Node_Select_Default_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material, CallFunc_Array_AddUnique_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Toggle_Post_Process_Material::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Trace Bounds for Exposure Values
// 0x04A8 (0x04A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values final
{
public:
	struct FVector                                Bounds_Origin;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bounds_Extent;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors_to_Ignore;                                  // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Test_Weather;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Exposure_Value;                                    // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Vector;                                    // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Trace_Origin;                              // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Exposure;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Dust_Velocity_Velocity;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Snow_Velocity_Velocity;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Rain_Velocity_Velocity;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0270(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0368(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x03A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeArray__2__ImplicitCast;                 // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__1__ImplicitCast;                 // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__0__ImplicitCast;                 // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values) == 0x0004A8, "Wrong size on Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Bounds_Origin) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Bounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Bounds_Extent) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Bounds_Extent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Actors_to_Ignore) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Actors_to_Ignore' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Test_Weather) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Test_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Exposure_Value) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Exposure_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Current_Vector) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Current_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Current_Trace_Origin) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Current_Trace_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Exposure) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Temp_int_Array_Index_Variable) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Temp_int_Variable) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Current_Dust_Velocity_Velocity) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Current_Dust_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Current_Snow_Velocity_Velocity) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Current_Snow_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Wind_Rotation_Rot) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Normal_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray_Array) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_MaxOfFloatArray_MaxValue) == 0x0001CC, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Current_Rain_Velocity_Velocity) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Current_Rain_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_Select_Default) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Normal_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_OutHit) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray_Array_1) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Array_Get_Item) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_OutHit_1) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Array_Length_ReturnValue) == 0x000494, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Less_IntInt_ReturnValue) == 0x000498, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray__2__ImplicitCast) == 0x00049C, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray__2__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray__1__ImplicitCast) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray__0__ImplicitCast) == 0x0004A4, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.UDS Reconstruct
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_UDS_Reconstruct final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_UDS_Reconstruct) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_UDS_Reconstruct");
static_assert(sizeof(Ultra_Dynamic_Weather_C_UDS_Reconstruct) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_UDS_Reconstruct");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Reconstruct, Success) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_UDS_Reconstruct::Success' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Reconstruct, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_UDS_Reconstruct::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.UDS Weather Variable Overrides
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides final
{
public:
	bool                                          Override_Clouds;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Cloud_Coverage_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Fog;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_Fog_0;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Dust;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_Dust_0;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides");
static_assert(sizeof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Override_Clouds) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Override_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Cloud_Coverage_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Override_Fog) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Override_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Param_Fog_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Override_Dust) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Override_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Param_Dust_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, Success) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::Success' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_UDS_Weather_Variable_Overrides::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.UDW Runtime Tick
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_UDW_Runtime_Tick final
{
public:
	double                                        Delta_Time;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_UDW_Runtime_Tick) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_UDW_Runtime_Tick");
static_assert(sizeof(Ultra_Dynamic_Weather_C_UDW_Runtime_Tick) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_UDW_Runtime_Tick");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_Runtime_Tick, Delta_Time) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_UDW_Runtime_Tick::Delta_Time' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.UDW State Apply
// 0x0320 (0x0320 - 0x0000)
struct Ultra_Dynamic_Weather_C_UDW_State_Apply final
{
public:
	struct FUDS_and_UDW_State                     State;                                             // 0x0000(0x0200)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Completed;                                         // 0x0200(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FUDW_WOV_State                         CallFunc_Array_Get_Item;                           // 0x0210(0x00D0)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             K2Node_DynamicCast_AsWeather_Override_Volume;      // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_DynamicCast_AsUDS_Weather_Settings;         // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_UDW_State_Apply) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_UDW_State_Apply");
static_assert(sizeof(Ultra_Dynamic_Weather_C_UDW_State_Apply) == 0x000320, "Wrong size on Ultra_Dynamic_Weather_C_UDW_State_Apply");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, Completed) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::Completed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, Temp_int_Array_Index_Variable) == 0x000204, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_Array_Get_Item) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, Temp_int_Loop_Counter_Variable) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_Add_IntInt_ReturnValue) == 0x0002E4, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_IsValid_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, K2Node_DynamicCast_AsWeather_Override_Volume) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::K2Node_DynamicCast_AsWeather_Override_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_Array_Length_ReturnValue) == 0x000304, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, CallFunc_Less_IntInt_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, K2Node_DynamicCast_AsUDS_Weather_Settings) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::K2Node_DynamicCast_AsUDS_Weather_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_UDW_State_Apply, K2Node_DynamicCast_bSuccess_1) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_UDW_State_Apply::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Dust Parameters
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawning;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dust_Spawn_Rate_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dust_Sprite_Alpha_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Current_Dust_Velocity_Velocity;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, Spawning) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::Spawning' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Dust_Spawn_Rate_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Dust_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Dust_Sprite_Alpha_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Dust_Sprite_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Current_Dust_Velocity_Velocity) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Current_Dust_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue_3) == 0x000071, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Rain Parameters
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Rain_Velocity_Velocity;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Rain_Spawn_Rate_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_IsValid_ReturnValue_1) == 0x000013, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Current_Rain_Velocity_Velocity) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Current_Rain_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Rain_Spawn_Rate_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Rain_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Snow Parameters
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawning;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Current_Snow_Velocity_Velocity;           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Snow_Spawn_Rate_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, Spawning) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::Spawning' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Current_Snow_Velocity_Velocity) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Current_Snow_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Snow_Spawn_Rate_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Snow_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Wind Debris Parameters
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters final
{
public:
	double                                        Spawn_Rate;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Wind_Debris_Velocity_Velocity;    // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Wind_Debris_Spawn_Rate_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, Spawn_Rate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_GetScalarParameterValue_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Current_Wind_Debris_Velocity_Velocity) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Current_Wind_Debris_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Wind_Debris_Spawn_Rate_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Wind_Debris_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Current Global And Local Weather State
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                New_Weather_State;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Wind_Direction_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State, New_Weather_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State::New_Weather_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State, CallFunc_Combined_Wind_Direction_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State::CallFunc_Combined_Wind_Direction_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Custom Weather Particle Camera
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, K2Node_MakeArray_Array) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C_Update_Custom_Weather_Particle_Camera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Interaction Mode
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode final
{
public:
	int32                                         Param_Dust_0;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Set_Location_Mapping_Vector4;             // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, Param_Dust_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_Conv_IntToBool_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000006, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000007, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_SelectInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_Set_Location_Mapping_Vector4) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_Set_Location_Mapping_Vector4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_K2_SetTimer_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interaction_Mode::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Snow Compressions
// 0x0170 (0x0170 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions final
{
public:
	double                                        Int_Size;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Int_Location;                                      // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             Render_Context;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                RenderCanvas;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_MakeBoxSphereBounds_ReturnValue;          // 0x0038(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Size_Out;                    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Location_Out;                // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x00E8(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Array_Get_Item;                           // 0x0100(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector4_X;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector4ToVector_ReturnValue;         // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions) == 0x000170, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Int_Size) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Int_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Int_Location) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Int_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Render_Context) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Render_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, RenderCanvas) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::RenderCanvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_IntToBool_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeBoxSphereBounds_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeBoxSphereBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Canvas_Brush_Size_Out) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Canvas_Brush_Size_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Canvas_Brush_Location_Out) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Canvas_Brush_Location_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Loop_Counter_Variable) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BreakVector4_X) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BreakVector4_Y) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BreakVector4_Z) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BreakVector4_W) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_Vector4ToVector_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_Vector4ToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Fog Particle Parameters
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters final
{
public:
	class UFXSystemComponent*                     Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Particle_Percentage;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weather_Intensity;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Particle_Intensity;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Target) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Max_Particle_Percentage) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Max_Particle_Percentage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Weather_Intensity) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Particle_Intensity) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Particle_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Heat Distortion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Heat_Distortion final
{
public:
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Heat_Distortion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Update_Heat_Distortion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Heat_Distortion::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Heat_Distortion::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Heat_Distortion::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_Heat_Distortion::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion, CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Heat_Distortion::CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Heat_Distortion, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Heat_Distortion::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Lightning Flash Light
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light final
{
public:
	double                                        Overall_Intensity;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x00F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light) == 0x000110, "Wrong size on Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, Overall_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::Overall_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_PerlinNoise1D_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Abs_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Lightning_Flash_Light::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Material Effect Parameters
// 0x0108 (0x0108 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Force_Vector_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_2;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness_1;  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust_1;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_3;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_2; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness_2;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust_2;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters) == 0x000108, "Wrong size on Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable_2) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable_3) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Wind_Force_Vector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Wind_Force_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Wetness) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Dust) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default_2) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Wetness_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Wetness_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Dust_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Dust_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default_3) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_2) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Wetness_2) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Wetness_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Dust_2) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Dust_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x0000F4, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x0000FC, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x000104, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Obscured Lightning Parameters
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Obscured_Lightning_Current_Spawn_Rate_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_Obscured_Lightning_Current_Spawn_Rate_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_Obscured_Lightning_Current_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000075, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Old State With Replicated Variables
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables final
{
public:
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Outdoor Sound Mix
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix final
{
public:
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Post Process Wind Fog
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog final
{
public:
	bool                                          Force_Update;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_PPWF_Intensity_Out;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, Force_Update) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::Force_Update' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_FInterpTo_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_1) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_2) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_PPWF_Intensity_Out) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_PPWF_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_3) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_4) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_5) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_6) == 0x000033, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Rainbow
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Rainbow final
{
public:
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Rainbow_Strength_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Rainbow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Rainbow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Rainbow) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Update_Rainbow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Rainbow_Strength_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Rainbow_Strength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_BooleanOR_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_BooleanOR_ReturnValue_2) == 0x000059, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Screen Droplets
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Screen_Droplets final
{
public:
	double                                        Direct_Exposure_of_Camera_to_Rain;                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Screen_Droplets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Update_Screen_Droplets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, Direct_Exposure_of_Camera_to_Rain) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::Direct_Exposure_of_Camera_to_Rain' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_K2_SetTimer_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Screen Frost
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Screen_Frost final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Screen_Frost) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Screen_Frost");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Screen_Frost) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Update_Screen_Frost");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Frost, CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Frost::CallFunc_FInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Season
// 0x0138 (0x0138 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Season final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Season_Value_for_Weather_from_Date_and_Time_Season; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Season) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Season");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Season) == 0x000138, "Wrong size on Ultra_Dynamic_Weather_C_Update_Season");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Divide_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Abs_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Abs_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_HasAuthority_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FMin_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FMin_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Conv_IntToByte_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Season_Value_for_Weather_from_Date_and_Time_Season) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Season_Value_for_Weather_from_Date_and_Time_Season' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_GetValidValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FFloor_ReturnValue) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Percent_IntInt_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item_3) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, Temp_int_Variable) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_LinearColor) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FClamp_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Abs_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FClamp_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_SelectFloat_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_A_ImplicitCast) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_B_ImplicitCast) == 0x00012C, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_G_ImplicitCast) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_R_ImplicitCast) == 0x000134, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Sound Occlusion Parameters
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters final
{
public:
	double                                        Upward_Occlusion;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Directional_Occlusion;                             // 0x0008(0x0010)(Edit, BlueprintVisible)
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Upward_Occlusion_Out;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Get_Sound_Directional_Occlusion_Out;      // 0x0058(0x0010)(ReferenceParm)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_2; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_3; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_4; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_5; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, Upward_Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::Upward_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, Directional_Occlusion) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::Directional_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_self_CastInput) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Array_Get_Item_2) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Array_Get_Item_3) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Get_Sound_Upward_Occlusion_Out) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Get_Sound_Upward_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_Get_Sound_Directional_Occlusion_Out) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_Get_Sound_Directional_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_InFloat_ImplicitCast_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_InFloat_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_InFloat_ImplicitCast_3) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_InFloat_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_InFloat_ImplicitCast_4) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_InFloat_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters, CallFunc_SetFloatParameter_InFloat_ImplicitCast_5) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Sound_Occlusion_Parameters::CallFunc_SetFloatParameter_InFloat_ImplicitCast_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Sounds With Weather State
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Normalized_Wind_Direction_Wind_Vector; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Normalized_Wind_Direction_Wind_Vector_1; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_2; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_3; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_4; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Get_Normalized_Wind_Direction_Wind_Vector) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Get_Normalized_Wind_Direction_Wind_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Dot_VectorVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Get_Normalized_Wind_Direction_Wind_Vector_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Get_Normalized_Wind_Direction_Wind_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_SetFloatParameter_InFloat_ImplicitCast_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_SetFloatParameter_InFloat_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_SetFloatParameter_InFloat_ImplicitCast_3) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_SetFloatParameter_InFloat_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State, CallFunc_SetFloatParameter_InFloat_ImplicitCast_4) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Sounds_With_Weather_State::CallFunc_SetFloatParameter_InFloat_ImplicitCast_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Target Screen Frost
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost final
{
public:
	double                                        CallFunc_Target_Screen_Frost_Strength_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost, CallFunc_Target_Screen_Frost_Strength_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Target_Screen_Frost::CallFunc_Target_Screen_Frost_Strength_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Underwater State
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Underwater_State final
{
public:
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Underwater_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Underwater_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Underwater_State) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Update_Underwater_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_BooleanAND_ReturnValue_1) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Weather Mask Target
// 0x03E8 (0x03E8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target final
{
public:
	class UWeather_Mask_Brush_Component_C*        Brush;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New_Location;                                      // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lowest_Brush_Height;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            Mask_Components;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<double>                                Brush_Heights;                                     // 0x0040(0x0010)(Edit, BlueprintVisible)
	class UWeather_Mask_Projection_Box_Component_C* Current_Projection_Box;                            // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWeather_Mask_Projection_Box_Component_C*> Projection_Box_Components;                         // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UWeather_Mask_Brush_Component_C*> Brush_Components;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FDrawToRenderTargetContext             Draw_Context;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                Draw_Canvas;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Allow_Render_Target_Drawing_ReturnValue;  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_SnappedToGrid_ReturnValue;         // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Size_Out;                    // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Location_Out;                // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Size_Out_1;                  // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Location_Out_1;              // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Set_Location_Mapping_Vector4;             // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_1;    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_2;    // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x5];                                      // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Canvas_Brush_Size_Out_2;                  // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Location_Out_2;              // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0228(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component; // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Brush_Component_C*        K2Node_DynamicCast_AsWeather_Mask_Brush_Component; // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Projection_Box_Component_C* CallFunc_Array_Get_Item_2;                         // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Canvas_Brush_Size_Out_3;                  // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Location_Out_3;              // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* CallFunc_Array_Get_Item_3;                         // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Brush_Component_C*        CallFunc_Array_Get_Item_4;                         // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Brush_Component_C*        CallFunc_Array_Get_Item_5;                         // 0x0328(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0340(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x0358(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Projection_Box_Component_C* CallFunc_Array_Get_Item_6;                         // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0398(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DrawTexture_Rotation_ImplicitCast;     // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DrawTexture_Rotation_ImplicitCast_1;   // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DrawMaterial_Rotation_ImplicitCast;    // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x03B8(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x03D0(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_K2_DrawMaterial_Rotation_ImplicitCast_1;  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target) == 0x0003E8, "Wrong size on Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Brush) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Brush' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, New_Location) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::New_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Lowest_Brush_Height) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Lowest_Brush_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Current_Index) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Current_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Mask_Components) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Mask_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Brush_Heights) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Brush_Heights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Current_Projection_Box) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Current_Projection_Box' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Projection_Box_Components) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Projection_Box_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Brush_Components) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Brush_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Draw_Context) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Draw_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Draw_Canvas) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Draw_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Array_Index_Variable) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Array_Index_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Loop_Counter_Variable_2) == 0x0000A4, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Array_Index_Variable_3) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Loop_Counter_Variable_3) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Allow_Render_Target_Drawing_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Allow_Render_Target_Drawing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_X) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_Z) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Vector_SnappedToGrid_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Vector_SnappedToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Size_Out) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Size_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Location_Out) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Location_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_X_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_Y_1) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_Z_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MakeColor_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Size_Out_1) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Size_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Location_Out_1) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Location_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MakeVector_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Set_Location_Mapping_Vector4) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Set_Location_Mapping_Vector4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Runtime_Or_Initializing_ReturnValue_1) == 0x0001F1, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Runtime_Or_Initializing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Runtime_Or_Initializing_ReturnValue_2) == 0x0001F2, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Runtime_Or_Initializing_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Size_Out_2) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Size_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Location_Out_2) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Location_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Loop_Counter_Variable_4) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Length_ReturnValue) == 0x00021C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue_4) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_object_Variable) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Variable) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue_5) == 0x00023C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MinOfFloatArray_MinValue) == 0x000244, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_LastIndex_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MaxOfFloatArray_MaxValue) == 0x00025C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, K2Node_DynamicCast_bSuccess) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, K2Node_DynamicCast_AsWeather_Mask_Brush_Component) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::K2Node_DynamicCast_AsWeather_Mask_Brush_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, K2Node_DynamicCast_bSuccess_1) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item_1) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_X_2) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_Y_2) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BreakVector_Z_2) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Add_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item_2) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Length_ReturnValue_2) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002E4, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_RemoveItem_ReturnValue) == 0x0002E5, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Size_Out_3) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Size_Out_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Canvas_Brush_Location_Out_3) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Canvas_Brush_Location_Out_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item_3) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Length_ReturnValue_3) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Less_IntInt_ReturnValue_3) == 0x000314, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item_4) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Length_ReturnValue_4) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Less_IntInt_ReturnValue_4) == 0x000324, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item_5) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Add_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Length_ReturnValue_5) == 0x000334, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Less_IntInt_ReturnValue_5) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Add_ReturnValue_2) == 0x00033C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, K2Node_MakeArray_Array) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Variable_1) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BoxOverlapComponents_OutComponents) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000369, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Add_IntInt_ReturnValue_6) == 0x00036C, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, Temp_int_Array_Index_Variable_4) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Array_Get_Item_6) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_IsValid_ReturnValue) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast) == 0x0003A4, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_K2_DrawTexture_Rotation_ImplicitCast) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_K2_DrawTexture_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_K2_DrawTexture_Rotation_ImplicitCast_1) == 0x0003AC, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_K2_DrawTexture_Rotation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MakeColor_B_ImplicitCast) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_K2_DrawMaterial_Rotation_ImplicitCast) == 0x0003B4, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_K2_DrawMaterial_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target, CallFunc_K2_DrawMaterial_Rotation_ImplicitCast_1) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Mask_Target::CallFunc_K2_DrawMaterial_Rotation_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Wind Directional Source Actor
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpeed_InNewSpeed_ImplicitCast;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_Wind_Rotation_Rot) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_SetSpeed_InNewSpeed_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_SetSpeed_InNewSpeed_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update WOV Render Target
// 0x0198 (0x0198 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_WOV_Render_Target final
{
public:
	class AWeather_Override_Volume_C*             Current_WOV;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          WOVs_Present;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Radial_Storms_Present;                             // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDrawToRenderTargetContext             Draw_Context;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor)
	struct FLinearColor                           New_Mapping;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                Render_Canvas;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRadial_Storm_Weather_Interface_C> K2Node_DynamicCast_AsRadial_Storm_Weather_Interface; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Radial_Storm_Material_Target_Data_Draw; // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Radial_Storm_Material_Target_Data_Location; // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Radial_Storm_Material_Target_Data_Outer_Radius; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Radial_Storm_Material_Target_Data_Soft_Fraction; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Radial_Storm_Material_Target_Data_Color; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Size_Out;                    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Canvas_Brush_Location_Out;                // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Allow_Render_Target_Drawing_ReturnValue;  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_2;           // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0178(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_WOV_Render_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target) == 0x000198, "Wrong size on Ultra_Dynamic_Weather_C_Update_WOV_Render_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Current_WOV) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Current_WOV' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, WOVs_Present) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::WOVs_Present' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Radial_Storms_Present) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Radial_Storms_Present' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Draw_Context) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Draw_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, New_Mapping) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::New_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Render_Canvas) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Render_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Temp_int_Array_Index_Variable) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_Get_Item) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, K2Node_DynamicCast_AsRadial_Storm_Weather_Interface) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::K2Node_DynamicCast_AsRadial_Storm_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Get_Radial_Storm_Material_Target_Data_Draw) == 0x000072, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Get_Radial_Storm_Material_Target_Data_Draw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Get_Radial_Storm_Material_Target_Data_Location) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Get_Radial_Storm_Material_Target_Data_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Get_Radial_Storm_Material_Target_Data_Outer_Radius) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Get_Radial_Storm_Material_Target_Data_Outer_Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Get_Radial_Storm_Material_Target_Data_Soft_Fraction) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Get_Radial_Storm_Material_Target_Data_Soft_Fraction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Get_Radial_Storm_Material_Target_Data_Color) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Get_Radial_Storm_Material_Target_Data_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_MakeVector2D_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Canvas_Brush_Size_Out) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Canvas_Brush_Size_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Canvas_Brush_Location_Out) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Canvas_Brush_Location_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_BooleanOR_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000119, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Allow_Render_Target_Drawing_ReturnValue) == 0x00011A, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Allow_Render_Target_Drawing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_IsValid_ReturnValue) == 0x00011B, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_IsNotEmpty_ReturnValue_2) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_IsNotEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_BooleanAND_ReturnValue) == 0x00011D, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_IsValid_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000184, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00018C, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_Max_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Render_Target, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000194, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Render_Target::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Version Specific Correction
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Version_Specific_Correction final
{
public:
	class FString                                 CallFunc_GetEngineVersion_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Version_Specific_Correction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Version_Specific_Correction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Version_Specific_Correction) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Version_Specific_Correction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Version_Specific_Correction, CallFunc_GetEngineVersion_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Version_Specific_Correction::CallFunc_GetEngineVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Version_Specific_Correction, CallFunc_StartsWith_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Version_Specific_Correction::CallFunc_StartsWith_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Warm Up Niagara Systems
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems final
{
public:
	double                                        CallFunc_Obscured_Lightning_Current_Spawn_Rate_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Wind_Debris_Spawn_Rate_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dust_Spawn_Rate_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Snow_Spawn_Rate_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Rain_Spawn_Rate_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Obscured_Lightning_Current_Spawn_Rate_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Obscured_Lightning_Current_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Wind_Debris_Spawn_Rate_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Wind_Debris_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Dust_Spawn_Rate_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Dust_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Snow_Spawn_Rate_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Snow_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_IsValid_ReturnValue_3) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Rain_Spawn_Rate_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Rain_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems, CallFunc_IsValid_ReturnValue_4) == 0x000049, "Member 'Ultra_Dynamic_Weather_C_Warm_Up_Niagara_Systems::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Weather Startup Functions
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Weather_C_Weather_Startup_Functions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDW_Startup_Interface_C> K2Node_DynamicCast_AsUDW_Startup_Interface;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Weather_Startup_Functions");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions) == 0x000068, "Wrong size on Ultra_Dynamic_Weather_C_Weather_Startup_Functions");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, K2Node_DynamicCast_AsUDW_Startup_Interface) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::K2Node_DynamicCast_AsUDW_Startup_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Startup_Functions, CallFunc_Less_IntInt_ReturnValue_1) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Weather_Startup_Functions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Weather State Object to Structure
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            Structure;                                         // 0x0008(0x0050)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            K2Node_MakeStruct_UDW_WeatherState_Structure;      // 0x0058(0x0050)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure) == 0x0000A8, "Wrong size on Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure, Structure) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure::Structure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure, K2Node_MakeStruct_UDW_WeatherState_Structure) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Weather_State_Object_to_Structure::K2Node_MakeStruct_UDW_WeatherState_Structure' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Debris Niagara System Asset
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          Out;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_Particle_Collision_Mode                  Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          K2Node_Select_Default;                             // 0x00A8(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset) == 0x0000D0, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset, K2Node_Select_Default) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Niagara_System_Asset::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Debris Spawn Rate
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Debris System Finished
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished final
{
public:
	class UNiagaraComponent*                      PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished, PSystem) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_System_Finished::PSystem' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Force Vector
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Force_Vector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Force_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Force_Vector");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Force_Vector) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Force_Vector");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Rotation
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Rotation final
{
public:
	struct FRotator                               Rot;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Rotation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Rotation");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Rotation) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Rotation");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Rotation, Rot) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Rotation::Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Rotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Wind_Rotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.📘 Dust Particles
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C___Dust_Particles final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C___Dust_Particles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C___Dust_Particles");
static_assert(sizeof(Ultra_Dynamic_Weather_C___Dust_Particles) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C___Dust_Particles");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Dust_Particles, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C___Dust_Particles::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.📘 Material Effects
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C___Material_Effects final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C___Material_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C___Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C___Material_Effects) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C___Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Material_Effects, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C___Material_Effects::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.📘 Rain Particles
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C___Rain_Particles final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C___Rain_Particles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C___Rain_Particles");
static_assert(sizeof(Ultra_Dynamic_Weather_C___Rain_Particles) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C___Rain_Particles");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Rain_Particles, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C___Rain_Particles::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.📘 Snow Particles
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C___Snow_Particles final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C___Snow_Particles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C___Snow_Particles");
static_assert(sizeof(Ultra_Dynamic_Weather_C___Snow_Particles) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C___Snow_Particles");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Snow_Particles, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C___Snow_Particles::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.📘 Weather Documentation
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C___Weather_Documentation final
{
public:
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUDS_Utility_Opener_Interface_C> K2Node_DynamicCast_AsUDS_Utility_Opener_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C___Weather_Documentation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C___Weather_Documentation");
static_assert(sizeof(Ultra_Dynamic_Weather_C___Weather_Documentation) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C___Weather_Documentation");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Weather_Documentation, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C___Weather_Documentation::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Weather_Documentation, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C___Weather_Documentation::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Weather_Documentation, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C___Weather_Documentation::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Weather_Documentation, K2Node_DynamicCast_AsUDS_Utility_Opener_Interface) == 0x000018, "Member 'Ultra_Dynamic_Weather_C___Weather_Documentation::K2Node_DynamicCast_AsUDS_Utility_Opener_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Weather_Documentation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Ultra_Dynamic_Weather_C___Weather_Documentation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.📘 Weather Particles
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C___Weather_Particles final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C___Weather_Particles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C___Weather_Particles");
static_assert(sizeof(Ultra_Dynamic_Weather_C___Weather_Particles) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C___Weather_Particles");
static_assert(offsetof(Ultra_Dynamic_Weather_C___Weather_Particles, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Weather_C___Weather_Particles::K2Node_MakeArray_Array' has a wrong offset!");

}

