#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlickeringLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterLight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FlickeringLight.BP_FlickeringLight_C
// 0x0050 (0x02F0 - 0x02A0)
class ABP_FlickeringLight_C final : public ABP_MasterLight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube1;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LightHum_Cue;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pole;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightFlicker_Flicker_16C525594E394E9E6929C6BA39D659B1; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightFlicker__Direction_16C525594E394E9E6929C6BA39D659B1; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightFlicker;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        IntensityMultiplier;                               // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void LightFlicker__UpdateFunc();
	void LightFlicker__FinishedFunc();
	void ExecuteUbergraph_BP_FlickeringLight(int32 EntryPoint);
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FlickeringLight_C">();
	}
	static class ABP_FlickeringLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FlickeringLight_C>();
	}
};
static_assert(alignof(ABP_FlickeringLight_C) == 0x000008, "Wrong alignment on ABP_FlickeringLight_C");
static_assert(sizeof(ABP_FlickeringLight_C) == 0x0002F0, "Wrong size on ABP_FlickeringLight_C");
static_assert(offsetof(ABP_FlickeringLight_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_FlickeringLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, Cube1) == 0x0002A8, "Member 'ABP_FlickeringLight_C::Cube1' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, Cube) == 0x0002B0, "Member 'ABP_FlickeringLight_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, PointLight) == 0x0002B8, "Member 'ABP_FlickeringLight_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, LightHum_Cue) == 0x0002C0, "Member 'ABP_FlickeringLight_C::LightHum_Cue' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, AIOSubject) == 0x0002C8, "Member 'ABP_FlickeringLight_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, Pole) == 0x0002D0, "Member 'ABP_FlickeringLight_C::Pole' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, LightFlicker_Flicker_16C525594E394E9E6929C6BA39D659B1) == 0x0002D8, "Member 'ABP_FlickeringLight_C::LightFlicker_Flicker_16C525594E394E9E6929C6BA39D659B1' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, LightFlicker__Direction_16C525594E394E9E6929C6BA39D659B1) == 0x0002DC, "Member 'ABP_FlickeringLight_C::LightFlicker__Direction_16C525594E394E9E6929C6BA39D659B1' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, LightFlicker) == 0x0002E0, "Member 'ABP_FlickeringLight_C::LightFlicker' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLight_C, IntensityMultiplier) == 0x0002E8, "Member 'ABP_FlickeringLight_C::IntensityMultiplier' has a wrong offset!");

}

