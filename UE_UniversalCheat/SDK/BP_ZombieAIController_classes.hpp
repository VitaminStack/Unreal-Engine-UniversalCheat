#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZombieAIController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MainEnemyAIController_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ZombieAIController.BP_ZombieAIController_C
// 0x0028 (0x03F0 - 0x03C8)
class ABP_ZombieAIController_C : public ABP_MainEnemyAIController_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIPerceptionComponent*                 AIPerception;                                      // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBehaviorTree*                          BehaviourTree;                                     // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USD_AIComponent_C*                      AIComp;                                            // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PossessionComplete;                                // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSeeActor;                                       // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_ZombieAIController_AIPerception_K2Node_ComponentBoundEvent_4_ActorPerceptionUpdatedDelegate__DelegateSignature(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void ExecuteUbergraph_BP_ZombieAIController(int32 EntryPoint);
	void GetCurrentlyPerceived(class AActor* Target, bool* CanSee);
	void GetZombiesInRadius();
	void InCombat_(bool* InCombat);
	void PerceptionUpdate(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void PerceptionUpdateCheck(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void ReceivePossess(class APawn* PossessedPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ZombieAIController_C">();
	}
	static class ABP_ZombieAIController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ZombieAIController_C>();
	}
};
static_assert(alignof(ABP_ZombieAIController_C) == 0x000008, "Wrong alignment on ABP_ZombieAIController_C");
static_assert(sizeof(ABP_ZombieAIController_C) == 0x0003F0, "Wrong size on ABP_ZombieAIController_C");
static_assert(offsetof(ABP_ZombieAIController_C, UberGraphFrame) == 0x0003C8, "Member 'ABP_ZombieAIController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ZombieAIController_C, AIPerception) == 0x0003D0, "Member 'ABP_ZombieAIController_C::AIPerception' has a wrong offset!");
static_assert(offsetof(ABP_ZombieAIController_C, BehaviourTree) == 0x0003D8, "Member 'ABP_ZombieAIController_C::BehaviourTree' has a wrong offset!");
static_assert(offsetof(ABP_ZombieAIController_C, AIComp) == 0x0003E0, "Member 'ABP_ZombieAIController_C::AIComp' has a wrong offset!");
static_assert(offsetof(ABP_ZombieAIController_C, PossessionComplete) == 0x0003E8, "Member 'ABP_ZombieAIController_C::PossessionComplete' has a wrong offset!");
static_assert(offsetof(ABP_ZombieAIController_C, CanSeeActor) == 0x0003E9, "Member 'ABP_ZombieAIController_C::CanSeeActor' has a wrong offset!");

}

