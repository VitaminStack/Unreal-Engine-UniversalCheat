#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractWidget

#include "Basic.hpp"

#include "BP_InteractWidget_classes.hpp"
#include "BP_InteractWidget_parameters.hpp"


namespace SDK
{

// Function BP_InteractWidget.BP_InteractWidget_C.ClearOptions
// (BlueprintCallable, BlueprintEvent)

void UBP_InteractWidget_C::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "ClearOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractWidget.BP_InteractWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_InteractWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractWidget.BP_InteractWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_InteractWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractWidget.BP_InteractWidget_C.ExecuteUbergraph_BP_InteractWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractWidget_C::ExecuteUbergraph_BP_InteractWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "ExecuteUbergraph_BP_InteractWidget");

	Params::BP_InteractWidget_C_ExecuteUbergraph_BP_InteractWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractWidget.BP_InteractWidget_C.SetOption
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_InteractWidget_C::SetOption(const struct FGameplayTag& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "SetOption");

	Params::BP_InteractWidget_C_SetOption Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractWidget.BP_InteractWidget_C.SetupWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGameplayTag, class FText>  Options_0                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<class FName, class FText>          Stats_0                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_InteractWidget_C::SetupWidget(const TMap<struct FGameplayTag, class FText>& Options_0, const TMap<class FName, class FText>& Stats_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "SetupWidget");

	Params::BP_InteractWidget_C_SetupWidget Parms{};

	Parms.Options_0 = std::move(Options_0);
	Parms.Stats_0 = std::move(Stats_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractWidget.BP_InteractWidget_C.UpdateOptionText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FText                             NewText                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_InteractWidget_C::UpdateOptionText(const struct FGameplayTag& Option, const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractWidget_C", "UpdateOptionText");

	Params::BP_InteractWidget_C_UpdateOptionText Parms{};

	Parms.Option = std::move(Option);
	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}

}

