#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KeypadDoor

#include "Basic.hpp"

#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_KeypadDoor.BP_KeypadDoor_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_KeypadDoor_C_SetPickupCount");
static_assert(sizeof(BP_KeypadDoor_C_SetPickupCount) == 0x000008, "Wrong size on BP_KeypadDoor_C_SetPickupCount");
static_assert(offsetof(BP_KeypadDoor_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_KeypadDoor_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_SetPickupCount, Result) == 0x000004, "Member 'BP_KeypadDoor_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_KeypadDoor_C_SetInteractOption");
static_assert(sizeof(BP_KeypadDoor_C_SetInteractOption) == 0x000008, "Wrong size on BP_KeypadDoor_C_SetInteractOption");
static_assert(offsetof(BP_KeypadDoor_C_SetInteractOption, Option) == 0x000000, "Member 'BP_KeypadDoor_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_OnStopExecuteInteract");
static_assert(sizeof(BP_KeypadDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_KeypadDoor_C_OnStopExecuteInteract");
static_assert(offsetof(BP_KeypadDoor_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_KeypadDoor_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_KeypadDoor_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_OnServerExecuteInteract");
static_assert(sizeof(BP_KeypadDoor_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_KeypadDoor_C_OnServerExecuteInteract");
static_assert(offsetof(BP_KeypadDoor_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_KeypadDoor_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_KeypadDoor_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_KeypadDoor_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_KeypadDoor_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_OnRequestServerInteract");
static_assert(sizeof(BP_KeypadDoor_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_KeypadDoor_C_OnRequestServerInteract");
static_assert(offsetof(BP_KeypadDoor_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_KeypadDoor_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_KeypadDoor_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_KeypadDoor_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_KeypadDoor_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_KeypadDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_KeypadDoor_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_KeypadDoor_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_KeypadDoor_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_KeypadDoor_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_OnExecuteInteract");
static_assert(sizeof(BP_KeypadDoor_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_KeypadDoor_C_OnExecuteInteract");
static_assert(offsetof(BP_KeypadDoor_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_KeypadDoor_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_KeypadDoor_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_KeypadDoor_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_KeypadDoor_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_OnBeginInteract");
static_assert(sizeof(BP_KeypadDoor_C_OnBeginInteract) == 0x000058, "Wrong size on BP_KeypadDoor_C_OnBeginInteract");
static_assert(offsetof(BP_KeypadDoor_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_KeypadDoor_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_KeypadDoor_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.MC_PlaySound
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_MC_PlaySound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_MC_PlaySound) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_MC_PlaySound");
static_assert(sizeof(BP_KeypadDoor_C_MC_PlaySound) == 0x000008, "Wrong size on BP_KeypadDoor_C_MC_PlaySound");
static_assert(offsetof(BP_KeypadDoor_C_MC_PlaySound, Sound) == 0x000000, "Member 'BP_KeypadDoor_C_MC_PlaySound::Sound' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.MC_OpenDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_MC_OpenDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_MC_OpenDoor) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_MC_OpenDoor");
static_assert(sizeof(BP_KeypadDoor_C_MC_OpenDoor) == 0x000008, "Wrong size on BP_KeypadDoor_C_MC_OpenDoor");
static_assert(offsetof(BP_KeypadDoor_C_MC_OpenDoor, Actor) == 0x000000, "Member 'BP_KeypadDoor_C_MC_OpenDoor::Actor' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_KeypadDoor_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_KeypadDoor_C_JigSetCanInteract");
static_assert(sizeof(BP_KeypadDoor_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_KeypadDoor_C_JigSetCanInteract");
static_assert(offsetof(BP_KeypadDoor_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_KeypadDoor_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_KeypadDoor_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_KeypadDoor_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_KeypadDoor_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_KeypadDoor_C_JigCanInteract");
static_assert(sizeof(BP_KeypadDoor_C_JigCanInteract) == 0x000001, "Wrong size on BP_KeypadDoor_C_JigCanInteract");
static_assert(offsetof(BP_KeypadDoor_C_JigCanInteract, Result) == 0x000000, "Member 'BP_KeypadDoor_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_GetMainSceneComp");
static_assert(sizeof(BP_KeypadDoor_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_KeypadDoor_C_GetMainSceneComp");
static_assert(offsetof(BP_KeypadDoor_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_KeypadDoor_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_KeypadDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_KeypadDoor_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_KeypadDoor_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_KeypadDoor_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_KeypadDoor_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_KeypadDoor_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_GetItemInfo");
static_assert(sizeof(BP_KeypadDoor_C_GetItemInfo) == 0x000078, "Wrong size on BP_KeypadDoor_C_GetItemInfo");
static_assert(offsetof(BP_KeypadDoor_C_GetItemInfo, Info) == 0x000000, "Member 'BP_KeypadDoor_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetItemInfo, Count) == 0x000008, "Member 'BP_KeypadDoor_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_KeypadDoor_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_KeypadDoor_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.GetInteractOptions
// 0x00F0 (0x00F0 - 0x0000)
struct BP_KeypadDoor_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x00A0(0x0050)()
};
static_assert(alignof(BP_KeypadDoor_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_GetInteractOptions");
static_assert(sizeof(BP_KeypadDoor_C_GetInteractOptions) == 0x0000F0, "Wrong size on BP_KeypadDoor_C_GetInteractOptions");
static_assert(offsetof(BP_KeypadDoor_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_KeypadDoor_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetInteractOptions, Temp_bool_Variable) == 0x000050, "Member 'BP_KeypadDoor_C_GetInteractOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetInteractOptions, Temp_text_Variable) == 0x000058, "Member 'BP_KeypadDoor_C_GetInteractOptions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetInteractOptions, Temp_text_Variable_1) == 0x000070, "Member 'BP_KeypadDoor_C_GetInteractOptions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetInteractOptions, K2Node_Select_Default) == 0x000088, "Member 'BP_KeypadDoor_C_GetInteractOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x0000A0, "Member 'BP_KeypadDoor_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.ExecuteUbergraph_BP_KeypadDoor
// 0x0700 (0x0700 - 0x0000)
struct BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0078(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x00C8(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_2;                              // 0x0118(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UKeypadUI_C*                            CallFunc_Create_ReturnValue;                       // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor_2;                        // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x01E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ByActor;                              // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x01F8(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBehindObject__BehindObject_;           // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233[0x5];                                      // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0240(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0268(0x0050)(ConstParm)
	bool                                          CallFunc_OnRequestServerInteract_Result;           // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_3;                             // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAchievement_ReturnValue;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StoreStats_ReturnValue;                   // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0310(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0418(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0500(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x05F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0600(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  CallFunc_GetLevellingComponent_LevellingComponent; // 0x0618(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_XPOutput;                           // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0648(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0698(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x06A8(0x0018)()
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x3];                                      // 0x06C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor");
static_assert(sizeof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor) == 0x000700, "Wrong size on BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, EntryPoint) == 0x000000, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_MakeRotator_ReturnValue_1) == 0x000030, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_Option_2) == 0x000048, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Lerp_ReturnValue_2) == 0x000050, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_MakeRotator_ReturnValue_2) == 0x000058, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000070, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_MakeMap_Map) == 0x000078, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_MakeMap_Map_1) == 0x0000C8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_MakeMap_Map_2) == 0x000118, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetHUD_HUD) == 0x000168, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetHUD_HUD_1) == 0x000170, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_ShowInteractWidget_Widget) == 0x000178, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000180, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000198, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_CustomEvent_Sound) == 0x0001B0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetPlayerController_ReturnValue) == 0x0001B8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001C0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_GetPawn_ReturnValue) == 0x0001C8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Create_ReturnValue) == 0x0001D0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_CustomEvent_Actor_2) == 0x0001D8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_CustomEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_HasAuthority_ReturnValue) == 0x0001E0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_Option_1) == 0x0001E4, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_ByActor) == 0x0001F0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_Payload) == 0x0001F8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetBoolCVar_ReturnValue) == 0x000228, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetBehindObject__BehindObject_) == 0x000229, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetBehindObject__BehindObject_' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetDistanceTo_ReturnValue) == 0x00022C, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_IsValid_ReturnValue) == 0x000230, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000231, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_BooleanAND_ReturnValue) == 0x000232, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_InteractingActor_3) == 0x000238, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_Option) == 0x000240, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000248, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_InteractingActor_2) == 0x000260, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_Options) == 0x000268, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_OnRequestServerInteract_Result) == 0x0002B8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_OnRequestServerInteract_Result' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_ShowInteractWidget_Widget_1) == 0x0002C0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetHUD_HUD_2) == 0x0002C8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetHUD_HUD_3) == 0x0002D0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002D8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_SetAchievement_ReturnValue) == 0x0002F0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_SetAchievement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_StoreStats_ReturnValue) == 0x0002F1, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_StoreStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0002F8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000310, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_CustomEvent_Actor_1) == 0x0003F8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000400, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000418, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000500, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_CustomEvent_Actor) == 0x0005E8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_CreateDelegate_OutputDelegate) == 0x0005F0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_CreateDelegate_OutputDelegate_1) == 0x000600, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_InteractingActor_1) == 0x000610, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_GetLevellingComponent_LevellingComponent) == 0x000618, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_GetLevellingComponent_LevellingComponent' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_Event_InteractingActor) == 0x000620, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000628, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_AddXP_XPOutput) == 0x000630, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_AddXP_XPOutput' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_FTrunc_ReturnValue) == 0x000638, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000640, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_MakeStruct_FormatArgumentData) == 0x000648, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_MakeArray_Array) == 0x000698, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Format_ReturnValue) == 0x0006A8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x0006C0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_ComponentBoundEvent_LayerIndex) == 0x0006C4, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, K2Node_ComponentBoundEvent_bIsSeen) == 0x0006C8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0006D0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0006D8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0006E0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0006E4, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0006E8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x0006F0, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0006F8, "Member 'BP_KeypadDoor_C_ExecuteUbergraph_BP_KeypadDoor::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.Event_OpenDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_Event_OpenDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_Event_OpenDoor) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_Event_OpenDoor");
static_assert(sizeof(BP_KeypadDoor_C_Event_OpenDoor) == 0x000008, "Wrong size on BP_KeypadDoor_C_Event_OpenDoor");
static_assert(offsetof(BP_KeypadDoor_C_Event_OpenDoor, Actor) == 0x000000, "Member 'BP_KeypadDoor_C_Event_OpenDoor::Actor' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.Event_CloseDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_KeypadDoor_C_Event_CloseDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_Event_CloseDoor) == 0x000008, "Wrong alignment on BP_KeypadDoor_C_Event_CloseDoor");
static_assert(sizeof(BP_KeypadDoor_C_Event_CloseDoor) == 0x000008, "Wrong size on BP_KeypadDoor_C_Event_CloseDoor");
static_assert(offsetof(BP_KeypadDoor_C_Event_CloseDoor, Actor) == 0x000000, "Member 'BP_KeypadDoor_C_Event_CloseDoor::Actor' has a wrong offset!");

// Function BP_KeypadDoor.BP_KeypadDoor_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_KeypadDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

