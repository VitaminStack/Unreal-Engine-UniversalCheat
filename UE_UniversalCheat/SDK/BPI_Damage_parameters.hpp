#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Damage

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_Damage.BPI_Damage_C.Damage_Object
// 0x0018 (0x0018 - 0x0000)
struct BPI_Damage_C_Damage_Object final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Damage_Causer;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            Event_Instigator;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Damage_C_Damage_Object) == 0x000008, "Wrong alignment on BPI_Damage_C_Damage_Object");
static_assert(sizeof(BPI_Damage_C_Damage_Object) == 0x000018, "Wrong size on BPI_Damage_C_Damage_Object");
static_assert(offsetof(BPI_Damage_C_Damage_Object, Damage) == 0x000000, "Member 'BPI_Damage_C_Damage_Object::Damage' has a wrong offset!");
static_assert(offsetof(BPI_Damage_C_Damage_Object, Damage_Causer) == 0x000008, "Member 'BPI_Damage_C_Damage_Object::Damage_Causer' has a wrong offset!");
static_assert(offsetof(BPI_Damage_C_Damage_Object, Event_Instigator) == 0x000010, "Member 'BPI_Damage_C_Damage_Object::Event_Instigator' has a wrong offset!");

// Function BPI_Damage.BPI_Damage_C.Damage_Shoved
// 0x0010 (0x0010 - 0x0000)
struct BPI_Damage_C_Damage_Shoved final
{
public:
	bool                                          Anim;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Force;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Damage_C_Damage_Shoved) == 0x000008, "Wrong alignment on BPI_Damage_C_Damage_Shoved");
static_assert(sizeof(BPI_Damage_C_Damage_Shoved) == 0x000010, "Wrong size on BPI_Damage_C_Damage_Shoved");
static_assert(offsetof(BPI_Damage_C_Damage_Shoved, Anim) == 0x000000, "Member 'BPI_Damage_C_Damage_Shoved::Anim' has a wrong offset!");
static_assert(offsetof(BPI_Damage_C_Damage_Shoved, Force) == 0x000008, "Member 'BPI_Damage_C_Damage_Shoved::Force' has a wrong offset!");

// Function BPI_Damage.BPI_Damage_C.IsObjectDamageable?
// 0x0001 (0x0001 - 0x0000)
struct BPI_Damage_C_IsObjectDamageable_ final
{
public:
	bool                                          Damageable_;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Damage_C_IsObjectDamageable_) == 0x000001, "Wrong alignment on BPI_Damage_C_IsObjectDamageable_");
static_assert(sizeof(BPI_Damage_C_IsObjectDamageable_) == 0x000001, "Wrong size on BPI_Damage_C_IsObjectDamageable_");
static_assert(offsetof(BPI_Damage_C_IsObjectDamageable_, Damageable_) == 0x000000, "Member 'BPI_Damage_C_IsObjectDamageable_::Damageable_' has a wrong offset!");

}

