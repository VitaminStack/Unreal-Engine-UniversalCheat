#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NarrativeCommonUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "NarrativeCommonUI_structs.hpp"


namespace SDK::Params
{

// Function NarrativeCommonUI.NarrativeActivatableWidget.RegisterBinding
// 0x0048 (0x0048 - 0x0000)
struct NarrativeActivatableWidget_RegisterBinding final
{
public:
	struct FDataTableRowHandle                    InputAction;                                       // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(class FName ActionName)>       Callback;                                          // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInputActionBindingHandle              BindingHandle;                                     // 0x0020(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OverrideDisplayName;                               // 0x0028(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          bShouldDisplayInActionBar;                         // 0x0040(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NarrativeActivatableWidget_RegisterBinding) == 0x000008, "Wrong alignment on NarrativeActivatableWidget_RegisterBinding");
static_assert(sizeof(NarrativeActivatableWidget_RegisterBinding) == 0x000048, "Wrong size on NarrativeActivatableWidget_RegisterBinding");
static_assert(offsetof(NarrativeActivatableWidget_RegisterBinding, InputAction) == 0x000000, "Member 'NarrativeActivatableWidget_RegisterBinding::InputAction' has a wrong offset!");
static_assert(offsetof(NarrativeActivatableWidget_RegisterBinding, Callback) == 0x000010, "Member 'NarrativeActivatableWidget_RegisterBinding::Callback' has a wrong offset!");
static_assert(offsetof(NarrativeActivatableWidget_RegisterBinding, BindingHandle) == 0x000020, "Member 'NarrativeActivatableWidget_RegisterBinding::BindingHandle' has a wrong offset!");
static_assert(offsetof(NarrativeActivatableWidget_RegisterBinding, OverrideDisplayName) == 0x000028, "Member 'NarrativeActivatableWidget_RegisterBinding::OverrideDisplayName' has a wrong offset!");
static_assert(offsetof(NarrativeActivatableWidget_RegisterBinding, bShouldDisplayInActionBar) == 0x000040, "Member 'NarrativeActivatableWidget_RegisterBinding::bShouldDisplayInActionBar' has a wrong offset!");

// Function NarrativeCommonUI.NarrativeActivatableWidget.SetBindingDisplayName
// 0x0020 (0x0020 - 0x0000)
struct NarrativeActivatableWidget_SetBindingDisplayName final
{
public:
	struct FInputActionBindingHandle              BindingHandle;                                     // 0x0000(0x0004)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NewDisplayName;                                    // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NarrativeActivatableWidget_SetBindingDisplayName) == 0x000008, "Wrong alignment on NarrativeActivatableWidget_SetBindingDisplayName");
static_assert(sizeof(NarrativeActivatableWidget_SetBindingDisplayName) == 0x000020, "Wrong size on NarrativeActivatableWidget_SetBindingDisplayName");
static_assert(offsetof(NarrativeActivatableWidget_SetBindingDisplayName, BindingHandle) == 0x000000, "Member 'NarrativeActivatableWidget_SetBindingDisplayName::BindingHandle' has a wrong offset!");
static_assert(offsetof(NarrativeActivatableWidget_SetBindingDisplayName, NewDisplayName) == 0x000008, "Member 'NarrativeActivatableWidget_SetBindingDisplayName::NewDisplayName' has a wrong offset!");

// Function NarrativeCommonUI.NarrativeActivatableWidget.UnregisterBinding
// 0x0004 (0x0004 - 0x0000)
struct NarrativeActivatableWidget_UnregisterBinding final
{
public:
	struct FInputActionBindingHandle              BindingHandle;                                     // 0x0000(0x0004)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NarrativeActivatableWidget_UnregisterBinding) == 0x000004, "Wrong alignment on NarrativeActivatableWidget_UnregisterBinding");
static_assert(sizeof(NarrativeActivatableWidget_UnregisterBinding) == 0x000004, "Wrong size on NarrativeActivatableWidget_UnregisterBinding");
static_assert(offsetof(NarrativeActivatableWidget_UnregisterBinding, BindingHandle) == 0x000000, "Member 'NarrativeActivatableWidget_UnregisterBinding::BindingHandle' has a wrong offset!");

// Function NarrativeCommonUI.NarrativeCommonHUD.ShowNotification
// 0x0020 (0x0020 - 0x0000)
struct NarrativeCommonHUD_ShowNotification final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NarrativeCommonHUD_ShowNotification) == 0x000008, "Wrong alignment on NarrativeCommonHUD_ShowNotification");
static_assert(sizeof(NarrativeCommonHUD_ShowNotification) == 0x000020, "Wrong size on NarrativeCommonHUD_ShowNotification");
static_assert(offsetof(NarrativeCommonHUD_ShowNotification, NotificationText) == 0x000000, "Member 'NarrativeCommonHUD_ShowNotification::NotificationText' has a wrong offset!");
static_assert(offsetof(NarrativeCommonHUD_ShowNotification, Duration) == 0x000018, "Member 'NarrativeCommonHUD_ShowNotification::Duration' has a wrong offset!");

// Function NarrativeCommonUI.NarrativeCommonUIFunctionLibrary.PushHUDNotification
// 0x0028 (0x0028 - 0x0000)
struct NarrativeCommonUIFunctionLibrary_PushHUDNotification final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Message;                                           // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NarrativeCommonUIFunctionLibrary_PushHUDNotification) == 0x000008, "Wrong alignment on NarrativeCommonUIFunctionLibrary_PushHUDNotification");
static_assert(sizeof(NarrativeCommonUIFunctionLibrary_PushHUDNotification) == 0x000028, "Wrong size on NarrativeCommonUIFunctionLibrary_PushHUDNotification");
static_assert(offsetof(NarrativeCommonUIFunctionLibrary_PushHUDNotification, WorldContextObject) == 0x000000, "Member 'NarrativeCommonUIFunctionLibrary_PushHUDNotification::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NarrativeCommonUIFunctionLibrary_PushHUDNotification, Message) == 0x000008, "Member 'NarrativeCommonUIFunctionLibrary_PushHUDNotification::Message' has a wrong offset!");
static_assert(offsetof(NarrativeCommonUIFunctionLibrary_PushHUDNotification, Duration) == 0x000020, "Member 'NarrativeCommonUIFunctionLibrary_PushHUDNotification::Duration' has a wrong offset!");

// Function NarrativeCommonUI.NarrativeCommonUISubsystem.ShowNotification
// 0x0020 (0x0020 - 0x0000)
struct NarrativeCommonUISubsystem_ShowNotification final
{
public:
	class FText                                   NotificationText;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Duration;                                          // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NarrativeCommonUISubsystem_ShowNotification) == 0x000008, "Wrong alignment on NarrativeCommonUISubsystem_ShowNotification");
static_assert(sizeof(NarrativeCommonUISubsystem_ShowNotification) == 0x000020, "Wrong size on NarrativeCommonUISubsystem_ShowNotification");
static_assert(offsetof(NarrativeCommonUISubsystem_ShowNotification, NotificationText) == 0x000000, "Member 'NarrativeCommonUISubsystem_ShowNotification::NotificationText' has a wrong offset!");
static_assert(offsetof(NarrativeCommonUISubsystem_ShowNotification, Duration) == 0x000018, "Member 'NarrativeCommonUISubsystem_ShowNotification::Duration' has a wrong offset!");

}

