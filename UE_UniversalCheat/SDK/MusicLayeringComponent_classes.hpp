#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicLayeringComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MusicLayeringComponent.MusicLayeringComponent_C
// 0x0040 (0x00E0 - 0x00A0)
class UMusicLayeringComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class USoundBase*>                     LayerList;                                         // 0x00A8(0x0010)(Edit, BlueprintVisible)
	float                                         Volume;                                            // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAudioComponent*>                LayerReferences;                                   // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         NextTrackToPlay;                                   // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CurrentTrack;                                      // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MusicLayeringComponent(int32 EntryPoint);
	void Initialise();
	void NextTrack();
	void StopTrack();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MusicLayeringComponent_C">();
	}
	static class UMusicLayeringComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicLayeringComponent_C>();
	}
};
static_assert(alignof(UMusicLayeringComponent_C) == 0x000008, "Wrong alignment on UMusicLayeringComponent_C");
static_assert(sizeof(UMusicLayeringComponent_C) == 0x0000E0, "Wrong size on UMusicLayeringComponent_C");
static_assert(offsetof(UMusicLayeringComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UMusicLayeringComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMusicLayeringComponent_C, LayerList) == 0x0000A8, "Member 'UMusicLayeringComponent_C::LayerList' has a wrong offset!");
static_assert(offsetof(UMusicLayeringComponent_C, Volume) == 0x0000B8, "Member 'UMusicLayeringComponent_C::Volume' has a wrong offset!");
static_assert(offsetof(UMusicLayeringComponent_C, LayerReferences) == 0x0000C0, "Member 'UMusicLayeringComponent_C::LayerReferences' has a wrong offset!");
static_assert(offsetof(UMusicLayeringComponent_C, NextTrackToPlay) == 0x0000D0, "Member 'UMusicLayeringComponent_C::NextTrackToPlay' has a wrong offset!");
static_assert(offsetof(UMusicLayeringComponent_C, CurrentTrack) == 0x0000D8, "Member 'UMusicLayeringComponent_C::CurrentTrack' has a wrong offset!");

}

