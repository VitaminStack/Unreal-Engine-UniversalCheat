#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomPrimitiveComp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C
// 0x0040 (0x02D8 - 0x0298)
class ABP_CustomPrimitiveComp_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_JigPickupComponent_C*               BP_JigPickupComponent;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachmentComp;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x02B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Use_Leader_Pose_;                                  // 0x02C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  UID;                                               // 0x02C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CustomPrimitiveComp(int32 EntryPoint);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetMeshFromOwner(class USkeletalMeshComponent** Mesh);
	void Init(class UJigsawItem_DataAsset_C* DA_0, class USkeletalMeshComponent* OwnerMesh, bool UseLeaderPose_);
	void JigCanInteract(bool* Result);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void OnEndInteract();
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteractEnded();
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void PickupBuildFromGround();
	void ReceiveBeginPlay();
	void SetInteractOption(const struct FGameplayTag& Option);
	void SetPickupCount(int32 NewCount, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CustomPrimitiveComp_C">();
	}
	static class ABP_CustomPrimitiveComp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CustomPrimitiveComp_C>();
	}
};
static_assert(alignof(ABP_CustomPrimitiveComp_C) == 0x000008, "Wrong alignment on ABP_CustomPrimitiveComp_C");
static_assert(sizeof(ABP_CustomPrimitiveComp_C) == 0x0002D8, "Wrong size on ABP_CustomPrimitiveComp_C");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, UberGraphFrame) == 0x000298, "Member 'ABP_CustomPrimitiveComp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, BP_JigPickupComponent) == 0x0002A0, "Member 'ABP_CustomPrimitiveComp_C::BP_JigPickupComponent' has a wrong offset!");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_CustomPrimitiveComp_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, AttachmentComp) == 0x0002B0, "Member 'ABP_CustomPrimitiveComp_C::AttachmentComp' has a wrong offset!");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, DA) == 0x0002B8, "Member 'ABP_CustomPrimitiveComp_C::DA' has a wrong offset!");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, Use_Leader_Pose_) == 0x0002C0, "Member 'ABP_CustomPrimitiveComp_C::Use_Leader_Pose_' has a wrong offset!");
static_assert(offsetof(ABP_CustomPrimitiveComp_C, UID) == 0x0002C4, "Member 'ABP_CustomPrimitiveComp_C::UID' has a wrong offset!");

}

