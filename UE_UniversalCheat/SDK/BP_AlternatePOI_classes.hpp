#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AlternatePOI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AlternatePOI.BP_AlternatePOI_C
// 0x0020 (0x02C0 - 0x02A0)
class ABP_AlternatePOI_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 Prefab;                                            // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AlternatePrefab;                                   // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AlternatePrefab_;                                  // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SpawnPrefab();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_AlternatePOI(int32 EntryPoint);
	void ComponentsToSave(TArray<class UActorComponent*>* Components);
	void ActorSaved();
	void ActorPreSave();
	void ActorPreLoad();
	void ActorLoaded();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AlternatePOI_C">();
	}
	static class ABP_AlternatePOI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AlternatePOI_C>();
	}
};
static_assert(alignof(ABP_AlternatePOI_C) == 0x000008, "Wrong alignment on ABP_AlternatePOI_C");
static_assert(sizeof(ABP_AlternatePOI_C) == 0x0002C0, "Wrong size on ABP_AlternatePOI_C");
static_assert(offsetof(ABP_AlternatePOI_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_AlternatePOI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AlternatePOI_C, Prefab) == 0x0002A8, "Member 'ABP_AlternatePOI_C::Prefab' has a wrong offset!");
static_assert(offsetof(ABP_AlternatePOI_C, AlternatePrefab) == 0x0002B0, "Member 'ABP_AlternatePOI_C::AlternatePrefab' has a wrong offset!");
static_assert(offsetof(ABP_AlternatePOI_C, AlternatePrefab_) == 0x0002B8, "Member 'ABP_AlternatePOI_C::AlternatePrefab_' has a wrong offset!");

}

