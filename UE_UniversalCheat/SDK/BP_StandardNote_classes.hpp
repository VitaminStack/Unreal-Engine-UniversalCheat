#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StandardNote

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StandardNote.BP_StandardNote_C
// 0x0040 (0x02E0 - 0x02A0)
class ABP_StandardNote_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULetterUI_C*                            LetterUI;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x02C8(0x0018)(Edit, BlueprintVisible)

public:
	void SetPickupCount(int32 NewCount, bool* Result);
	void SetInteractOption(const struct FGameplayTag& Option);
	void PickupBuildFromGround();
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnExecuteInteractEnded();
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnEndInteract();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void JigCanInteract(bool* Result);
	void GetPickupName(class FText* Result);
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void ExecuteUbergraph_BP_StandardNote(int32 EntryPoint);
	void BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StandardNote_C">();
	}
	static class ABP_StandardNote_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StandardNote_C>();
	}
};
static_assert(alignof(ABP_StandardNote_C) == 0x000008, "Wrong alignment on ABP_StandardNote_C");
static_assert(sizeof(ABP_StandardNote_C) == 0x0002E0, "Wrong size on ABP_StandardNote_C");
static_assert(offsetof(ABP_StandardNote_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_StandardNote_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_StandardNote_C, AIOSubject) == 0x0002A8, "Member 'ABP_StandardNote_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_StandardNote_C, Box) == 0x0002B0, "Member 'ABP_StandardNote_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_StandardNote_C, StaticMesh) == 0x0002B8, "Member 'ABP_StandardNote_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_StandardNote_C, LetterUI) == 0x0002C0, "Member 'ABP_StandardNote_C::LetterUI' has a wrong offset!");
static_assert(offsetof(ABP_StandardNote_C, Description) == 0x0002C8, "Member 'ABP_StandardNote_C::Description' has a wrong offset!");

}

