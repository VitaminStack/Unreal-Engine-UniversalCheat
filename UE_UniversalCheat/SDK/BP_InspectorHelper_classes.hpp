#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InspectorHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_InspectorHelper.BP_InspectorHelper_C
// 0x00A8 (0x0368 - 0x02C0)
class UBP_InspectorHelper_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_128;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_147;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       FOVTxt;                                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_150;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       LocX;                                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       LocY;                                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       LocZ;                                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MainVB;                                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       RotX;                                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       RotY;                                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       RotZ;                                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       ScaleX;                                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       ScaleY;                                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       ScaleZ;                                            // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_ItemInspector_C*                    InspectorBP;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ProcessTextInputs;                                 // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            JigItem;                                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            JigDebug;                                          // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__Button_128_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void ExecuteUbergraph_BP_InspectorHelper(int32 EntryPoint);
	void SetInitialValues(class ABP_ItemInspector_C* InspectorBP_0);
	void SetJigRef(class UJSI_Slot_C* JigItem_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateTransform();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InspectorHelper_C">();
	}
	static class UBP_InspectorHelper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_InspectorHelper_C>();
	}
};
static_assert(alignof(UBP_InspectorHelper_C) == 0x000008, "Wrong alignment on UBP_InspectorHelper_C");
static_assert(sizeof(UBP_InspectorHelper_C) == 0x000368, "Wrong size on UBP_InspectorHelper_C");
static_assert(offsetof(UBP_InspectorHelper_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_InspectorHelper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, Button_128) == 0x0002C8, "Member 'UBP_InspectorHelper_C::Button_128' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, CheckBox_147) == 0x0002D0, "Member 'UBP_InspectorHelper_C::CheckBox_147' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, FOVTxt) == 0x0002D8, "Member 'UBP_InspectorHelper_C::FOVTxt' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, HorizontalBox_0) == 0x0002E0, "Member 'UBP_InspectorHelper_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, HorizontalBox_150) == 0x0002E8, "Member 'UBP_InspectorHelper_C::HorizontalBox_150' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, JSIContainer) == 0x0002F0, "Member 'UBP_InspectorHelper_C::JSIContainer' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, LocX) == 0x0002F8, "Member 'UBP_InspectorHelper_C::LocX' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, LocY) == 0x000300, "Member 'UBP_InspectorHelper_C::LocY' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, LocZ) == 0x000308, "Member 'UBP_InspectorHelper_C::LocZ' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, MainVB) == 0x000310, "Member 'UBP_InspectorHelper_C::MainVB' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, RotX) == 0x000318, "Member 'UBP_InspectorHelper_C::RotX' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, RotY) == 0x000320, "Member 'UBP_InspectorHelper_C::RotY' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, RotZ) == 0x000328, "Member 'UBP_InspectorHelper_C::RotZ' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, ScaleX) == 0x000330, "Member 'UBP_InspectorHelper_C::ScaleX' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, ScaleY) == 0x000338, "Member 'UBP_InspectorHelper_C::ScaleY' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, ScaleZ) == 0x000340, "Member 'UBP_InspectorHelper_C::ScaleZ' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, InspectorBP) == 0x000348, "Member 'UBP_InspectorHelper_C::InspectorBP' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, ProcessTextInputs) == 0x000350, "Member 'UBP_InspectorHelper_C::ProcessTextInputs' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, JigItem) == 0x000358, "Member 'UBP_InspectorHelper_C::JigItem' has a wrong offset!");
static_assert(offsetof(UBP_InspectorHelper_C, JigDebug) == 0x000360, "Member 'UBP_InspectorHelper_C::JigDebug' has a wrong offset!");

}

