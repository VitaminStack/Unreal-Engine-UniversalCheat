#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockedDoor

#include "Basic.hpp"

#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LockedDoor.BP_LockedDoor_C.AdvancedLockCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_LockedDoor_C_AdvancedLockCheck final
{
public:
	bool                                          Check;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTechnologyUnlocked_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_AdvancedLockCheck) == 0x000008, "Wrong alignment on BP_LockedDoor_C_AdvancedLockCheck");
static_assert(sizeof(BP_LockedDoor_C_AdvancedLockCheck) == 0x000018, "Wrong size on BP_LockedDoor_C_AdvancedLockCheck");
static_assert(offsetof(BP_LockedDoor_C_AdvancedLockCheck, Check) == 0x000000, "Member 'BP_LockedDoor_C_AdvancedLockCheck::Check' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_AdvancedLockCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_LockedDoor_C_AdvancedLockCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_AdvancedLockCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_LockedDoor_C_AdvancedLockCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_AdvancedLockCheck, CallFunc_GetSkillTreeManager_TechTree) == 0x000008, "Member 'BP_LockedDoor_C_AdvancedLockCheck::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_AdvancedLockCheck, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_LockedDoor_C_AdvancedLockCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_AdvancedLockCheck, CallFunc_IsTechnologyUnlocked_ReturnValue) == 0x000011, "Member 'BP_LockedDoor_C_AdvancedLockCheck::CallFunc_IsTechnologyUnlocked_ReturnValue' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_LockedDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.ExecuteUbergraph_BP_LockedDoor
// 0x05A8 (0x05A8 - 0x0000)
struct BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0020(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ULockpickUI_C*                          CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills;           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x00E0(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x0130(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_2;                              // 0x0180(0x0050)(ConstParm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_3;                             // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0230(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ServerFuncUpdateDurabilityByUID_NewDur;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJigItemByDA_Result;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindJigItemByDA_Found;                    // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0268(0x0050)(ConstParm)
	double                                        CallFunc_GetDurability_Durability;                 // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBehindObject__BehindObject_;           // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULockPickingComponent_C*                CallFunc_GetLockPickingComponent_LevellingComponent; // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdvancedLockCheck_Check;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0308(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x03F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevellingComponent_C*                  CallFunc_GetLevellingComponent_LevellingComponent; // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_XPOutput;                           // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0510(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0560(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0570(0x0018)()
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor) == 0x000008, "Wrong alignment on BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor");
static_assert(sizeof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor) == 0x0005A8, "Wrong size on BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, EntryPoint) == 0x000000, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_InteractingActor_3) == 0x000008, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_Option_2) == 0x000010, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_ByActor) == 0x000018, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_Payload) == 0x000020, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_InteractingActor_2) == 0x000050, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_MakeRotator_ReturnValue_1) == 0x000080, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Create_ReturnValue) == 0x000098, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x0000A0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_DynamicCast_AsInt_Passive_Skills) == 0x0000B0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_DynamicCast_AsInt_Passive_Skills' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, Temp_bool_Has_Been_Initd_Variable) == 0x0000C1, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetHUD_HUD) == 0x0000C8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetFloatCVar_ReturnValue) == 0x0000D0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_MakeMap_Map) == 0x0000E0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_MakeMap_Map_1) == 0x000130, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_MakeMap_Map_2) == 0x000180, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0001D0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetHUD_HUD_1) == 0x0001F0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_Option_1) == 0x0001F8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetHUD_HUD_2) == 0x000208, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetHUD_HUD_3) == 0x000210, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_ShowInteractWidget_Widget) == 0x000218, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetBoolCVar_ReturnValue) == 0x000220, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_InteractingActor_1) == 0x000228, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_Option) == 0x000230, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000238, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetComponentByClass_ReturnValue) == 0x000240, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_ServerFuncUpdateDurabilityByUID_NewDur) == 0x000248, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_ServerFuncUpdateDurabilityByUID_NewDur' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_FindJigItemByDA_Result) == 0x000250, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_FindJigItemByDA_Result' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_FindJigItemByDA_Found) == 0x000258, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_FindJigItemByDA_Found' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_InteractingActor) == 0x000260, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_Event_Options) == 0x000268, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetDurability_Durability) == 0x0002B8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetDurability_MaxDurability) == 0x0002C0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_ShowInteractWidget_Widget_1) == 0x0002C8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002D0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetPlayerController_ReturnValue) == 0x0002D8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetBehindObject__BehindObject_) == 0x0002E0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetBehindObject__BehindObject_' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_K2_GetPawn_ReturnValue) == 0x0002E8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002F0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetLockPickingComponent_LevellingComponent) == 0x0002F8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetLockPickingComponent_LevellingComponent' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_AdvancedLockCheck_Check) == 0x000300, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_AdvancedLockCheck_Check' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000308, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0003F0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x0004D8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_ComponentBoundEvent_LayerIndex) == 0x0004DC, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_ComponentBoundEvent_bIsSeen) == 0x0004E0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, Temp_bool_IsClosed_Variable) == 0x0004E1, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_GetLevellingComponent_LevellingComponent) == 0x0004E8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_GetLevellingComponent_LevellingComponent' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0004F0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_AddXP_XPOutput) == 0x0004F8, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_AddXP_XPOutput' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_FTrunc_ReturnValue) == 0x000500, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000508, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_MakeStruct_FormatArgumentData) == 0x000510, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, K2Node_MakeArray_Array) == 0x000560, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Format_ReturnValue) == 0x000570, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000588, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000590, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000598, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x00059C, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0005A0, "Member 'BP_LockedDoor_C_ExecuteUbergraph_BP_LockedDoor::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.GetInteractOptions
// 0x0148 (0x0148 - 0x0000)
struct BP_LockedDoor_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0058(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_1;                              // 0x00A8(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_Select_Default;                             // 0x00F8(0x0050)()
};
static_assert(alignof(BP_LockedDoor_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_LockedDoor_C_GetInteractOptions");
static_assert(sizeof(BP_LockedDoor_C_GetInteractOptions) == 0x000148, "Wrong size on BP_LockedDoor_C_GetInteractOptions");
static_assert(offsetof(BP_LockedDoor_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_LockedDoor_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetInteractOptions, Temp_bool_Variable) == 0x000050, "Member 'BP_LockedDoor_C_GetInteractOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000058, "Member 'BP_LockedDoor_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetInteractOptions, K2Node_MakeMap_Map_1) == 0x0000A8, "Member 'BP_LockedDoor_C_GetInteractOptions::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetInteractOptions, K2Node_Select_Default) == 0x0000F8, "Member 'BP_LockedDoor_C_GetInteractOptions::K2Node_Select_Default' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_LockedDoor_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_LockedDoor_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_LockedDoor_C_GetItemInfo");
static_assert(sizeof(BP_LockedDoor_C_GetItemInfo) == 0x000078, "Wrong size on BP_LockedDoor_C_GetItemInfo");
static_assert(offsetof(BP_LockedDoor_C_GetItemInfo, Info) == 0x000000, "Member 'BP_LockedDoor_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetItemInfo, Count) == 0x000008, "Member 'BP_LockedDoor_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_LockedDoor_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_LockedDoor_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_LockedDoor_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_LockedDoor_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_LockedDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_LockedDoor_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_LockedDoor_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_LockedDoor_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_LockedDoor_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_LockedDoor_C_GetMainSceneComp");
static_assert(sizeof(BP_LockedDoor_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_LockedDoor_C_GetMainSceneComp");
static_assert(offsetof(BP_LockedDoor_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_LockedDoor_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_LockedDoor_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_LockedDoor_C_JigCanInteract");
static_assert(sizeof(BP_LockedDoor_C_JigCanInteract) == 0x000001, "Wrong size on BP_LockedDoor_C_JigCanInteract");
static_assert(offsetof(BP_LockedDoor_C_JigCanInteract, Result) == 0x000000, "Member 'BP_LockedDoor_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_LockedDoor_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_LockedDoor_C_JigSetCanInteract");
static_assert(sizeof(BP_LockedDoor_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_LockedDoor_C_JigSetCanInteract");
static_assert(offsetof(BP_LockedDoor_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_LockedDoor_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_LockedDoor_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_LockedDoor_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_LockedDoor_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_LockedDoor_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_LockedDoor_C_OnBeginInteract");
static_assert(sizeof(BP_LockedDoor_C_OnBeginInteract) == 0x000058, "Wrong size on BP_LockedDoor_C_OnBeginInteract");
static_assert(offsetof(BP_LockedDoor_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_LockedDoor_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_LockedDoor_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LockedDoor_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_LockedDoor_C_OnExecuteInteract");
static_assert(sizeof(BP_LockedDoor_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_LockedDoor_C_OnExecuteInteract");
static_assert(offsetof(BP_LockedDoor_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_LockedDoor_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_LockedDoor_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_LockedDoor_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_LockedDoor_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_LockedDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_LockedDoor_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_LockedDoor_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_LockedDoor_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_LockedDoor_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_LockedDoor_C_OnRequestServerInteract");
static_assert(sizeof(BP_LockedDoor_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_LockedDoor_C_OnRequestServerInteract");
static_assert(offsetof(BP_LockedDoor_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_LockedDoor_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_LockedDoor_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_LockedDoor_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_LockedDoor_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_LockedDoor_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_LockedDoor_C_OnServerExecuteInteract");
static_assert(sizeof(BP_LockedDoor_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_LockedDoor_C_OnServerExecuteInteract");
static_assert(offsetof(BP_LockedDoor_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_LockedDoor_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_LockedDoor_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_LockedDoor_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_LockedDoor_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_LockedDoor_C_OnStopExecuteInteract");
static_assert(sizeof(BP_LockedDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_LockedDoor_C_OnStopExecuteInteract");
static_assert(offsetof(BP_LockedDoor_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_LockedDoor_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_LockedDoor_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_LockedDoor_C_SetInteractOption");
static_assert(sizeof(BP_LockedDoor_C_SetInteractOption) == 0x000008, "Wrong size on BP_LockedDoor_C_SetInteractOption");
static_assert(offsetof(BP_LockedDoor_C_SetInteractOption, Option) == 0x000000, "Member 'BP_LockedDoor_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_LockedDoor_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_LockedDoor_C_SetPickupCount");
static_assert(sizeof(BP_LockedDoor_C_SetPickupCount) == 0x000008, "Wrong size on BP_LockedDoor_C_SetPickupCount");
static_assert(offsetof(BP_LockedDoor_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_LockedDoor_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_LockedDoor_C_SetPickupCount, Result) == 0x000004, "Member 'BP_LockedDoor_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_LockedDoor.BP_LockedDoor_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_LockedDoor_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LockedDoor_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_LockedDoor_C_UserConstructionScript");
static_assert(sizeof(BP_LockedDoor_C_UserConstructionScript) == 0x000001, "Wrong size on BP_LockedDoor_C_UserConstructionScript");
static_assert(offsetof(BP_LockedDoor_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'BP_LockedDoor_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

