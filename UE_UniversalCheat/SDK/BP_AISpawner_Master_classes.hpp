#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawner_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AIOptimizer_structs.hpp"
#include "Enum_SpawnType_structs.hpp"
#include "BP_MasterObject_classes.hpp"
#include "Enum_AIBehviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AISpawner_Master.BP_AISpawner_Master_C
// 0x0178 (0x0418 - 0x02A0)
class ABP_AISpawner_Master_C : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SpawnRadius_DebugSphere;                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SpawningBox;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAIOPendingSpawnGroup>          SpawnGroupsQueue;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FAIOPendingRespawnGroup>        RespawnGroupsQueue;                                // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FAIOSubjectHandle>              SpawnedActorsHandles;                              // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         SpawnedActors;                                     // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           TimerHandle_CheckSpawnRadius;                      // 0x0300(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimeHandle_UpdateRespawningGroups;                 // 0x0308(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnRadius;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Box_Extent_X;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Box_Extent_Y;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Box_Extent_Z;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         SpawnAmount;                                       // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          RandomisedSpawnCount;                              // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	Enum_SpawnType                                SpawnType;                                         // 0x0335(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     SpawnedActorClass;                                 // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash)
	double                                        InitialSpawnDelay;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawningInterval;                                  // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsSpawning;                                       // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalAliveActors;                                  // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSpawnedActors;                                // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAIOSelectSpawnPointsMethod                   SelectingSpawnPointsMethod;                        // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipNoSpawnAreaCheck_;                             // 0x035D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipMeshes_;                                       // 0x035E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_35F[0x1];                                      // 0x035F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         MeshesToSpawnOn;                                   // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	int32                                         SpawnRetries;                                      // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DontSpawnCloseToPlayerRange;                       // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAIORespawnMethod                             RespawnMethod;                                     // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayDebugInfo;                                  // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               ProjectionChannel;                                 // 0x037A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B[0x5];                                      // 0x037B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ProjectionRadius;                                  // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectionZOffset;                                 // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAIOSpawnPoint>                 SpawnPoints;                                       // 0x0390(0x0010)(Edit, BlueprintVisible, AdvancedDisplay)
	bool                                          IsSpawningStopped;                                 // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasSpawningInitialized;                            // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2[0x2];                                      // 0x03A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InvokersInsideRegion;                              // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawningCapacity;                                  // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorsSpawnedThisFrame;                            // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class AActor* SpawnedActor)> OnActorSpawned;                                    // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	Enum_AIBehviour                               Starting_Behaviour;                                // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocationToGoTo;                                    // 0x03C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_AIWaypoint_C*                       Waypoint;                                          // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FString                                 ArgumentForQuest;                                  // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsAtSettlementSpawn_;                              // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              SettlementSpawn;                                   // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SkipPlayerCheck_;                                  // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddGroupToRepsawn(double Delay, int32 Amount);
	void AddGroupToSpawn(int32 AmountToSpawn);
	void CanSpawnActors(bool* Result);
	void CanSpawnerRespawnActors(bool* Result);
	void CheckStartSpawningWithRadius();
	void ClearSpawnPoints();
	void ConvertLocalToWorldLocation(struct FVector& Point_Local, struct FVector* Point_World);
	void ConvertLocalToWorldSpawnPoint(struct FAIOSpawnPoint& SpawnPoint_LocalSpace, struct FAIOSpawnPoint* SpawnPoint_WorldSpace);
	void ConvertWorldToLocalLocation(struct FVector& Point_Local, struct FVector* Point_World);
	void ConvertWorldToLocalSpawnPoint(struct FAIOSpawnPoint& SpawnPoint_WorldSpace, struct FAIOSpawnPoint* SpawnPoint_LocalSpace);
	void EventSettlement();
	void ExecuteUbergraph_BP_AISpawner_Master(int32 EntryPoint);
	void FinishedSpawningGroup();
	void GenerateSpawnPoints();
	void GetCVarType(class FName* CVar);
	void GetRandomSpawnPoint(struct FAIOSpawnPoint* SpawnPoint, bool* Success);
	void GetSpawnPointAtIndex(int32 Index_0, bool* Success, struct FAIOSpawnPoint* SpawnPoint);
	void InitSpawnByRadius();
	void InitSpawner();
	void IsAnyInvokerInRadius(double Radius, bool* Result);
	bool IsAnyInvokerInSpawnRegion();
	void IsSpawnedClassReplicated(bool* Replicates);
	void KillSpawnedActors(bool AllowRespawn);
	void OnSpawnedActorKilled(class AActor* KilledAI);
	void OnSubjectDespawnedByOptimizerSubsystem(class UAIOSubjectComponent* DespawnedSubjectComponent);
	void OnSubjectSpawnedByOptimizerSubsystem(class UAIOSubjectComponent* SpawnedSubjectComponent);
	void OverrideBehaviour(class AActor* Actor);
	void PostSpawn(class AActor* SpawnedActor);
	void ProjectLocation(struct FVector& LocationToProject, bool* Success, struct FVector* ProjectedLocation);
	void ProjectSpawnPoints();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ResetSpawner(bool ResetIsSpawningStopped);
	void SetIsSpawningStopped(bool Stop);
	void SetSpawnCount(int32* Count);
	void SetWasSpawningInitialized(bool IsInitialized);
	void SpawnActor();
	void SpawningLoop();
	void TraceForPlayer(const struct FVector& Loc, bool* PlayerHit_);
	void TryToSpawnGroup();
	void UpdateRespawningGroups();
	void UpdateSpawnerAfterActorWasKilled(int32 KilledAIAmount);
	void UpdateSpawnerAfterSpawnActor(bool* FinishedSpawningGroup);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AISpawner_Master_C">();
	}
	static class ABP_AISpawner_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AISpawner_Master_C>();
	}
};
static_assert(alignof(ABP_AISpawner_Master_C) == 0x000008, "Wrong alignment on ABP_AISpawner_Master_C");
static_assert(sizeof(ABP_AISpawner_Master_C) == 0x000418, "Wrong size on ABP_AISpawner_Master_C");
static_assert(offsetof(ABP_AISpawner_Master_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_AISpawner_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, Billboard) == 0x0002A8, "Member 'ABP_AISpawner_Master_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnRadius_DebugSphere) == 0x0002B0, "Member 'ABP_AISpawner_Master_C::SpawnRadius_DebugSphere' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawningBox) == 0x0002B8, "Member 'ABP_AISpawner_Master_C::SpawningBox' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnGroupsQueue) == 0x0002C0, "Member 'ABP_AISpawner_Master_C::SpawnGroupsQueue' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, RespawnGroupsQueue) == 0x0002D0, "Member 'ABP_AISpawner_Master_C::RespawnGroupsQueue' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnedActorsHandles) == 0x0002E0, "Member 'ABP_AISpawner_Master_C::SpawnedActorsHandles' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnedActors) == 0x0002F0, "Member 'ABP_AISpawner_Master_C::SpawnedActors' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, TimerHandle_CheckSpawnRadius) == 0x000300, "Member 'ABP_AISpawner_Master_C::TimerHandle_CheckSpawnRadius' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, TimeHandle_UpdateRespawningGroups) == 0x000308, "Member 'ABP_AISpawner_Master_C::TimeHandle_UpdateRespawningGroups' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnRadius) == 0x000310, "Member 'ABP_AISpawner_Master_C::SpawnRadius' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, Box_Extent_X) == 0x000318, "Member 'ABP_AISpawner_Master_C::Box_Extent_X' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, Box_Extent_Y) == 0x000320, "Member 'ABP_AISpawner_Master_C::Box_Extent_Y' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, Box_Extent_Z) == 0x000328, "Member 'ABP_AISpawner_Master_C::Box_Extent_Z' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnAmount) == 0x000330, "Member 'ABP_AISpawner_Master_C::SpawnAmount' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, RandomisedSpawnCount) == 0x000334, "Member 'ABP_AISpawner_Master_C::RandomisedSpawnCount' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnType) == 0x000335, "Member 'ABP_AISpawner_Master_C::SpawnType' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnedActorClass) == 0x000338, "Member 'ABP_AISpawner_Master_C::SpawnedActorClass' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, InitialSpawnDelay) == 0x000340, "Member 'ABP_AISpawner_Master_C::InitialSpawnDelay' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawningInterval) == 0x000348, "Member 'ABP_AISpawner_Master_C::SpawningInterval' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, bIsSpawning) == 0x000350, "Member 'ABP_AISpawner_Master_C::bIsSpawning' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, TotalAliveActors) == 0x000354, "Member 'ABP_AISpawner_Master_C::TotalAliveActors' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, TotalSpawnedActors) == 0x000358, "Member 'ABP_AISpawner_Master_C::TotalSpawnedActors' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SelectingSpawnPointsMethod) == 0x00035C, "Member 'ABP_AISpawner_Master_C::SelectingSpawnPointsMethod' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SkipNoSpawnAreaCheck_) == 0x00035D, "Member 'ABP_AISpawner_Master_C::SkipNoSpawnAreaCheck_' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SkipMeshes_) == 0x00035E, "Member 'ABP_AISpawner_Master_C::SkipMeshes_' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, MeshesToSpawnOn) == 0x000360, "Member 'ABP_AISpawner_Master_C::MeshesToSpawnOn' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnRetries) == 0x000370, "Member 'ABP_AISpawner_Master_C::SpawnRetries' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, DontSpawnCloseToPlayerRange) == 0x000374, "Member 'ABP_AISpawner_Master_C::DontSpawnCloseToPlayerRange' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, RespawnMethod) == 0x000378, "Member 'ABP_AISpawner_Master_C::RespawnMethod' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, DisplayDebugInfo) == 0x000379, "Member 'ABP_AISpawner_Master_C::DisplayDebugInfo' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, ProjectionChannel) == 0x00037A, "Member 'ABP_AISpawner_Master_C::ProjectionChannel' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, ProjectionRadius) == 0x000380, "Member 'ABP_AISpawner_Master_C::ProjectionRadius' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, ProjectionZOffset) == 0x000388, "Member 'ABP_AISpawner_Master_C::ProjectionZOffset' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawnPoints) == 0x000390, "Member 'ABP_AISpawner_Master_C::SpawnPoints' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, IsSpawningStopped) == 0x0003A0, "Member 'ABP_AISpawner_Master_C::IsSpawningStopped' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, WasSpawningInitialized) == 0x0003A1, "Member 'ABP_AISpawner_Master_C::WasSpawningInitialized' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, InvokersInsideRegion) == 0x0003A4, "Member 'ABP_AISpawner_Master_C::InvokersInsideRegion' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SpawningCapacity) == 0x0003A8, "Member 'ABP_AISpawner_Master_C::SpawningCapacity' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, ActorsSpawnedThisFrame) == 0x0003AC, "Member 'ABP_AISpawner_Master_C::ActorsSpawnedThisFrame' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, OnActorSpawned) == 0x0003B0, "Member 'ABP_AISpawner_Master_C::OnActorSpawned' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, Starting_Behaviour) == 0x0003C0, "Member 'ABP_AISpawner_Master_C::Starting_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, LocationToGoTo) == 0x0003C8, "Member 'ABP_AISpawner_Master_C::LocationToGoTo' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, Waypoint) == 0x0003E0, "Member 'ABP_AISpawner_Master_C::Waypoint' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, ArgumentForQuest) == 0x0003E8, "Member 'ABP_AISpawner_Master_C::ArgumentForQuest' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, IsAtSettlementSpawn_) == 0x0003F8, "Member 'ABP_AISpawner_Master_C::IsAtSettlementSpawn_' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SettlementSpawn) == 0x000400, "Member 'ABP_AISpawner_Master_C::SettlementSpawn' has a wrong offset!");
static_assert(offsetof(ABP_AISpawner_Master_C, SkipPlayerCheck_) == 0x000410, "Member 'ABP_AISpawner_Master_C::SkipPlayerCheck_' has a wrong offset!");

}

