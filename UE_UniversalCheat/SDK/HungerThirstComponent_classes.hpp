#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HungerThirstComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BaseComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HungerThirstComponent.HungerThirstComponent_C
// 0x0070 (0x0128 - 0x00B8)
class UHungerThirstComponent_C final : public UBaseComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_HungerThirstComponent_C;            // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MaxHunger;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHunger;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxThirst;                                         // 0x00D0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentThirst;                                     // 0x00D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HungerHandle;                                      // 0x00E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ReduceHungerAmount;                                // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReduceThirstAmount;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ThirstHandle;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ThirstDamageHandle;                                // 0x0100(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HungerDamageHandle;                                // 0x0108(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        HungerMultplier;                                   // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ThirstMultiplier;                                  // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HungerDebuff;                                      // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ThirstDebuff;                                      // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyHungerDamage();
	void ApplyThirstDamage();
	void CheckStats();
	void ComponentLoaded();
	void ComponentPreSave();
	void Event_HungerDebuff(bool Add_);
	void Event_HungerX(float NewValue);
	void Event_ThirstDebuff(bool Add_);
	void Event_ThirstX(float NewValue);
	void ExecuteUbergraph_HungerThirstComponent(int32 EntryPoint);
	void HungerTimer();
	void Increase_Hunger(double Amount);
	void IncreaseThirst(double Amount);
	void LoadComponent();
	void SetHungerDebuff(bool Debuff_);
	void SetThirstDebuff(bool Debuff_);
	void ThirstTimer();
	void UpdateHunger();
	void UpdateThirst();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HungerThirstComponent_C">();
	}
	static class UHungerThirstComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHungerThirstComponent_C>();
	}
};
static_assert(alignof(UHungerThirstComponent_C) == 0x000008, "Wrong alignment on UHungerThirstComponent_C");
static_assert(sizeof(UHungerThirstComponent_C) == 0x000128, "Wrong size on UHungerThirstComponent_C");
static_assert(offsetof(UHungerThirstComponent_C, UberGraphFrame_HungerThirstComponent_C) == 0x0000B8, "Member 'UHungerThirstComponent_C::UberGraphFrame_HungerThirstComponent_C' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, MaxHunger) == 0x0000C0, "Member 'UHungerThirstComponent_C::MaxHunger' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, CurrentHunger) == 0x0000C8, "Member 'UHungerThirstComponent_C::CurrentHunger' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, MaxThirst) == 0x0000D0, "Member 'UHungerThirstComponent_C::MaxThirst' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, CurrentThirst) == 0x0000D8, "Member 'UHungerThirstComponent_C::CurrentThirst' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, HungerHandle) == 0x0000E0, "Member 'UHungerThirstComponent_C::HungerHandle' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, ReduceHungerAmount) == 0x0000E8, "Member 'UHungerThirstComponent_C::ReduceHungerAmount' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, ReduceThirstAmount) == 0x0000F0, "Member 'UHungerThirstComponent_C::ReduceThirstAmount' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, ThirstHandle) == 0x0000F8, "Member 'UHungerThirstComponent_C::ThirstHandle' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, ThirstDamageHandle) == 0x000100, "Member 'UHungerThirstComponent_C::ThirstDamageHandle' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, HungerDamageHandle) == 0x000108, "Member 'UHungerThirstComponent_C::HungerDamageHandle' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, HungerMultplier) == 0x000110, "Member 'UHungerThirstComponent_C::HungerMultplier' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, ThirstMultiplier) == 0x000118, "Member 'UHungerThirstComponent_C::ThirstMultiplier' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, HungerDebuff) == 0x000120, "Member 'UHungerThirstComponent_C::HungerDebuff' has a wrong offset!");
static_assert(offsetof(UHungerThirstComponent_C, ThirstDebuff) == 0x000121, "Member 'UHungerThirstComponent_C::ThirstDebuff' has a wrong offset!");

}

