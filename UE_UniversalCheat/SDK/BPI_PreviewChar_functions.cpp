#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PreviewChar

#include "Basic.hpp"

#include "BPI_PreviewChar_classes.hpp"
#include "BPI_PreviewChar_parameters.hpp"


namespace SDK
{

// Function BPI_PreviewChar.BPI_PreviewChar_C.Preview Set Equipped Primitive By Slot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ProcessAttachments_                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::Preview_Set_Equipped_Primitive_By_Slot(const struct FGameplayTag& Tag, class UObject* Item, class FName Socket, bool ProcessAttachments_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "Preview Set Equipped Primitive By Slot");

	Params::BPI_PreviewChar_C_Preview_Set_Equipped_Primitive_By_Slot Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Item = Item;
	Parms.Socket = Socket;
	Parms.ProcessAttachments_ = ProcessAttachments_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.PreviewAttachmentUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::PreviewAttachmentUpdated(const struct FGameplayTag& Tag, class UJSI_Slot_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "PreviewAttachmentUpdated");

	Params::BPI_PreviewChar_C_PreviewAttachmentUpdated Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.PreviewOnWeaponEquipped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::PreviewOnWeaponEquipped(const struct FGameplayTag& Tag, class UJSI_Slot_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "PreviewOnWeaponEquipped");

	Params::BPI_PreviewChar_C_PreviewOnWeaponEquipped Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.SetCaptureActivate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::SetCaptureActivate(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "SetCaptureActivate");

	Params::BPI_PreviewChar_C_SetCaptureActivate Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.SetPreviewMeshRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::SetPreviewMeshRotation(const struct FVector2D& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "SetPreviewMeshRotation");

	Params::BPI_PreviewChar_C_SetPreviewMeshRotation Parms{};

	Parms.Rot = std::move(Rot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.SetPreviewPawnOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::SetPreviewPawnOwner(class AActor* Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "SetPreviewPawnOwner");

	Params::BPI_PreviewChar_C_SetPreviewPawnOwner Parms{};

	Parms.Owner = Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.SetPreviewRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RT                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::SetPreviewRenderTarget(class UTextureRenderTarget2D* RT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "SetPreviewRenderTarget");

	Params::BPI_PreviewChar_C_SetPreviewRenderTarget Parms{};

	Parms.RT = RT;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PreviewChar.BPI_PreviewChar_C.SetPreviewZoomInOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PreviewChar_C::SetPreviewZoomInOut(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PreviewChar_C", "SetPreviewZoomInOut");

	Params::BPI_PreviewChar_C_SetPreviewZoomInOut Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

