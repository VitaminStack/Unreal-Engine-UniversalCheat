#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_UI

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_UI.BPI_UI_C.GetFlashlightDurability
// 0x0008 (0x0008 - 0x0000)
struct BPI_UI_C_GetFlashlightDurability final
{
public:
	double                                        Dur;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_UI_C_GetFlashlightDurability) == 0x000008, "Wrong alignment on BPI_UI_C_GetFlashlightDurability");
static_assert(sizeof(BPI_UI_C_GetFlashlightDurability) == 0x000008, "Wrong size on BPI_UI_C_GetFlashlightDurability");
static_assert(offsetof(BPI_UI_C_GetFlashlightDurability, Dur) == 0x000000, "Member 'BPI_UI_C_GetFlashlightDurability::Dur' has a wrong offset!");

// Function BPI_UI.BPI_UI_C.GetNightVisionDurability
// 0x0008 (0x0008 - 0x0000)
struct BPI_UI_C_GetNightVisionDurability final
{
public:
	double                                        Dur;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_UI_C_GetNightVisionDurability) == 0x000008, "Wrong alignment on BPI_UI_C_GetNightVisionDurability");
static_assert(sizeof(BPI_UI_C_GetNightVisionDurability) == 0x000008, "Wrong size on BPI_UI_C_GetNightVisionDurability");
static_assert(offsetof(BPI_UI_C_GetNightVisionDurability, Dur) == 0x000000, "Member 'BPI_UI_C_GetNightVisionDurability::Dur' has a wrong offset!");

// Function BPI_UI.BPI_UI_C.GetRespiratorDurability
// 0x0008 (0x0008 - 0x0000)
struct BPI_UI_C_GetRespiratorDurability final
{
public:
	double                                        Dur;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_UI_C_GetRespiratorDurability) == 0x000008, "Wrong alignment on BPI_UI_C_GetRespiratorDurability");
static_assert(sizeof(BPI_UI_C_GetRespiratorDurability) == 0x000008, "Wrong size on BPI_UI_C_GetRespiratorDurability");
static_assert(offsetof(BPI_UI_C_GetRespiratorDurability, Dur) == 0x000000, "Member 'BPI_UI_C_GetRespiratorDurability::Dur' has a wrong offset!");

// Function BPI_UI.BPI_UI_C.ShowFlashlightDurability
// 0x0001 (0x0001 - 0x0000)
struct BPI_UI_C_ShowFlashlightDurability final
{
public:
	bool                                          Show_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_UI_C_ShowFlashlightDurability) == 0x000001, "Wrong alignment on BPI_UI_C_ShowFlashlightDurability");
static_assert(sizeof(BPI_UI_C_ShowFlashlightDurability) == 0x000001, "Wrong size on BPI_UI_C_ShowFlashlightDurability");
static_assert(offsetof(BPI_UI_C_ShowFlashlightDurability, Show_) == 0x000000, "Member 'BPI_UI_C_ShowFlashlightDurability::Show_' has a wrong offset!");

// Function BPI_UI.BPI_UI_C.ShowNightVisionDurability
// 0x0001 (0x0001 - 0x0000)
struct BPI_UI_C_ShowNightVisionDurability final
{
public:
	bool                                          Show_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_UI_C_ShowNightVisionDurability) == 0x000001, "Wrong alignment on BPI_UI_C_ShowNightVisionDurability");
static_assert(sizeof(BPI_UI_C_ShowNightVisionDurability) == 0x000001, "Wrong size on BPI_UI_C_ShowNightVisionDurability");
static_assert(offsetof(BPI_UI_C_ShowNightVisionDurability, Show_) == 0x000000, "Member 'BPI_UI_C_ShowNightVisionDurability::Show_' has a wrong offset!");

// Function BPI_UI.BPI_UI_C.ShowRespiratorDurability
// 0x0001 (0x0001 - 0x0000)
struct BPI_UI_C_ShowRespiratorDurability final
{
public:
	bool                                          Show_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_UI_C_ShowRespiratorDurability) == 0x000001, "Wrong alignment on BPI_UI_C_ShowRespiratorDurability");
static_assert(sizeof(BPI_UI_C_ShowRespiratorDurability) == 0x000001, "Wrong size on BPI_UI_C_ShowRespiratorDurability");
static_assert(offsetof(BPI_UI_C_ShowRespiratorDurability, Show_) == 0x000000, "Member 'BPI_UI_C_ShowRespiratorDurability::Show_' has a wrong offset!");

}

