#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhotoModeComponent

#include "Basic.hpp"

#include "PhotoModeComponentMenuIcons_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PostProcessRendering_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhotoModeComponentGameLogo_structs.hpp"
#include "PostProcessPressets_structs.hpp"
#include "InputCore_structs.hpp"
#include "InputKeys_structs.hpp"
#include "PhotoModeComponentGalleryIcons_structs.hpp"
#include "PhotoModeIsOnConfis_structs.hpp"
#include "EnumInputMode_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PhotoModeComponent.PhotoModeComponent_C
// 0x2350 (0x23F0 - 0x00A0)
class UPhotoModeComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPhotoModeWidget_C*                     PhotoModeWidgetRef;                                // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             PlayerRef;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArmRef;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CameraRef;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingPhotoMode_;                                   // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PauseGameWhenUsingPhotoMode_;                      // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            MenuColor;                                         // 0x00CC(0x0014)(Edit, BlueprintVisible)
	bool                                          ShowMouseCursorByDefault_;                         // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowPhotoResolutionOption_;                        // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowMouseCursorOption_;                            // 0x00E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FreeCameraOption_;                                 // 0x00E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FreeCameraMaximumDistance;                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMaximumDistanceLimit;                           // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FreeCameraSensitivity;                             // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMultiplayerGame_;                                // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstPersonGame_;                                // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTakePictureOption_;                            // 0x0102(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetControlRotationAfterClosingPM;                // 0x0103(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxUpDownCameraDistance;                           // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxLeftRightCameraDistance;                        // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPhotoModeComponentGameLogo>    GameLogos;                                         // 0x0118(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPostProcessPressets>           PostProcessPresets;                                // 0x0128(0x0010)(Edit, BlueprintVisible)
	double                                        DefaultFOV;                                        // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x0140(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   DefaultPostProcess;                                // 0x0160(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UsingGallery_;                                     // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0xF];                                      // 0x0841(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   DefaultPhotoModePostProcess;                       // 0x0850(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   MenuPhotoModePostProcess;                          // 0x0F30(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FInputKeys                             TakeScreenshotKeys;                                // 0x1610(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             OpenGalleryKeys;                                   // 0x1640(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             HideMenuKeys;                                      // 0x1670(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             ResetValuesKeys;                                   // 0x16A0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             NextTabKeys;                                       // 0x16D0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             PrevTabKeys;                                       // 0x1700(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             OpenClosePhotoModeKeys;                            // 0x1730(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             ClosePhotoModeWithAnotherKey;                      // 0x1760(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             ShowOrHideMouseCursorKeys;                         // 0x1790(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             OpenFreeCameraKeys;                                // 0x17C0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             UpCameraKeys;                                      // 0x17F0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             DownCameraKeys;                                    // 0x1820(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          ApplyMenuColor;                                    // 0x1850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1851[0x7];                                     // 0x1851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPhotoModeComponentMenuIcons           KeyboardIcons;                                     // 0x1858(0x0060)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPhotoModeComponentMenuIcons           Gamepad01Icons;                                    // 0x18B8(0x0060)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPhotoModeComponentMenuIcons           Gamepad02Icons;                                    // 0x1918(0x0060)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         GamepadIconStyle;                                  // 0x1978(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_197C[0x4];                                     // 0x197C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   LastKey;                                           // 0x1980(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        DefaultSpringArmLength;                            // 0x1998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseCursor;                                       // 0x19A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A1[0x7];                                     // 0x19A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPostProcessRendering>          PostProcessRenders;                                // 0x19A8(0x0010)(Edit, BlueprintVisible)
	struct FVector                                DefaultSocketOffset;                               // 0x19B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCustomScreenshotFolder_;                        // 0x19D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D1[0x7];                                     // 0x19D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomScreenshotFolderPath;                        // 0x19D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerControllerRef;                               // 0x19E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableGallery_;                                    // 0x19F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19F1[0x7];                                     // 0x19F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhotoModeGalleryWidget_C*              GalleryWidgetRef;                                  // 0x19F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingPostProcessVolume_;                           // 0x1A00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A01[0x7];                                     // 0x1A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     PostProcessVolume;                                 // 0x1A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FPhotoModeComponentGalleryIcons        KeyboardIcons__Gallery_;                           // 0x1A10(0x0030)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPhotoModeComponentGalleryIcons        Gamepad01Icons__Gallery_;                          // 0x1A40(0x0030)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPhotoModeComponentGalleryIcons        Gamepad02Icons__Gallery_;                          // 0x1A70(0x0030)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputKeys                             NextPageKeys__Gallery_;                            // 0x1AA0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             PrevPageKeys__Gallery_;                            // 0x1AD0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             FullscreenKeys__Gallery_;                          // 0x1B00(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             BackKeys__Gallery_;                                // 0x1B30(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             ShowMouseKeys__Gallery_;                           // 0x1B60(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FPhotoModeIsOnConfis                   PhotoModeIsOnWarning;                              // 0x1B90(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FRotator                               DefaultControlRotation;                            // 0x1BF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         PhotoModeViewportZOrder;                           // 0x1C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExistingPostProcess;                               // 0x1C14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C15[0x3];                                     // 0x1C15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PostProcessVolumeClass;                            // 0x1C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          isUnbound;                                         // 0x1C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C21[0xF];                                     // 0x1C21(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   OriginalPostProcess;                               // 0x1C30(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        GlobalTimeDilationBackup;                          // 0x2310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumInputMode                                 InputModeAfterClosingPhotoMode;                    // 0x2318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowAlbumOption_;                                  // 0x2319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231A[0x6];                                     // 0x231A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentTimeDilation;                               // 0x2320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSizePerTab;                                    // 0x2328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2329[0x7];                                     // 0x2329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputKeys                             LeftCameraKeys;                                    // 0x2330(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             RightCameraKeys;                                   // 0x2360(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputKeys                             OpenPhotoModeKeys__Gallery_;                       // 0x2390(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double CurrentTimeDilation)> PhotoModeOpened;                                   // 0x23C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              PhotoModeClosed;                                   // 0x23D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowCharacterRotationOption_;                      // 0x23E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FocusWhenHoveringOverSlider;                       // 0x23E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PhotoModeComponent(int32 EntryPoint);
	void GetCameraLocation(struct FVector* CameraLocation);
	void GetPostProcessVolume(bool* IsValid, class APostProcessVolume** PostProcessVolume_0);
	void GetSliderCameraDistance(double* CameraDistance);
	void GetSliderFOV(double* FOV);
	void GetSliderRoll(double* Roll);
	void IconSelector___Gallery(const struct FKey& Key);
	void IconSelector___Photo_Mode_Menu(const struct FKey& Key);
	void Initialization(class ACharacter* PlayerReference, class UCameraComponent* CameraComponentReference, class USpringArmComponent* SpringArmReference, const class APlayerController*& PlayerController);
	void OpenGallery(const struct FKey& LastKey_0);
	void Photo_Mode(const struct FKey& Key);
	void ResetGallery();
	void ResetPhotoMode();
	void UnpausedGameAxisMovementControl(double AxisValueIn, double* AxisValueOut);
	void UpdateOutputFolder(const class FString& Custom_Path);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PhotoModeComponent_C">();
	}
	static class UPhotoModeComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPhotoModeComponent_C>();
	}
};
static_assert(alignof(UPhotoModeComponent_C) == 0x000010, "Wrong alignment on UPhotoModeComponent_C");
static_assert(sizeof(UPhotoModeComponent_C) == 0x0023F0, "Wrong size on UPhotoModeComponent_C");
static_assert(offsetof(UPhotoModeComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UPhotoModeComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PhotoModeWidgetRef) == 0x0000A8, "Member 'UPhotoModeComponent_C::PhotoModeWidgetRef' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PlayerRef) == 0x0000B0, "Member 'UPhotoModeComponent_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, SpringArmRef) == 0x0000B8, "Member 'UPhotoModeComponent_C::SpringArmRef' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, CameraRef) == 0x0000C0, "Member 'UPhotoModeComponent_C::CameraRef' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, UsingPhotoMode_) == 0x0000C8, "Member 'UPhotoModeComponent_C::UsingPhotoMode_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PauseGameWhenUsingPhotoMode_) == 0x0000C9, "Member 'UPhotoModeComponent_C::PauseGameWhenUsingPhotoMode_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, MenuColor) == 0x0000CC, "Member 'UPhotoModeComponent_C::MenuColor' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowMouseCursorByDefault_) == 0x0000E0, "Member 'UPhotoModeComponent_C::ShowMouseCursorByDefault_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowPhotoResolutionOption_) == 0x0000E1, "Member 'UPhotoModeComponent_C::ShowPhotoResolutionOption_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowMouseCursorOption_) == 0x0000E2, "Member 'UPhotoModeComponent_C::ShowMouseCursorOption_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, FreeCameraOption_) == 0x0000E3, "Member 'UPhotoModeComponent_C::FreeCameraOption_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, FreeCameraMaximumDistance) == 0x0000E8, "Member 'UPhotoModeComponent_C::FreeCameraMaximumDistance' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, UseMaximumDistanceLimit) == 0x0000F0, "Member 'UPhotoModeComponent_C::UseMaximumDistanceLimit' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, FreeCameraSensitivity) == 0x0000F8, "Member 'UPhotoModeComponent_C::FreeCameraSensitivity' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, IsMultiplayerGame_) == 0x000100, "Member 'UPhotoModeComponent_C::IsMultiplayerGame_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, IsFirstPersonGame_) == 0x000101, "Member 'UPhotoModeComponent_C::IsFirstPersonGame_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowTakePictureOption_) == 0x000102, "Member 'UPhotoModeComponent_C::ShowTakePictureOption_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ResetControlRotationAfterClosingPM) == 0x000103, "Member 'UPhotoModeComponent_C::ResetControlRotationAfterClosingPM' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, MaxUpDownCameraDistance) == 0x000108, "Member 'UPhotoModeComponent_C::MaxUpDownCameraDistance' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, MaxLeftRightCameraDistance) == 0x000110, "Member 'UPhotoModeComponent_C::MaxLeftRightCameraDistance' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, GameLogos) == 0x000118, "Member 'UPhotoModeComponent_C::GameLogos' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PostProcessPresets) == 0x000128, "Member 'UPhotoModeComponent_C::PostProcessPresets' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultFOV) == 0x000138, "Member 'UPhotoModeComponent_C::DefaultFOV' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultCameraRotation) == 0x000140, "Member 'UPhotoModeComponent_C::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultPostProcess) == 0x000160, "Member 'UPhotoModeComponent_C::DefaultPostProcess' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, UsingGallery_) == 0x000840, "Member 'UPhotoModeComponent_C::UsingGallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultPhotoModePostProcess) == 0x000850, "Member 'UPhotoModeComponent_C::DefaultPhotoModePostProcess' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, MenuPhotoModePostProcess) == 0x000F30, "Member 'UPhotoModeComponent_C::MenuPhotoModePostProcess' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, TakeScreenshotKeys) == 0x001610, "Member 'UPhotoModeComponent_C::TakeScreenshotKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, OpenGalleryKeys) == 0x001640, "Member 'UPhotoModeComponent_C::OpenGalleryKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, HideMenuKeys) == 0x001670, "Member 'UPhotoModeComponent_C::HideMenuKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ResetValuesKeys) == 0x0016A0, "Member 'UPhotoModeComponent_C::ResetValuesKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, NextTabKeys) == 0x0016D0, "Member 'UPhotoModeComponent_C::NextTabKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PrevTabKeys) == 0x001700, "Member 'UPhotoModeComponent_C::PrevTabKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, OpenClosePhotoModeKeys) == 0x001730, "Member 'UPhotoModeComponent_C::OpenClosePhotoModeKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ClosePhotoModeWithAnotherKey) == 0x001760, "Member 'UPhotoModeComponent_C::ClosePhotoModeWithAnotherKey' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowOrHideMouseCursorKeys) == 0x001790, "Member 'UPhotoModeComponent_C::ShowOrHideMouseCursorKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, OpenFreeCameraKeys) == 0x0017C0, "Member 'UPhotoModeComponent_C::OpenFreeCameraKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, UpCameraKeys) == 0x0017F0, "Member 'UPhotoModeComponent_C::UpCameraKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DownCameraKeys) == 0x001820, "Member 'UPhotoModeComponent_C::DownCameraKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ApplyMenuColor) == 0x001850, "Member 'UPhotoModeComponent_C::ApplyMenuColor' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, KeyboardIcons) == 0x001858, "Member 'UPhotoModeComponent_C::KeyboardIcons' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, Gamepad01Icons) == 0x0018B8, "Member 'UPhotoModeComponent_C::Gamepad01Icons' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, Gamepad02Icons) == 0x001918, "Member 'UPhotoModeComponent_C::Gamepad02Icons' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, GamepadIconStyle) == 0x001978, "Member 'UPhotoModeComponent_C::GamepadIconStyle' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, LastKey) == 0x001980, "Member 'UPhotoModeComponent_C::LastKey' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultSpringArmLength) == 0x001998, "Member 'UPhotoModeComponent_C::DefaultSpringArmLength' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, MouseCursor) == 0x0019A0, "Member 'UPhotoModeComponent_C::MouseCursor' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PostProcessRenders) == 0x0019A8, "Member 'UPhotoModeComponent_C::PostProcessRenders' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultSocketOffset) == 0x0019B8, "Member 'UPhotoModeComponent_C::DefaultSocketOffset' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, UseCustomScreenshotFolder_) == 0x0019D0, "Member 'UPhotoModeComponent_C::UseCustomScreenshotFolder_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, CustomScreenshotFolderPath) == 0x0019D8, "Member 'UPhotoModeComponent_C::CustomScreenshotFolderPath' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PlayerControllerRef) == 0x0019E8, "Member 'UPhotoModeComponent_C::PlayerControllerRef' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, EnableGallery_) == 0x0019F0, "Member 'UPhotoModeComponent_C::EnableGallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, GalleryWidgetRef) == 0x0019F8, "Member 'UPhotoModeComponent_C::GalleryWidgetRef' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, UsingPostProcessVolume_) == 0x001A00, "Member 'UPhotoModeComponent_C::UsingPostProcessVolume_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PostProcessVolume) == 0x001A08, "Member 'UPhotoModeComponent_C::PostProcessVolume' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, KeyboardIcons__Gallery_) == 0x001A10, "Member 'UPhotoModeComponent_C::KeyboardIcons__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, Gamepad01Icons__Gallery_) == 0x001A40, "Member 'UPhotoModeComponent_C::Gamepad01Icons__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, Gamepad02Icons__Gallery_) == 0x001A70, "Member 'UPhotoModeComponent_C::Gamepad02Icons__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, NextPageKeys__Gallery_) == 0x001AA0, "Member 'UPhotoModeComponent_C::NextPageKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PrevPageKeys__Gallery_) == 0x001AD0, "Member 'UPhotoModeComponent_C::PrevPageKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, FullscreenKeys__Gallery_) == 0x001B00, "Member 'UPhotoModeComponent_C::FullscreenKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, BackKeys__Gallery_) == 0x001B30, "Member 'UPhotoModeComponent_C::BackKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowMouseKeys__Gallery_) == 0x001B60, "Member 'UPhotoModeComponent_C::ShowMouseKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PhotoModeIsOnWarning) == 0x001B90, "Member 'UPhotoModeComponent_C::PhotoModeIsOnWarning' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, DefaultControlRotation) == 0x001BF8, "Member 'UPhotoModeComponent_C::DefaultControlRotation' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PhotoModeViewportZOrder) == 0x001C10, "Member 'UPhotoModeComponent_C::PhotoModeViewportZOrder' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ExistingPostProcess) == 0x001C14, "Member 'UPhotoModeComponent_C::ExistingPostProcess' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PostProcessVolumeClass) == 0x001C18, "Member 'UPhotoModeComponent_C::PostProcessVolumeClass' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, isUnbound) == 0x001C20, "Member 'UPhotoModeComponent_C::isUnbound' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, OriginalPostProcess) == 0x001C30, "Member 'UPhotoModeComponent_C::OriginalPostProcess' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, GlobalTimeDilationBackup) == 0x002310, "Member 'UPhotoModeComponent_C::GlobalTimeDilationBackup' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, InputModeAfterClosingPhotoMode) == 0x002318, "Member 'UPhotoModeComponent_C::InputModeAfterClosingPhotoMode' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowAlbumOption_) == 0x002319, "Member 'UPhotoModeComponent_C::ShowAlbumOption_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, CurrentTimeDilation) == 0x002320, "Member 'UPhotoModeComponent_C::CurrentTimeDilation' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, AutoSizePerTab) == 0x002328, "Member 'UPhotoModeComponent_C::AutoSizePerTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, LeftCameraKeys) == 0x002330, "Member 'UPhotoModeComponent_C::LeftCameraKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, RightCameraKeys) == 0x002360, "Member 'UPhotoModeComponent_C::RightCameraKeys' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, OpenPhotoModeKeys__Gallery_) == 0x002390, "Member 'UPhotoModeComponent_C::OpenPhotoModeKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PhotoModeOpened) == 0x0023C0, "Member 'UPhotoModeComponent_C::PhotoModeOpened' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, PhotoModeClosed) == 0x0023D0, "Member 'UPhotoModeComponent_C::PhotoModeClosed' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, ShowCharacterRotationOption_) == 0x0023E0, "Member 'UPhotoModeComponent_C::ShowCharacterRotationOption_' has a wrong offset!");
static_assert(offsetof(UPhotoModeComponent_C, FocusWhenHoveringOverSlider) == 0x0023E1, "Member 'UPhotoModeComponent_C::FocusWhenHoveringOverSlider' has a wrong offset!");

}

