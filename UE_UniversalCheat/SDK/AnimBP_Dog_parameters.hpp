#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Dog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_Dog.AnimBP_Dog_C.HeadRotation
// 0x0140 (0x0140 - 0x0000)
struct AnimBP_Dog_C_HeadRotation final
{
public:
	double                                        Right;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Down;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Player;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Dog_C_HeadRotation) == 0x000008, "Wrong alignment on AnimBP_Dog_C_HeadRotation");
static_assert(sizeof(AnimBP_Dog_C_HeadRotation) == 0x000140, "Wrong size on AnimBP_Dog_C_HeadRotation");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, Right) == 0x000000, "Member 'AnimBP_Dog_C_HeadRotation::Right' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, Down) == 0x000008, "Member 'AnimBP_Dog_C_HeadRotation::Down' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, InterpSpeed) == 0x000010, "Member 'AnimBP_Dog_C_HeadRotation::InterpSpeed' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, Player) == 0x000018, "Member 'AnimBP_Dog_C_HeadRotation::Player' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000048, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000050, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000058, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000098, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_BreakRotator_Roll_1) == 0x0000B0, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_BreakRotator_Pitch_1) == 0x0000B4, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_BreakRotator_Yaw_1) == 0x0000B8, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000C0, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_ClampAngle_ReturnValue) == 0x0000D0, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_ClampAngle_ReturnValue_1) == 0x0000D8, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_MakeRotator_ReturnValue) == 0x0000E0, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_RInterpTo_ReturnValue) == 0x0000F8, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000110, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x000120, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000128, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000130, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000134, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_HeadRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000138, "Member 'AnimBP_Dog_C_HeadRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function AnimBP_Dog.AnimBP_Dog_C.ExecuteUbergraph_AnimBP_Dog
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog) == 0x000004, "Wrong alignment on AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog");
static_assert(sizeof(AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog) == 0x000008, "Wrong size on AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog");
static_assert(offsetof(AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog, EntryPoint) == 0x000000, "Member 'AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'AnimBP_Dog_C_ExecuteUbergraph_AnimBP_Dog::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function AnimBP_Dog.AnimBP_Dog_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_Dog_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Dog_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_Dog_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_Dog_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_Dog_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_Dog_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_Dog_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_Dog.AnimBP_Dog_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_Dog_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_Dog_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_Dog_C_AnimGraph");
static_assert(sizeof(AnimBP_Dog_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_Dog_C_AnimGraph");
static_assert(offsetof(AnimBP_Dog_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_Dog_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

