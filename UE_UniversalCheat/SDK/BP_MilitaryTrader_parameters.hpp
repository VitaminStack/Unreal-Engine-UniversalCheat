#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MilitaryTrader

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_MilitaryTrader.BP_MilitaryTrader_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_MilitaryTrader_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MilitaryTrader_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_MilitaryTrader_C_OnBeginInteract");
static_assert(sizeof(BP_MilitaryTrader_C_OnBeginInteract) == 0x000058, "Wrong size on BP_MilitaryTrader_C_OnBeginInteract");
static_assert(offsetof(BP_MilitaryTrader_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_MilitaryTrader_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_MilitaryTrader_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_MilitaryTrader.BP_MilitaryTrader_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MilitaryTrader_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_MilitaryTrader_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_MilitaryTrader_C_GetInteractOptions");
static_assert(sizeof(BP_MilitaryTrader_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_MilitaryTrader_C_GetInteractOptions");
static_assert(offsetof(BP_MilitaryTrader_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_MilitaryTrader_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_MilitaryTrader_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_MilitaryTrader.BP_MilitaryTrader_C.ExecuteUbergraph_BP_MilitaryTrader
// 0x0188 (0x0188 - 0x0000)
struct BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0010(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0078(0x0050)(ConstParm)
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x00C8(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_2;                              // 0x0118(0x0050)()
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader) == 0x000008, "Wrong alignment on BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader");
static_assert(sizeof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader) == 0x000188, "Wrong size on BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, EntryPoint) == 0x000000, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_Event_InteractingActor) == 0x000008, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_Event_Options) == 0x000010, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, CallFunc_GetHUD_HUD) == 0x000060, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, CallFunc_GetHUD_HUD_1) == 0x000068, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, CallFunc_GetBoolCVar_ReturnValue) == 0x000070, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_MakeMap_Map) == 0x000078, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_MakeMap_Map_1) == 0x0000C8, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_MakeMap_Map_2) == 0x000118, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, CallFunc_ShowInteractWidget_Widget) == 0x000168, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, CallFunc_ShowInteractWidget_Widget_1) == 0x000170, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000178, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_ComponentBoundEvent_LayerIndex) == 0x00017C, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader, K2Node_ComponentBoundEvent_bIsSeen) == 0x000180, "Member 'BP_MilitaryTrader_C_ExecuteUbergraph_BP_MilitaryTrader::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");

// Function BP_MilitaryTrader.BP_MilitaryTrader_C.BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_MilitaryTrader_C_BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

