#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ladder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Ladder.BP_Ladder_C
// 0x0078 (0x0318 - 0x02A0)
class ABP_Ladder_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        PlayerRotation;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlayerPostition;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LadderTopCollision;                                // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LadderCollision;                                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Mesh_;                                             // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MeshBottom;                                        // 0x02E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PieceHeight;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OffsetBox;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponents;                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanClimb_;                                         // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void BndEvt__BP_Ladder_LadderCollision_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Ladder_LadderCollision_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_LadderNew_LadderTopCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_BP_Ladder(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ladder_C">();
	}
	static class ABP_Ladder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Ladder_C>();
	}
};
static_assert(alignof(ABP_Ladder_C) == 0x000008, "Wrong alignment on ABP_Ladder_C");
static_assert(sizeof(ABP_Ladder_C) == 0x000318, "Wrong size on ABP_Ladder_C");
static_assert(offsetof(ABP_Ladder_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Ladder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, PlayerRotation) == 0x0002A8, "Member 'ABP_Ladder_C::PlayerRotation' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, PlayerPostition) == 0x0002B0, "Member 'ABP_Ladder_C::PlayerPostition' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderTopCollision) == 0x0002B8, "Member 'ABP_Ladder_C::LadderTopCollision' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, AIOSubject) == 0x0002C0, "Member 'ABP_Ladder_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, LadderCollision) == 0x0002C8, "Member 'ABP_Ladder_C::LadderCollision' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, StaticMesh) == 0x0002D0, "Member 'ABP_Ladder_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, Mesh_) == 0x0002D8, "Member 'ABP_Ladder_C::Mesh_' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, MeshBottom) == 0x0002E0, "Member 'ABP_Ladder_C::MeshBottom' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, PieceHeight) == 0x0002F8, "Member 'ABP_Ladder_C::PieceHeight' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, OffsetBox) == 0x000300, "Member 'ABP_Ladder_C::OffsetBox' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, StaticMeshComponents) == 0x000308, "Member 'ABP_Ladder_C::StaticMeshComponents' has a wrong offset!");
static_assert(offsetof(ABP_Ladder_C, CanClimb_) == 0x000310, "Member 'ABP_Ladder_C::CanClimb_' has a wrong offset!");

}

