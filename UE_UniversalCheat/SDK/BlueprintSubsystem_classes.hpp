#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintSubsystem

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class BlueprintSubsystem.BlueprintGameInstanceSubsystem
// 0x0020 (0x0048 - 0x0028)
class UBlueprintGameInstanceSubsystem final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bEnabled : 1;                                      // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bStartWithTickEnabled : 1;                         // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_31[0x17];                                      // 0x0031(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_OnDeInit();
	void K2_OnInit();
	void K2_OnTick(const float& DeltaTime);
	void SetTickEnabled(const bool bEnableTick);

	class UGameInstance* GetGameInstance() const;
	bool IsTickEnabled() const;
	bool K2_ShouldCreateSubsystem(class FText* OutReason) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintGameInstanceSubsystem">();
	}
	static class UBlueprintGameInstanceSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintGameInstanceSubsystem>();
	}
};
static_assert(alignof(UBlueprintGameInstanceSubsystem) == 0x000008, "Wrong alignment on UBlueprintGameInstanceSubsystem");
static_assert(sizeof(UBlueprintGameInstanceSubsystem) == 0x000048, "Wrong size on UBlueprintGameInstanceSubsystem");

// Class BlueprintSubsystem.BlueprintGameInstanceSubsystemBase
// 0x0050 (0x0080 - 0x0030)
class UBlueprintGameInstanceSubsystemBase final : public UGameInstanceSubsystem
{
public:
	TMap<class UClass*, class UBlueprintGameInstanceSubsystem*> CreatedSubsystems;                                 // 0x0030(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UBlueprintGameInstanceSubsystem* GetBlueprintSubsystemOfClass(const class UObject* WorldContextObject, const TSubclassOf<class UBlueprintGameInstanceSubsystem> TargetClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintGameInstanceSubsystemBase">();
	}
	static class UBlueprintGameInstanceSubsystemBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintGameInstanceSubsystemBase>();
	}
};
static_assert(alignof(UBlueprintGameInstanceSubsystemBase) == 0x000008, "Wrong alignment on UBlueprintGameInstanceSubsystemBase");
static_assert(sizeof(UBlueprintGameInstanceSubsystemBase) == 0x000080, "Wrong size on UBlueprintGameInstanceSubsystemBase");
static_assert(offsetof(UBlueprintGameInstanceSubsystemBase, CreatedSubsystems) == 0x000030, "Member 'UBlueprintGameInstanceSubsystemBase::CreatedSubsystems' has a wrong offset!");

// Class BlueprintSubsystem.BlueprintSubsystemSettings
// 0x00A8 (0x00E0 - 0x0038)
class UBlueprintSubsystemSettings final : public UDeveloperSettings
{
public:
	uint8                                         bDisableAllBlueprintGameInstanceSubsystems : 1;    // 0x0038(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bDisableAllBlueprintWorldSubsystems : 1;           // 0x0038(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<TSoftClassPtr<class UClass>>             GameInstanceSubsystemClasses;                      // 0x0040(0x0050)(Edit, Config, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSet<TSoftClassPtr<class UClass>>             WorldSubsystemClasses;                             // 0x0090(0x0050)(Edit, Config, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintSubsystemSettings">();
	}
	static class UBlueprintSubsystemSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintSubsystemSettings>();
	}
};
static_assert(alignof(UBlueprintSubsystemSettings) == 0x000008, "Wrong alignment on UBlueprintSubsystemSettings");
static_assert(sizeof(UBlueprintSubsystemSettings) == 0x0000E0, "Wrong size on UBlueprintSubsystemSettings");
static_assert(offsetof(UBlueprintSubsystemSettings, GameInstanceSubsystemClasses) == 0x000040, "Member 'UBlueprintSubsystemSettings::GameInstanceSubsystemClasses' has a wrong offset!");
static_assert(offsetof(UBlueprintSubsystemSettings, WorldSubsystemClasses) == 0x000090, "Member 'UBlueprintSubsystemSettings::WorldSubsystemClasses' has a wrong offset!");

// Class BlueprintSubsystem.BlueprintWorldSubsystem
// 0x0018 (0x0040 - 0x0028)
class UBlueprintWorldSubsystem final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bEnabled : 1;                                      // 0x0030(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bStartWithTickEnabled : 1;                         // 0x0030(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_OnDeInit();
	void K2_OnInit();
	void K2_OnPostInitialize();
	void K2_OnTick(const float& DeltaTime);
	void K2_OnUpdateStreamingState();
	void K2_OnWorldBeginPlay(class UWorld* World);
	void K2_OnWorldComponentsUpdated(class UWorld* World);
	void SetTickEnabled(const bool bEnableTick);

	bool IsTickEnabled() const;
	bool K2_ShouldCreateSubsystem(class FText* OutReason) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintWorldSubsystem">();
	}
	static class UBlueprintWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintWorldSubsystem>();
	}
};
static_assert(alignof(UBlueprintWorldSubsystem) == 0x000008, "Wrong alignment on UBlueprintWorldSubsystem");
static_assert(sizeof(UBlueprintWorldSubsystem) == 0x000040, "Wrong size on UBlueprintWorldSubsystem");

// Class BlueprintSubsystem.BlueprintWorldSubsystemBase
// 0x0050 (0x0080 - 0x0030)
class UBlueprintWorldSubsystemBase final : public UWorldSubsystem
{
public:
	TMap<class UClass*, class UBlueprintWorldSubsystem*> CreatedSubsystems;                                 // 0x0030(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UBlueprintWorldSubsystem* GetBlueprintSubsystemOfClass(const class UObject* WorldContextObject, const TSubclassOf<class UBlueprintWorldSubsystem> TargetClass);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintWorldSubsystemBase">();
	}
	static class UBlueprintWorldSubsystemBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintWorldSubsystemBase>();
	}
};
static_assert(alignof(UBlueprintWorldSubsystemBase) == 0x000008, "Wrong alignment on UBlueprintWorldSubsystemBase");
static_assert(sizeof(UBlueprintWorldSubsystemBase) == 0x000080, "Wrong size on UBlueprintWorldSubsystemBase");
static_assert(offsetof(UBlueprintWorldSubsystemBase, CreatedSubsystems) == 0x000030, "Member 'UBlueprintWorldSubsystemBase::CreatedSubsystems' has a wrong offset!");

}

