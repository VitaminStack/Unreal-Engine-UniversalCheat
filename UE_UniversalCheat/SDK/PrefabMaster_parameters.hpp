#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PrefabMaster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PrefabMaster.PrefabMaster_C.ExecuteUbergraph_PrefabMaster
// 0x0004 (0x0004 - 0x0000)
struct PrefabMaster_C_ExecuteUbergraph_PrefabMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrefabMaster_C_ExecuteUbergraph_PrefabMaster) == 0x000004, "Wrong alignment on PrefabMaster_C_ExecuteUbergraph_PrefabMaster");
static_assert(sizeof(PrefabMaster_C_ExecuteUbergraph_PrefabMaster) == 0x000004, "Wrong size on PrefabMaster_C_ExecuteUbergraph_PrefabMaster");
static_assert(offsetof(PrefabMaster_C_ExecuteUbergraph_PrefabMaster, EntryPoint) == 0x000000, "Member 'PrefabMaster_C_ExecuteUbergraph_PrefabMaster::EntryPoint' has a wrong offset!");

// Function PrefabMaster.PrefabMaster_C.RemoveFoliageComp
// 0x0220 (0x0220 - 0x0000)
struct PrefabMaster_C_RemoveFoliageComp final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFoliageInstancedStaticMeshComponent*   K2Node_DynamicCast_AsFoliage_Instanced_Static_Mesh_Component; // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInstance_ReturnValue;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrefabMaster_C_RemoveFoliageComp) == 0x000008, "Wrong alignment on PrefabMaster_C_RemoveFoliageComp");
static_assert(sizeof(PrefabMaster_C_RemoveFoliageComp) == 0x000220, "Wrong size on PrefabMaster_C_RemoveFoliageComp");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PrefabMaster_C_RemoveFoliageComp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PrefabMaster_C_RemoveFoliageComp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, Temp_object_Variable) == 0x000010, "Member 'PrefabMaster_C_RemoveFoliageComp::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_SphereTraceMulti_OutHits) == 0x000038, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_SphereTraceMulti_ReturnValue) == 0x000048, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_Array_Get_Item) == 0x000050, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_bBlockingHit) == 0x000139, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013A, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_ImpactPoint) == 0x000160, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_BoneName) == 0x0001C8, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_ElementIndex) == 0x0001D4, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_FaceIndex) == 0x0001D8, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_BreakHitResult_TraceEnd) == 0x0001F8, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, K2Node_DynamicCast_AsFoliage_Instanced_Static_Mesh_Component) == 0x000210, "Member 'PrefabMaster_C_RemoveFoliageComp::K2Node_DynamicCast_AsFoliage_Instanced_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'PrefabMaster_C_RemoveFoliageComp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_RemoveFoliageComp, CallFunc_RemoveInstance_ReturnValue) == 0x000219, "Member 'PrefabMaster_C_RemoveFoliageComp::CallFunc_RemoveInstance_ReturnValue' has a wrong offset!");

// Function PrefabMaster.PrefabMaster_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct PrefabMaster_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrefabMaster_C_UserConstructionScript) == 0x000008, "Wrong alignment on PrefabMaster_C_UserConstructionScript");
static_assert(sizeof(PrefabMaster_C_UserConstructionScript) == 0x000040, "Wrong size on PrefabMaster_C_UserConstructionScript");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PrefabMaster_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PrefabMaster_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PrefabMaster_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, CallFunc_GetAllChildActors_ChildActors) == 0x000010, "Member 'PrefabMaster_C_UserConstructionScript::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'PrefabMaster_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'PrefabMaster_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000030, "Member 'PrefabMaster_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrefabMaster_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PrefabMaster_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

