#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_Manager

#include "Basic.hpp"

#include "ST_Audio_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Switch_Method_structs.hpp"
#include "E_TimeOfDay_structs.hpp"
#include "E_Combat_structs.hpp"


namespace SDK::Params
{

// Function BP_Audio_Manager.BP_Audio_Manager_C.AddToAudioArray
// 0x0008 (0x0008 - 0x0000)
struct BP_Audio_Manager_C_AddToAudioArray final
{
public:
	const class ABP_Audio_Area_C*                 NewArea;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_AddToAudioArray) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_AddToAudioArray");
static_assert(sizeof(BP_Audio_Manager_C_AddToAudioArray) == 0x000008, "Wrong size on BP_Audio_Manager_C_AddToAudioArray");
static_assert(offsetof(BP_Audio_Manager_C_AddToAudioArray, NewArea) == 0x000000, "Member 'BP_Audio_Manager_C_AddToAudioArray::NewArea' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.CheckRandomSounds
// 0x0060 (0x0060 - 0x0000)
struct BP_Audio_Manager_C_CheckRandomSounds final
{
public:
	bool                                          FadeOutSounds;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 IndexesToRemove;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_CheckRandomSounds) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_CheckRandomSounds");
static_assert(sizeof(BP_Audio_Manager_C_CheckRandomSounds) == 0x000060, "Wrong size on BP_Audio_Manager_C_CheckRandomSounds");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, FadeOutSounds) == 0x000000, "Member 'BP_Audio_Manager_C_CheckRandomSounds::FadeOutSounds' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, IndexesToRemove) == 0x000008, "Member 'BP_Audio_Manager_C_CheckRandomSounds::IndexesToRemove' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Audio_Manager_C_CheckRandomSounds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Audio_Manager_C_CheckRandomSounds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_Audio_Manager_C_CheckRandomSounds::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_Audio_Manager_C_CheckRandomSounds::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_Get_Item_1) == 0x00004C, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_Length_ReturnValue_2) == 0x000054, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_CheckRandomSounds, CallFunc_Less_IntInt_ReturnValue_1) == 0x000059, "Member 'BP_Audio_Manager_C_CheckRandomSounds::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.ExecuteUbergraph_BP_Audio_Manager
// 0x0500 (0x0500 - 0x0000)
struct BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_Random_Combat_or_exploration_SelectedAudio; // 0x0028(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Random_Combat_or_exploration_Valid;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ContinueTimeline_Delay;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_Random_Combat_or_exploration_SelectedAudio_1; // 0x0068(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Random_Combat_or_exploration_Valid_1;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_1;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomAudioInteger_ReturnValue;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_Random_Combat_or_exploration_SelectedAudio_2; // 0x0120(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Random_Combat_or_exploration_Valid_2;     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue_1;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Audio_Area_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0158(0x0010)(ReferenceParm)
	class ABP_Audio_Area_C*                       CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_177[0x1];                                      // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Audio_Area_C*                       K2Node_CustomEvent_AreaToRemove;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Audio_Area_C*                       CallFunc_Array_Get_Item_1;                         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_Audio_Area_C*                 K2Node_CustomEvent_NewArea;                        // 0x01A0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Time;                                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   K2Node_Event_Night_;                               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInside;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_AmbientMultiplier;                    // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReverbSettings                        K2Node_Event_ReverbSettings;                       // 0x01D8(0x0020)(NoDestructor)
	class FName                                   K2Node_Event_ReverbAreaName;                       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_ReverbPriority;                       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue_2;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_Combat                                      K2Node_Event_CombatStatus;                         // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B[0x1];                                      // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Audio                              CallFunc_Random_Combat_or_exploration_SelectedAudio_3; // 0x0298(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Random_Combat_or_exploration_Valid_3;     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_Random_Combat_or_exploration_SelectedAudio_4; // 0x02B0(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Random_Combat_or_exploration_Valid_4;     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRandomSounds_FadeOutSounds;          // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Combat                                      Temp_byte_Variable;                                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Combat                                      Temp_byte_Variable_1;                              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_303[0x5];                                      // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue_3;              // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0328(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0338(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAmbientComponent_ReturnValue;          // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Combat                                      Temp_byte_Variable_2;                              // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetAmbientComponent_ReturnValue_1;        // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_2;          // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_3;          // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_4;          // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_5;          // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_6;          // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetMusicComponent_ReturnValue_7;          // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_3;                              // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAmbientComponent_ReturnValue_2;        // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetAmbientComponent_ReturnValue_3;        // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Temp_byte_Variable_4;                              // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_RandomAmbient_SelectedAudio;              // 0x0420(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomAmbient_ValidResult;                // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_RandomAmbient_SelectedAudio_1;            // 0x0438(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomAmbient_ValidResult_1;              // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_5;                           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue_4;              // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast;     // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeInDuration_ImplicitCast;       // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_1; // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_2; // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AmbientSavedSoundVolume_ImplicitCast; // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast_1;   // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeInDuration_ImplicitCast_1;     // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeInDuration_ImplicitCast_2;     // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast_2;   // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ActivateReverbEffect_Priority_ImplicitCast; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_2;            // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_3;            // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast_3;   // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeInDuration_ImplicitCast_3;     // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_4;            // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AmbientSavedSoundVolume_ImplicitCast_1; // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_5;            // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeVolumeLevel_ImplicitCast;      // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FadeIn_FadeVolumeLevel_ImplicitCast_1;    // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager");
static_assert(sizeof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager) == 0x000500, "Wrong size on BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, EntryPoint) == 0x000000, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000004, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_CreateSound2D_ReturnValue) == 0x000018, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_CreateSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_SelectedAudio) == 0x000028, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_SelectedAudio' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_Valid) == 0x000038, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_Valid' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00003A, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsPlaying_ReturnValue) == 0x000048, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_CustomEvent_ContinueTimeline_Delay) == 0x000060, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_CustomEvent_ContinueTimeline_Delay' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_SelectedAudio_1) == 0x000068, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_SelectedAudio_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_Valid_1) == 0x000078, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_Valid_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_BooleanOR_ReturnValue) == 0x000079, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Has_Been_Initd_Variable_1) == 0x000084, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000085, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue) == 0x000088, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_1) == 0x000090, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000B0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000B8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetRandomAudioInteger_ReturnValue) == 0x0000BC, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetRandomAudioInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetComponentBounds_Origin) == 0x0000C8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetComponentBounds_BoxExtent) == 0x0000E0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetComponentBounds_SphereRadius) == 0x0000F8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_IsClosed_Variable) == 0x0000FC, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000100, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_IsClosed_Variable_1) == 0x000118, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_SelectedAudio_2) == 0x000120, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_SelectedAudio_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_Valid_2) == 0x000130, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_Valid_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_3) == 0x000131, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_4) == 0x000132, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_CreateSound2D_ReturnValue_1) == 0x000138, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_CreateSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000140, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_DynamicCast_AsBP_Player_Character) == 0x000148, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000158, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Get_Item) == 0x000168, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Has_Been_Initd_Variable_2) == 0x000175, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_5) == 0x000176, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Add_ReturnValue) == 0x000178, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_6) == 0x00017C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Greater_IntInt_ReturnValue) == 0x00017D, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_IsClosed_Variable_2) == 0x00017E, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Not_PreBool_ReturnValue_1) == 0x00017F, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_CustomEvent_AreaToRemove) == 0x000180, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_CustomEvent_AreaToRemove' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Get_Item_1) == 0x000188, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Length_ReturnValue_1) == 0x000190, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Less_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_RemoveItem_ReturnValue) == 0x000195, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_7) == 0x000196, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000197, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_8) == 0x000198, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_CustomEvent_NewArea) == 0x0001A0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_CustomEvent_NewArea' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Add_ReturnValue_1) == 0x0001A8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0001AC, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_Time) == 0x0001B0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_Night_) == 0x0001B8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_Night_' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Has_Been_Initd_Variable_3) == 0x0001B9, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_bInside) == 0x0001C8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_bInside' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_AmbientMultiplier) == 0x0001D0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_AmbientMultiplier' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_ReverbSettings) == 0x0001D8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_ReverbSettings' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_ReverbAreaName) == 0x0001F8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_ReverbAreaName' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_ReverbPriority) == 0x000200, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_ReverbPriority' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_CreateSound2D_ReturnValue_2) == 0x000208, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_CreateSound2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Event_CombatStatus) == 0x000210, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Event_CombatStatus' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_int_Array_Index_Variable_2) == 0x000214, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_IsClosed_Variable_3) == 0x000218, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000219, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00021A, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_int_Loop_Counter_Variable_2) == 0x00021C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000220, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000228, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000240, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsOverlappingActor_ReturnValue) == 0x000258, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_VSize_ReturnValue) == 0x000260, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000268, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_9) == 0x000269, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Get_Item_2) == 0x000270, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_10) == 0x000278, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Length_ReturnValue_2) == 0x00027C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Less_IntInt_ReturnValue_2) == 0x000280, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Has_Been_Initd_Variable_4) == 0x000281, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable) == 0x000288, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_1) == 0x000290, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_SelectedAudio_3) == 0x000298, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_SelectedAudio_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_Valid_3) == 0x0002A8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_Valid_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_SelectedAudio_4) == 0x0002B0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_SelectedAudio_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Random_Combat_or_exploration_Valid_4) == 0x0002C0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Random_Combat_or_exploration_Valid_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_CheckRandomSounds_FadeOutSounds) == 0x0002C1, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_CheckRandomSounds_FadeOutSounds' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0002C8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_byte_Variable) == 0x0002D0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002D1, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002D2, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Variable) == 0x0002D3, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_BooleanAND_ReturnValue) == 0x0002D4, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_2) == 0x0002D8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_3) == 0x0002E0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Select_Default) == 0x0002E8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_byte_Variable_1) == 0x0002F0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Select_Default_1) == 0x0002F8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_IsClosed_Variable_4) == 0x000300, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_11) == 0x000301, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_12) == 0x000302, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_CreateSound2D_ReturnValue_3) == 0x000308, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_CreateSound2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000310, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Array_Add_ReturnValue_2) == 0x000318, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Select_Default_2) == 0x000320, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_CreateDelegate_OutputDelegate) == 0x000328, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000338, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Not_PreBool_ReturnValue_3) == 0x000340, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_BooleanAND_ReturnValue_1) == 0x000341, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_4) == 0x000348, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_5) == 0x000350, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetAmbientComponent_ReturnValue) == 0x000358, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetAmbientComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_13) == 0x000360, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_byte_Variable_2) == 0x000361, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetAmbientComponent_ReturnValue_1) == 0x000368, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetAmbientComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Select_Default_3) == 0x000370, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_2) == 0x000378, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Lerp_ReturnValue) == 0x000380, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_14) == 0x000388, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_6) == 0x000390, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_3) == 0x000398, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_7) == 0x0003A0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_4) == 0x0003A8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_15) == 0x0003B0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_Has_Been_Initd_Variable_5) == 0x0003B1, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_5) == 0x0003B8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_6) == 0x0003C0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_16) == 0x0003C8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetMusicComponent_ReturnValue_7) == 0x0003D0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetMusicComponent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_byte_Variable_3) == 0x0003D8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_8) == 0x0003E0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetAmbientComponent_ReturnValue_2) == 0x0003E8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetAmbientComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_real_Variable_9) == 0x0003F0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_17) == 0x0003F8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_GetAmbientComponent_ReturnValue_3) == 0x000400, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_GetAmbientComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_bool_IsClosed_Variable_5) == 0x000408, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_18) == 0x000409, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, Temp_byte_Variable_4) == 0x00040A, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_19) == 0x00040B, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Select_Default_4) == 0x000410, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_IsValid_ReturnValue_20) == 0x000418, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomAmbient_SelectedAudio) == 0x000420, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomAmbient_SelectedAudio' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomAmbient_ValidResult) == 0x000430, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomAmbient_ValidResult' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomAmbient_SelectedAudio_1) == 0x000438, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomAmbient_SelectedAudio_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RandomAmbient_ValidResult_1) == 0x000448, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RandomAmbient_ValidResult_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_Select_Default_5) == 0x000450, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Lerp_ReturnValue_1) == 0x000458, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_CreateSound2D_ReturnValue_4) == 0x000460, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_CreateSound2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeOut_FadeOutDuration_ImplicitCast) == 0x000468, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeOut_FadeOutDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x00046C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000470, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeIn_FadeInDuration_ImplicitCast) == 0x000474, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeIn_FadeInDuration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000478, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RetriggerableDelay_Duration_ImplicitCast_1) == 0x000480, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RetriggerableDelay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_RetriggerableDelay_Duration_ImplicitCast_2) == 0x000484, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_RetriggerableDelay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000488, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_VariableSet_AmbientSavedSoundVolume_ImplicitCast) == 0x000490, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_VariableSet_AmbientSavedSoundVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeOut_FadeOutDuration_ImplicitCast_1) == 0x000498, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeOut_FadeOutDuration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeIn_FadeInDuration_ImplicitCast_1) == 0x00049C, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeIn_FadeInDuration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Delay_Duration_ImplicitCast) == 0x0004A0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeIn_FadeInDuration_ImplicitCast_2) == 0x0004A4, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeIn_FadeInDuration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0004A8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeOut_FadeOutDuration_ImplicitCast_2) == 0x0004AC, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeOut_FadeOutDuration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_ActivateReverbEffect_Priority_ImplicitCast) == 0x0004B0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_ActivateReverbEffect_Priority_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Delay_Duration_ImplicitCast_2) == 0x0004B4, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Delay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Delay_Duration_ImplicitCast_3) == 0x0004B8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Delay_Duration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeOut_FadeOutDuration_ImplicitCast_3) == 0x0004BC, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeOut_FadeOutDuration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeIn_FadeInDuration_ImplicitCast_3) == 0x0004C0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeIn_FadeInDuration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Delay_Duration_ImplicitCast_4) == 0x0004C4, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Delay_Duration_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, K2Node_VariableSet_AmbientSavedSoundVolume_ImplicitCast_1) == 0x0004C8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::K2Node_VariableSet_AmbientSavedSoundVolume_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Delay_Duration_ImplicitCast_5) == 0x0004D0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Delay_Duration_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeIn_FadeVolumeLevel_ImplicitCast) == 0x0004D4, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeIn_FadeVolumeLevel_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x0004D8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x0004DC, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x0004E0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0004E8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0004F0, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager, CallFunc_FadeIn_FadeVolumeLevel_ImplicitCast_1) == 0x0004F8, "Member 'BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager::CallFunc_FadeIn_FadeVolumeLevel_ImplicitCast_1' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.GetAmbientComponent
// 0x0018 (0x0018 - 0x0000)
struct BP_Audio_Manager_C_GetAmbientComponent final
{
public:
	class UAudioComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_GetAmbientComponent) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_GetAmbientComponent");
static_assert(sizeof(BP_Audio_Manager_C_GetAmbientComponent) == 0x000018, "Wrong size on BP_Audio_Manager_C_GetAmbientComponent");
static_assert(offsetof(BP_Audio_Manager_C_GetAmbientComponent, ReturnValue) == 0x000000, "Member 'BP_Audio_Manager_C_GetAmbientComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetAmbientComponent, Temp_bool_Variable) == 0x000008, "Member 'BP_Audio_Manager_C_GetAmbientComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetAmbientComponent, K2Node_Select_Default) == 0x000010, "Member 'BP_Audio_Manager_C_GetAmbientComponent::K2Node_Select_Default' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.GetMusicComponent
// 0x0018 (0x0018 - 0x0000)
struct BP_Audio_Manager_C_GetMusicComponent final
{
public:
	class UAudioComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_GetMusicComponent) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_GetMusicComponent");
static_assert(sizeof(BP_Audio_Manager_C_GetMusicComponent) == 0x000018, "Wrong size on BP_Audio_Manager_C_GetMusicComponent");
static_assert(offsetof(BP_Audio_Manager_C_GetMusicComponent, ReturnValue) == 0x000000, "Member 'BP_Audio_Manager_C_GetMusicComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetMusicComponent, Temp_bool_Variable) == 0x000008, "Member 'BP_Audio_Manager_C_GetMusicComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetMusicComponent, K2Node_Select_Default) == 0x000010, "Member 'BP_Audio_Manager_C_GetMusicComponent::K2Node_Select_Default' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.GetRandomAudioInteger
// 0x0020 (0x0020 - 0x0000)
struct BP_Audio_Manager_C_GetRandomAudioInteger final
{
public:
	TArray<struct FST_Audio>                      TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_GetRandomAudioInteger) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_GetRandomAudioInteger");
static_assert(sizeof(BP_Audio_Manager_C_GetRandomAudioInteger) == 0x000020, "Wrong size on BP_Audio_Manager_C_GetRandomAudioInteger");
static_assert(offsetof(BP_Audio_Manager_C_GetRandomAudioInteger, TargetArray) == 0x000000, "Member 'BP_Audio_Manager_C_GetRandomAudioInteger::TargetArray' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetRandomAudioInteger, ReturnValue) == 0x000010, "Member 'BP_Audio_Manager_C_GetRandomAudioInteger::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetRandomAudioInteger, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_Audio_Manager_C_GetRandomAudioInteger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetRandomAudioInteger, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_Audio_Manager_C_GetRandomAudioInteger::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_GetRandomAudioInteger, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00001C, "Member 'BP_Audio_Manager_C_GetRandomAudioInteger::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.HideAllAreaVisualizers
// 0x0038 (0x0038 - 0x0000)
struct BP_Audio_Manager_C_HideAllAreaVisualizers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Audio_Area_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Audio_Area_C*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_HideAllAreaVisualizers) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_HideAllAreaVisualizers");
static_assert(sizeof(BP_Audio_Manager_C_HideAllAreaVisualizers) == 0x000038, "Wrong size on BP_Audio_Manager_C_HideAllAreaVisualizers");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_HideAllAreaVisualizers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Audio_Manager_C_HideAllAreaVisualizers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.PlayDelayedMusic
// 0x0001 (0x0001 - 0x0000)
struct BP_Audio_Manager_C_PlayDelayedMusic final
{
public:
	bool                                          ContinueTimeline_Delay;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_PlayDelayedMusic) == 0x000001, "Wrong alignment on BP_Audio_Manager_C_PlayDelayedMusic");
static_assert(sizeof(BP_Audio_Manager_C_PlayDelayedMusic) == 0x000001, "Wrong size on BP_Audio_Manager_C_PlayDelayedMusic");
static_assert(offsetof(BP_Audio_Manager_C_PlayDelayedMusic, ContinueTimeline_Delay) == 0x000000, "Member 'BP_Audio_Manager_C_PlayDelayedMusic::ContinueTimeline_Delay' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.Random Combat or exploration
// 0x0048 (0x0048 - 0x0000)
struct BP_Audio_Manager_C_Random_Combat_or_exploration final
{
public:
	struct FST_Audio                              SelectedAudio;                                     // 0x0000(0x0010)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomAudioInteger_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_Audio                              CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomAudioInteger_ReturnValue_1;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Audio                              CallFunc_Array_Get_Item_1;                         // 0x0038(0x0010)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_Random_Combat_or_exploration) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_Random_Combat_or_exploration");
static_assert(sizeof(BP_Audio_Manager_C_Random_Combat_or_exploration) == 0x000048, "Wrong size on BP_Audio_Manager_C_Random_Combat_or_exploration");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, SelectedAudio) == 0x000000, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::SelectedAudio' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, Valid) == 0x000010, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::Valid' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, CallFunc_GetRandomAudioInteger_ReturnValue) == 0x000014, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::CallFunc_GetRandomAudioInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000030, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, CallFunc_GetRandomAudioInteger_ReturnValue_1) == 0x000034, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::CallFunc_GetRandomAudioInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_Random_Combat_or_exploration, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_Audio_Manager_C_Random_Combat_or_exploration::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.RandomAmbient
// 0x0028 (0x0028 - 0x0000)
struct BP_Audio_Manager_C_RandomAmbient final
{
public:
	struct FST_Audio                              SelectedAudio;                                     // 0x0000(0x0010)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidResult;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRandomAudioInteger_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Audio                              CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_RandomAmbient) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_RandomAmbient");
static_assert(sizeof(BP_Audio_Manager_C_RandomAmbient) == 0x000028, "Wrong size on BP_Audio_Manager_C_RandomAmbient");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbient, SelectedAudio) == 0x000000, "Member 'BP_Audio_Manager_C_RandomAmbient::SelectedAudio' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbient, ValidResult) == 0x000010, "Member 'BP_Audio_Manager_C_RandomAmbient::ValidResult' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbient, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000011, "Member 'BP_Audio_Manager_C_RandomAmbient::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbient, CallFunc_GetRandomAudioInteger_ReturnValue) == 0x000014, "Member 'BP_Audio_Manager_C_RandomAmbient::CallFunc_GetRandomAudioInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbient, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Audio_Manager_C_RandomAmbient::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.RandomAmbientTrace
// 0x02E8 (0x02E8 - 0x0000)
struct BP_Audio_Manager_C_RandomAmbientTrace final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB[0x1];                                      // 0x01EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_RandomAmbientTrace) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_RandomAmbientTrace");
static_assert(sizeof(BP_Audio_Manager_C_RandomAmbientTrace) == 0x0002E8, "Wrong size on BP_Audio_Manager_C_RandomAmbientTrace");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, Location) == 0x000000, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::Location' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, Condition) == 0x000018, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::Condition' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, Temp_object_Variable) == 0x000020, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_GetActorForwardVector_ReturnValue) == 0x000068, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_RandomFloatInRange_ReturnValue) == 0x000080, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_RandomRotator_ReturnValue) == 0x0000A0, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000B8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_LineTraceSingle_OutHit) == 0x000100, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x0001E8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0001E9, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001EA, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_Time) == 0x0001EC, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_Distance) == 0x0001F0, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_Location) == 0x0001F8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000210, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_Normal) == 0x000228, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000240, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_PhysMat) == 0x000258, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_HitActor) == 0x000260, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_HitComponent) == 0x000268, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000270, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_BoneName) == 0x000278, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_HitItem) == 0x000280, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_ElementIndex) == 0x000284, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000288, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_TraceStart) == 0x000290, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0002A8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakVector_X_1) == 0x0002C0, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakVector_Y_1) == 0x0002C8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_BreakVector_Z_1) == 0x0002D0, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_RandomAmbientTrace, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x0002E0, "Member 'BP_Audio_Manager_C_RandomAmbientTrace::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.RemoveFromArray
// 0x0008 (0x0008 - 0x0000)
struct BP_Audio_Manager_C_RemoveFromArray final
{
public:
	class ABP_Audio_Area_C*                       AreaToRemove;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_RemoveFromArray) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_RemoveFromArray");
static_assert(sizeof(BP_Audio_Manager_C_RemoveFromArray) == 0x000008, "Wrong size on BP_Audio_Manager_C_RemoveFromArray");
static_assert(offsetof(BP_Audio_Manager_C_RemoveFromArray, AreaToRemove) == 0x000000, "Member 'BP_Audio_Manager_C_RemoveFromArray::AreaToRemove' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.SetAmbientVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_Audio_Manager_C_SetAmbientVolume final
{
public:
	double                                        NewVolumeMultiplier;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_SetAmbientVolume) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_SetAmbientVolume");
static_assert(sizeof(BP_Audio_Manager_C_SetAmbientVolume) == 0x000018, "Wrong size on BP_Audio_Manager_C_SetAmbientVolume");
static_assert(offsetof(BP_Audio_Manager_C_SetAmbientVolume, NewVolumeMultiplier) == 0x000000, "Member 'BP_Audio_Manager_C_SetAmbientVolume::NewVolumeMultiplier' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAmbientVolume, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Audio_Manager_C_SetAmbientVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAmbientVolume, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_Audio_Manager_C_SetAmbientVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAmbientVolume, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x00000C, "Member 'BP_Audio_Manager_C_SetAmbientVolume::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAmbientVolume, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1) == 0x000010, "Member 'BP_Audio_Manager_C_SetAmbientVolume::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.SetAudioVariables
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Audio_Manager_C_SetAudioVariables final
{
public:
	class ABP_Audio_Area_C*                       AudioAreaReference_0;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Switch_Method                               Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Switch_Method                               Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Switch_Method                               Temp_byte_Variable_2;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_11;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Switch_Method                               Temp_byte_Variable_3;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_3;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_SetAudioVariables) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_SetAudioVariables");
static_assert(sizeof(BP_Audio_Manager_C_SetAudioVariables) == 0x0000C0, "Wrong size on BP_Audio_Manager_C_SetAudioVariables");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, AudioAreaReference_0) == 0x000000, "Member 'BP_Audio_Manager_C_SetAudioVariables::AudioAreaReference_0' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_byte_Variable) == 0x000008, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable) == 0x000010, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_1) == 0x000018, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_2) == 0x000020, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_3) == 0x000028, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_4) == 0x000030, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, K2Node_Select_Default) == 0x000038, "Member 'BP_Audio_Manager_C_SetAudioVariables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_5) == 0x000040, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_6) == 0x000048, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_byte_Variable_1) == 0x000050, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, K2Node_Select_Default_1) == 0x000058, "Member 'BP_Audio_Manager_C_SetAudioVariables::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_7) == 0x000060, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'BP_Audio_Manager_C_SetAudioVariables::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_8) == 0x000070, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_9) == 0x000078, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_10) == 0x000080, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_byte_Variable_2) == 0x000088, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_11) == 0x000090, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, K2Node_Select_Default_2) == 0x000098, "Member 'BP_Audio_Manager_C_SetAudioVariables::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_12) == 0x0000A0, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_real_Variable_13) == 0x0000A8, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, Temp_byte_Variable_3) == 0x0000B0, "Member 'BP_Audio_Manager_C_SetAudioVariables::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetAudioVariables, K2Node_Select_Default_3) == 0x0000B8, "Member 'BP_Audio_Manager_C_SetAudioVariables::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.SetFloatParametersCombat
// 0x0018 (0x0018 - 0x0000)
struct BP_Audio_Manager_C_SetFloatParametersCombat final
{
public:
	double                                        Combat;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_SetFloatParametersCombat) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_SetFloatParametersCombat");
static_assert(sizeof(BP_Audio_Manager_C_SetFloatParametersCombat) == 0x000018, "Wrong size on BP_Audio_Manager_C_SetFloatParametersCombat");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersCombat, Combat) == 0x000000, "Member 'BP_Audio_Manager_C_SetFloatParametersCombat::Combat' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersCombat, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Audio_Manager_C_SetFloatParametersCombat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersCombat, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_Audio_Manager_C_SetFloatParametersCombat::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersCombat, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x00000C, "Member 'BP_Audio_Manager_C_SetFloatParametersCombat::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersCombat, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000010, "Member 'BP_Audio_Manager_C_SetFloatParametersCombat::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.SetFloatParametersTimeOfDay
// 0x0040 (0x0040 - 0x0000)
struct BP_Audio_Manager_C_SetFloatParametersTimeOfDay final
{
public:
	double                                        TimeOfDay_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_2; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_3; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_4; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_SetFloatParametersTimeOfDay");
static_assert(sizeof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay) == 0x000040, "Wrong size on BP_Audio_Manager_C_SetFloatParametersTimeOfDay");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, TimeOfDay_0) == 0x000000, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::TimeOfDay_0' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_IsValid_ReturnValue_2) == 0x00002A, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_IsValid_ReturnValue_3) == 0x00002B, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x00002C, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000030, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_SetFloatParameter_InFloat_ImplicitCast_2) == 0x000034, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_SetFloatParameter_InFloat_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_SetFloatParameter_InFloat_ImplicitCast_3) == 0x000038, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_SetFloatParameter_InFloat_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetFloatParametersTimeOfDay, CallFunc_SetFloatParameter_InFloat_ImplicitCast_4) == 0x00003C, "Member 'BP_Audio_Manager_C_SetFloatParametersTimeOfDay::CallFunc_SetFloatParameter_InFloat_ImplicitCast_4' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.SetInside
// 0x0040 (0x0040 - 0x0000)
struct BP_Audio_Manager_C_SetInside final
{
public:
	bool                                          bInside;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AmbientMultiplier;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FReverbSettings                        ReverbSettings;                                    // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FName                                   ReverbAreaName;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReverbPriority;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_SetInside) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_SetInside");
static_assert(sizeof(BP_Audio_Manager_C_SetInside) == 0x000040, "Wrong size on BP_Audio_Manager_C_SetInside");
static_assert(offsetof(BP_Audio_Manager_C_SetInside, bInside) == 0x000000, "Member 'BP_Audio_Manager_C_SetInside::bInside' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetInside, AmbientMultiplier) == 0x000008, "Member 'BP_Audio_Manager_C_SetInside::AmbientMultiplier' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetInside, ReverbSettings) == 0x000010, "Member 'BP_Audio_Manager_C_SetInside::ReverbSettings' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetInside, ReverbAreaName) == 0x000030, "Member 'BP_Audio_Manager_C_SetInside::ReverbAreaName' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_SetInside, ReverbPriority) == 0x000038, "Member 'BP_Audio_Manager_C_SetInside::ReverbPriority' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.ShowAllAreaVisualizers
// 0x0038 (0x0038 - 0x0000)
struct BP_Audio_Manager_C_ShowAllAreaVisualizers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Audio_Area_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Audio_Area_C*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_ShowAllAreaVisualizers) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_ShowAllAreaVisualizers");
static_assert(sizeof(BP_Audio_Manager_C_ShowAllAreaVisualizers) == 0x000038, "Wrong size on BP_Audio_Manager_C_ShowAllAreaVisualizers");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_ShowAllAreaVisualizers, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Audio_Manager_C_ShowAllAreaVisualizers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.UpdateCombatStatus
// 0x0001 (0x0001 - 0x0000)
struct BP_Audio_Manager_C_UpdateCombatStatus final
{
public:
	E_Combat                                      CombatStatus_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_UpdateCombatStatus) == 0x000001, "Wrong alignment on BP_Audio_Manager_C_UpdateCombatStatus");
static_assert(sizeof(BP_Audio_Manager_C_UpdateCombatStatus) == 0x000001, "Wrong size on BP_Audio_Manager_C_UpdateCombatStatus");
static_assert(offsetof(BP_Audio_Manager_C_UpdateCombatStatus, CombatStatus_0) == 0x000000, "Member 'BP_Audio_Manager_C_UpdateCombatStatus::CombatStatus_0' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.UpdateTimeOfDay
// 0x0010 (0x0010 - 0x0000)
struct BP_Audio_Manager_C_UpdateTimeOfDay final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TimeOfDay                                   Night_;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_UpdateTimeOfDay) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_UpdateTimeOfDay");
static_assert(sizeof(BP_Audio_Manager_C_UpdateTimeOfDay) == 0x000010, "Wrong size on BP_Audio_Manager_C_UpdateTimeOfDay");
static_assert(offsetof(BP_Audio_Manager_C_UpdateTimeOfDay, Time) == 0x000000, "Member 'BP_Audio_Manager_C_UpdateTimeOfDay::Time' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_UpdateTimeOfDay, Night_) == 0x000008, "Member 'BP_Audio_Manager_C_UpdateTimeOfDay::Night_' has a wrong offset!");

// Function BP_Audio_Manager.BP_Audio_Manager_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_Audio_Manager_C_UserConstructionScript final
{
public:
	TArray<class ABP_Audio_Area_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	TArray<class ABP_Audio_Manager_C*>            CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0010(0x0010)(ReferenceParm)
	class ABP_Audio_Area_C*                       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Manager_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Audio_Manager_C_UserConstructionScript");
static_assert(sizeof(BP_Audio_Manager_C_UserConstructionScript) == 0x000030, "Wrong size on BP_Audio_Manager_C_UserConstructionScript");
static_assert(offsetof(BP_Audio_Manager_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_Audio_Manager_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000010, "Member 'BP_Audio_Manager_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Audio_Manager_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_Audio_Manager_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_Audio_Manager_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Manager_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x00002D, "Member 'BP_Audio_Manager_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

