#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameFunctionLibrary

#include "Basic.hpp"

#include "Enum_RadiationLevel_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "Struct_ItemsToSell_structs.hpp"
#include "Enum_ContainerLootTables_structs.hpp"
#include "Enum_AILootTables_structs.hpp"
#include "Enum_VendorTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_CraftingTableTypes_structs.hpp"
#include "InputCore_structs.hpp"
#include "Struct_ItemsToCraft_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "Enum_LootType_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_UniqueLoot_structs.hpp"
#include "RandomContainerItem_structs.hpp"
#include "Struct_Difficulty_structs.hpp"
#include "Enum_Difficulty_structs.hpp"
#include "AutoSettings_structs.hpp"
#include "S_NotificationDetails_structs.hpp"
#include "Enum_LootDifficulties_structs.hpp"


namespace SDK::Params
{

// Function GameFunctionLibrary.GameFunctionLibrary_C.AddUniqueLoot
// 0x00D0 (0x00D0 - 0x0000)
struct GameFunctionLibrary_C_AddUniqueLoot final
{
public:
	TArray<class FName>                           UnqiueItemsSet;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Container;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_UniqueLoot                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomContainerItem                   CallFunc_Array_Get_Item_1;                         // 0x0068(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_AddUniqueLoot) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_AddUniqueLoot");
static_assert(sizeof(GameFunctionLibrary_C_AddUniqueLoot) == 0x0000D0, "Wrong size on GameFunctionLibrary_C_AddUniqueLoot");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, UnqiueItemsSet) == 0x000000, "Member 'GameFunctionLibrary_C_AddUniqueLoot::UnqiueItemsSet' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, JigComp) == 0x000010, "Member 'GameFunctionLibrary_C_AddUniqueLoot::JigComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, Container) == 0x000018, "Member 'GameFunctionLibrary_C_AddUniqueLoot::Container' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, __WorldContext) == 0x000020, "Member 'GameFunctionLibrary_C_AddUniqueLoot::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, Temp_int_Array_Index_Variable) == 0x000028, "Member 'GameFunctionLibrary_C_AddUniqueLoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Array_Get_Item) == 0x00002C, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'GameFunctionLibrary_C_AddUniqueLoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'GameFunctionLibrary_C_AddUniqueLoot::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C0, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'GameFunctionLibrary_C_AddUniqueLoot::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C8, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_AddUniqueLoot, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'GameFunctionLibrary_C_AddUniqueLoot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.ApplyMedicalEffect
// 0x00A0 (0x00A0 - 0x0000)
struct GameFunctionLibrary_C_ApplyMedicalEffect final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Medical_Effects;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        ChanceForBleed;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChanceForHeavyBleed;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChanceForBrokenBone;                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMedicalComponent_C*                    MedicalComp;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMedicalComponent_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_ApplyMedicalEffect) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_ApplyMedicalEffect");
static_assert(sizeof(GameFunctionLibrary_C_ApplyMedicalEffect) == 0x0000A0, "Wrong size on GameFunctionLibrary_C_ApplyMedicalEffect");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, Actor) == 0x000000, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::Actor' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, Medical_Effects) == 0x000008, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::Medical_Effects' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, ChanceForBleed) == 0x000018, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::ChanceForBleed' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, ChanceForHeavyBleed) == 0x000020, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::ChanceForHeavyBleed' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, ChanceForBrokenBone) == 0x000028, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::ChanceForBrokenBone' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, __WorldContext) == 0x000030, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, MedicalComp) == 0x000038, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::MedicalComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_GetBoolCVar_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_RandomFloatInRange_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000070, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000080, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_Array_Get_Item) == 0x00008C, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, K2Node_SwitchName_CmpSuccess) == 0x000094, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyMedicalEffect, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'GameFunctionLibrary_C_ApplyMedicalEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.ApplyRadiationDamage
// 0x0168 (0x0168 - 0x0000)
struct GameFunctionLibrary_C_ApplyRadiationDamage final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ChanceForRadDamage;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RadDamage;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMaskProtect_;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URadiationComponent_C*                  RadiationComp;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URadiationComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRespiratorStat_MinValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRespiratorStat_MaxValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRespiratorFilter_Found_;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetRespiratorFilter_ItemInfo;             // 0x0070(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_ApplyRadiationDamage) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_ApplyRadiationDamage");
static_assert(sizeof(GameFunctionLibrary_C_ApplyRadiationDamage) == 0x000168, "Wrong size on GameFunctionLibrary_C_ApplyRadiationDamage");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, Actor) == 0x000000, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::Actor' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, ChanceForRadDamage) == 0x000008, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::ChanceForRadDamage' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, RadDamage) == 0x000010, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::RadDamage' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CanMaskProtect_) == 0x000018, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CanMaskProtect_' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, __WorldContext) == 0x000020, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, RadiationComp) == 0x000028, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::RadiationComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_GetRespiratorStat_MinValue) == 0x000040, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_GetRespiratorStat_MinValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_GetRespiratorStat_MaxValue) == 0x000048, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_GetRespiratorStat_MaxValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_GetRespiratorFilter_Found_) == 0x000068, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_GetRespiratorFilter_Found_' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_GetRespiratorFilter_ItemInfo) == 0x000070, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_GetRespiratorFilter_ItemInfo' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_BooleanAND_ReturnValue) == 0x000148, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000149, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_RandomFloatInRange_ReturnValue) == 0x000150, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_SelectFloat_ReturnValue) == 0x000158, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ApplyRadiationDamage, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000160, "Member 'GameFunctionLibrary_C_ApplyRadiationDamage::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.CastToCharacter
// 0x0030 (0x0030 - 0x0000)
struct GameFunctionLibrary_C_CastToCharacter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_CastToCharacter) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_CastToCharacter");
static_assert(sizeof(GameFunctionLibrary_C_CastToCharacter) == 0x000030, "Wrong size on GameFunctionLibrary_C_CastToCharacter");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_CastToCharacter::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, Character) == 0x000008, "Member 'GameFunctionLibrary_C_CastToCharacter::Character' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_CastToCharacter::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_CastToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, K2Node_DynamicCast_AsBP_Player_Character) == 0x000020, "Member 'GameFunctionLibrary_C_CastToCharacter::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GameFunctionLibrary_C_CastToCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'GameFunctionLibrary_C_CastToCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.CastToController
// 0x0028 (0x0028 - 0x0000)
struct GameFunctionLibrary_C_CastToController final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 Controller;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_CastToController) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_CastToController");
static_assert(sizeof(GameFunctionLibrary_C_CastToController) == 0x000028, "Wrong size on GameFunctionLibrary_C_CastToController");
static_assert(offsetof(GameFunctionLibrary_C_CastToController, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_CastToController::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToController, Controller) == 0x000008, "Member 'GameFunctionLibrary_C_CastToController::Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToController, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_CastToController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToController, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000018, "Member 'GameFunctionLibrary_C_CastToController::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToController, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GameFunctionLibrary_C_CastToController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CastToController, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'GameFunctionLibrary_C_CastToController::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.Centre Cursor
// 0x0020 (0x0020 - 0x0000)
struct GameFunctionLibrary_C_Centre_Cursor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_Centre_Cursor) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_Centre_Cursor");
static_assert(sizeof(GameFunctionLibrary_C_Centre_Cursor) == 0x000020, "Wrong size on GameFunctionLibrary_C_Centre_Cursor");
static_assert(offsetof(GameFunctionLibrary_C_Centre_Cursor, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_Centre_Cursor::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_Centre_Cursor, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'GameFunctionLibrary_C_Centre_Cursor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_Centre_Cursor, CallFunc_GetViewportSize_SizeX) == 0x000010, "Member 'GameFunctionLibrary_C_Centre_Cursor::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_Centre_Cursor, CallFunc_GetViewportSize_SizeY) == 0x000014, "Member 'GameFunctionLibrary_C_Centre_Cursor::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_Centre_Cursor, CallFunc_Divide_IntInt_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_Centre_Cursor::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_Centre_Cursor, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00001C, "Member 'GameFunctionLibrary_C_Centre_Cursor::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.ChangeDifficulty
// 0x01C0 (0x01C0 - 0x0000)
struct GameFunctionLibrary_C_ChangeDifficulty final
{
public:
	Enum_Difficulty                               Difficulty;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USD_GameInstance_C*                     CallFunc_GetGameInstance_Instance;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	struct FStruct_Difficulty                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x00B0)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0180(0x0040)(HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_ChangeDifficulty) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_ChangeDifficulty");
static_assert(sizeof(GameFunctionLibrary_C_ChangeDifficulty) == 0x0001C0, "Wrong size on GameFunctionLibrary_C_ChangeDifficulty");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, Difficulty) == 0x000000, "Member 'GameFunctionLibrary_C_ChangeDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_ChangeDifficulty::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_GetGameInstance_Instance) == 0x000010, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_GetGameInstance_Instance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_GetGameHUD_HUD) == 0x000018, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'GameFunctionLibrary_C_ChangeDifficulty::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, K2Node_MakeArray_Array) == 0x000158, "Member 'GameFunctionLibrary_C_ChangeDifficulty::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, CallFunc_Format_ReturnValue) == 0x000168, "Member 'GameFunctionLibrary_C_ChangeDifficulty::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ChangeDifficulty, K2Node_MakeStruct_S_NotificationDetails) == 0x000180, "Member 'GameFunctionLibrary_C_ChangeDifficulty::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.CreateNotificationUI
// 0x00A8 (0x00A8 - 0x0000)
struct GameFunctionLibrary_C_CreateNotificationUI final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             Icon;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Colour;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force_Notification_;                               // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0048(0x0040)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            K2Node_DynamicCast_AsHUD_Game;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_CreateNotificationUI) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_CreateNotificationUI");
static_assert(sizeof(GameFunctionLibrary_C_CreateNotificationUI) == 0x0000A8, "Wrong size on GameFunctionLibrary_C_CreateNotificationUI");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, Message) == 0x000000, "Member 'GameFunctionLibrary_C_CreateNotificationUI::Message' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, Icon) == 0x000018, "Member 'GameFunctionLibrary_C_CreateNotificationUI::Icon' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, Icon_Colour) == 0x000020, "Member 'GameFunctionLibrary_C_CreateNotificationUI::Icon_Colour' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, Delay) == 0x000030, "Member 'GameFunctionLibrary_C_CreateNotificationUI::Delay' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, Force_Notification_) == 0x000038, "Member 'GameFunctionLibrary_C_CreateNotificationUI::Force_Notification_' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, __WorldContext) == 0x000040, "Member 'GameFunctionLibrary_C_CreateNotificationUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, K2Node_MakeStruct_S_NotificationDetails) == 0x000048, "Member 'GameFunctionLibrary_C_CreateNotificationUI::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'GameFunctionLibrary_C_CreateNotificationUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, CallFunc_GetHUD_ReturnValue) == 0x000090, "Member 'GameFunctionLibrary_C_CreateNotificationUI::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, K2Node_DynamicCast_AsHUD_Game) == 0x000098, "Member 'GameFunctionLibrary_C_CreateNotificationUI::K2Node_DynamicCast_AsHUD_Game' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateNotificationUI, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'GameFunctionLibrary_C_CreateNotificationUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.CreateZoneAreaUI
// 0x0060 (0x0060 - 0x0000)
struct GameFunctionLibrary_C_CreateZoneAreaUI final
{
public:
	bool                                          Entering_Area_;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Area_Name;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture*                               Texture;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            K2Node_DynamicCast_AsHUD_Game;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_CreateZoneAreaUI) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_CreateZoneAreaUI");
static_assert(sizeof(GameFunctionLibrary_C_CreateZoneAreaUI) == 0x000060, "Wrong size on GameFunctionLibrary_C_CreateZoneAreaUI");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, Entering_Area_) == 0x000000, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::Entering_Area_' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, Area_Name) == 0x000008, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::Area_Name' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, Texture) == 0x000020, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::Texture' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, Color) == 0x000028, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::Color' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, __WorldContext) == 0x000038, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, CallFunc_GetHUD_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, K2Node_DynamicCast_AsHUD_Game) == 0x000050, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::K2Node_DynamicCast_AsHUD_Game' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_CreateZoneAreaUI, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GameFunctionLibrary_C_CreateZoneAreaUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.DestroyAllActors
// 0x0408 (0x0408 - 0x0000)
struct GameFunctionLibrary_C_DestroyAllActors final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MasterQuestObject_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerMarker_C*>             CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0028(0x0010)(ReferenceParm)
	TArray<class ABP_Marker_C*>                   CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Marker_C*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CompassMarker_C*>            CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SkeletalMeshPickup_C*>       CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x0078(0x0010)(ReferenceParm)
	TArray<class ABP_StaticMeshPickup_C*>         CallFunc_GetAllActorsOfClass_OutActors_5;          // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_MinimapSystem_C*                   CallFunc_Get_Minimap_Component_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EventMaster_C*>              CallFunc_GetAllActorsOfClass_OutActors_6;          // 0x00A8(0x0010)(ReferenceParm)
	TArray<class AUltra_Dynamic_Sky_C*>           CallFunc_GetAllActorsOfClass_OutActors_7;          // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AUltra_Dynamic_Weather_C*>       CallFunc_GetAllActorsOfClass_OutActors_8;          // 0x00D0(0x0010)(ReferenceParm)
	TArray<class ABP_ProjectileMaster_C*>         CallFunc_GetAllActorsOfClass_OutActors_9;          // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AI_C*>                       CallFunc_GetAllActorsOfClass_OutActors_10;         // 0x00F8(0x0010)(ReferenceParm)
	TArray<class ABP_MasterTurret_C*>             CallFunc_GetAllActorsOfClass_OutActors_11;         // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MasterCamera_C*>             CallFunc_GetAllActorsOfClass_OutActors_12;         // 0x0120(0x0010)(ReferenceParm)
	TArray<class ABP_AIWeapon_Master_C*>          CallFunc_GetAllActorsOfClass_OutActors_13;         // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MasterAICharacter_C*>        CallFunc_GetAllActorsOfClass_OutActors_14;         // 0x0148(0x0010)(ReferenceParm)
	TArray<class ABuildable_MASTER_C*>            CallFunc_GetAllActorsOfClass_OutActors_15;         // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MasterLight_C*>              CallFunc_GetAllActorsOfClass_OutActors_16;         // 0x0170(0x0010)(ReferenceParm)
	TArray<class ABP_MasterObject_C*>             CallFunc_GetAllActorsOfClass_OutActors_17;         // 0x0180(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AUDS_Occlusion_Volume_C*>        CallFunc_GetAllActorsOfClass_OutActors_18;         // 0x0198(0x0010)(ReferenceParm)
	TArray<class ABP_MasterDoor_C*>               CallFunc_GetAllActorsOfClass_OutActors_19;         // 0x01A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_LaboratoryMaster_C*>         CallFunc_GetAllActorsOfClass_OutActors_20;         // 0x01C0(0x0010)(ReferenceParm)
	TArray<class ABP_VehicleSpawner_C*>           CallFunc_GetAllActorsOfClass_OutActors_21;         // 0x01D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_VehicleMaster_C*>            CallFunc_GetAllActorsOfClass_OutActors_22;         // 0x01E8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CompassMarker_C*                    CallFunc_Array_Get_Item_1;                         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StaticMeshPickup_C*                 CallFunc_Array_Get_Item_2;                         // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SkeletalMeshPickup_C*               CallFunc_Array_Get_Item_3;                         // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Sky_C*                   CallFunc_Array_Get_Item_4;                         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventMaster_C*                      CallFunc_Array_Get_Item_5;                         // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProjectileMaster_C*                 CallFunc_Array_Get_Item_6;                         // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Weather_C*               CallFunc_Array_Get_Item_7;                         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterTurret_C*                     CallFunc_Array_Get_Item_8;                         // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AI_C*                               CallFunc_Array_Get_Item_9;                         // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_10;                              // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AIWeapon_Master_C*                  CallFunc_Array_Get_Item_10;                        // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterCamera_C*                     CallFunc_Array_Get_Item_11;                        // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_12;                              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildable_MASTER_C*                    CallFunc_Array_Get_Item_12;                        // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAICharacter_C*                CallFunc_Array_Get_Item_13;                        // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_14;                              // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUDS_Occlusion_Volume_C*                CallFunc_Array_Get_Item_14;                        // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterLight_C*                      CallFunc_Array_Get_Item_15;                        // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_16;                              // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterObject_C*                     CallFunc_Array_Get_Item_16;                        // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterDoor_C*                       CallFunc_Array_Get_Item_17;                        // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_18;                              // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VehicleSpawner_C*                   CallFunc_Array_Get_Item_18;                        // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LaboratoryMaster_C*                 CallFunc_Array_Get_Item_19;                        // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_20;                              // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerMarker_C*                     CallFunc_Array_Get_Item_20;                        // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_PlayerMarker_C*                      CallFunc_Array_Get_Item_21;                        // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_VehicleMaster_C*                    CallFunc_Array_Get_Item_22;                        // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterQuestObject_C*                CallFunc_Array_Get_Item_23;                        // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_DestroyAllActors) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_DestroyAllActors");
static_assert(sizeof(GameFunctionLibrary_C_DestroyAllActors) == 0x000408, "Wrong size on GameFunctionLibrary_C_DestroyAllActors");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_DestroyAllActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable) == 0x000008, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000028, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000038, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item) == 0x000050, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000060, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_3) == 0x000070, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x000078, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_5) == 0x000088, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_4) == 0x000098, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_5) == 0x00009C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Get_Minimap_Component_ReturnValue) == 0x0000A0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Get_Minimap_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_6) == 0x0000A8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_7) == 0x0000B8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_6) == 0x0000C8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_7) == 0x0000CC, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_8) == 0x0000D0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_9) == 0x0000E0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_8) == 0x0000F0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_9) == 0x0000F4, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_10) == 0x0000F8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_11) == 0x000108, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_10) == 0x000118, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_11) == 0x00011C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_12) == 0x000120, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_13) == 0x000130, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_12) == 0x000140, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_13) == 0x000144, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_14) == 0x000148, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_15) == 0x000158, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_14) == 0x000168, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_15) == 0x00016C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_16) == 0x000170, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_17) == 0x000180, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_16) == 0x000190, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_17) == 0x000194, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_18) == 0x000198, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_19) == 0x0001A8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_18) == 0x0001B8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_19) == 0x0001BC, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_20) == 0x0001C0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_21) == 0x0001D0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_21' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_20) == 0x0001E0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_21) == 0x0001E4, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_GetAllActorsOfClass_OutActors_22) == 0x0001E8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_GetAllActorsOfClass_OutActors_22' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_1) == 0x0001F8, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Length_ReturnValue_22) == 0x0001FC, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000200, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_1) == 0x000208, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000210, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_2) == 0x000214, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_3) == 0x000218, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_2) == 0x00021C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_3) == 0x000220, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_2) == 0x000228, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_2) == 0x000230, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_3) == 0x000238, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_3) == 0x000240, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_4) == 0x000244, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_5) == 0x000248, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_4) == 0x00024C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_5) == 0x000250, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_4) == 0x000258, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_4) == 0x000260, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_5) == 0x000268, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_5) == 0x000270, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_6) == 0x000274, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_7) == 0x000278, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_6) == 0x00027C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_7) == 0x000280, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_6) == 0x000288, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_6) == 0x000290, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_7) == 0x000298, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_7) == 0x0002A0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_8) == 0x0002A4, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_9) == 0x0002A8, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_8) == 0x0002AC, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_9) == 0x0002B0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_8) == 0x0002B8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_8) == 0x0002C0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_9) == 0x0002C8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_9) == 0x0002D0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_10) == 0x0002D4, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_11) == 0x0002D8, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_10) == 0x0002DC, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_11) == 0x0002E0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_10) == 0x0002E8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_10) == 0x0002F0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_11) == 0x0002F8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_11) == 0x000300, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_12) == 0x000304, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_13) == 0x000308, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_12) == 0x00030C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_13) == 0x000310, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_12) == 0x000318, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_12) == 0x000320, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_13) == 0x000328, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_13) == 0x000330, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_14) == 0x000334, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_15) == 0x000338, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_14) == 0x00033C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_15) == 0x000340, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_14) == 0x000348, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_14) == 0x000350, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_15) == 0x000358, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_15) == 0x000360, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_16) == 0x000364, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_17) == 0x000368, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_16) == 0x00036C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_17) == 0x000370, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_16) == 0x000378, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_16) == 0x000380, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_17) == 0x000388, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_17) == 0x000390, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_18) == 0x000394, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_19) == 0x000398, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_18) == 0x00039C, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_19) == 0x0003A0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_18) == 0x0003A8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_18) == 0x0003B0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_19) == 0x0003B8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_19) == 0x0003C0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_20) == 0x0003C4, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Array_Index_Variable) == 0x0003C8, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_20) == 0x0003CC, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_20) == 0x0003D0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_21) == 0x0003D8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_22) == 0x0003E0, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_20) == 0x0003E8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Loop_Counter_Variable) == 0x0003EC, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, Temp_int_Variable_21) == 0x0003F0, "Member 'GameFunctionLibrary_C_DestroyAllActors::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_21) == 0x0003F4, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Array_Get_Item_23) == 0x0003F8, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_21) == 0x000400, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Less_IntInt_ReturnValue_22) == 0x000401, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyAllActors, CallFunc_Add_IntInt_ReturnValue_22) == 0x000404, "Member 'GameFunctionLibrary_C_DestroyAllActors::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.DestroyMainMenuActors
// 0x0128 (0x0128 - 0x0000)
struct GameFunctionLibrary_C_DestroyMainMenuActors final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_NewGameSettings_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AUltra_Dynamic_Weather_C*>       CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0028(0x0010)(ReferenceParm)
	TArray<class AUltra_Dynamic_Sky_C*>           CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Sky_C*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_RadioTower_C*>               CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0060(0x0010)(ReferenceParm)
	TArray<class ABP_FlickeringLightSparks_MainMenu_C*> CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CharacterCreator_C*>         CallFunc_GetAllActorsOfClass_OutActors_5;          // 0x0088(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RadioTower_C*                       CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FlickeringLightSparks_MainMenu_C*   CallFunc_Array_Get_Item_3;                         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_DestroyMainMenuActors) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_DestroyMainMenuActors");
static_assert(sizeof(GameFunctionLibrary_C_DestroyMainMenuActors) == 0x000128, "Wrong size on GameFunctionLibrary_C_DestroyMainMenuActors");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000028, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000038, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Get_Item) == 0x000050, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000060, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x000070, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Length_ReturnValue_3) == 0x000080, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Length_ReturnValue_4) == 0x000084, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_GetAllActorsOfClass_OutActors_5) == 0x000088, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_GetAllActorsOfClass_OutActors_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Length_ReturnValue_5) == 0x00009C, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AC, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Array_Index_Variable_2) == 0x0000B8, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Loop_Counter_Variable_2) == 0x0000D0, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D4, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D8, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Array_Index_Variable_3) == 0x0000DC, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Loop_Counter_Variable_3) == 0x0000E0, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Get_Item_3) == 0x0000E8, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000F0, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000F4, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Loop_Counter_Variable_4) == 0x0000F8, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Loop_Counter_Variable_5) == 0x0000FC, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Less_IntInt_ReturnValue_4) == 0x000100, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Add_IntInt_ReturnValue_4) == 0x000104, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Less_IntInt_ReturnValue_5) == 0x000108, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Add_IntInt_ReturnValue_5) == 0x00010C, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Array_Index_Variable_4) == 0x000110, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, Temp_int_Array_Index_Variable_5) == 0x000114, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Get_Item_4) == 0x000118, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_DestroyMainMenuActors, CallFunc_Array_Get_Item_5) == 0x000120, "Member 'GameFunctionLibrary_C_DestroyMainMenuActors::CallFunc_Array_Get_Item_5' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetBehindObject?
// 0x0120 (0x0120 - 0x0000)
struct GameFunctionLibrary_C_GetBehindObject_ final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          BehindObject_;                                     // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue;       // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionUnitVector_ReturnValue_1;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetBehindObject_) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetBehindObject_");
static_assert(sizeof(GameFunctionLibrary_C_GetBehindObject_) == 0x000120, "Wrong size on GameFunctionLibrary_C_GetBehindObject_");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, Actor) == 0x000000, "Member 'GameFunctionLibrary_C_GetBehindObject_::Actor' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, Interactor) == 0x000008, "Member 'GameFunctionLibrary_C_GetBehindObject_::Interactor' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, Location) == 0x000010, "Member 'GameFunctionLibrary_C_GetBehindObject_::Location' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, __WorldContext) == 0x000028, "Member 'GameFunctionLibrary_C_GetBehindObject_::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, BehindObject_) == 0x000030, "Member 'GameFunctionLibrary_C_GetBehindObject_::BehindObject_' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_GetActorForwardVector_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000070, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000A0, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_GetDirectionUnitVector_ReturnValue) == 0x0000B8, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_GetDirectionUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_GetDirectionUnitVector_ReturnValue_1) == 0x0000D0, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_GetDirectionUnitVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000E8, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000F0, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000F9, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_Not_PreBool_ReturnValue) == 0x0000FA, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FB, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000100, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetBehindObject_, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000110, "Member 'GameFunctionLibrary_C_GetBehindObject_::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetCharacterFromController
// 0x0040 (0x0040 - 0x0000)
struct GameFunctionLibrary_C_GetCharacterFromController final
{
public:
	class AController*                            Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  Character;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 K2Node_DynamicCast_AsBP_Player_Controller;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetCharacterFromController) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetCharacterFromController");
static_assert(sizeof(GameFunctionLibrary_C_GetCharacterFromController) == 0x000040, "Wrong size on GameFunctionLibrary_C_GetCharacterFromController");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, Object) == 0x000000, "Member 'GameFunctionLibrary_C_GetCharacterFromController::Object' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_GetCharacterFromController::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, Character) == 0x000010, "Member 'GameFunctionLibrary_C_GetCharacterFromController::Character' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, K2Node_DynamicCast_AsBP_Player_Controller) == 0x000018, "Member 'GameFunctionLibrary_C_GetCharacterFromController::K2Node_DynamicCast_AsBP_Player_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GameFunctionLibrary_C_GetCharacterFromController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_GetCharacterFromController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, K2Node_DynamicCast_AsBP_Player_Character) == 0x000030, "Member 'GameFunctionLibrary_C_GetCharacterFromController::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'GameFunctionLibrary_C_GetCharacterFromController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetCharacterFromController, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'GameFunctionLibrary_C_GetCharacterFromController::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetGameDirectory
// 0x0070 (0x0070 - 0x0000)
struct GameFunctionLibrary_C_GetGameDirectory final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Path;                                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectDirectory_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectDirectory_ReturnValue_1;        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetGameDirectory) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetGameDirectory");
static_assert(sizeof(GameFunctionLibrary_C_GetGameDirectory) == 0x000070, "Wrong size on GameFunctionLibrary_C_GetGameDirectory");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetGameDirectory::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, Path) == 0x000008, "Member 'GameFunctionLibrary_C_GetGameDirectory::Path' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_GetProjectDirectory_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_GetProjectDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_GetProjectDirectory_ReturnValue_1) == 0x000028, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_GetProjectDirectory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_Len_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_GetSubstring_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_FindSubstring_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameDirectory, CallFunc_GetSubstring_ReturnValue_1) == 0x000060, "Member 'GameFunctionLibrary_C_GetGameDirectory::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetGameHUD
// 0x0030 (0x0030 - 0x0000)
struct GameFunctionLibrary_C_GetGameHUD final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            HUD;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            K2Node_DynamicCast_AsHUD_Game;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetGameHUD) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetGameHUD");
static_assert(sizeof(GameFunctionLibrary_C_GetGameHUD) == 0x000030, "Wrong size on GameFunctionLibrary_C_GetGameHUD");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetGameHUD::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, HUD) == 0x000008, "Member 'GameFunctionLibrary_C_GetGameHUD::HUD' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetGameHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetGameHUD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, K2Node_DynamicCast_AsHUD_Game) == 0x000020, "Member 'GameFunctionLibrary_C_GetGameHUD::K2Node_DynamicCast_AsHUD_Game' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GameFunctionLibrary_C_GetGameHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameHUD, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'GameFunctionLibrary_C_GetGameHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetGameInstance
// 0x0028 (0x0028 - 0x0000)
struct GameFunctionLibrary_C_GetGameInstance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USD_GameInstance_C*                     Instance;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USD_GameInstance_C*                     K2Node_DynamicCast_AsSD_Game_Instance;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetGameInstance) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetGameInstance");
static_assert(sizeof(GameFunctionLibrary_C_GetGameInstance) == 0x000028, "Wrong size on GameFunctionLibrary_C_GetGameInstance");
static_assert(offsetof(GameFunctionLibrary_C_GetGameInstance, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetGameInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameInstance, Instance) == 0x000008, "Member 'GameFunctionLibrary_C_GetGameInstance::Instance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetGameInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameInstance, K2Node_DynamicCast_AsSD_Game_Instance) == 0x000018, "Member 'GameFunctionLibrary_C_GetGameInstance::K2Node_DynamicCast_AsSD_Game_Instance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameInstance, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GameFunctionLibrary_C_GetGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetGameMode
// 0x0028 (0x0028 - 0x0000)
struct GameFunctionLibrary_C_GetGameMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SurroundeadGameMode_C*              GameMode;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SurroundeadGameMode_C*              K2Node_DynamicCast_AsBP_Surroundead_Game_Mode;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetGameMode) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetGameMode");
static_assert(sizeof(GameFunctionLibrary_C_GetGameMode) == 0x000028, "Wrong size on GameFunctionLibrary_C_GetGameMode");
static_assert(offsetof(GameFunctionLibrary_C_GetGameMode, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetGameMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameMode, GameMode) == 0x000008, "Member 'GameFunctionLibrary_C_GetGameMode::GameMode' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameMode, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetGameMode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameMode, K2Node_DynamicCast_AsBP_Surroundead_Game_Mode) == 0x000018, "Member 'GameFunctionLibrary_C_GetGameMode::K2Node_DynamicCast_AsBP_Surroundead_Game_Mode' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GameFunctionLibrary_C_GetGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetGameMode, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'GameFunctionLibrary_C_GetGameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetHUD
// 0x0038 (0x0038 - 0x0000)
struct GameFunctionLibrary_C_GetHUD final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            HUD;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            K2Node_DynamicCast_AsHUD_Game;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetHUD) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetHUD");
static_assert(sizeof(GameFunctionLibrary_C_GetHUD) == 0x000038, "Wrong size on GameFunctionLibrary_C_GetHUD");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetHUD::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, HUD) == 0x000008, "Member 'GameFunctionLibrary_C_GetHUD::HUD' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, CallFunc_GetHUD_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetHUD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_GetHUD::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, K2Node_DynamicCast_AsHUD_Game) == 0x000028, "Member 'GameFunctionLibrary_C_GetHUD::K2Node_DynamicCast_AsHUD_Game' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GameFunctionLibrary_C_GetHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'GameFunctionLibrary_C_GetHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetHUD, CallFunc_IsLocalController_ReturnValue) == 0x000032, "Member 'GameFunctionLibrary_C_GetHUD::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetKey
// 0x0070 (0x0070 - 0x0000)
struct GameFunctionLibrary_C_GetKey final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_QueryKeysMappedToAction_self_CastInput;   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CallFunc_QueryKeysMappedToAction_ReturnValue;      // 0x0048(0x0010)(ReferenceParm)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetKey) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetKey");
static_assert(sizeof(GameFunctionLibrary_C_GetKey) == 0x000070, "Wrong size on GameFunctionLibrary_C_GetKey");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, Action) == 0x000000, "Member 'GameFunctionLibrary_C_GetKey::Action' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_GetKey::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, Key) == 0x000010, "Member 'GameFunctionLibrary_C_GetKey::Key' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_GetKey::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_GetKey::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, CallFunc_QueryKeysMappedToAction_self_CastInput) == 0x000038, "Member 'GameFunctionLibrary_C_GetKey::CallFunc_QueryKeysMappedToAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, CallFunc_QueryKeysMappedToAction_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_GetKey::CallFunc_QueryKeysMappedToAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetKey, CallFunc_Array_Get_Item) == 0x000058, "Member 'GameFunctionLibrary_C_GetKey::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetLevellingComponent
// 0x0020 (0x0020 - 0x0000)
struct GameFunctionLibrary_C_GetLevellingComponent final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  LevellingComponent;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetLevellingComponent) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetLevellingComponent");
static_assert(sizeof(GameFunctionLibrary_C_GetLevellingComponent) == 0x000020, "Wrong size on GameFunctionLibrary_C_GetLevellingComponent");
static_assert(offsetof(GameFunctionLibrary_C_GetLevellingComponent, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetLevellingComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLevellingComponent, LevellingComponent) == 0x000008, "Member 'GameFunctionLibrary_C_GetLevellingComponent::LevellingComponent' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLevellingComponent, CallFunc_CastToController_Controller) == 0x000010, "Member 'GameFunctionLibrary_C_GetLevellingComponent::CallFunc_CastToController_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLevellingComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetLevellingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLevellingComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'GameFunctionLibrary_C_GetLevellingComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetLockPickingComponent
// 0x0028 (0x0028 - 0x0000)
struct GameFunctionLibrary_C_GetLockPickingComponent final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULockPickingComponent_C*                LevellingComponent;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULockPickingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetLockPickingComponent) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetLockPickingComponent");
static_assert(sizeof(GameFunctionLibrary_C_GetLockPickingComponent) == 0x000028, "Wrong size on GameFunctionLibrary_C_GetLockPickingComponent");
static_assert(offsetof(GameFunctionLibrary_C_GetLockPickingComponent, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetLockPickingComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLockPickingComponent, LevellingComponent) == 0x000008, "Member 'GameFunctionLibrary_C_GetLockPickingComponent::LevellingComponent' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLockPickingComponent, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetLockPickingComponent::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLockPickingComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetLockPickingComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLockPickingComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_GetLockPickingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLockPickingComponent, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'GameFunctionLibrary_C_GetLockPickingComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetLootTableName
// 0x0030 (0x0030 - 0x0000)
struct GameFunctionLibrary_C_GetLootTableName final
{
public:
	Enum_ContainerLootTables                      Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetLootTableName) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetLootTableName");
static_assert(sizeof(GameFunctionLibrary_C_GetLootTableName) == 0x000030, "Wrong size on GameFunctionLibrary_C_GetLootTableName");
static_assert(offsetof(GameFunctionLibrary_C_GetLootTableName, Selection) == 0x000000, "Member 'GameFunctionLibrary_C_GetLootTableName::Selection' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLootTableName, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_GetLootTableName::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLootTableName, Text) == 0x000010, "Member 'GameFunctionLibrary_C_GetLootTableName::Text' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetLootTableName, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'GameFunctionLibrary_C_GetLootTableName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetPassiveSkillsComponent
// 0x0020 (0x0020 - 0x0000)
struct GameFunctionLibrary_C_GetPassiveSkillsComponent final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              SkillsComponent;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetPassiveSkillsComponent) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetPassiveSkillsComponent");
static_assert(sizeof(GameFunctionLibrary_C_GetPassiveSkillsComponent) == 0x000020, "Wrong size on GameFunctionLibrary_C_GetPassiveSkillsComponent");
static_assert(offsetof(GameFunctionLibrary_C_GetPassiveSkillsComponent, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetPassiveSkillsComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetPassiveSkillsComponent, SkillsComponent) == 0x000008, "Member 'GameFunctionLibrary_C_GetPassiveSkillsComponent::SkillsComponent' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetPassiveSkillsComponent, CallFunc_CastToController_Controller) == 0x000010, "Member 'GameFunctionLibrary_C_GetPassiveSkillsComponent::CallFunc_CastToController_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetPassiveSkillsComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetPassiveSkillsComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetPassiveSkillsComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'GameFunctionLibrary_C_GetPassiveSkillsComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetRadiationLevel
// 0x0060 (0x0060 - 0x0000)
struct GameFunctionLibrary_C_GetRadiationLevel final
{
public:
	Enum_RadiationLevel                           Level;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_2;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_2;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetRadiationLevel) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetRadiationLevel");
static_assert(sizeof(GameFunctionLibrary_C_GetRadiationLevel) == 0x000060, "Wrong size on GameFunctionLibrary_C_GetRadiationLevel");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, Level) == 0x000000, "Member 'GameFunctionLibrary_C_GetRadiationLevel::Level' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_GetRadiationLevel::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, Value) == 0x000010, "Member 'GameFunctionLibrary_C_GetRadiationLevel::Value' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_GetFloatCVar_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'GameFunctionLibrary_C_GetRadiationLevel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_GetFloatCVar_ReturnValue_1) == 0x000028, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_GetFloatCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_GetFloatCVar_ReturnValue_2) == 0x000038, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_GetFloatCVar_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000050, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRadiationLevel, CallFunc_Divide_DoubleDouble_B_ImplicitCast_2) == 0x000058, "Member 'GameFunctionLibrary_C_GetRadiationLevel::CallFunc_Divide_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetRandomActorOfClass
// 0x0040 (0x0040 - 0x0000)
struct GameFunctionLibrary_C_GetRandomActorOfClass final
{
public:
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Random_OutItem;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetRandomActorOfClass) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetRandomActorOfClass");
static_assert(sizeof(GameFunctionLibrary_C_GetRandomActorOfClass) == 0x000040, "Wrong size on GameFunctionLibrary_C_GetRandomActorOfClass");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, ActorClass) == 0x000000, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::ActorClass' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, Actor) == 0x000010, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::Actor' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, CallFunc_Array_Random_OutItem) == 0x000028, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, CallFunc_Array_Random_OutIndex) == 0x000030, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetRandomActorOfClass, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_GetRandomActorOfClass::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetSkillTreeManager
// 0x0020 (0x0020 - 0x0000)
struct GameFunctionLibrary_C_GetSkillTreeManager final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTechTreeComponent_C*                   TechTree;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetSkillTreeManager) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetSkillTreeManager");
static_assert(sizeof(GameFunctionLibrary_C_GetSkillTreeManager) == 0x000020, "Wrong size on GameFunctionLibrary_C_GetSkillTreeManager");
static_assert(offsetof(GameFunctionLibrary_C_GetSkillTreeManager, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetSkillTreeManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetSkillTreeManager, TechTree) == 0x000008, "Member 'GameFunctionLibrary_C_GetSkillTreeManager::TechTree' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetSkillTreeManager, CallFunc_CastToController_Controller) == 0x000010, "Member 'GameFunctionLibrary_C_GetSkillTreeManager::CallFunc_CastToController_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetSkillTreeManager, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetSkillTreeManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetUDS
// 0x0020 (0x0020 - 0x0000)
struct GameFunctionLibrary_C_GetUDS final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Sky_C*                   UDS;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetUDS) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetUDS");
static_assert(sizeof(GameFunctionLibrary_C_GetUDS) == 0x000020, "Wrong size on GameFunctionLibrary_C_GetUDS");
static_assert(offsetof(GameFunctionLibrary_C_GetUDS, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetUDS::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetUDS, UDS) == 0x000008, "Member 'GameFunctionLibrary_C_GetUDS::UDS' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetUDS, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetUDS::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetUDS, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetUDS::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.GetUDW
// 0x0020 (0x0020 - 0x0000)
struct GameFunctionLibrary_C_GetUDW final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Weather_C*               UDW;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Weather_C*               CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_GetUDW) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_GetUDW");
static_assert(sizeof(GameFunctionLibrary_C_GetUDW) == 0x000020, "Wrong size on GameFunctionLibrary_C_GetUDW");
static_assert(offsetof(GameFunctionLibrary_C_GetUDW, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_GetUDW::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetUDW, UDW) == 0x000008, "Member 'GameFunctionLibrary_C_GetUDW::UDW' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetUDW, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'GameFunctionLibrary_C_GetUDW::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_GetUDW, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_GetUDW::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.isKeyDown
// 0x0078 (0x0078 - 0x0000)
struct GameFunctionLibrary_C_isKeyDown final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Down;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_QueryKeysMappedToAction_self_CastInput;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CallFunc_QueryKeysMappedToAction_ReturnValue;      // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_isKeyDown) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_isKeyDown");
static_assert(sizeof(GameFunctionLibrary_C_isKeyDown) == 0x000078, "Wrong size on GameFunctionLibrary_C_isKeyDown");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, Action) == 0x000000, "Member 'GameFunctionLibrary_C_isKeyDown::Action' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_isKeyDown::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, Down) == 0x000010, "Member 'GameFunctionLibrary_C_isKeyDown::Down' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_QueryKeysMappedToAction_self_CastInput) == 0x000028, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_QueryKeysMappedToAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_QueryKeysMappedToAction_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_QueryKeysMappedToAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, Temp_int_Array_Index_Variable) == 0x000048, "Member 'GameFunctionLibrary_C_isKeyDown::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_Array_Get_Item) == 0x000050, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_IsInputKeyDown_ReturnValue) == 0x000068, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'GameFunctionLibrary_C_isKeyDown::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_isKeyDown, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'GameFunctionLibrary_C_isKeyDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.IsOutsideOfPlayerView?
// 0x01F0 (0x01F0 - 0x0000)
struct GameFunctionLibrary_C_IsOutsideOfPlayerView_ final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NotInPlayerView_;                                  // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_IsOutsideOfPlayerView_) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_IsOutsideOfPlayerView_");
static_assert(sizeof(GameFunctionLibrary_C_IsOutsideOfPlayerView_) == 0x0001F0, "Wrong size on GameFunctionLibrary_C_IsOutsideOfPlayerView_");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, Loc) == 0x000000, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::Loc' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, Actor) == 0x000018, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::Actor' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, __WorldContext) == 0x000020, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, NotInPlayerView_) == 0x000028, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::NotInPlayerView_' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, K2Node_MakeArray_Array) == 0x000030, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, K2Node_MakeArray_Array_1) == 0x000048, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_GetActorForwardVector_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000B8, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001A0, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Normal_ReturnValue) == 0x0001A8, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Not_PreBool_ReturnValue) == 0x0001C0, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001C8, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_DegAcos_ReturnValue) == 0x0001D0, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0001D8, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001E9, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_BooleanAND_ReturnValue) == 0x0001EA, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001EB, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_BooleanAND_ReturnValue_1) == 0x0001EC, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_IsOutsideOfPlayerView_, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001ED, "Member 'GameFunctionLibrary_C_IsOutsideOfPlayerView_::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.LookForMapping
// 0x0150 (0x0150 - 0x0000)
struct GameFunctionLibrary_C_LookForMapping final
{
public:
	struct FKeyEvent                              Key;                                               // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Mapping;                                           // 0x0040(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	const class UInputAction*                     Action;                                            // 0x0058(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_GetAllPlayerMappableActionKeyMappings_self_CastInput; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FEnhancedActionKeyMapping>      CallFunc_GetAllPlayerMappableActionKeyMappings_ReturnValue; // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0098(0x0018)(HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x00B0(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0100(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0120(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_LookForMapping) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_LookForMapping");
static_assert(sizeof(GameFunctionLibrary_C_LookForMapping) == 0x000150, "Wrong size on GameFunctionLibrary_C_LookForMapping");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, Key) == 0x000000, "Member 'GameFunctionLibrary_C_LookForMapping::Key' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, Mapping) == 0x000040, "Member 'GameFunctionLibrary_C_LookForMapping::Mapping' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, Action) == 0x000058, "Member 'GameFunctionLibrary_C_LookForMapping::Action' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, __WorldContext) == 0x000060, "Member 'GameFunctionLibrary_C_LookForMapping::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, Found) == 0x000068, "Member 'GameFunctionLibrary_C_LookForMapping::Found' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'GameFunctionLibrary_C_LookForMapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_GetAllPlayerMappableActionKeyMappings_self_CastInput) == 0x000078, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_GetAllPlayerMappableActionKeyMappings_self_CastInput' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_GetAllPlayerMappableActionKeyMappings_ReturnValue) == 0x000088, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_GetAllPlayerMappableActionKeyMappings_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_GetKey_ReturnValue) == 0x000098, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000100, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000118, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000120, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x000138, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, Temp_int_Loop_Counter_Variable) == 0x000140, "Member 'GameFunctionLibrary_C_LookForMapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_Less_IntInt_ReturnValue) == 0x000144, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LookForMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'GameFunctionLibrary_C_LookForMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.LootDegredationMultiplier
// 0x0088 (0x0088 - 0x0000)
struct GameFunctionLibrary_C_LootDegredationMultiplier final
{
public:
	double                                        Chance;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewChance;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DegredationMultiplier;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalDaysSurvived;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DegredationValue;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_LootDegredationMultiplier) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_LootDegredationMultiplier");
static_assert(sizeof(GameFunctionLibrary_C_LootDegredationMultiplier) == 0x000088, "Wrong size on GameFunctionLibrary_C_LootDegredationMultiplier");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, Chance) == 0x000000, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::Chance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, NewChance) == 0x000010, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::NewChance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, DegredationMultiplier) == 0x000018, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::DegredationMultiplier' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, LocalDaysSurvived) == 0x000020, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::LocalDaysSurvived' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, DegredationValue) == 0x000028, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::DegredationValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_CastToController_Controller) == 0x000030, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_CastToController_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Clamp_ReturnValue) == 0x00003C, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_GetBoolCVar_ReturnValue) == 0x000041, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDegredationMultiplier, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'GameFunctionLibrary_C_LootDegredationMultiplier::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.LootDifficultySetting
// 0x01E0 (0x01E0 - 0x0000)
struct GameFunctionLibrary_C_LootDifficultySetting final
{
public:
	class FName                                   CVar;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_LootDifficulties                         Selection1;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	Enum_LootDifficulties                         LootDifficulties;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData;                 // 0x0020(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_1;               // 0x0058(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_2;               // 0x0090(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_3;               // 0x00C8(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_4;               // 0x0100(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_5;               // 0x0138(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_6;               // 0x0170(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_7;               // 0x01A8(0x0038)()
};
static_assert(alignof(GameFunctionLibrary_C_LootDifficultySetting) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_LootDifficultySetting");
static_assert(sizeof(GameFunctionLibrary_C_LootDifficultySetting) == 0x0001E0, "Wrong size on GameFunctionLibrary_C_LootDifficultySetting");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, CVar) == 0x000000, "Member 'GameFunctionLibrary_C_LootDifficultySetting::CVar' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, Selection1) == 0x000008, "Member 'GameFunctionLibrary_C_LootDifficultySetting::Selection1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, __WorldContext) == 0x000010, "Member 'GameFunctionLibrary_C_LootDifficultySetting::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, LootDifficulties) == 0x000018, "Member 'GameFunctionLibrary_C_LootDifficultySetting::LootDifficulties' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData) == 0x000020, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_1) == 0x000058, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_2) == 0x000090, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_3) == 0x0000C8, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_4) == 0x000100, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_5) == 0x000138, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_6) == 0x000170, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootDifficultySetting, K2Node_MakeStruct_AutoSettingData_7) == 0x0001A8, "Member 'GameFunctionLibrary_C_LootDifficultySetting::K2Node_MakeStruct_AutoSettingData_7' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.LootTypeMultiplier
// 0x02B8 (0x02B8 - 0x0000)
struct GameFunctionLibrary_C_LootTypeMultiplier final
{
public:
	Enum_LootType                                 Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Chance;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LegendaryGear;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LegendaryWeapons;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Keycards;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CraftingMaterials;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ammo;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Attachments;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Clothing;                                          // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Equipment;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Medical;                                           // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Food_Drink;                                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ranged;                                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Melee;                                             // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        General;                                           // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue_3;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4;  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue_4;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_1;    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5;  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6;  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_2;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_3;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7;  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8;  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_4;    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_5;    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9;  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_10; // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_6;    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_7;    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_11; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_12; // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_8;    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_9;    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_5;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_10;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_10;   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_6;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_7;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_8;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_11;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_9;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LootDegredationMultiplier_NewChance_11;   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_10;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_11;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue_12;              // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_12;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LootDegredationMultiplier_NewChance_12;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4;   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5;   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6;   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7;   // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8;   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_9;   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_10;  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_11;  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_12;  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_LootTypeMultiplier) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_LootTypeMultiplier");
static_assert(sizeof(GameFunctionLibrary_C_LootTypeMultiplier) == 0x0002B8, "Wrong size on GameFunctionLibrary_C_LootTypeMultiplier");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Selection) == 0x000000, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Selection' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Chance) == 0x000008, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Chance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, __WorldContext) == 0x000010, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Multiplier) == 0x000018, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, LegendaryGear) == 0x000020, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::LegendaryGear' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, LegendaryWeapons) == 0x000028, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::LegendaryWeapons' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Keycards) == 0x000030, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Keycards' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CraftingMaterials) == 0x000038, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CraftingMaterials' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Ammo) == 0x000040, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Ammo' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Attachments) == 0x000048, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Attachments' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Clothing) == 0x000050, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Clothing' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Equipment) == 0x000058, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Equipment' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Medical) == 0x000060, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Medical' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Food_Drink) == 0x000068, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Food_Drink' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Ranged) == 0x000070, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Ranged' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, Melee) == 0x000078, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::Melee' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, General) == 0x000080, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::General' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue) == 0x00008C, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000090, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_1) == 0x0000A0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000A4, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_2) == 0x0000B0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_3) == 0x0000C4, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x0000C8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000D0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance) == 0x0000E0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4) == 0x0000E8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_4) == 0x0000EC, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_1) == 0x0000F0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_1) == 0x000100, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5) == 0x000108, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6) == 0x000109, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_2) == 0x000110, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_3) == 0x000118, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_2) == 0x000120, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_3) == 0x000128, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7) == 0x000130, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8) == 0x000131, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_4) == 0x000138, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_5) == 0x000140, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_4) == 0x000148, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_5) == 0x000150, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9) == 0x000158, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_10) == 0x000159, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_6) == 0x000160, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_7) == 0x000168, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_6) == 0x000170, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_7) == 0x000178, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_11) == 0x000180, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_12) == 0x000181, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_8) == 0x000188, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_9) == 0x000190, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_8) == 0x000198, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_9) == 0x0001A0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_5) == 0x0001A8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001B0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_10) == 0x0001B8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_10) == 0x0001C0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_6) == 0x0001C8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001D0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_7) == 0x0001D8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0001E0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_8) == 0x0001E8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0001F0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_11) == 0x0001F8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_9) == 0x000200, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_11) == 0x000208, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000210, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_10) == 0x000218, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_11) == 0x00021C, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000220, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000228, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_GetFloatCVar_ReturnValue_12) == 0x000230, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_GetFloatCVar_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_SelectFloat_ReturnValue_12) == 0x000238, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000240, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_LootDegredationMultiplier_NewChance_12) == 0x000248, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_LootDegredationMultiplier_NewChance_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000250, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000258, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000260, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x000268, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4) == 0x000270, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5) == 0x000278, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6) == 0x000280, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7) == 0x000288, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8) == 0x000290, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_9) == 0x000298, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_10) == 0x0002A0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_11) == 0x0002A8, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_LootTypeMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_12) == 0x0002B0, "Member 'GameFunctionLibrary_C_LootTypeMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.ResetPlayerStats
// 0x0010 (0x0010 - 0x0000)
struct GameFunctionLibrary_C_ResetPlayerStats final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SurroundeadGameMode_C*              CallFunc_GetGameMode_GameMode;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_ResetPlayerStats) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_ResetPlayerStats");
static_assert(sizeof(GameFunctionLibrary_C_ResetPlayerStats) == 0x000010, "Wrong size on GameFunctionLibrary_C_ResetPlayerStats");
static_assert(offsetof(GameFunctionLibrary_C_ResetPlayerStats, __WorldContext) == 0x000000, "Member 'GameFunctionLibrary_C_ResetPlayerStats::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ResetPlayerStats, CallFunc_GetGameMode_GameMode) == 0x000008, "Member 'GameFunctionLibrary_C_ResetPlayerStats::CallFunc_GetGameMode_GameMode' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.ScalingDamageMultiplier
// 0x00C8 (0x00C8 - 0x0000)
struct GameFunctionLibrary_C_ScalingDamageMultiplier final
{
public:
	double                                        Dmg;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewDmg;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalDaysSurvived;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevellingComponent_C*                  LocalLevelComp;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        IncreaseDmgPerLevel;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_ScalingDamageMultiplier) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_ScalingDamageMultiplier");
static_assert(sizeof(GameFunctionLibrary_C_ScalingDamageMultiplier) == 0x0000C8, "Wrong size on GameFunctionLibrary_C_ScalingDamageMultiplier");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, Dmg) == 0x000000, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::Dmg' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, NewDmg) == 0x000010, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::NewDmg' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, LocalDaysSurvived) == 0x000018, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::LocalDaysSurvived' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, LocalLevelComp) == 0x000020, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::LocalLevelComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, IncreaseDmgPerLevel) == 0x000028, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::IncreaseDmgPerLevel' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_CastToController_Controller) == 0x000030, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_CastToController_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Clamp_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004D, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Greater_IntInt_ReturnValue) == 0x00004E, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_GetBoolCVar_ReturnValue) == 0x00004F, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_GetFloatCVar_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_RandomFloatInRange_ReturnValue) == 0x000068, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000080, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000098, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingDamageMultiplier, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'GameFunctionLibrary_C_ScalingDamageMultiplier::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.ScalingHealthMultiplier
// 0x00D0 (0x00D0 - 0x0000)
struct GameFunctionLibrary_C_ScalingHealthMultiplier final
{
public:
	double                                        MaxHealth;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewMaxHealth;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalDaysSurvived;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevellingComponent_C*                  LocalLevelComp;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        IncreaseHlthPerLevel;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_ScalingHealthMultiplier) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_ScalingHealthMultiplier");
static_assert(sizeof(GameFunctionLibrary_C_ScalingHealthMultiplier) == 0x0000D0, "Wrong size on GameFunctionLibrary_C_ScalingHealthMultiplier");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, MaxHealth) == 0x000000, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::MaxHealth' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, __WorldContext) == 0x000008, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, NewMaxHealth) == 0x000010, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::NewMaxHealth' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, LocalDaysSurvived) == 0x000018, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::LocalDaysSurvived' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, LocalLevelComp) == 0x000020, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::LocalLevelComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, IncreaseHlthPerLevel) == 0x000028, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::IncreaseHlthPerLevel' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_CastToController_Controller) == 0x000030, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_CastToController_Controller' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Clamp_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004D, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_GetBoolCVar_ReturnValue) == 0x00004E, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_GetFloatCVar_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_RandomFloatInRange_ReturnValue) == 0x000068, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000090, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000A0, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0000B8, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_ScalingHealthMultiplier, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'GameFunctionLibrary_C_ScalingHealthMultiplier::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.SetItemsToCraft
// 0x0070 (0x0070 - 0x0000)
struct GameFunctionLibrary_C_SetItemsToCraft final
{
public:
	Enum_CraftingTableTypes                       Table;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ItemsToCraft                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_SetItemsToCraft) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_SetItemsToCraft");
static_assert(sizeof(GameFunctionLibrary_C_SetItemsToCraft) == 0x000070, "Wrong size on GameFunctionLibrary_C_SetItemsToCraft");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, Table) == 0x000000, "Member 'GameFunctionLibrary_C_SetItemsToCraft::Table' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, JigComp) == 0x000008, "Member 'GameFunctionLibrary_C_SetItemsToCraft::JigComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, __WorldContext) == 0x000010, "Member 'GameFunctionLibrary_C_SetItemsToCraft::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToCraft, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'GameFunctionLibrary_C_SetItemsToCraft::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.SetItemsToSell
// 0x0070 (0x0070 - 0x0000)
struct GameFunctionLibrary_C_SetItemsToSell final
{
public:
	Enum_VendorTypes                              Table;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_ItemsToSell                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_SetItemsToSell) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_SetItemsToSell");
static_assert(sizeof(GameFunctionLibrary_C_SetItemsToSell) == 0x000070, "Wrong size on GameFunctionLibrary_C_SetItemsToSell");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, Table) == 0x000000, "Member 'GameFunctionLibrary_C_SetItemsToSell::Table' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, JigComp) == 0x000008, "Member 'GameFunctionLibrary_C_SetItemsToSell::JigComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, __WorldContext) == 0x000010, "Member 'GameFunctionLibrary_C_SetItemsToSell::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetItemsToSell, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'GameFunctionLibrary_C_SetItemsToSell::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.SetLootTable_AI_DA
// 0x0098 (0x0098 - 0x0000)
struct GameFunctionLibrary_C_SetLootTable_AI_DA final
{
public:
	Enum_AILootTables                             Table;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Container;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPath_OutAssetData;             // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPath_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UContainerItems_DataAsset_C*            K2Node_DynamicCast_AsContainer_Items_Data_Asset;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_SetLootTable_AI_DA) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_SetLootTable_AI_DA");
static_assert(sizeof(GameFunctionLibrary_C_SetLootTable_AI_DA) == 0x000098, "Wrong size on GameFunctionLibrary_C_SetLootTable_AI_DA");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, Table) == 0x000000, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::Table' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, JigComp) == 0x000008, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::JigComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, Container) == 0x000010, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::Container' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, __WorldContext) == 0x000018, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, Temp_int_Variable) == 0x000020, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, Temp_bool_Variable) == 0x000048, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_GetAssetRegistry_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_GetAssetsByPath_OutAssetData) == 0x000060, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_GetAssetsByPath_OutAssetData' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_GetAssetsByPath_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_GetAssetsByPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_GetAsset_ReturnValue) == 0x000078, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_Array_LastIndex_ReturnValue) == 0x000080, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, K2Node_DynamicCast_AsContainer_Items_Data_Asset) == 0x000088, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::K2Node_DynamicCast_AsContainer_Items_Data_Asset' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000091, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_AI_DA, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000093, "Member 'GameFunctionLibrary_C_SetLootTable_AI_DA::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.SetLootTable_Container_DA
// 0x0098 (0x0098 - 0x0000)
struct GameFunctionLibrary_C_SetLootTable_Container_DA final
{
public:
	Enum_ContainerLootTables                      Table;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Container;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPath_OutAssetData;             // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPath_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UContainerItems_DataAsset_C*            K2Node_DynamicCast_AsContainer_Items_Data_Asset;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_SetLootTable_Container_DA) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_SetLootTable_Container_DA");
static_assert(sizeof(GameFunctionLibrary_C_SetLootTable_Container_DA) == 0x000098, "Wrong size on GameFunctionLibrary_C_SetLootTable_Container_DA");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, Table) == 0x000000, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::Table' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, JigComp) == 0x000008, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::JigComp' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, Container) == 0x000010, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::Container' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, __WorldContext) == 0x000018, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, Temp_int_Variable) == 0x000020, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, Temp_bool_Variable) == 0x000048, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_GetAssetRegistry_ReturnValue) == 0x000050, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_GetAssetsByPath_OutAssetData) == 0x000060, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_GetAssetsByPath_OutAssetData' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_GetAssetsByPath_ReturnValue) == 0x000070, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_GetAssetsByPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_GetAsset_ReturnValue) == 0x000078, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_Array_LastIndex_ReturnValue) == 0x000080, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, K2Node_DynamicCast_AsContainer_Items_Data_Asset) == 0x000088, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::K2Node_DynamicCast_AsContainer_Items_Data_Asset' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000091, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetLootTable_Container_DA, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000093, "Member 'GameFunctionLibrary_C_SetLootTable_Container_DA::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.XpMultiplierCalc
// 0x0048 (0x0048 - 0x0000)
struct GameFunctionLibrary_C_XpMultiplierCalc final
{
public:
	double                                        Min;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameFunctionLibrary_C_XpMultiplierCalc) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_XpMultiplierCalc");
static_assert(sizeof(GameFunctionLibrary_C_XpMultiplierCalc) == 0x000048, "Wrong size on GameFunctionLibrary_C_XpMultiplierCalc");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, Min) == 0x000000, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::Min' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, Max) == 0x000008, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::Max' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, __WorldContext) == 0x000010, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, ReturnValue) == 0x000018, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000038, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_XpMultiplierCalc, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'GameFunctionLibrary_C_XpMultiplierCalc::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GameFunctionLibrary.GameFunctionLibrary_C.SetDifficulty
// 0x06E8 (0x06E8 - 0x0000)
struct GameFunctionLibrary_C_SetDifficulty final
{
public:
	struct FStruct_Difficulty                     Settings;                                          // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData;                 // 0x00D8(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_1;               // 0x0110(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_3;        // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_2;               // 0x0168(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_3;               // 0x01A0(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_4;        // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_4;               // 0x01F8(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_5;               // 0x0230(0x0038)()
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_6;               // 0x0278(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_5;        // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_6;        // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_7;               // 0x02D0(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_8;               // 0x0308(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_7;        // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_8;        // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_9;               // 0x0360(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_10;              // 0x0398(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_9;        // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_10;       // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_11;              // 0x03F0(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_12;              // 0x0428(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_11;       // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_12;       // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_13;              // 0x0480(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_14;              // 0x04B8(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_13;       // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_14;       // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_15;              // 0x0510(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_16;              // 0x0548(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_15;       // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_16;       // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_17;              // 0x05A0(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_18;              // 0x05D8(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_17;       // 0x0610(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_18;       // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_19;              // 0x0630(0x0038)()
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_20;              // 0x0668(0x0038)()
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_19;       // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAutoSettingData                       K2Node_MakeStruct_AutoSettingData_21;              // 0x06B0(0x0038)()
};
static_assert(alignof(GameFunctionLibrary_C_SetDifficulty) == 0x000008, "Wrong alignment on GameFunctionLibrary_C_SetDifficulty");
static_assert(sizeof(GameFunctionLibrary_C_SetDifficulty) == 0x0006E8, "Wrong size on GameFunctionLibrary_C_SetDifficulty");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, Settings) == 0x000000, "Member 'GameFunctionLibrary_C_SetDifficulty::Settings' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, __WorldContext) == 0x0000B0, "Member 'GameFunctionLibrary_C_SetDifficulty::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000B8, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0000C8, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData) == 0x0000D8, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_1) == 0x000110, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000148, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_3) == 0x000158, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_2) == 0x000168, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_2' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_3) == 0x0001A0, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_3' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_4) == 0x0001D8, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_BoolToString_ReturnValue) == 0x0001E8, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_4) == 0x0001F8, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_4' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_5) == 0x000230, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000268, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_6) == 0x000278, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_5) == 0x0002B0, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_6) == 0x0002C0, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_7) == 0x0002D0, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_8) == 0x000308, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_7) == 0x000340, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_8) == 0x000350, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_9) == 0x000360, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_10) == 0x000398, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_9) == 0x0003D0, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_10) == 0x0003E0, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_11) == 0x0003F0, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_12) == 0x000428, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_11) == 0x000460, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_12) == 0x000470, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_13) == 0x000480, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_14) == 0x0004B8, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_13) == 0x0004F0, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_14) == 0x000500, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_15) == 0x000510, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_16) == 0x000548, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_15) == 0x000580, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_16) == 0x000590, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_17) == 0x0005A0, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_18) == 0x0005D8, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_17) == 0x000610, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_18) == 0x000620, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_19) == 0x000630, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_20) == 0x000668, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_20' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, CallFunc_Conv_DoubleToString_ReturnValue_19) == 0x0006A0, "Member 'GameFunctionLibrary_C_SetDifficulty::CallFunc_Conv_DoubleToString_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GameFunctionLibrary_C_SetDifficulty, K2Node_MakeStruct_AutoSettingData_21) == 0x0006B0, "Member 'GameFunctionLibrary_C_SetDifficulty::K2Node_MakeStruct_AutoSettingData_21' has a wrong offset!");

}

