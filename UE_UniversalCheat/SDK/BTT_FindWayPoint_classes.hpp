#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_FindWayPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_FindWayPoint.BTT_FindWayPoint_C
// 0x0038 (0x00E0 - 0x00A8)
class UBTT_FindWayPoint_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_SmartAIComponent_C*                 AI_Component;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Way_Point;                                 // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterWayPoint_C*                   Way_Point;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MasterWayPoint_C*>           Random_Points;                                     // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Backward;                                          // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AIKilled(class ACharacter* AI_Character);
	void ExecuteUbergraph_BTT_FindWayPoint(int32 EntryPoint);
	void ReceiveAbort(class AActor* OwnerActor);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecute(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_FindWayPoint_C">();
	}
	static class UBTT_FindWayPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_FindWayPoint_C>();
	}
};
static_assert(alignof(UBTT_FindWayPoint_C) == 0x000008, "Wrong alignment on UBTT_FindWayPoint_C");
static_assert(sizeof(UBTT_FindWayPoint_C) == 0x0000E0, "Wrong size on UBTT_FindWayPoint_C");
static_assert(offsetof(UBTT_FindWayPoint_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_FindWayPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_FindWayPoint_C, AI_Component) == 0x0000B0, "Member 'UBTT_FindWayPoint_C::AI_Component' has a wrong offset!");
static_assert(offsetof(UBTT_FindWayPoint_C, Current_Way_Point) == 0x0000B8, "Member 'UBTT_FindWayPoint_C::Current_Way_Point' has a wrong offset!");
static_assert(offsetof(UBTT_FindWayPoint_C, Way_Point) == 0x0000C0, "Member 'UBTT_FindWayPoint_C::Way_Point' has a wrong offset!");
static_assert(offsetof(UBTT_FindWayPoint_C, Random_Points) == 0x0000C8, "Member 'UBTT_FindWayPoint_C::Random_Points' has a wrong offset!");
static_assert(offsetof(UBTT_FindWayPoint_C, Backward) == 0x0000D8, "Member 'UBTT_FindWayPoint_C::Backward' has a wrong offset!");

}

