#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_BeginFlee

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_BeginFlee.BTT_BeginFlee_C
// 0x0038 (0x00E0 - 0x00A8)
class UBTT_BeginFlee_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_SmartAIComponent_C*                 AI_Component;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          First_Flee_EQS;                                    // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQueryInstanceBlueprintWrapper*      Flee_EQS;                                          // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Last_Location;                                     // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Check_If_Seen(bool* Seen, class AActor** Actor);
	void EQS_Done(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void ExecuteUbergraph_BTT_BeginFlee(int32 EntryPoint);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveExecute(class AActor* OwnerActor);
	void SortFleeArray(TArray<class AActor*>* Actors);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_BeginFlee_C">();
	}
	static class UBTT_BeginFlee_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_BeginFlee_C>();
	}
};
static_assert(alignof(UBTT_BeginFlee_C) == 0x000008, "Wrong alignment on UBTT_BeginFlee_C");
static_assert(sizeof(UBTT_BeginFlee_C) == 0x0000E0, "Wrong size on UBTT_BeginFlee_C");
static_assert(offsetof(UBTT_BeginFlee_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_BeginFlee_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_BeginFlee_C, AI_Component) == 0x0000B0, "Member 'UBTT_BeginFlee_C::AI_Component' has a wrong offset!");
static_assert(offsetof(UBTT_BeginFlee_C, First_Flee_EQS) == 0x0000B8, "Member 'UBTT_BeginFlee_C::First_Flee_EQS' has a wrong offset!");
static_assert(offsetof(UBTT_BeginFlee_C, Flee_EQS) == 0x0000C0, "Member 'UBTT_BeginFlee_C::Flee_EQS' has a wrong offset!");
static_assert(offsetof(UBTT_BeginFlee_C, Last_Location) == 0x0000C8, "Member 'UBTT_BeginFlee_C::Last_Location' has a wrong offset!");

}

