#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_MoveToSpecificLoc

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C
// 0x0030 (0x00D8 - 0x00A8)
class UAI_MoveToSpecificLoc_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 Location;                                          // 0x00B0(0x0028)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_AI_MoveToSpecificLoc(int32 EntryPoint);
	void GetDistance_Direction(const struct FVector& TargetLoc, const struct FVector& CurrentLoc, double* Distance, struct FVector* Direction);
	void GetTargetLoc(const struct FVector& Target, class APawn* Controlled_Pawn, struct FVector* RandomLoc);
	void OnFail_23691D184123CB040E4C31A41B25C185(EPathFollowingResult MovementResult);
	void OnFail_413338964241E2AC5210E1B19DC04362(EPathFollowingResult MovementResult);
	void OnSuccess_23691D184123CB040E4C31A41B25C185(EPathFollowingResult MovementResult);
	void OnSuccess_413338964241E2AC5210E1B19DC04362(EPathFollowingResult MovementResult);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AI_MoveToSpecificLoc_C">();
	}
	static class UAI_MoveToSpecificLoc_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAI_MoveToSpecificLoc_C>();
	}
};
static_assert(alignof(UAI_MoveToSpecificLoc_C) == 0x000008, "Wrong alignment on UAI_MoveToSpecificLoc_C");
static_assert(sizeof(UAI_MoveToSpecificLoc_C) == 0x0000D8, "Wrong size on UAI_MoveToSpecificLoc_C");
static_assert(offsetof(UAI_MoveToSpecificLoc_C, UberGraphFrame) == 0x0000A8, "Member 'UAI_MoveToSpecificLoc_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAI_MoveToSpecificLoc_C, Location) == 0x0000B0, "Member 'UAI_MoveToSpecificLoc_C::Location' has a wrong offset!");

}

