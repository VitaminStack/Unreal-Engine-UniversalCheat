#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaboratorySlidingDoor

#include "Basic.hpp"

#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetPower_Warning
// 0x0001 (0x0001 - 0x0000)
struct BP_LaboratorySlidingDoor_C_SetPower_Warning final
{
public:
	bool                                          SetWarning;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_SetPower_Warning) == 0x000001, "Wrong alignment on BP_LaboratorySlidingDoor_C_SetPower_Warning");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_SetPower_Warning) == 0x000001, "Wrong size on BP_LaboratorySlidingDoor_C_SetPower_Warning");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_SetPower_Warning, SetWarning) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_SetPower_Warning::SetWarning' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetPower_TurnedOn
// 0x0001 (0x0001 - 0x0000)
struct BP_LaboratorySlidingDoor_C_SetPower_TurnedOn final
{
public:
	bool                                          TurnOn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_SetPower_TurnedOn) == 0x000001, "Wrong alignment on BP_LaboratorySlidingDoor_C_SetPower_TurnedOn");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_SetPower_TurnedOn) == 0x000001, "Wrong size on BP_LaboratorySlidingDoor_C_SetPower_TurnedOn");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_SetPower_TurnedOn, TurnOn) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_SetPower_TurnedOn::TurnOn' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_LaboratorySlidingDoor_C_SetPickupCount");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_SetPickupCount) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_SetPickupCount");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_SetPickupCount, Result) == 0x000004, "Member 'BP_LaboratorySlidingDoor_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_LaboratorySlidingDoor_C_SetInteractOption");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_SetInteractOption) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_SetInteractOption");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_SetInteractOption, Option) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_OnStopExecuteInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_OnStopExecuteInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_LaboratorySlidingDoor_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_OnServerExecuteInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_LaboratorySlidingDoor_C_OnServerExecuteInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_LaboratorySlidingDoor_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_LaboratorySlidingDoor_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_LaboratorySlidingDoor_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_OnRequestServerInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_LaboratorySlidingDoor_C_OnRequestServerInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_LaboratorySlidingDoor_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_LaboratorySlidingDoor_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_LaboratorySlidingDoor_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LaboratorySlidingDoor_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_OnExecuteInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_LaboratorySlidingDoor_C_OnExecuteInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_LaboratorySlidingDoor_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_LaboratorySlidingDoor_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_OnBeginInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_OnBeginInteract) == 0x000058, "Wrong size on BP_LaboratorySlidingDoor_C_OnBeginInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_LaboratorySlidingDoor_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_LaboratorySlidingDoor_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_LaboratorySlidingDoor_C_JigSetCanInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_LaboratorySlidingDoor_C_JigSetCanInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_LaboratorySlidingDoor_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_LaboratorySlidingDoor_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_LaboratorySlidingDoor_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_LaboratorySlidingDoor_C_JigCanInteract");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_JigCanInteract) == 0x000001, "Wrong size on BP_LaboratorySlidingDoor_C_JigCanInteract");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_JigCanInteract, Result) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_GetMainSceneComp");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_GetMainSceneComp");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_LaboratorySlidingDoor_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_GetItemInfo");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_GetItemInfo) == 0x000078, "Wrong size on BP_LaboratorySlidingDoor_C_GetItemInfo");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetItemInfo, Info) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetItemInfo, Count) == 0x000008, "Member 'BP_LaboratorySlidingDoor_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_LaboratorySlidingDoor_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_LaboratorySlidingDoor_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_LaboratorySlidingDoor_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_GetInteractOptions");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_LaboratorySlidingDoor_C_GetInteractOptions");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_LaboratorySlidingDoor_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.ExecuteUbergraph_BP_LaboratorySlidingDoor
// 0x05B8 (0x05B8 - 0x0000)
struct BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_TurnOn;                               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SetWarning;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0010(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x0060(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_2;                              // 0x00B0(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_3;                              // 0x0100(0x0050)(ConstParm)
	TMap<class FName, class FText>                K2Node_Select_Default;                             // 0x0150(0x0050)()
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x01D8(0x0050)(ConstParm)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Interactor;                     // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBehindObject__BehindObject_;           // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StoreStats_ReturnValue;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJigItemByDA_Result;                   // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindJigItemByDA_Found;                    // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAchievement_ReturnValue;               // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFindThenConsumeByItemID_Result;     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0294(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ByActor;                              // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x02A8(0x0030)(HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x02F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0408(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  CallFunc_GetLevellingComponent_LevellingComponent; // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_XPOutput;                           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0520(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0570(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0580(0x0018)()
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor) == 0x0005B8, "Wrong size on BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, EntryPoint) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_Option_2) == 0x000004, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, Temp_bool_Variable) == 0x00000C, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_TurnOn) == 0x00000D, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_TurnOn' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_SetWarning) == 0x00000E, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_SetWarning' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_MakeMap_Map) == 0x000010, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_MakeMap_Map_1) == 0x000060, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_MakeMap_Map_2) == 0x0000B0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_MakeMap_Map_3) == 0x000100, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_MakeMap_Map_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Select_Default) == 0x000150, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetHUD_HUD) == 0x0001A0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_ShowInteractWidget_Widget) == 0x0001A8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetHUD_HUD_1) == 0x0001B0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetBoolCVar_ReturnValue) == 0x0001B8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_InteractingActor_3) == 0x0001C0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_Option_1) == 0x0001C8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_InteractingActor_2) == 0x0001D0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_Options) == 0x0001D8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_ShowInteractWidget_Widget_1) == 0x000228, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000230, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_CustomEvent_Interactor) == 0x000238, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_CustomEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetBehindObject__BehindObject_) == 0x000240, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetBehindObject__BehindObject_' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000248, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetComponentByClass_ReturnValue) == 0x000250, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_StoreStats_ReturnValue) == 0x000258, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_StoreStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_FindJigItemByDA_Result) == 0x000259, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_FindJigItemByDA_Result' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_FindJigItemByDA_Found) == 0x000260, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_FindJigItemByDA_Found' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_SetAchievement_ReturnValue) == 0x000268, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_SetAchievement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_InteractingActor_1) == 0x000270, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000278, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_ServerFindThenConsumeByItemID_Result) == 0x000290, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_ServerFindThenConsumeByItemID_Result' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_Option) == 0x000294, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_ByActor) == 0x0002A0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_Payload) == 0x0002A8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Lerp_ReturnValue) == 0x0002D8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_MakeVector_ReturnValue) == 0x0002E0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0002F8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003E0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Lerp_ReturnValue_1) == 0x0003E8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_MakeVector_ReturnValue_1) == 0x0003F0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000408, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_Event_InteractingActor) == 0x0004F0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_GetLevellingComponent_LevellingComponent) == 0x0004F8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_GetLevellingComponent_LevellingComponent' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000500, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_AddXP_XPOutput) == 0x000508, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_AddXP_XPOutput' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_FTrunc_ReturnValue) == 0x000510, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000518, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_MakeStruct_FormatArgumentData) == 0x000520, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_MakeArray_Array) == 0x000570, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Format_ReturnValue) == 0x000580, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000598, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_ComponentBoundEvent_LayerIndex) == 0x00059C, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, K2Node_ComponentBoundEvent_bIsSeen) == 0x0005A0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0005A8, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0005B0, "Member 'BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.Event_Door
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratorySlidingDoor_C_Event_Door final
{
public:
	class AActor*                                 Interactor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_Event_Door) == 0x000008, "Wrong alignment on BP_LaboratorySlidingDoor_C_Event_Door");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_Event_Door) == 0x000008, "Wrong size on BP_LaboratorySlidingDoor_C_Event_Door");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_Event_Door, Interactor) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_Event_Door::Interactor' has a wrong offset!");

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

