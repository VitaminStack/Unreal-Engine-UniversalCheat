#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaboratoryCircuitBox

#include "Basic.hpp"

#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratoryCircuitBox_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_LaboratoryCircuitBox_C_SetPickupCount");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_SetPickupCount) == 0x000008, "Wrong size on BP_LaboratoryCircuitBox_C_SetPickupCount");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_SetPickupCount, Result) == 0x000004, "Member 'BP_LaboratoryCircuitBox_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratoryCircuitBox_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_LaboratoryCircuitBox_C_SetInteractOption");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_SetInteractOption) == 0x000008, "Wrong size on BP_LaboratoryCircuitBox_C_SetInteractOption");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_SetInteractOption, Option) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratoryCircuitBox_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_OnStopExecuteInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_LaboratoryCircuitBox_C_OnStopExecuteInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_LaboratoryCircuitBox_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_OnServerExecuteInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_LaboratoryCircuitBox_C_OnServerExecuteInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_LaboratoryCircuitBox_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_LaboratoryCircuitBox_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_OnRequestServerInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_LaboratoryCircuitBox_C_OnRequestServerInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_LaboratoryCircuitBox_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_LaboratoryCircuitBox_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_LaboratoryCircuitBox_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_OnExecuteInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_LaboratoryCircuitBox_C_OnExecuteInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_LaboratoryCircuitBox_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_OnBeginInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_OnBeginInteract) == 0x000058, "Wrong size on BP_LaboratoryCircuitBox_C_OnBeginInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_LaboratoryCircuitBox_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_LaboratoryCircuitBox_C_JigSetCanInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_LaboratoryCircuitBox_C_JigSetCanInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_LaboratoryCircuitBox_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_LaboratoryCircuitBox_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.JigCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_LaboratoryCircuitBox_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_LaboratoryCircuitBox_C_JigCanInteract");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_JigCanInteract) == 0x000003, "Wrong size on BP_LaboratoryCircuitBox_C_JigCanInteract");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_JigCanInteract, Result) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_JigCanInteract::Result' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_JigCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_LaboratoryCircuitBox_C_JigCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_JigCanInteract, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_LaboratoryCircuitBox_C_JigCanInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.IsObjectDamageable?
// 0x0001 (0x0001 - 0x0000)
struct BP_LaboratoryCircuitBox_C_IsObjectDamageable_ final
{
public:
	bool                                          Damageable_;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_IsObjectDamageable_) == 0x000001, "Wrong alignment on BP_LaboratoryCircuitBox_C_IsObjectDamageable_");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_IsObjectDamageable_) == 0x000001, "Wrong size on BP_LaboratoryCircuitBox_C_IsObjectDamageable_");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_IsObjectDamageable_, Damageable_) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_IsObjectDamageable_::Damageable_' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratoryCircuitBox_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_GetMainSceneComp");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_LaboratoryCircuitBox_C_GetMainSceneComp");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_LaboratoryCircuitBox_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_GetItemInfo");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_GetItemInfo) == 0x000078, "Wrong size on BP_LaboratoryCircuitBox_C_GetItemInfo");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetItemInfo, Info) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetItemInfo, Count) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_LaboratoryCircuitBox_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_LaboratoryCircuitBox_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.GetInteractOptions
// 0x00F0 (0x00F0 - 0x0000)
struct BP_LaboratoryCircuitBox_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0018)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x00A0(0x0050)()
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_GetInteractOptions");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_GetInteractOptions) == 0x0000F0, "Wrong size on BP_LaboratoryCircuitBox_C_GetInteractOptions");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetInteractOptions, Temp_bool_Variable) == 0x000050, "Member 'BP_LaboratoryCircuitBox_C_GetInteractOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetInteractOptions, Temp_text_Variable) == 0x000058, "Member 'BP_LaboratoryCircuitBox_C_GetInteractOptions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetInteractOptions, Temp_text_Variable_1) == 0x000070, "Member 'BP_LaboratoryCircuitBox_C_GetInteractOptions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetInteractOptions, K2Node_Select_Default) == 0x000088, "Member 'BP_LaboratoryCircuitBox_C_GetInteractOptions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x0000A0, "Member 'BP_LaboratoryCircuitBox_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.ExecuteUbergraph_BP_LaboratoryCircuitBox
// 0x0700 (0x0700 - 0x0000)
struct BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Anim;                                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Force;                                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x00E8(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_LaboratorySlidingDoor_C*            CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LaboratoryLightSwitch_C*            CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Damage;                               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Damage_Causer;                        // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_Event_Instigator;                     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0160(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x01B0(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_2;                              // 0x0200(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0288(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0298(0x0050)(ConstParm)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x02F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UBP_InteractWidgetOption_C*             CallFunc_Array_Get_Item_2;                         // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_LaboratoryLightSwitch_C*            CallFunc_Array_Get_Item_3;                         // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LaboratorySlidingDoor_C*            CallFunc_Array_Get_Item_4;                         // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0400(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x04F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x05D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x3];                                      // 0x06C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC[0x4];                                      // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox) == 0x000700, "Wrong size on BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, EntryPoint) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_ReturnValue_2) == 0x000048, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_MakeVector_ReturnValue_1) == 0x000050, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_ReturnValue_3) == 0x000070, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_MakeRotator_ReturnValue_1) == 0x000080, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Loop_Counter_Variable_2) == 0x0000A4, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Array_Index_Variable_1) == 0x0000AC, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Array_Index_Variable_2) == 0x0000B0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Loop_Counter_Variable_3) == 0x0000B4, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, Temp_int_Array_Index_Variable_3) == 0x0000BC, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Anim) == 0x0000C0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Anim' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Force) == 0x0000C8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Force' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_InteractingActor_3) == 0x0000D0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Option_2) == 0x0000D8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_ByActor) == 0x0000E0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Payload) == 0x0000E8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_InteractingActor_2) == 0x000118, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Option_1) == 0x000120, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x000141, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Damage) == 0x000148, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Damage_Causer) == 0x000150, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Damage_Causer' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Event_Instigator) == 0x000158, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Event_Instigator' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_MakeMap_Map) == 0x000160, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_MakeMap_Map_1) == 0x0001B0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_MakeMap_Map_2) == 0x000200, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_GetHUD_HUD) == 0x000250, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_ShowInteractWidget_Widget) == 0x000258, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_GetHUD_HUD_1) == 0x000260, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_GetBoolCVar_ReturnValue) == 0x000268, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000270, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_PlayAnimMontage_ReturnValue) == 0x000278, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_InteractingActor_1) == 0x000280, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Option) == 0x000288, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_InteractingActor) == 0x000290, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_Event_Options) == 0x000298, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_ShowInteractWidget_Widget_1) == 0x0002E8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_GetGameHUD_HUD) == 0x0002F0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0002F8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Get_Item_2) == 0x0003E0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Get_Item_3) == 0x0003E8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Length_ReturnValue_2) == 0x0003F0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003F4, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Get_Item_4) == 0x0003F8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000400, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Array_Length_ReturnValue_3) == 0x0004E8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004EC, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0004F0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0005D8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x0006C0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_ComponentBoundEvent_LayerIndex) == 0x0006C4, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, K2Node_ComponentBoundEvent_bIsSeen) == 0x0006C8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0006D0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0006D8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0006E0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0006E8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x0006F0, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0006F8, "Member 'BP_LaboratoryCircuitBox_C_ExecuteUbergraph_BP_LaboratoryCircuitBox::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.Damage_Shoved
// 0x0010 (0x0010 - 0x0000)
struct BP_LaboratoryCircuitBox_C_Damage_Shoved final
{
public:
	bool                                          Anim;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Force;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_Damage_Shoved) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_Damage_Shoved");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_Damage_Shoved) == 0x000010, "Wrong size on BP_LaboratoryCircuitBox_C_Damage_Shoved");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_Damage_Shoved, Anim) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_Damage_Shoved::Anim' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_Damage_Shoved, Force) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_Damage_Shoved::Force' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.Damage_Object
// 0x0018 (0x0018 - 0x0000)
struct BP_LaboratoryCircuitBox_C_Damage_Object final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Damage_Causer;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            Event_Instigator;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_Damage_Object) == 0x000008, "Wrong alignment on BP_LaboratoryCircuitBox_C_Damage_Object");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_Damage_Object) == 0x000018, "Wrong size on BP_LaboratoryCircuitBox_C_Damage_Object");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_Damage_Object, Damage) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_Damage_Object::Damage' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_Damage_Object, Damage_Causer) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_Damage_Object::Damage_Causer' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_Damage_Object, Event_Instigator) == 0x000010, "Member 'BP_LaboratoryCircuitBox_C_Damage_Object::Event_Instigator' has a wrong offset!");

// Function BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_LaboratoryCircuitBox_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

