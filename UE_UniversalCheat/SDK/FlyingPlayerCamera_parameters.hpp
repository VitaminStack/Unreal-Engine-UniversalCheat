#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlyingPlayerCamera

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FlyingPlayerCamera.FlyingPlayerCamera_C.ExecuteUbergraph_FlyingPlayerCamera
// 0x1130 (0x1130 - 0x0000)
struct FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0020(0x06E0)()
	class UFloatingPawnMovement*                  K2Node_DynamicCast_AsFloating_Pawn_Movement;       // 0x0700(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFloatingPawnMovement*                  K2Node_DynamicCast_AsFloating_Pawn_Movement_1;     // 0x0710(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue_1;                // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x07E0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x07F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x7];                                      // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x08E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x08F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FA[0x2];                                      // 0x08FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x08FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0908(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0920(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0938(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0968(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0978(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x09A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x09B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x09D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x09E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Ingame_C*                           CallFunc_GetInGameUI_UI;                           // 0x0A08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0A18(0x0018)(HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings_1;           // 0x0A30(0x06E0)()
	float                                         K2Node_MakeStruct_DepthOfFieldFocalDistance_ImplicitCast; // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1114[0x4];                                     // 0x1114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x1118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSpeed_ImplicitCast;          // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxSpeed_ImplicitCast_1;        // 0x112C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera) == 0x000010, "Wrong alignment on FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera");
static_assert(sizeof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera) == 0x001130, "Wrong size on FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, EntryPoint) == 0x000000, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_InputKeyEvent_Key) == 0x000008, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_MakeStruct_PostProcessSettings) == 0x000020, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_DynamicCast_AsFloating_Pawn_Movement) == 0x000700, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_DynamicCast_AsFloating_Pawn_Movement' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_DynamicCast_bSuccess) == 0x000708, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_DynamicCast_AsFloating_Pawn_Movement_1) == 0x000710, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_DynamicCast_AsFloating_Pawn_Movement_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_DynamicCast_bSuccess_1) == 0x000718, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_GetMaxSpeed_ReturnValue) == 0x00071C, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_GetMaxSpeed_ReturnValue_1) == 0x000720, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_GetMaxSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000728, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000730, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_FClamp_ReturnValue) == 0x000738, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_FClamp_ReturnValue_1) == 0x000740, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_Event_DeltaSeconds) == 0x000748, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000750, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_GetForwardVector_ReturnValue) == 0x000768, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000780, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000798, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x0007B0, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0007C8, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, Temp_object_Variable) == 0x0007E0, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_LineTraceSingle_OutHit) == 0x0007F0, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_LineTraceSingle_ReturnValue) == 0x0008D8, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_InputKeyEvent_Key_1) == 0x0008E0, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_bBlockingHit) == 0x0008F8, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_bInitialOverlap) == 0x0008F9, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_Time) == 0x0008FC, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_Distance) == 0x000900, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_Location) == 0x000908, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_ImpactPoint) == 0x000920, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_Normal) == 0x000938, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_ImpactNormal) == 0x000950, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_PhysMat) == 0x000968, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_HitActor) == 0x000970, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_HitComponent) == 0x000978, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_HitBoneName) == 0x000980, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_BoneName) == 0x000988, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_HitItem) == 0x000990, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_ElementIndex) == 0x000994, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_FaceIndex) == 0x000998, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_TraceStart) == 0x0009A0, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_BreakHitResult_TraceEnd) == 0x0009B8, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0009D0, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_DynamicCast_AsBPI_Player) == 0x0009E8, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_DynamicCast_bSuccess_2) == 0x0009F8, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_VSize_ReturnValue) == 0x000A00, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_GetInGameUI_UI) == 0x000A08, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_GetInGameUI_UI' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000A10, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_InputKeyEvent_Key_2) == 0x000A18, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_MakeStruct_PostProcessSettings_1) == 0x000A30, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_MakeStruct_PostProcessSettings_1' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_MakeStruct_DepthOfFieldFocalDistance_ImplicitCast) == 0x001110, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_MakeStruct_DepthOfFieldFocalDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x001118, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001120, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_VariableSet_MaxSpeed_ImplicitCast) == 0x001128, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_VariableSet_MaxSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera, K2Node_VariableSet_MaxSpeed_ImplicitCast_1) == 0x00112C, "Member 'FlyingPlayerCamera_C_ExecuteUbergraph_FlyingPlayerCamera::K2Node_VariableSet_MaxSpeed_ImplicitCast_1' has a wrong offset!");

// Function FlyingPlayerCamera.FlyingPlayerCamera_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(sizeof(FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(offsetof(FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'FlyingPlayerCamera_C_InpActEvt_Escape_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function FlyingPlayerCamera.FlyingPlayerCamera_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(sizeof(FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(offsetof(FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'FlyingPlayerCamera_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function FlyingPlayerCamera.FlyingPlayerCamera_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2");
static_assert(sizeof(FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2");
static_assert(offsetof(FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'FlyingPlayerCamera_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function FlyingPlayerCamera.FlyingPlayerCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct FlyingPlayerCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlyingPlayerCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on FlyingPlayerCamera_C_ReceiveTick");
static_assert(sizeof(FlyingPlayerCamera_C_ReceiveTick) == 0x000004, "Wrong size on FlyingPlayerCamera_C_ReceiveTick");
static_assert(offsetof(FlyingPlayerCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'FlyingPlayerCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

