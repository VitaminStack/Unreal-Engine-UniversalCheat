#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SD_AIComponent

#include "Basic.hpp"

#include "SD_AIComponent_classes.hpp"
#include "SD_AIComponent_parameters.hpp"


namespace SDK
{

// Function SD_AIComponent.SD_AIComponent_C.CheckBehaviour
// (Public, BlueprintCallable, BlueprintEvent)

void USD_AIComponent_C::CheckBehaviour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "CheckBehaviour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SD_AIComponent.SD_AIComponent_C.ExecuteUbergraph_SD_AIComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USD_AIComponent_C::ExecuteUbergraph_SD_AIComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "ExecuteUbergraph_SD_AIComponent");

	Params::SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SD_AIComponent.SD_AIComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void USD_AIComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SD_AIComponent.SD_AIComponent_C.SetBB_Behaviour
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_AIBehviour                         EnumValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USD_AIComponent_C::SetBB_Behaviour(Enum_AIBehviour EnumValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "SetBB_Behaviour");

	Params::SD_AIComponent_C_SetBB_Behaviour Parms{};

	Parms.EnumValue = EnumValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SD_AIComponent.SD_AIComponent_C.SetBB_ForceAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USD_AIComponent_C::SetBB_ForceAttack(class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "SetBB_ForceAttack");

	Params::SD_AIComponent_C_SetBB_ForceAttack Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SD_AIComponent.SD_AIComponent_C.SetBB_Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          VectorValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USD_AIComponent_C::SetBB_Location(const struct FVector& VectorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "SetBB_Location");

	Params::SD_AIComponent_C_SetBB_Location Parms{};

	Parms.VectorValue = std::move(VectorValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SD_AIComponent.SD_AIComponent_C.SetBB_LockOnTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          VectorValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USD_AIComponent_C::SetBB_LockOnTarget(const struct FVector& VectorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SD_AIComponent_C", "SetBB_LockOnTarget");

	Params::SD_AIComponent_C_SetBB_LockOnTarget Parms{};

	Parms.VectorValue = std::move(VectorValue);

	UObject::ProcessEvent(Func, &Parms);
}

}

