#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FloatingDamageNumbersUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FloatingDamageNumbersUI.FloatingDamageNumbersUI_C
// 0x0058 (0x0318 - 0x02C0)
class UFloatingDamageNumbersUI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              FinalPosition;                                     // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Colour;                                            // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FloatingDamageNumbersUI(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FloatingDamageNumbersUI_C">();
	}
	static class UFloatingDamageNumbersUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFloatingDamageNumbersUI_C>();
	}
};
static_assert(alignof(UFloatingDamageNumbersUI_C) == 0x000008, "Wrong alignment on UFloatingDamageNumbersUI_C");
static_assert(sizeof(UFloatingDamageNumbersUI_C) == 0x000318, "Wrong size on UFloatingDamageNumbersUI_C");
static_assert(offsetof(UFloatingDamageNumbersUI_C, UberGraphFrame) == 0x0002C0, "Member 'UFloatingDamageNumbersUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, Fade) == 0x0002C8, "Member 'UFloatingDamageNumbersUI_C::Fade' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, CanvasPanel) == 0x0002D0, "Member 'UFloatingDamageNumbersUI_C::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, Text) == 0x0002D8, "Member 'UFloatingDamageNumbersUI_C::Text' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, Position) == 0x0002E0, "Member 'UFloatingDamageNumbersUI_C::Position' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, FinalPosition) == 0x0002F0, "Member 'UFloatingDamageNumbersUI_C::FinalPosition' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, Damage) == 0x000300, "Member 'UFloatingDamageNumbersUI_C::Damage' has a wrong offset!");
static_assert(offsetof(UFloatingDamageNumbersUI_C, Colour) == 0x000308, "Member 'UFloatingDamageNumbersUI_C::Colour' has a wrong offset!");

}

