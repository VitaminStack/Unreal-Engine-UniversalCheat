#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Inventory

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Inventory.BP_Inventory_C.ExecuteUbergraph_BP_Inventory
// 0x01F0 (0x01F0 - 0x0000)
struct BP_Inventory_C_ExecuteUbergraph_BP_Inventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_VicinityLootUI_C*                    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FKey& Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOne_ContainersListUI_C*                CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FKey& Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Dur_2;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show__2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Dur_1;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show__1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Dur;                                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Show_;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_Button_3;                       // 0x0078(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_Button_2;                       // 0x0098(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00B4(0x0014)()
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00CC(0x0014)()
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  CallFunc_CastToCharacter_Character;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Button_1;                       // 0x00F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Button;                         // 0x0108(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0124(0x0014)()
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x013C(0x0014)()
	TDelegate<void(const struct FKey& Button)>    K2Node_CreateDelegate_OutputDelegate_3;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0180(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKeyDown_Down;                           // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Added_;                               // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF[0x1];                                      // 0x01BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FKey& Button)>    K2Node_CreateDelegate_OutputDelegate_4;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x01DC(0x0014)()
};
static_assert(alignof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory) == 0x000008, "Wrong alignment on BP_Inventory_C_ExecuteUbergraph_BP_Inventory");
static_assert(sizeof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory) == 0x0001F0, "Wrong size on BP_Inventory_C_ExecuteUbergraph_BP_Inventory");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, EntryPoint) == 0x000000, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Dur_2) == 0x000048, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Dur_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Show__2) == 0x000050, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Show__2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Dur_1) == 0x000058, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Dur_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Show__1) == 0x000060, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Show__1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Dur) == 0x000068, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Dur' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Show_) == 0x000070, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Show_' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CustomEvent_Button_3) == 0x000078, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CustomEvent_Button_3' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000090, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsVisible_ReturnValue) == 0x000091, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CustomEvent_Button_2) == 0x000098, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CustomEvent_Button_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0000B0, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsVisible_ReturnValue_1) == 0x0000B1, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B2, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B3, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_MakeStruct_SlateColor) == 0x0000B4, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, Temp_bool_Has_Been_Initd_Variable) == 0x0000C8, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_MakeStruct_SlateColor_1) == 0x0000CC, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000E0, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_CastToCharacter_Character) == 0x0000E8, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_CastToCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CustomEvent_Button_1) == 0x0000F0, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CustomEvent_Button_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CustomEvent_Button) == 0x000108, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsVisible_ReturnValue_2) == 0x000120, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_Not_PreBool_ReturnValue_2) == 0x000121, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_MakeStruct_SlateColor_2) == 0x000124, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsVisible_ReturnValue_3) == 0x000138, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_Not_PreBool_ReturnValue_3) == 0x000139, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_MakeStruct_SlateColor_3) == 0x00013C, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CreateDelegate_OutputDelegate_3) == 0x000150, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_AddChild_ReturnValue) == 0x000160, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_GetBoolCVar_ReturnValue) == 0x000168, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000170, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000178, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_MyGeometry) == 0x000180, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_InDeltaTime) == 0x0001B8, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsKeyDown_Down) == 0x0001BC, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsKeyDown_Down' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, Temp_bool_IsClosed_Variable) == 0x0001BD, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_Event_Added_) == 0x0001BE, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_Event_Added_' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001C0, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_AddChild_ReturnValue_1) == 0x0001D0, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsValid_ReturnValue) == 0x0001D8, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, Temp_bool_IsClosed_Variable_1) == 0x0001D9, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsValid_ReturnValue_1) == 0x0001DA, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, CallFunc_IsValid_ReturnValue_2) == 0x0001DB, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_ExecuteUbergraph_BP_Inventory, K2Node_MakeStruct_SlateColor_4) == 0x0001DC, "Member 'BP_Inventory_C_ExecuteUbergraph_BP_Inventory::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetContentPanelBySlot
// 0x0020 (0x0020 - 0x0000)
struct BP_Inventory_C_GetContentPanelBySlot final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetContentPanelBySlot_Result;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_GetContentPanelBySlot) == 0x000008, "Wrong alignment on BP_Inventory_C_GetContentPanelBySlot");
static_assert(sizeof(BP_Inventory_C_GetContentPanelBySlot) == 0x000020, "Wrong size on BP_Inventory_C_GetContentPanelBySlot");
static_assert(offsetof(BP_Inventory_C_GetContentPanelBySlot, Tag) == 0x000000, "Member 'BP_Inventory_C_GetContentPanelBySlot::Tag' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetContentPanelBySlot, Result) == 0x000008, "Member 'BP_Inventory_C_GetContentPanelBySlot::Result' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetContentPanelBySlot, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'BP_Inventory_C_GetContentPanelBySlot::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetContentPanelBySlot, CallFunc_GetContentPanelBySlot_Result) == 0x000018, "Member 'BP_Inventory_C_GetContentPanelBySlot::CallFunc_GetContentPanelBySlot_Result' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetDropWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_Inventory_C_GetDropWidget final
{
public:
	class UDropItemBackGwidget_C*                 DropWRef;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_GetDropWidget) == 0x000008, "Wrong alignment on BP_Inventory_C_GetDropWidget");
static_assert(sizeof(BP_Inventory_C_GetDropWidget) == 0x000008, "Wrong size on BP_Inventory_C_GetDropWidget");
static_assert(offsetof(BP_Inventory_C_GetDropWidget, DropWRef) == 0x000000, "Member 'BP_Inventory_C_GetDropWidget::DropWRef' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetFlashlightDurability
// 0x0008 (0x0008 - 0x0000)
struct BP_Inventory_C_GetFlashlightDurability final
{
public:
	double                                        Dur;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_GetFlashlightDurability) == 0x000008, "Wrong alignment on BP_Inventory_C_GetFlashlightDurability");
static_assert(sizeof(BP_Inventory_C_GetFlashlightDurability) == 0x000008, "Wrong size on BP_Inventory_C_GetFlashlightDurability");
static_assert(offsetof(BP_Inventory_C_GetFlashlightDurability, Dur) == 0x000000, "Member 'BP_Inventory_C_GetFlashlightDurability::Dur' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetInventoryData
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Inventory_C_GetInventoryData final
{
public:
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                ExcludedContainers;                                // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UBP_EquipToContent_C*                   LootContentTarget;                                 // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          OnCloseClearLootWidget_;                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           EquipmentContentPanel;                             // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class UJSIContainer_C*, class UJSIContainer_C*> SwapContainers;                                    // 0x0038(0x0050)(Parm, OutParm, ContainsInstancedReference)
	class UBP_CharPreview_C*                      CharacterPreviewWidget;                            // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PreviewCharClass;                                  // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	TMap<class UJSIContainer_C*, class UJSIContainer_C*> K2Node_MakeMap_Map;                                // 0x00A8(0x0050)(ContainsInstancedReference)
};
static_assert(alignof(BP_Inventory_C_GetInventoryData) == 0x000008, "Wrong alignment on BP_Inventory_C_GetInventoryData");
static_assert(sizeof(BP_Inventory_C_GetInventoryData) == 0x0000F8, "Wrong size on BP_Inventory_C_GetInventoryData");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, Containers) == 0x000000, "Member 'BP_Inventory_C_GetInventoryData::Containers' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, ExcludedContainers) == 0x000010, "Member 'BP_Inventory_C_GetInventoryData::ExcludedContainers' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, LootContentTarget) == 0x000020, "Member 'BP_Inventory_C_GetInventoryData::LootContentTarget' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, OnCloseClearLootWidget_) == 0x000028, "Member 'BP_Inventory_C_GetInventoryData::OnCloseClearLootWidget_' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, EquipmentContentPanel) == 0x000030, "Member 'BP_Inventory_C_GetInventoryData::EquipmentContentPanel' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, SwapContainers) == 0x000038, "Member 'BP_Inventory_C_GetInventoryData::SwapContainers' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, CharacterPreviewWidget) == 0x000088, "Member 'BP_Inventory_C_GetInventoryData::CharacterPreviewWidget' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, PreviewCharClass) == 0x000090, "Member 'BP_Inventory_C_GetInventoryData::PreviewCharClass' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_Inventory_C_GetInventoryData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetInventoryData, K2Node_MakeMap_Map) == 0x0000A8, "Member 'BP_Inventory_C_GetInventoryData::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetNightVisionDurability
// 0x0008 (0x0008 - 0x0000)
struct BP_Inventory_C_GetNightVisionDurability final
{
public:
	double                                        Dur;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_GetNightVisionDurability) == 0x000008, "Wrong alignment on BP_Inventory_C_GetNightVisionDurability");
static_assert(sizeof(BP_Inventory_C_GetNightVisionDurability) == 0x000008, "Wrong size on BP_Inventory_C_GetNightVisionDurability");
static_assert(offsetof(BP_Inventory_C_GetNightVisionDurability, Dur) == 0x000000, "Member 'BP_Inventory_C_GetNightVisionDurability::Dur' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetRespiratorDurability
// 0x0008 (0x0008 - 0x0000)
struct BP_Inventory_C_GetRespiratorDurability final
{
public:
	double                                        Dur;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_GetRespiratorDurability) == 0x000008, "Wrong alignment on BP_Inventory_C_GetRespiratorDurability");
static_assert(sizeof(BP_Inventory_C_GetRespiratorDurability) == 0x000008, "Wrong size on BP_Inventory_C_GetRespiratorDurability");
static_assert(offsetof(BP_Inventory_C_GetRespiratorDurability, Dur) == 0x000000, "Member 'BP_Inventory_C_GetRespiratorDurability::Dur' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.GetValidReloadContainers
// 0x0020 (0x0020 - 0x0000)
struct BP_Inventory_C_GetValidReloadContainers final
{
public:
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_Inventory_C_GetValidReloadContainers) == 0x000008, "Wrong alignment on BP_Inventory_C_GetValidReloadContainers");
static_assert(sizeof(BP_Inventory_C_GetValidReloadContainers) == 0x000020, "Wrong size on BP_Inventory_C_GetValidReloadContainers");
static_assert(offsetof(BP_Inventory_C_GetValidReloadContainers, Containers) == 0x000000, "Member 'BP_Inventory_C_GetValidReloadContainers::Containers' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_GetValidReloadContainers, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_Inventory_C_GetValidReloadContainers::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.Loot_OnMouseButtonDown
// 0x0018 (0x0018 - 0x0000)
struct BP_Inventory_C_Loot_OnMouseButtonDown final
{
public:
	struct FKey                                   Button;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_Loot_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_Inventory_C_Loot_OnMouseButtonDown");
static_assert(sizeof(BP_Inventory_C_Loot_OnMouseButtonDown) == 0x000018, "Wrong size on BP_Inventory_C_Loot_OnMouseButtonDown");
static_assert(offsetof(BP_Inventory_C_Loot_OnMouseButtonDown, Button) == 0x000000, "Member 'BP_Inventory_C_Loot_OnMouseButtonDown::Button' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.Removed
// 0x0001 (0x0001 - 0x0000)
struct BP_Inventory_C_Removed final
{
public:
	bool                                          Added_;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_Removed) == 0x000001, "Wrong alignment on BP_Inventory_C_Removed");
static_assert(sizeof(BP_Inventory_C_Removed) == 0x000001, "Wrong size on BP_Inventory_C_Removed");
static_assert(offsetof(BP_Inventory_C_Removed, Added_) == 0x000000, "Member 'BP_Inventory_C_Removed::Added_' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.OnMouseButtonDown
// 0x02E0 (0x02E0 - 0x0000)
struct BP_Inventory_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0220(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_Inventory_C_OnMouseButtonDown");
static_assert(sizeof(BP_Inventory_C_OnMouseButtonDown) == 0x0002E0, "Wrong size on BP_Inventory_C_OnMouseButtonDown");
static_assert(offsetof(BP_Inventory_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'BP_Inventory_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'BP_Inventory_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'BP_Inventory_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'BP_Inventory_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue_1) == 0x000220, "Member 'BP_Inventory_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x0002D8, "Member 'BP_Inventory_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.OnWidgetMouseButtonDown_Event_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Inventory_C_OnWidgetMouseButtonDown_Event_0 final
{
public:
	struct FKey                                   Button;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_OnWidgetMouseButtonDown_Event_0) == 0x000008, "Wrong alignment on BP_Inventory_C_OnWidgetMouseButtonDown_Event_0");
static_assert(sizeof(BP_Inventory_C_OnWidgetMouseButtonDown_Event_0) == 0x000018, "Wrong size on BP_Inventory_C_OnWidgetMouseButtonDown_Event_0");
static_assert(offsetof(BP_Inventory_C_OnWidgetMouseButtonDown_Event_0, Button) == 0x000000, "Member 'BP_Inventory_C_OnWidgetMouseButtonDown_Event_0::Button' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.OnWidgetMouseButtonDown_Event_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Inventory_C_OnWidgetMouseButtonDown_Event_1 final
{
public:
	struct FKey                                   Button;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_OnWidgetMouseButtonDown_Event_1) == 0x000008, "Wrong alignment on BP_Inventory_C_OnWidgetMouseButtonDown_Event_1");
static_assert(sizeof(BP_Inventory_C_OnWidgetMouseButtonDown_Event_1) == 0x000018, "Wrong size on BP_Inventory_C_OnWidgetMouseButtonDown_Event_1");
static_assert(offsetof(BP_Inventory_C_OnWidgetMouseButtonDown_Event_1, Button) == 0x000000, "Member 'BP_Inventory_C_OnWidgetMouseButtonDown_Event_1::Button' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.ShowFlashlightDurability
// 0x0001 (0x0001 - 0x0000)
struct BP_Inventory_C_ShowFlashlightDurability final
{
public:
	bool                                          Show_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_ShowFlashlightDurability) == 0x000001, "Wrong alignment on BP_Inventory_C_ShowFlashlightDurability");
static_assert(sizeof(BP_Inventory_C_ShowFlashlightDurability) == 0x000001, "Wrong size on BP_Inventory_C_ShowFlashlightDurability");
static_assert(offsetof(BP_Inventory_C_ShowFlashlightDurability, Show_) == 0x000000, "Member 'BP_Inventory_C_ShowFlashlightDurability::Show_' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.ShowNightVisionDurability
// 0x0001 (0x0001 - 0x0000)
struct BP_Inventory_C_ShowNightVisionDurability final
{
public:
	bool                                          Show_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_ShowNightVisionDurability) == 0x000001, "Wrong alignment on BP_Inventory_C_ShowNightVisionDurability");
static_assert(sizeof(BP_Inventory_C_ShowNightVisionDurability) == 0x000001, "Wrong size on BP_Inventory_C_ShowNightVisionDurability");
static_assert(offsetof(BP_Inventory_C_ShowNightVisionDurability, Show_) == 0x000000, "Member 'BP_Inventory_C_ShowNightVisionDurability::Show_' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.ShowRespiratorDurability
// 0x0001 (0x0001 - 0x0000)
struct BP_Inventory_C_ShowRespiratorDurability final
{
public:
	bool                                          Show_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_ShowRespiratorDurability) == 0x000001, "Wrong alignment on BP_Inventory_C_ShowRespiratorDurability");
static_assert(sizeof(BP_Inventory_C_ShowRespiratorDurability) == 0x000001, "Wrong size on BP_Inventory_C_ShowRespiratorDurability");
static_assert(offsetof(BP_Inventory_C_ShowRespiratorDurability, Show_) == 0x000000, "Member 'BP_Inventory_C_ShowRespiratorDurability::Show_' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_Inventory_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_Tick) == 0x000004, "Wrong alignment on BP_Inventory_C_Tick");
static_assert(sizeof(BP_Inventory_C_Tick) == 0x00003C, "Wrong size on BP_Inventory_C_Tick");
static_assert(offsetof(BP_Inventory_C_Tick, MyGeometry) == 0x000000, "Member 'BP_Inventory_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Inventory_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_Inventory_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_Inventory.BP_Inventory_C.Vicinity_OnMouseButtonDown
// 0x0018 (0x0018 - 0x0000)
struct BP_Inventory_C_Vicinity_OnMouseButtonDown final
{
public:
	struct FKey                                   Button;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Inventory_C_Vicinity_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_Inventory_C_Vicinity_OnMouseButtonDown");
static_assert(sizeof(BP_Inventory_C_Vicinity_OnMouseButtonDown) == 0x000018, "Wrong size on BP_Inventory_C_Vicinity_OnMouseButtonDown");
static_assert(offsetof(BP_Inventory_C_Vicinity_OnMouseButtonDown, Button) == 0x000000, "Member 'BP_Inventory_C_Vicinity_OnMouseButtonDown::Button' has a wrong offset!");

}

