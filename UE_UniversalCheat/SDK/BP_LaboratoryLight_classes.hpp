#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaboratoryLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LaboratoryMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LaboratoryLight.BP_LaboratoryLight_C
// 0x0020 (0x02C8 - 0x02A8)
class ABP_LaboratoryLight_C : public ABP_LaboratoryMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightOn_;                                          // 0x02C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          EnableShadows_;                                    // 0x02C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void OnRep_LightOn_();
	void ExecuteUbergraph_BP_LaboratoryLight(int32 EntryPoint);
	void BndEvt__BP_LaboratoryLight_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LaboratoryLight_C">();
	}
	static class ABP_LaboratoryLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LaboratoryLight_C>();
	}
};
static_assert(alignof(ABP_LaboratoryLight_C) == 0x000008, "Wrong alignment on ABP_LaboratoryLight_C");
static_assert(sizeof(ABP_LaboratoryLight_C) == 0x0002C8, "Wrong size on ABP_LaboratoryLight_C");
static_assert(offsetof(ABP_LaboratoryLight_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_LaboratoryLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryLight_C, PointLight) == 0x0002B0, "Member 'ABP_LaboratoryLight_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryLight_C, StaticMesh) == 0x0002B8, "Member 'ABP_LaboratoryLight_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryLight_C, Intensity) == 0x0002C0, "Member 'ABP_LaboratoryLight_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryLight_C, LightOn_) == 0x0002C4, "Member 'ABP_LaboratoryLight_C::LightOn_' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryLight_C, EnableShadows_) == 0x0002C5, "Member 'ABP_LaboratoryLight_C::EnableShadows_' has a wrong offset!");

}

