#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_WoodenWallGableTop

#include "Basic.hpp"

#include "Buildable_ModularMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Buildable_WoodenWallGableTop.Buildable_WoodenWallGableTop_C
// 0x0018 (0x0450 - 0x0438)
class ABuildable_WoodenWallGableTop_C final : public ABuildable_ModularMaster_C
{
public:
	class UChildActorComponent*                   RoofTop2;                                          // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   RoofTop1;                                          // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Wall1;                                             // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Buildable_WoodenWallGableTop_C">();
	}
	static class ABuildable_WoodenWallGableTop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildable_WoodenWallGableTop_C>();
	}
};
static_assert(alignof(ABuildable_WoodenWallGableTop_C) == 0x000008, "Wrong alignment on ABuildable_WoodenWallGableTop_C");
static_assert(sizeof(ABuildable_WoodenWallGableTop_C) == 0x000450, "Wrong size on ABuildable_WoodenWallGableTop_C");
static_assert(offsetof(ABuildable_WoodenWallGableTop_C, RoofTop2) == 0x000438, "Member 'ABuildable_WoodenWallGableTop_C::RoofTop2' has a wrong offset!");
static_assert(offsetof(ABuildable_WoodenWallGableTop_C, RoofTop1) == 0x000440, "Member 'ABuildable_WoodenWallGableTop_C::RoofTop1' has a wrong offset!");
static_assert(offsetof(ABuildable_WoodenWallGableTop_C, Wall1) == 0x000448, "Member 'ABuildable_WoodenWallGableTop_C::Wall1' has a wrong offset!");

}

