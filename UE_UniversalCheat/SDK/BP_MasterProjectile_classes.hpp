#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_HitboxTypeAI_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterProjectile.BP_MasterProjectile_C
// 0x01F0 (0x0488 - 0x0298)
class ABP_MasterProjectile_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Projectile_Collision;                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Hit_Actors;                                        // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 Other_Actor;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Other_Comp;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<E_HitboxTypeAI, double>                  Damage;                                            // 0x02D0(0x0050)(Edit, BlueprintVisible)
	TMap<EPhysicalSurface, class UParticleSystem*> Surface_Emitters;                                  // 0x0320(0x0050)(Edit, BlueprintVisible)
	TMap<EPhysicalSurface, class UMaterialInterface*> Surface_Decals;                                    // 0x0370(0x0050)(Edit, BlueprintVisible)
	double                                        Decal_LifeSpan;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Fade_Distance;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Surface_Decal_Size;                                // 0x03D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact_Point;                                      // 0x03E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact_Normal;                                     // 0x0400(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Phys_Material;                                     // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Hit_Component;                                     // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_Damage;                                      // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageMulti;                                       // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPhysicalSurface, class USoundBase*>     Surface_Sound;                                     // 0x0438(0x0050)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_MasterProjectile(int32 EntryPoint);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterProjectile_C">();
	}
	static class ABP_MasterProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterProjectile_C>();
	}
};
static_assert(alignof(ABP_MasterProjectile_C) == 0x000008, "Wrong alignment on ABP_MasterProjectile_C");
static_assert(sizeof(ABP_MasterProjectile_C) == 0x000488, "Wrong size on ABP_MasterProjectile_C");
static_assert(offsetof(ABP_MasterProjectile_C, UberGraphFrame) == 0x000298, "Member 'ABP_MasterProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Projectile_Collision) == 0x0002A0, "Member 'ABP_MasterProjectile_C::Projectile_Collision' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, ProjectileMovement) == 0x0002A8, "Member 'ABP_MasterProjectile_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Hit_Actors) == 0x0002B0, "Member 'ABP_MasterProjectile_C::Hit_Actors' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Other_Actor) == 0x0002C0, "Member 'ABP_MasterProjectile_C::Other_Actor' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Other_Comp) == 0x0002C8, "Member 'ABP_MasterProjectile_C::Other_Comp' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Damage) == 0x0002D0, "Member 'ABP_MasterProjectile_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Surface_Emitters) == 0x000320, "Member 'ABP_MasterProjectile_C::Surface_Emitters' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Surface_Decals) == 0x000370, "Member 'ABP_MasterProjectile_C::Surface_Decals' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Decal_LifeSpan) == 0x0003C0, "Member 'ABP_MasterProjectile_C::Decal_LifeSpan' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Decal_Fade_Distance) == 0x0003C8, "Member 'ABP_MasterProjectile_C::Decal_Fade_Distance' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Surface_Decal_Size) == 0x0003D0, "Member 'ABP_MasterProjectile_C::Surface_Decal_Size' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Impact_Point) == 0x0003E8, "Member 'ABP_MasterProjectile_C::Impact_Point' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Impact_Normal) == 0x000400, "Member 'ABP_MasterProjectile_C::Impact_Normal' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Phys_Material) == 0x000418, "Member 'ABP_MasterProjectile_C::Phys_Material' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Hit_Component) == 0x000420, "Member 'ABP_MasterProjectile_C::Hit_Component' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Allow_Damage) == 0x000428, "Member 'ABP_MasterProjectile_C::Allow_Damage' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, DamageMulti) == 0x000430, "Member 'ABP_MasterProjectile_C::DamageMulti' has a wrong offset!");
static_assert(offsetof(ABP_MasterProjectile_C, Surface_Sound) == 0x000438, "Member 'ABP_MasterProjectile_C::Surface_Sound' has a wrong offset!");

}

