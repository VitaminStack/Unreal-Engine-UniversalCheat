#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KeycardDoor

#include "Basic.hpp"

#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_KeycardDoor.BP_KeycardDoor_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_KeycardDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.Event_CloseDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_Event_CloseDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_Event_CloseDoor) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_Event_CloseDoor");
static_assert(sizeof(BP_KeycardDoor_C_Event_CloseDoor) == 0x000008, "Wrong size on BP_KeycardDoor_C_Event_CloseDoor");
static_assert(offsetof(BP_KeycardDoor_C_Event_CloseDoor, Actor) == 0x000000, "Member 'BP_KeycardDoor_C_Event_CloseDoor::Actor' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.Event_OpenDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_Event_OpenDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_Event_OpenDoor) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_Event_OpenDoor");
static_assert(sizeof(BP_KeycardDoor_C_Event_OpenDoor) == 0x000008, "Wrong size on BP_KeycardDoor_C_Event_OpenDoor");
static_assert(offsetof(BP_KeycardDoor_C_Event_OpenDoor, Actor) == 0x000000, "Member 'BP_KeycardDoor_C_Event_OpenDoor::Actor' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.ExecuteUbergraph_BP_KeycardDoor
// 0x06B0 (0x06B0 - 0x0000)
struct BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0030(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x0080(0x0050)()
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_2;                              // 0x00D8(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor_2;                        // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBehindObject__BehindObject_;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x016C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0180(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x01D8(0x0050)(ConstParm)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnRequestServerInteract_Result;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAchievement_ReturnValue;               // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StoreStats_ReturnValue;                   // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x02B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x03B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x04A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJigItemByDA_Result;                   // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x6];                                      // 0x05B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindJigItemByDA_Found;                    // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFindThenConsumeByItemID_Result;     // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevellingComponent_C*                  CallFunc_GetLevellingComponent_LevellingComponent; // 0x05C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_XPOutput;                           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x05F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0640(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0650(0x0018)()
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x3];                                      // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor");
static_assert(sizeof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor) == 0x0006B0, "Wrong size on BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, EntryPoint) == 0x000000, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_Option_2) == 0x000010, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_MakeMap_Map) == 0x000030, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_MakeMap_Map_1) == 0x000080, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_InteractingActor_3) == 0x0000D0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_MakeMap_Map_2) == 0x0000D8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetHUD_HUD) == 0x000128, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetHUD_HUD_1) == 0x000130, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_ShowInteractWidget_Widget) == 0x000138, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Lerp_ReturnValue_1) == 0x000140, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_CustomEvent_Actor_2) == 0x000148, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_CustomEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_MakeRotator_ReturnValue_1) == 0x000150, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetBehindObject__BehindObject_) == 0x000168, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetBehindObject__BehindObject_' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_HasAuthority_ReturnValue) == 0x000169, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_Option_1) == 0x00016C, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_ByActor) == 0x000178, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_Payload) == 0x000180, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetBoolCVar_ReturnValue) == 0x0001B0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetDistanceTo_ReturnValue) == 0x0001B4, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_IsValid_ReturnValue) == 0x0001B9, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_BooleanAND_ReturnValue) == 0x0001BA, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_InteractingActor_2) == 0x0001C0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_Option) == 0x0001C8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_InteractingActor_1) == 0x0001D0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_Options) == 0x0001D8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000228, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_DynamicCast_bSuccess) == 0x000238, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_ShowInteractWidget_Widget_1) == 0x000240, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_OnRequestServerInteract_Result) == 0x000248, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_OnRequestServerInteract_Result' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_Event_InteractingActor) == 0x000250, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Lerp_ReturnValue_2) == 0x000258, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_MakeRotator_ReturnValue_2) == 0x000260, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000278, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_SetAchievement_ReturnValue) == 0x000290, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_SetAchievement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_StoreStats_ReturnValue) == 0x000291, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_StoreStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000298, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0002B0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_CustomEvent_Actor_1) == 0x000398, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0003A0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0003B8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x0004A0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_CustomEvent_Actor) == 0x000588, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_DynamicCast_AsBPI_Player) == 0x000590, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_DynamicCast_bSuccess_1) == 0x0005A0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetComponentByClass_ReturnValue) == 0x0005A8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_IsValid_ReturnValue_1) == 0x0005B0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_FindJigItemByDA_Result) == 0x0005B1, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_FindJigItemByDA_Result' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_FindJigItemByDA_Found) == 0x0005B8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_FindJigItemByDA_Found' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_ServerFindThenConsumeByItemID_Result) == 0x0005C0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_ServerFindThenConsumeByItemID_Result' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_GetLevellingComponent_LevellingComponent) == 0x0005C8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_GetLevellingComponent_LevellingComponent' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0005D0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_AddXP_XPOutput) == 0x0005D8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_AddXP_XPOutput' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_FTrunc_ReturnValue) == 0x0005E0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0005E8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_MakeStruct_FormatArgumentData) == 0x0005F0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_MakeArray_Array) == 0x000640, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Format_ReturnValue) == 0x000650, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000668, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_ComponentBoundEvent_LayerIndex) == 0x00066C, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, K2Node_ComponentBoundEvent_bIsSeen) == 0x000670, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000678, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000680, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000688, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000690, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000698, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0006A0, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x0006A8, "Member 'BP_KeycardDoor_C_ExecuteUbergraph_BP_KeycardDoor::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_KeycardDoor_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_KeycardDoor_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_GetInteractOptions");
static_assert(sizeof(BP_KeycardDoor_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_KeycardDoor_C_GetInteractOptions");
static_assert(offsetof(BP_KeycardDoor_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_KeycardDoor_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_KeycardDoor_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_KeycardDoor_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_KeycardDoor_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_GetItemInfo");
static_assert(sizeof(BP_KeycardDoor_C_GetItemInfo) == 0x000078, "Wrong size on BP_KeycardDoor_C_GetItemInfo");
static_assert(offsetof(BP_KeycardDoor_C_GetItemInfo, Info) == 0x000000, "Member 'BP_KeycardDoor_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_GetItemInfo, Count) == 0x000008, "Member 'BP_KeycardDoor_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_KeycardDoor_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_KeycardDoor_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_KeycardDoor_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_KeycardDoor_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_KeycardDoor_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_KeycardDoor_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_GetMainSceneComp");
static_assert(sizeof(BP_KeycardDoor_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_KeycardDoor_C_GetMainSceneComp");
static_assert(offsetof(BP_KeycardDoor_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_KeycardDoor_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_KeycardDoor_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_KeycardDoor_C_JigCanInteract");
static_assert(sizeof(BP_KeycardDoor_C_JigCanInteract) == 0x000001, "Wrong size on BP_KeycardDoor_C_JigCanInteract");
static_assert(offsetof(BP_KeycardDoor_C_JigCanInteract, Result) == 0x000000, "Member 'BP_KeycardDoor_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_KeycardDoor_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_KeycardDoor_C_JigSetCanInteract");
static_assert(sizeof(BP_KeycardDoor_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_KeycardDoor_C_JigSetCanInteract");
static_assert(offsetof(BP_KeycardDoor_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_KeycardDoor_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_KeycardDoor_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_KeycardDoor_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.MC_OpenDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_MC_OpenDoor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_MC_OpenDoor) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_MC_OpenDoor");
static_assert(sizeof(BP_KeycardDoor_C_MC_OpenDoor) == 0x000008, "Wrong size on BP_KeycardDoor_C_MC_OpenDoor");
static_assert(offsetof(BP_KeycardDoor_C_MC_OpenDoor, Actor) == 0x000000, "Member 'BP_KeycardDoor_C_MC_OpenDoor::Actor' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_KeycardDoor_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_KeycardDoor_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_OnBeginInteract");
static_assert(sizeof(BP_KeycardDoor_C_OnBeginInteract) == 0x000058, "Wrong size on BP_KeycardDoor_C_OnBeginInteract");
static_assert(offsetof(BP_KeycardDoor_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_KeycardDoor_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_KeycardDoor_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_KeycardDoor_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_OnExecuteInteract");
static_assert(sizeof(BP_KeycardDoor_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_KeycardDoor_C_OnExecuteInteract");
static_assert(offsetof(BP_KeycardDoor_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_KeycardDoor_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_KeycardDoor_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_KeycardDoor_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_KeycardDoor_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_KeycardDoor_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_KeycardDoor_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_KeycardDoor_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_OnRequestServerInteract");
static_assert(sizeof(BP_KeycardDoor_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_KeycardDoor_C_OnRequestServerInteract");
static_assert(offsetof(BP_KeycardDoor_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_KeycardDoor_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_KeycardDoor_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_KeycardDoor_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_KeycardDoor_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_KeycardDoor_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_OnServerExecuteInteract");
static_assert(sizeof(BP_KeycardDoor_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_KeycardDoor_C_OnServerExecuteInteract");
static_assert(offsetof(BP_KeycardDoor_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_KeycardDoor_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_KeycardDoor_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_KeycardDoor_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_KeycardDoor_C_OnStopExecuteInteract");
static_assert(sizeof(BP_KeycardDoor_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_KeycardDoor_C_OnStopExecuteInteract");
static_assert(offsetof(BP_KeycardDoor_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_KeycardDoor_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_KeycardDoor_C_SetInteractOption");
static_assert(sizeof(BP_KeycardDoor_C_SetInteractOption) == 0x000008, "Wrong size on BP_KeycardDoor_C_SetInteractOption");
static_assert(offsetof(BP_KeycardDoor_C_SetInteractOption, Option) == 0x000000, "Member 'BP_KeycardDoor_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_KeycardDoor.BP_KeycardDoor_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_KeycardDoor_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KeycardDoor_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_KeycardDoor_C_SetPickupCount");
static_assert(sizeof(BP_KeycardDoor_C_SetPickupCount) == 0x000008, "Wrong size on BP_KeycardDoor_C_SetPickupCount");
static_assert(offsetof(BP_KeycardDoor_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_KeycardDoor_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_KeycardDoor_C_SetPickupCount, Result) == 0x000004, "Member 'BP_KeycardDoor_C_SetPickupCount::Result' has a wrong offset!");

}

