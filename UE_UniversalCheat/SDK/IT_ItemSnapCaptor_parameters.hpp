#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IT_ItemSnapCaptor

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.AddItemToQueue
// 0x0010 (0x0010 - 0x0000)
struct IT_ItemSnapCaptor_C_AddItemToQueue final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_AddItemToQueue) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_AddItemToQueue");
static_assert(sizeof(IT_ItemSnapCaptor_C_AddItemToQueue) == 0x000010, "Wrong size on IT_ItemSnapCaptor_C_AddItemToQueue");
static_assert(offsetof(IT_ItemSnapCaptor_C_AddItemToQueue, Item) == 0x000000, "Member 'IT_ItemSnapCaptor_C_AddItemToQueue::Item' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_AddItemToQueue, Result) == 0x000008, "Member 'IT_ItemSnapCaptor_C_AddItemToQueue::Result' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.GetLocalAttachmentByID
// 0x0028 (0x0028 - 0x0000)
struct IT_ItemSnapCaptor_C_GetLocalAttachmentByID final
{
public:
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Socket;                                            // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Type;                                              // 0x0014(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Class_0;                                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_GetLocalAttachmentByID");
static_assert(sizeof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID) == 0x000028, "Wrong size on IT_ItemSnapCaptor_C_GetLocalAttachmentByID");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID, ItemId) == 0x000000, "Member 'IT_ItemSnapCaptor_C_GetLocalAttachmentByID::ItemId' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID, Found) == 0x000008, "Member 'IT_ItemSnapCaptor_C_GetLocalAttachmentByID::Found' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID, Socket) == 0x00000C, "Member 'IT_ItemSnapCaptor_C_GetLocalAttachmentByID::Socket' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID, Type) == 0x000014, "Member 'IT_ItemSnapCaptor_C_GetLocalAttachmentByID::Type' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetLocalAttachmentByID, Class_0) == 0x000020, "Member 'IT_ItemSnapCaptor_C_GetLocalAttachmentByID::Class_0' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.GetSnap
// 0x0010 (0x0010 - 0x0000)
struct IT_ItemSnapCaptor_C_GetSnap final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Texture;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_GetSnap) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_GetSnap");
static_assert(sizeof(IT_ItemSnapCaptor_C_GetSnap) == 0x000010, "Wrong size on IT_ItemSnapCaptor_C_GetSnap");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetSnap, ItemRef) == 0x000000, "Member 'IT_ItemSnapCaptor_C_GetSnap::ItemRef' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_GetSnap, Texture) == 0x000008, "Member 'IT_ItemSnapCaptor_C_GetSnap::Texture' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.InspectorGetPrimitiveComponent
// 0x0010 (0x0010 - 0x0000)
struct IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent");
static_assert(sizeof(IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent) == 0x000010, "Wrong size on IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent");
static_assert(offsetof(IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent, Actor) == 0x000000, "Member 'IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent::Actor' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent, Comp) == 0x000008, "Member 'IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent::Comp' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.SpawnSnapshotCaptor
// 0x0010 (0x0010 - 0x0000)
struct IT_ItemSnapCaptor_C_SpawnSnapshotCaptor final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ItemInspector_C*                    InspectorRef;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_SpawnSnapshotCaptor) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_SpawnSnapshotCaptor");
static_assert(sizeof(IT_ItemSnapCaptor_C_SpawnSnapshotCaptor) == 0x000010, "Wrong size on IT_ItemSnapCaptor_C_SpawnSnapshotCaptor");
static_assert(offsetof(IT_ItemSnapCaptor_C_SpawnSnapshotCaptor, ItemRef) == 0x000000, "Member 'IT_ItemSnapCaptor_C_SpawnSnapshotCaptor::ItemRef' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_SpawnSnapshotCaptor, InspectorRef) == 0x000008, "Member 'IT_ItemSnapCaptor_C_SpawnSnapshotCaptor::InspectorRef' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.UpdateAttachments
// 0x0028 (0x0028 - 0x0000)
struct IT_ItemSnapCaptor_C_UpdateAttachments final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderT;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Attachments;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTextureRenderTarget*                   RenderTarget;                                      // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_UpdateAttachments) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_UpdateAttachments");
static_assert(sizeof(IT_ItemSnapCaptor_C_UpdateAttachments) == 0x000028, "Wrong size on IT_ItemSnapCaptor_C_UpdateAttachments");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateAttachments, ItemRef) == 0x000000, "Member 'IT_ItemSnapCaptor_C_UpdateAttachments::ItemRef' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateAttachments, RenderT) == 0x000008, "Member 'IT_ItemSnapCaptor_C_UpdateAttachments::RenderT' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateAttachments, Attachments) == 0x000010, "Member 'IT_ItemSnapCaptor_C_UpdateAttachments::Attachments' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateAttachments, RenderTarget) == 0x000020, "Member 'IT_ItemSnapCaptor_C_UpdateAttachments::RenderTarget' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.UpdateSnap
// 0x0018 (0x0018 - 0x0000)
struct IT_ItemSnapCaptor_C_UpdateSnap final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderT;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget*                   RenderTarget;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_UpdateSnap) == 0x000008, "Wrong alignment on IT_ItemSnapCaptor_C_UpdateSnap");
static_assert(sizeof(IT_ItemSnapCaptor_C_UpdateSnap) == 0x000018, "Wrong size on IT_ItemSnapCaptor_C_UpdateSnap");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnap, ItemRef) == 0x000000, "Member 'IT_ItemSnapCaptor_C_UpdateSnap::ItemRef' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnap, RenderT) == 0x000008, "Member 'IT_ItemSnapCaptor_C_UpdateSnap::RenderT' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnap, RenderTarget) == 0x000010, "Member 'IT_ItemSnapCaptor_C_UpdateSnap::RenderTarget' has a wrong offset!");

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.UpdateSnapCustom
// 0x0080 (0x0080 - 0x0000)
struct IT_ItemSnapCaptor_C_UpdateSnapCustom final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV;                                               // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            JigItem;                                           // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IT_ItemSnapCaptor_C_UpdateSnapCustom) == 0x000010, "Wrong alignment on IT_ItemSnapCaptor_C_UpdateSnapCustom");
static_assert(sizeof(IT_ItemSnapCaptor_C_UpdateSnapCustom) == 0x000080, "Wrong size on IT_ItemSnapCaptor_C_UpdateSnapCustom");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnapCustom, Transform) == 0x000000, "Member 'IT_ItemSnapCaptor_C_UpdateSnapCustom::Transform' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnapCustom, FOV) == 0x000060, "Member 'IT_ItemSnapCaptor_C_UpdateSnapCustom::FOV' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnapCustom, JigItem) == 0x000068, "Member 'IT_ItemSnapCaptor_C_UpdateSnapCustom::JigItem' has a wrong offset!");
static_assert(offsetof(IT_ItemSnapCaptor_C_UpdateSnapCustom, Result) == 0x000070, "Member 'IT_ItemSnapCaptor_C_UpdateSnapCustom::Result' has a wrong offset!");

}

