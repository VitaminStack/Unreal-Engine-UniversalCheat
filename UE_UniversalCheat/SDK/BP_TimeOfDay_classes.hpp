#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TimeOfDay

#include "Basic.hpp"

#include "E_BlockType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TimeOfDay.BP_TimeOfDay_C
// 0x0068 (0x0300 - 0x0298)
class ABP_TimeOfDay_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      Directional_Light;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ASkyLight*                              SkyLight;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_Sky_Sphere_C*                       Sky_Sphere;                                        // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Sun_Speed;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Tick;                                              // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Time;                                              // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        New_Time_Delta;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Night;                                             // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 Hours)>   Time_Hour;                                         // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Debug_Text;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Actor_Aim_Focus(class AActor* Instigator_0);
	void Actor_Attack_Target(class AActor** Attack_Target);
	void AI_Alert(class AActor* Alert_Actor);
	void AI_Animation_Switch(E_AIBehaviour Behaviour);
	void AI_Block(E_BlockType Block_Type, class AActor* Block_Attacker);
	void AI_Camera_Activate(bool Activate);
	void AI_Can_Interact_(bool* Can_Interact);
	void AI_Dead();
	void AI_End_Alert();
	void Alert_Actor_Defenders(class AActor* Attacked, class AActor* Attacker);
	void Day_Lighting(double Delta);
	void ExecuteUbergraph_BP_TimeOfDay(int32 EntryPoint);
	void Night_Lighting(double Delta);
	void ReceiveTick(float DeltaSeconds);
	void Turret_Destroyed_Effect();
	void Turret_End_Reload();
	void Turret_Idle_Start();
	void Turret_Idle_Stop();
	void Turret_Start_Reload();
	void Update_Time(double Delta);

	void AI_Is_Dead_(bool* Dead) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TimeOfDay_C">();
	}
	static class ABP_TimeOfDay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TimeOfDay_C>();
	}
};
static_assert(alignof(ABP_TimeOfDay_C) == 0x000008, "Wrong alignment on ABP_TimeOfDay_C");
static_assert(sizeof(ABP_TimeOfDay_C) == 0x000300, "Wrong size on ABP_TimeOfDay_C");
static_assert(offsetof(ABP_TimeOfDay_C, UberGraphFrame) == 0x000298, "Member 'ABP_TimeOfDay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_TimeOfDay_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Directional_Light) == 0x0002A8, "Member 'ABP_TimeOfDay_C::Directional_Light' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, SkyLight) == 0x0002B0, "Member 'ABP_TimeOfDay_C::SkyLight' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Sky_Sphere) == 0x0002B8, "Member 'ABP_TimeOfDay_C::Sky_Sphere' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Sun_Speed) == 0x0002C0, "Member 'ABP_TimeOfDay_C::Sun_Speed' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Tick) == 0x0002C8, "Member 'ABP_TimeOfDay_C::Tick' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Time) == 0x0002D0, "Member 'ABP_TimeOfDay_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, New_Time_Delta) == 0x0002D8, "Member 'ABP_TimeOfDay_C::New_Time_Delta' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Night) == 0x0002E0, "Member 'ABP_TimeOfDay_C::Night' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Time_Hour) == 0x0002E8, "Member 'ABP_TimeOfDay_C::Time_Hour' has a wrong offset!");
static_assert(offsetof(ABP_TimeOfDay_C, Debug_Text) == 0x0002F8, "Member 'ABP_TimeOfDay_C::Debug_Text' has a wrong offset!");

}

