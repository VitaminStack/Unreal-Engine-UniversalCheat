#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootContainerWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_LootContainerWidget.BP_LootContainerWidget_C
// 0x0160 (0x0420 - 0x02C0)
class UBP_LootContainerWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             AdditionalTxt;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ContainerLootTypeTxt;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_62;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           InteractOptions;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             InteractTxt;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             QuickSearch;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USquareProgressBar_C*                   SquareProgressBar;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt;                                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           DefColor;                                          // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentTime;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTime;                                           // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCauseNoise_;                                    // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ContainerRef;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        OptionMap;                                         // 0x0340(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class UBP_InteractWidgetOption_C*> OptionW;                                           // 0x0390(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_InteractWidgetOption_C*>     Options;                                           // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FText                                   ContainerName;                                     // 0x03F0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   LootType;                                          // 0x0408(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void Construct();
	void ExecuteUbergraph_BP_LootContainerWidget(int32 EntryPoint);
	void SetOption(const struct FGameplayTag& Option);
	void SetupWidget(const TMap<struct FGameplayTag, class FText>& Options_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateOptionText(const struct FGameplayTag& Option, const class FText& NewText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootContainerWidget_C">();
	}
	static class UBP_LootContainerWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LootContainerWidget_C>();
	}
};
static_assert(alignof(UBP_LootContainerWidget_C) == 0x000008, "Wrong alignment on UBP_LootContainerWidget_C");
static_assert(sizeof(UBP_LootContainerWidget_C) == 0x000420, "Wrong size on UBP_LootContainerWidget_C");
static_assert(offsetof(UBP_LootContainerWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_LootContainerWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, AdditionalTxt) == 0x0002C8, "Member 'UBP_LootContainerWidget_C::AdditionalTxt' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, ContainerLootTypeTxt) == 0x0002D0, "Member 'UBP_LootContainerWidget_C::ContainerLootTypeTxt' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, Image_62) == 0x0002D8, "Member 'UBP_LootContainerWidget_C::Image_62' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, InteractOptions) == 0x0002E0, "Member 'UBP_LootContainerWidget_C::InteractOptions' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, InteractTxt) == 0x0002E8, "Member 'UBP_LootContainerWidget_C::InteractTxt' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, QuickSearch) == 0x0002F0, "Member 'UBP_LootContainerWidget_C::QuickSearch' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, SquareProgressBar) == 0x0002F8, "Member 'UBP_LootContainerWidget_C::SquareProgressBar' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, txt) == 0x000300, "Member 'UBP_LootContainerWidget_C::txt' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, DefColor) == 0x000308, "Member 'UBP_LootContainerWidget_C::DefColor' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, CurrentTime) == 0x000318, "Member 'UBP_LootContainerWidget_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, MaxTime) == 0x000320, "Member 'UBP_LootContainerWidget_C::MaxTime' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, Multiplier) == 0x000328, "Member 'UBP_LootContainerWidget_C::Multiplier' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, CanCauseNoise_) == 0x000330, "Member 'UBP_LootContainerWidget_C::CanCauseNoise_' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, ContainerRef) == 0x000338, "Member 'UBP_LootContainerWidget_C::ContainerRef' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, OptionMap) == 0x000340, "Member 'UBP_LootContainerWidget_C::OptionMap' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, OptionW) == 0x000390, "Member 'UBP_LootContainerWidget_C::OptionW' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, Options) == 0x0003E0, "Member 'UBP_LootContainerWidget_C::Options' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, ContainerName) == 0x0003F0, "Member 'UBP_LootContainerWidget_C::ContainerName' has a wrong offset!");
static_assert(offsetof(UBP_LootContainerWidget_C, LootType) == 0x000408, "Member 'UBP_LootContainerWidget_C::LootType' has a wrong offset!");

}

