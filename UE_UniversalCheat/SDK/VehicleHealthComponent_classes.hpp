#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleHealthComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BaseComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass VehicleHealthComponent.VehicleHealthComponent_C
// 0x0030 (0x00E8 - 0x00B8)
class UVehicleHealthComponent_C final : public UBaseComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_VehicleHealthComponent_C;           // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        CurrentHealth;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double FuelInput)> FuelUpdate;                                        // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_VehicleMaster_C*                    Vehicle;                                           // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddHealth(double HealthPercent);
	void ExecuteUbergraph_VehicleHealthComponent(int32 EntryPoint);
	void LoadComponent();
	void UpdateUIHealth(double Health, double MaxHealth_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VehicleHealthComponent_C">();
	}
	static class UVehicleHealthComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVehicleHealthComponent_C>();
	}
};
static_assert(alignof(UVehicleHealthComponent_C) == 0x000008, "Wrong alignment on UVehicleHealthComponent_C");
static_assert(sizeof(UVehicleHealthComponent_C) == 0x0000E8, "Wrong size on UVehicleHealthComponent_C");
static_assert(offsetof(UVehicleHealthComponent_C, UberGraphFrame_VehicleHealthComponent_C) == 0x0000B8, "Member 'UVehicleHealthComponent_C::UberGraphFrame_VehicleHealthComponent_C' has a wrong offset!");
static_assert(offsetof(UVehicleHealthComponent_C, CurrentHealth) == 0x0000C0, "Member 'UVehicleHealthComponent_C::CurrentHealth' has a wrong offset!");
static_assert(offsetof(UVehicleHealthComponent_C, MaxHealth) == 0x0000C8, "Member 'UVehicleHealthComponent_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(UVehicleHealthComponent_C, FuelUpdate) == 0x0000D0, "Member 'UVehicleHealthComponent_C::FuelUpdate' has a wrong offset!");
static_assert(offsetof(UVehicleHealthComponent_C, Vehicle) == 0x0000E0, "Member 'UVehicleHealthComponent_C::Vehicle' has a wrong offset!");

}

