#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileMaster

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProjectileMaster.BP_ProjectileMaster_C
// 0x0028 (0x02C0 - 0x0298)
class ABP_ProjectileMaster_C : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_FirearmPickup_C*                    WeaponOwner;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinDmg;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxDmg;                                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SpawnCombatText(const struct FVector& Location, double Damage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ProjectileMaster_C">();
	}
	static class ABP_ProjectileMaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProjectileMaster_C>();
	}
};
static_assert(alignof(ABP_ProjectileMaster_C) == 0x000008, "Wrong alignment on ABP_ProjectileMaster_C");
static_assert(sizeof(ABP_ProjectileMaster_C) == 0x0002C0, "Wrong size on ABP_ProjectileMaster_C");
static_assert(offsetof(ABP_ProjectileMaster_C, StaticMesh) == 0x000298, "Member 'ABP_ProjectileMaster_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileMaster_C, ProjectileMovement) == 0x0002A0, "Member 'ABP_ProjectileMaster_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileMaster_C, WeaponOwner) == 0x0002A8, "Member 'ABP_ProjectileMaster_C::WeaponOwner' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileMaster_C, MinDmg) == 0x0002B0, "Member 'ABP_ProjectileMaster_C::MinDmg' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileMaster_C, MaxDmg) == 0x0002B8, "Member 'ABP_ProjectileMaster_C::MaxDmg' has a wrong offset!");

}

