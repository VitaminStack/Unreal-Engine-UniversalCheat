#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExampleCharacter_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ExampleCharacter_AnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ExampleCharacter_AnimBP.ExampleCharacter_AnimBP_C
// 0x0980 (0x0CD0 - 0x0350)
class UExampleCharacter_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ExampleCharacter_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0030)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x03B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x03E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0458(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0598(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x05C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x05E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0630(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0650(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0698(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x06B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0700(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0720(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x0790(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x07D8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0848(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x0868(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x08B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x08F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0940(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0960(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x09A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x09F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0A38(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0A58(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0AC8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0B10(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0B80(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0BA0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0C68(0x0048)()
	class ABP_ExampleCharacter_C*                 Example_Character;                                 // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x0CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Jump;                                       // 0x0CC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Crouching;                                         // 0x0CC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Falling;                                        // 0x0CCA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Aimed;                                             // 0x0CCB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_315E9BF04EA579C328EB6A866B91C07A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_4AAD4A594EABD4F92E1D44BBD3F4830B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_B5FC24DC46AC278756122B949D5CDB8C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_BA7306BD40D3FE50A5E9239D31192E92();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_D25429B644E6C66D625827BA5AE5F04E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_F13AB6764EBE8335385B039A555B9993();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ExampleCharacter_AnimBP_AnimGraphNode_TransitionResult_F867B5374C7EFB9ED9010FA7431019DF();
	void ExecuteUbergraph_ExampleCharacter_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ExampleCharacter_AnimBP_C">();
	}
	static class UExampleCharacter_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExampleCharacter_AnimBP_C>();
	}
};
static_assert(alignof(UExampleCharacter_AnimBP_C) == 0x000010, "Wrong alignment on UExampleCharacter_AnimBP_C");
static_assert(sizeof(UExampleCharacter_AnimBP_C) == 0x000CD0, "Wrong size on UExampleCharacter_AnimBP_C");
static_assert(offsetof(UExampleCharacter_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UExampleCharacter_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, __AnimBlueprintMutables) == 0x000358, "Member 'UExampleCharacter_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UExampleCharacter_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UExampleCharacter_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_Root) == 0x000398, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0003B8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x0003E0, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x000408, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000430, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000458, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000480, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x0004A8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0004D0, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0004F8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000520, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000548, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000570, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000598, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0005C0, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0005E8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000630, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000650, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000698, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0006B8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult_4) == 0x000700, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000720, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x000790, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0007D8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000848, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x000868, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0008B0, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0008F8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000940, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000960, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x0009A8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0009F0, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000A38, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000A58, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x000AC8, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000B10, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateResult) == 0x000B80, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_StateMachine) == 0x000BA0, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, AnimGraphNode_Slot) == 0x000C68, "Member 'UExampleCharacter_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Example_Character) == 0x000CB0, "Member 'UExampleCharacter_AnimBP_C::Example_Character' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Speed) == 0x000CB8, "Member 'UExampleCharacter_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Direction) == 0x000CC0, "Member 'UExampleCharacter_AnimBP_C::Direction' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Enable_Jump) == 0x000CC8, "Member 'UExampleCharacter_AnimBP_C::Enable_Jump' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Crouching) == 0x000CC9, "Member 'UExampleCharacter_AnimBP_C::Crouching' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Is_Falling) == 0x000CCA, "Member 'UExampleCharacter_AnimBP_C::Is_Falling' has a wrong offset!");
static_assert(offsetof(UExampleCharacter_AnimBP_C, Aimed) == 0x000CCB, "Member 'UExampleCharacter_AnimBP_C::Aimed' has a wrong offset!");

}

