#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawningVolume_Prefab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIOptimizer_structs.hpp"
#include "E_StartingAIBehaviours_structs.hpp"
#include "S_AISpawner_structs.hpp"
#include "S_TriggerResponse_structs.hpp"
#include "S_AIRespawn_structs.hpp"
#include "BP_MasterObject_classes.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AISpawningVolume_Prefab.BP_AISpawningVolume_Prefab_C
// 0x0140 (0x03E0 - 0x02A0)
class ABP_AISpawningVolume_Prefab_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          AI_Spawn_Volume;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FS_AISpawner                           AI_Spawn_Element;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Spawn_AI;                                   // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreNoSpawnArea_;                                // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_AISpawner>                   Spawning_AI;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible)
	double                                        InitialSpawnDelay;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spawn_Time;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spawn_Time_Deviation;                              // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Overlap_Size_Check;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_Rotations;                                  // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Floors;                                            // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Spawn_Retries;                                     // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Spawned_AI;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Respawn_AI;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Respawn_Time_Variation;                            // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AIRespawn>                   AI_Respawning_Timers;                              // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Show_Deactivation_Proximity;                       // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Activation_Proximity;                         // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player_In_Area;                                    // 0x035A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35B[0x1];                                      // 0x035B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AI_Total;                                          // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AISpawner>                   Remaining_Spawning_AI;                             // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Spawn_Index;                                       // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Starting_Behaviour;                       // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StartingAIBehaviours                        Override_Behaviour;                                // 0x0375(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376[0x2];                                      // 0x0376(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MasterWayPoint_C*>           Way_Points;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FS_TriggerResponse>             Trigger_Activated_Responses;                       // 0x0388(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_TriggerResponse>             Trigger_Deactivated_Responses;                     // 0x0398(0x0010)(Edit, BlueprintVisible)
	class FName                                   StreamLevelPackageName;                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AIBase;                                            // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           UniqueLoot;                                        // 0x03B8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FAIOSubjectHandle>              SpawnedActorHandles;                               // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SkipFloorCheck_;                                   // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void TraceForPlayer(const struct FVector& Loc, bool* PlayerHit_);
	void Stop_Spawning();
	void Spawn_Location_Trace(int32 Index_0);
	void Restart_Spawning();
	void RespawnAI(class APawn* Pawn);
	void Respawn_Timer();
	void Reset_Find_Respawn();
	void Reset_AI(const struct FHitResult& Hit_Result, class ACharacter* AI_Character);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void KillSpawnedActors();
	bool Find_Spawn_Location(struct FHitResult* Hit_Result);
	void ExecuteUbergraph_BP_AISpawningVolume_Prefab(int32 EntryPoint);
	void ConvertLocalToWorldLocation(struct FVector& Point_Local, struct FVector* Point_World);
	void AI_Respawn_Timer_Finished(class ACharacter* AI_Character);
	void Add_AI_Respawn_Timer(class ACharacter* AI_Character);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AISpawningVolume_Prefab_C">();
	}
	static class ABP_AISpawningVolume_Prefab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AISpawningVolume_Prefab_C>();
	}
};
static_assert(alignof(ABP_AISpawningVolume_Prefab_C) == 0x000008, "Wrong alignment on ABP_AISpawningVolume_Prefab_C");
static_assert(sizeof(ABP_AISpawningVolume_Prefab_C) == 0x0003E0, "Wrong size on ABP_AISpawningVolume_Prefab_C");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_AISpawningVolume_Prefab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Scene) == 0x0002A8, "Member 'ABP_AISpawningVolume_Prefab_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Billboard) == 0x0002B0, "Member 'ABP_AISpawningVolume_Prefab_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, AI_Spawn_Volume) == 0x0002B8, "Member 'ABP_AISpawningVolume_Prefab_C::AI_Spawn_Volume' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, AI_Spawn_Element) == 0x0002C0, "Member 'ABP_AISpawningVolume_Prefab_C::AI_Spawn_Element' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Enable_Spawn_AI) == 0x0002D0, "Member 'ABP_AISpawningVolume_Prefab_C::Enable_Spawn_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, IgnoreNoSpawnArea_) == 0x0002D1, "Member 'ABP_AISpawningVolume_Prefab_C::IgnoreNoSpawnArea_' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Spawning_AI) == 0x0002D8, "Member 'ABP_AISpawningVolume_Prefab_C::Spawning_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, InitialSpawnDelay) == 0x0002E8, "Member 'ABP_AISpawningVolume_Prefab_C::InitialSpawnDelay' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Spawn_Time) == 0x0002F0, "Member 'ABP_AISpawningVolume_Prefab_C::Spawn_Time' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Spawn_Time_Deviation) == 0x0002F8, "Member 'ABP_AISpawningVolume_Prefab_C::Spawn_Time_Deviation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Overlap_Size_Check) == 0x000300, "Member 'ABP_AISpawningVolume_Prefab_C::Overlap_Size_Check' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Random_Rotations) == 0x000308, "Member 'ABP_AISpawningVolume_Prefab_C::Random_Rotations' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Floors) == 0x000310, "Member 'ABP_AISpawningVolume_Prefab_C::Floors' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Spawn_Retries) == 0x000320, "Member 'ABP_AISpawningVolume_Prefab_C::Spawn_Retries' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Spawned_AI) == 0x000328, "Member 'ABP_AISpawningVolume_Prefab_C::Spawned_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Respawn_AI) == 0x000338, "Member 'ABP_AISpawningVolume_Prefab_C::Respawn_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Respawn_Time_Variation) == 0x000340, "Member 'ABP_AISpawningVolume_Prefab_C::Respawn_Time_Variation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, AI_Respawning_Timers) == 0x000348, "Member 'ABP_AISpawningVolume_Prefab_C::AI_Respawning_Timers' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Show_Deactivation_Proximity) == 0x000358, "Member 'ABP_AISpawningVolume_Prefab_C::Show_Deactivation_Proximity' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Show_Activation_Proximity) == 0x000359, "Member 'ABP_AISpawningVolume_Prefab_C::Show_Activation_Proximity' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Player_In_Area) == 0x00035A, "Member 'ABP_AISpawningVolume_Prefab_C::Player_In_Area' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, AI_Total) == 0x00035C, "Member 'ABP_AISpawningVolume_Prefab_C::AI_Total' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Remaining_Spawning_AI) == 0x000360, "Member 'ABP_AISpawningVolume_Prefab_C::Remaining_Spawning_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Spawn_Index) == 0x000370, "Member 'ABP_AISpawningVolume_Prefab_C::Spawn_Index' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Override_Starting_Behaviour) == 0x000374, "Member 'ABP_AISpawningVolume_Prefab_C::Override_Starting_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Override_Behaviour) == 0x000375, "Member 'ABP_AISpawningVolume_Prefab_C::Override_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Way_Points) == 0x000378, "Member 'ABP_AISpawningVolume_Prefab_C::Way_Points' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Trigger_Activated_Responses) == 0x000388, "Member 'ABP_AISpawningVolume_Prefab_C::Trigger_Activated_Responses' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, Trigger_Deactivated_Responses) == 0x000398, "Member 'ABP_AISpawningVolume_Prefab_C::Trigger_Deactivated_Responses' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, StreamLevelPackageName) == 0x0003A8, "Member 'ABP_AISpawningVolume_Prefab_C::StreamLevelPackageName' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, AIBase) == 0x0003B0, "Member 'ABP_AISpawningVolume_Prefab_C::AIBase' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, UniqueLoot) == 0x0003B8, "Member 'ABP_AISpawningVolume_Prefab_C::UniqueLoot' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, SpawnedActorHandles) == 0x0003C8, "Member 'ABP_AISpawningVolume_Prefab_C::SpawnedActorHandles' has a wrong offset!");
static_assert(offsetof(ABP_AISpawningVolume_Prefab_C, SkipFloorCheck_) == 0x0003D8, "Member 'ABP_AISpawningVolume_Prefab_C::SkipFloorCheck_' has a wrong offset!");

}

