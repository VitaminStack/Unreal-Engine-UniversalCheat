#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhotoModeWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "EnumIcons_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PhotoModeWidget.PhotoModeWidget_C
// 0x0C60 (0x0F20 - 0x02C0)
class UPhotoModeWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       OpenPhotoMode;                                     // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NotificationScreenshotTaken;                       // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USelectorSlider_C*                      Aperture;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               APM_SizeMenu;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonCheckbox_C*                      Autofocus;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        BlueCorrection;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderScreenshotTaken;                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        Brightness;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_CameraTab;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_ColorBalanceTab;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_DepthOfFieldTab;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_DisplayTab;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_FiltersTab;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_FramesTab;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_LogoTab;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButtonTab_C*                     btn_ScreenEffectsTab;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btnDown;                                           // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btnLeft;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btnRight;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btnSwap;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btnUp;                                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Buttons_Border;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        CameraDistance;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        CameraRoll;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasScreenshotTaken;                             // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CaptureMouseArea;                                  // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonCheckbox_C*                      CharacterRotation;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        ChromaticAberrationIntensity;                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        ChromaticAberrationOffset;                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        ColorBalanceBlue;                                  // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        ColorBalanceGreen;                                 // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        ColorBalanceIntensity;                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        ColorBalanceRed;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectorSlider_C*                      ColorBalanceSelector;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_Album;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_ChangeTab;                                 // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_Close;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_FreeCamera;                                // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_HideUI;                                    // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_Mouse;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_Reset;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommandButton_C*                       Command_TakePicture;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divisor;                                           // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Down;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FieldOfView;                                       // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FilmGrain;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectorSlider_C*                      Filter;                                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FocusDistance;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FocusDistanceTxt;                                  // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FrameBlue;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FrameGreen;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FrameRed;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectorSlider_C*                      FrameSelector;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        FrameSize;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonCheckbox_C*                      Grid;                                              // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GRIDAutofocus;                                     // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GRIDFocusDistanceText;                             // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonCheckbox_C*                      HideCharacter;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_PhotoModeIsOn;                                 // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Info_Border;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        InfoSwitcher;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Left;                                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        LogoAngle;                                         // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        LogoHorizontalAlignment;                           // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectorSlider_C*                      LogoSelector;                                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        LogoSize;                                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        LogoVerticalAlignment;                             // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        LUTIntensity;                                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        MotionBlur;                                        // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MoveCameraKeys_CanvasPanel;                        // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_1;                                         // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_2;                                         // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_3;                                         // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_4;                                         // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PhotoModeIsOnHidedMenu;                            // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectorSlider_C*                      PhotoResolution;                                   // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PreviewPhoto;                                      // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USelectorSlider_C*                      Rendering;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Right;                                             // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        SensorWidth;                                       // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Swap;                                              // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Swap_Gamepad_HorizontalBox;                        // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        Temperature;                                       // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_192;                                     // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextPhotoModeIsOn;                                 // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        Tint;                                              // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Up;                                                // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_381;                                   // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonSlider_C*                        Vignette;                                          // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherPM;                                  // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EnumIcons                                     IconType;                                          // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EnumIcons                                     GamepadIconStyle;                                  // 0x0599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CurrentGenericWidgetElement;                       // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTab;                                        // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastTabIndex;                                      // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingFreeCamera_;                                  // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  FreeCameraPawn;                                    // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APhotoModeFreeCamera_C*                 FreeCameraReference;                               // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FreeCameraComponent;                               // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   EditedPostProcessSettings;                         // 0x05D0(0x06E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(const struct FPostProcessSettings& PostProcessValues)> ED_FreeCameraReference;                            // 0x0CB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FRotator                               EditedCameraRoll;                                  // 0x0CC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        EditedCameraFOV;                                   // 0x0CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double FOVValue)> ED_FreeCameraFOV;                                  // 0x0CE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FRotator& RotationValue)> ED_FreeCameraRotation;                             // 0x0CF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowingMouseCursor;                                // 0x0D00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MenuHidden;                                        // 0x0D01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanFocus_;                                         // 0x0D02(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D03[0x5];                                      // 0x0D03(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhotoModeGalleryWidget_C*              GalleryReference;                                  // 0x0D08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPhotoModeComponent_C*                  PhotoModeComponentReference;                       // 0x0D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          RunPhysicsWithNoController_;                       // 0x0D18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowPhotoModeIsOnWarning_;                         // 0x0D19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TakingPhoto;                                       // 0x0D1A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1B[0x5];                                      // 0x0D1B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCommonSlider_C*>                CommonSliders;                                     // 0x0D20(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ResetSucess;                                       // 0x0D30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D31[0x7];                                      // 0x0D31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           FiltersOptions;                                    // 0x0D38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USelectorSlider_C*>              SelectorSliders;                                   // 0x0D48(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UCommonCheckbox_C*>              CommonCheckboxes;                                  // 0x0D58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          UsingAutofocus;                                    // 0x0D68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CollisionChannel;                                  // 0x0D69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6A[0x6];                                      // 0x0D6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     HorizontalFrame;                                   // 0x0D70(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     VerticalFrame;                                     // 0x0D80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     FrameToAdd;                                        // 0x0D90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          CanTakePhoto;                                      // 0x0DA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA1[0x7];                                      // 0x0DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               LogoDynamicMaterial;                               // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     CurrentLogo;                                       // 0x0DB0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class FText>                           LogosNames;                                        // 0x0DC0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FIntPoint                              ScreenshotResolution;                              // 0x0DD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           PostProcessMaterialsEffects;                       // 0x0DD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FWeightedBlendable                     PostProcessMaterialToAdd;                          // 0x0DE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          HighResFunction;                                   // 0x0DF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF9[0x7];                                      // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCommonButtonTab_C*>             CommonButtons;                                     // 0x0E00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ShowGrid_;                                         // 0x0E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithUI;                                            // 0x0E11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E12[0x6];                                      // 0x0E12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PlayerVelocity;                                    // 0x0E18(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PlayerMovementMode;                                // 0x0E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PlayerCustomMovementMode;                          // 0x0E31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E32[0x2];                                      // 0x0E32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              DefaultUserScreenResolution;                       // 0x0E34(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          KeyboardInput;                                     // 0x0E3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamepadInput;                                      // 0x0E3D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpDownIsNowLeftRight;                              // 0x0E3E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3F[0x1];                                      // 0x0E3F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LastControlRotation;                               // 0x0E40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanUpdateMouseWheel;                               // 0x0E58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E59[0x7];                                      // 0x0E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CameraLocation;                                    // 0x0E60(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraDistanceTAL;                                 // 0x0E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV;                                               // 0x0E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Roll;                                              // 0x0E88(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FKey                                   LastKeyPressed;                                    // 0x0EA0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        CameraMoveDelta;                                   // 0x0EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LastScreenshotPath;                                // 0x0EC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LastScreenshotName;                                // 0x0ED0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LastThumbnailPath;                                 // 0x0EE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LastThumbnailName;                                 // 0x0EF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          TurnToCamera;                                      // 0x0F00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               PlayerRotationBackup;                              // 0x0F08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ActiveTab(int32 TabIndex, class UCommonButtonTab_C* ButtonToNotModify);
	void BlockInputMenu();
	void BlockScreenshot();
	void BndEvt__Autofocus_K2Node_ComponentBoundEvent_19_CheckboxDispatcher__DelegateSignature(bool Value);
	void BndEvt__Bloom_K2Node_ComponentBoundEvent_2_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__Brightness_K2Node_ComponentBoundEvent_5_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__btnDown_1_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__btnDown_K2Node_ComponentBoundEvent_15_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__btnUp_1_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__btnUp_K2Node_ComponentBoundEvent_14_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__CameraDistance_K2Node_ComponentBoundEvent_16_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__CameraRoll_K2Node_ComponentBoundEvent_4_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ChromaticAberrationIntensity_K2Node_ComponentBoundEvent_8_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ChromaticAberrationOffset_K2Node_ComponentBoundEvent_9_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ColorBalanceBlue_K2Node_ComponentBoundEvent_24_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ColorBalanceGreen_K2Node_ComponentBoundEvent_23_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ColorBalanceIntensity_K2Node_ComponentBoundEvent_25_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ColorBalanceRed_K2Node_ComponentBoundEvent_22_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__ColorBalanceSelector_K2Node_ComponentBoundEvent_0_ResetDispatcher__DelegateSignature();
	void BndEvt__ColorBalanceSelector_K2Node_ComponentBoundEvent_21_Dispatcher__DelegateSignature(double Value);
	void BndEvt__Command_Album_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature();
	void BndEvt__Command_ChangeTab_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	void BndEvt__Command_Close_K2Node_ComponentBoundEvent_7_OnPressed__DelegateSignature();
	void BndEvt__Command_FreeCamera_K2Node_ComponentBoundEvent_4_OnPressed__DelegateSignature();
	void BndEvt__Command_HideUI_K2Node_ComponentBoundEvent_6_OnPressed__DelegateSignature();
	void BndEvt__Command_Mouse_K2Node_ComponentBoundEvent_3_OnPressed__DelegateSignature();
	void BndEvt__Command_Reset_K2Node_ComponentBoundEvent_5_OnPressed__DelegateSignature();
	void BndEvt__CommandButton_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	void BndEvt__CommonCheckbox_K2Node_ComponentBoundEvent_3_CheckboxDispatcher__DelegateSignature(bool Value);
	void BndEvt__CommonSlider_1_K2Node_ComponentBoundEvent_1_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__CommonSlider_K2Node_ComponentBoundEvent_0_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__FieldOfView_K2Node_ComponentBoundEvent_3_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__FilmGrain_K2Node_ComponentBoundEvent_10_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__Filter_K2Node_ComponentBoundEvent_17_Dispatcher__DelegateSignature(double Value);
	void BndEvt__FocusDistance_K2Node_ComponentBoundEvent_13_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__FrameBlue_K2Node_ComponentBoundEvent_1_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__FrameGreen_K2Node_ComponentBoundEvent_2_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__FrameRed_K2Node_ComponentBoundEvent_3_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__FrameSelector_K2Node_ComponentBoundEvent_0_Dispatcher__DelegateSignature(double Value);
	void BndEvt__FrameSize_K2Node_ComponentBoundEvent_4_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__HidePlayer_K2Node_ComponentBoundEvent_20_CheckboxDispatcher__DelegateSignature(bool Value);
	void BndEvt__Logo_K2Node_ComponentBoundEvent_2_Dispatcher__DelegateSignature(double Value);
	void BndEvt__LogoSize_1_K2Node_ComponentBoundEvent_0_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__LogoSize_K2Node_ComponentBoundEvent_3_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__LUTIntensity_K2Node_ComponentBoundEvent_18_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__MotionBlur_K2Node_ComponentBoundEvent_11_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__PhotoAperture_K2Node_ComponentBoundEvent_0_Dispatcher__DelegateSignature(double Value);
	void BndEvt__PhotoResolution_K2Node_ComponentBoundEvent_0_Dispatcher__DelegateSignature(double Value);
	void BndEvt__SelectorSlider_K2Node_ComponentBoundEvent_0_Dispatcher__DelegateSignature(double Value);
	void BndEvt__SensorWidth_K2Node_ComponentBoundEvent_15_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__Temperature_K2Node_ComponentBoundEvent_6_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__Tint_K2Node_ComponentBoundEvent_7_SliderDispatcher__DelegateSignature(double SliderValue);
	void BndEvt__TurnPlayerToCamera_K2Node_ComponentBoundEvent_0_CheckboxDispatcher__DelegateSignature(bool Value);
	void BndEvt__Vignette_K2Node_ComponentBoundEvent_12_SliderDispatcher__DelegateSignature(double SliderValue);
	void CameraDistanceMouseWheel(double Delta);
	void CameraLeftRight(double Value);
	class FText CameraModeTxt();
	void CameraUpDown(double Value);
	void ChangeFreeCameraFOV(double FOVValue);
	void ChangeFreeCameraPP(const struct FPostProcessSettings& PostProcessValues);
	void ChangeFreeCameraRotation(const struct FRotator& RotationValue);
	void ChangeTab(int32 TabIndex);
	void CloseFreeCamera();
	void Construct();
	void Dispatchers();
	void ExecuteUbergraph_PhotoModeWidget(int32 EntryPoint);
	void Focus(const class UWidget*& WidgetItem);
	ESlateVisibility FocusDistanceVisibility();
	ESlateVisibility FreeCameraButtonVisibility();
	double getAdjustedWorldDeltaSeconds();
	void GetAnyKey(const struct FKey& Key);
	class FText GetFocusDistance();
	class FText getScreenshotTitle();
	ESlateVisibility GridVisibility();
	ESlateVisibility HideMenu();
	void Initialization();
	void InterpolationUpdater(double DeltaTime);
	ESlateVisibility LeftRightCameraGamepadVisibility();
	void MakeScreenshot();
	ESlateVisibility MoveButtonVisibility();
	void OnDestruct();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	ESlateVisibility OpenGalleryButtonVisibility();
	void PreConstruct(bool IsDesignTime);
	void Register_Photo(const class FString& Save_New_Photo_Title, const class FString& Save_New_Photo_Photo_Full_Path, const class FString& Save_New_Photo_Thumbnail_Full_Path);
	void RemoveMaterialFromCamera(const TArray<struct FWeightedBlendable>& TargetArray, const struct FWeightedBlendable& Item);
	void ResetKeyboardIcons();
	void ResetShowMouseCursor();
	void Screenshot();
	void SendPhotoData(const struct FPhotosData& PhotoData);
	void SetFocusBasedOnTab(int32 Index_0);
	void SetMenuIcons(const struct FPhotoModeComponentMenuIcons& Icons);
	ESlateVisibility ShowHideCharacterRotation();
	ESlateVisibility ShowHideMouseButtonVisibility();
	class FText ShowHideMouseTxtButton();
	ESlateVisibility ShowHidePhotoModeIsOnWarning();
	void ShowMouse();
	ESlateVisibility SwapOptionGamepadVisibility();
	void TabToOpen(int32 TabIndex, class UCommonButtonTab_C* CommonButtonPressed);
	ESlateVisibility TakePictureButtonVisibility();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UnblockInputMenu();
	ESlateVisibility Up_Down_Left_Right_Buttons_Visibility();
	ESlateVisibility UpDownCameraGamepadVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PhotoModeWidget_C">();
	}
	static class UPhotoModeWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPhotoModeWidget_C>();
	}
};
static_assert(alignof(UPhotoModeWidget_C) == 0x000010, "Wrong alignment on UPhotoModeWidget_C");
static_assert(sizeof(UPhotoModeWidget_C) == 0x000F20, "Wrong size on UPhotoModeWidget_C");
static_assert(offsetof(UPhotoModeWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UPhotoModeWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, OpenPhotoMode) == 0x0002C8, "Member 'UPhotoModeWidget_C::OpenPhotoMode' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, NotificationScreenshotTaken) == 0x0002D0, "Member 'UPhotoModeWidget_C::NotificationScreenshotTaken' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Aperture) == 0x0002D8, "Member 'UPhotoModeWidget_C::Aperture' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, APM_SizeMenu) == 0x0002E0, "Member 'UPhotoModeWidget_C::APM_SizeMenu' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Autofocus) == 0x0002E8, "Member 'UPhotoModeWidget_C::Autofocus' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, BlueCorrection) == 0x0002F0, "Member 'UPhotoModeWidget_C::BlueCorrection' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, BorderScreenshotTaken) == 0x0002F8, "Member 'UPhotoModeWidget_C::BorderScreenshotTaken' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Brightness) == 0x000300, "Member 'UPhotoModeWidget_C::Brightness' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_CameraTab) == 0x000308, "Member 'UPhotoModeWidget_C::btn_CameraTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_ColorBalanceTab) == 0x000310, "Member 'UPhotoModeWidget_C::btn_ColorBalanceTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_DepthOfFieldTab) == 0x000318, "Member 'UPhotoModeWidget_C::btn_DepthOfFieldTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_DisplayTab) == 0x000320, "Member 'UPhotoModeWidget_C::btn_DisplayTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_FiltersTab) == 0x000328, "Member 'UPhotoModeWidget_C::btn_FiltersTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_FramesTab) == 0x000330, "Member 'UPhotoModeWidget_C::btn_FramesTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_LogoTab) == 0x000338, "Member 'UPhotoModeWidget_C::btn_LogoTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btn_ScreenEffectsTab) == 0x000340, "Member 'UPhotoModeWidget_C::btn_ScreenEffectsTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btnDown) == 0x000348, "Member 'UPhotoModeWidget_C::btnDown' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btnLeft) == 0x000350, "Member 'UPhotoModeWidget_C::btnLeft' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btnRight) == 0x000358, "Member 'UPhotoModeWidget_C::btnRight' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btnSwap) == 0x000360, "Member 'UPhotoModeWidget_C::btnSwap' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, btnUp) == 0x000368, "Member 'UPhotoModeWidget_C::btnUp' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Buttons_Border) == 0x000370, "Member 'UPhotoModeWidget_C::Buttons_Border' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CameraDistance) == 0x000378, "Member 'UPhotoModeWidget_C::CameraDistance' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CameraRoll) == 0x000380, "Member 'UPhotoModeWidget_C::CameraRoll' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CanvasScreenshotTaken) == 0x000388, "Member 'UPhotoModeWidget_C::CanvasScreenshotTaken' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CaptureMouseArea) == 0x000390, "Member 'UPhotoModeWidget_C::CaptureMouseArea' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CharacterRotation) == 0x000398, "Member 'UPhotoModeWidget_C::CharacterRotation' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ChromaticAberrationIntensity) == 0x0003A0, "Member 'UPhotoModeWidget_C::ChromaticAberrationIntensity' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ChromaticAberrationOffset) == 0x0003A8, "Member 'UPhotoModeWidget_C::ChromaticAberrationOffset' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ColorBalanceBlue) == 0x0003B0, "Member 'UPhotoModeWidget_C::ColorBalanceBlue' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ColorBalanceGreen) == 0x0003B8, "Member 'UPhotoModeWidget_C::ColorBalanceGreen' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ColorBalanceIntensity) == 0x0003C0, "Member 'UPhotoModeWidget_C::ColorBalanceIntensity' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ColorBalanceRed) == 0x0003C8, "Member 'UPhotoModeWidget_C::ColorBalanceRed' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ColorBalanceSelector) == 0x0003D0, "Member 'UPhotoModeWidget_C::ColorBalanceSelector' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_Album) == 0x0003D8, "Member 'UPhotoModeWidget_C::Command_Album' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_ChangeTab) == 0x0003E0, "Member 'UPhotoModeWidget_C::Command_ChangeTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_Close) == 0x0003E8, "Member 'UPhotoModeWidget_C::Command_Close' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_FreeCamera) == 0x0003F0, "Member 'UPhotoModeWidget_C::Command_FreeCamera' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_HideUI) == 0x0003F8, "Member 'UPhotoModeWidget_C::Command_HideUI' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_Mouse) == 0x000400, "Member 'UPhotoModeWidget_C::Command_Mouse' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_Reset) == 0x000408, "Member 'UPhotoModeWidget_C::Command_Reset' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Command_TakePicture) == 0x000410, "Member 'UPhotoModeWidget_C::Command_TakePicture' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Divisor) == 0x000418, "Member 'UPhotoModeWidget_C::Divisor' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Down) == 0x000420, "Member 'UPhotoModeWidget_C::Down' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FieldOfView) == 0x000428, "Member 'UPhotoModeWidget_C::FieldOfView' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FilmGrain) == 0x000430, "Member 'UPhotoModeWidget_C::FilmGrain' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Filter) == 0x000438, "Member 'UPhotoModeWidget_C::Filter' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FocusDistance) == 0x000440, "Member 'UPhotoModeWidget_C::FocusDistance' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FocusDistanceTxt) == 0x000448, "Member 'UPhotoModeWidget_C::FocusDistanceTxt' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FrameBlue) == 0x000450, "Member 'UPhotoModeWidget_C::FrameBlue' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FrameGreen) == 0x000458, "Member 'UPhotoModeWidget_C::FrameGreen' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FrameRed) == 0x000460, "Member 'UPhotoModeWidget_C::FrameRed' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FrameSelector) == 0x000468, "Member 'UPhotoModeWidget_C::FrameSelector' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FrameSize) == 0x000470, "Member 'UPhotoModeWidget_C::FrameSize' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Grid) == 0x000478, "Member 'UPhotoModeWidget_C::Grid' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, GRIDAutofocus) == 0x000480, "Member 'UPhotoModeWidget_C::GRIDAutofocus' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, GRIDFocusDistanceText) == 0x000488, "Member 'UPhotoModeWidget_C::GRIDFocusDistanceText' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, HideCharacter) == 0x000490, "Member 'UPhotoModeWidget_C::HideCharacter' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, img_PhotoModeIsOn) == 0x000498, "Member 'UPhotoModeWidget_C::img_PhotoModeIsOn' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Info_Border) == 0x0004A0, "Member 'UPhotoModeWidget_C::Info_Border' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, InfoSwitcher) == 0x0004A8, "Member 'UPhotoModeWidget_C::InfoSwitcher' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Left) == 0x0004B0, "Member 'UPhotoModeWidget_C::Left' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogoAngle) == 0x0004B8, "Member 'UPhotoModeWidget_C::LogoAngle' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogoHorizontalAlignment) == 0x0004C0, "Member 'UPhotoModeWidget_C::LogoHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogoSelector) == 0x0004C8, "Member 'UPhotoModeWidget_C::LogoSelector' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogoSize) == 0x0004D0, "Member 'UPhotoModeWidget_C::LogoSize' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogoVerticalAlignment) == 0x0004D8, "Member 'UPhotoModeWidget_C::LogoVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LUTIntensity) == 0x0004E0, "Member 'UPhotoModeWidget_C::LUTIntensity' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, MotionBlur) == 0x0004E8, "Member 'UPhotoModeWidget_C::MotionBlur' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, MoveCameraKeys_CanvasPanel) == 0x0004F0, "Member 'UPhotoModeWidget_C::MoveCameraKeys_CanvasPanel' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Overlay_1) == 0x0004F8, "Member 'UPhotoModeWidget_C::Overlay_1' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Overlay_2) == 0x000500, "Member 'UPhotoModeWidget_C::Overlay_2' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Overlay_3) == 0x000508, "Member 'UPhotoModeWidget_C::Overlay_3' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Overlay_4) == 0x000510, "Member 'UPhotoModeWidget_C::Overlay_4' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PhotoModeIsOnHidedMenu) == 0x000518, "Member 'UPhotoModeWidget_C::PhotoModeIsOnHidedMenu' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PhotoResolution) == 0x000520, "Member 'UPhotoModeWidget_C::PhotoResolution' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PreviewPhoto) == 0x000528, "Member 'UPhotoModeWidget_C::PreviewPhoto' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Rendering) == 0x000530, "Member 'UPhotoModeWidget_C::Rendering' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Right) == 0x000538, "Member 'UPhotoModeWidget_C::Right' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, SensorWidth) == 0x000540, "Member 'UPhotoModeWidget_C::SensorWidth' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Swap) == 0x000548, "Member 'UPhotoModeWidget_C::Swap' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Swap_Gamepad_HorizontalBox) == 0x000550, "Member 'UPhotoModeWidget_C::Swap_Gamepad_HorizontalBox' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Temperature) == 0x000558, "Member 'UPhotoModeWidget_C::Temperature' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, TextBlock_192) == 0x000560, "Member 'UPhotoModeWidget_C::TextBlock_192' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, TextPhotoModeIsOn) == 0x000568, "Member 'UPhotoModeWidget_C::TextPhotoModeIsOn' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Tint) == 0x000570, "Member 'UPhotoModeWidget_C::Tint' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Up) == 0x000578, "Member 'UPhotoModeWidget_C::Up' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, VerticalBox_381) == 0x000580, "Member 'UPhotoModeWidget_C::VerticalBox_381' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Vignette) == 0x000588, "Member 'UPhotoModeWidget_C::Vignette' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, WidgetSwitcherPM) == 0x000590, "Member 'UPhotoModeWidget_C::WidgetSwitcherPM' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, IconType) == 0x000598, "Member 'UPhotoModeWidget_C::IconType' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, GamepadIconStyle) == 0x000599, "Member 'UPhotoModeWidget_C::GamepadIconStyle' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CurrentGenericWidgetElement) == 0x0005A0, "Member 'UPhotoModeWidget_C::CurrentGenericWidgetElement' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CurrentTab) == 0x0005A8, "Member 'UPhotoModeWidget_C::CurrentTab' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastTabIndex) == 0x0005AC, "Member 'UPhotoModeWidget_C::LastTabIndex' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, UsingFreeCamera_) == 0x0005B0, "Member 'UPhotoModeWidget_C::UsingFreeCamera_' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FreeCameraPawn) == 0x0005B8, "Member 'UPhotoModeWidget_C::FreeCameraPawn' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FreeCameraReference) == 0x0005C0, "Member 'UPhotoModeWidget_C::FreeCameraReference' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FreeCameraComponent) == 0x0005C8, "Member 'UPhotoModeWidget_C::FreeCameraComponent' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, EditedPostProcessSettings) == 0x0005D0, "Member 'UPhotoModeWidget_C::EditedPostProcessSettings' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ED_FreeCameraReference) == 0x000CB0, "Member 'UPhotoModeWidget_C::ED_FreeCameraReference' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, EditedCameraRoll) == 0x000CC0, "Member 'UPhotoModeWidget_C::EditedCameraRoll' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, EditedCameraFOV) == 0x000CD8, "Member 'UPhotoModeWidget_C::EditedCameraFOV' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ED_FreeCameraFOV) == 0x000CE0, "Member 'UPhotoModeWidget_C::ED_FreeCameraFOV' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ED_FreeCameraRotation) == 0x000CF0, "Member 'UPhotoModeWidget_C::ED_FreeCameraRotation' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ShowingMouseCursor) == 0x000D00, "Member 'UPhotoModeWidget_C::ShowingMouseCursor' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, MenuHidden) == 0x000D01, "Member 'UPhotoModeWidget_C::MenuHidden' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CanFocus_) == 0x000D02, "Member 'UPhotoModeWidget_C::CanFocus_' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, GalleryReference) == 0x000D08, "Member 'UPhotoModeWidget_C::GalleryReference' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PhotoModeComponentReference) == 0x000D10, "Member 'UPhotoModeWidget_C::PhotoModeComponentReference' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, RunPhysicsWithNoController_) == 0x000D18, "Member 'UPhotoModeWidget_C::RunPhysicsWithNoController_' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ShowPhotoModeIsOnWarning_) == 0x000D19, "Member 'UPhotoModeWidget_C::ShowPhotoModeIsOnWarning_' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, TakingPhoto) == 0x000D1A, "Member 'UPhotoModeWidget_C::TakingPhoto' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CommonSliders) == 0x000D20, "Member 'UPhotoModeWidget_C::CommonSliders' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ResetSucess) == 0x000D30, "Member 'UPhotoModeWidget_C::ResetSucess' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FiltersOptions) == 0x000D38, "Member 'UPhotoModeWidget_C::FiltersOptions' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, SelectorSliders) == 0x000D48, "Member 'UPhotoModeWidget_C::SelectorSliders' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CommonCheckboxes) == 0x000D58, "Member 'UPhotoModeWidget_C::CommonCheckboxes' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, UsingAutofocus) == 0x000D68, "Member 'UPhotoModeWidget_C::UsingAutofocus' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CollisionChannel) == 0x000D69, "Member 'UPhotoModeWidget_C::CollisionChannel' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, HorizontalFrame) == 0x000D70, "Member 'UPhotoModeWidget_C::HorizontalFrame' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, VerticalFrame) == 0x000D80, "Member 'UPhotoModeWidget_C::VerticalFrame' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FrameToAdd) == 0x000D90, "Member 'UPhotoModeWidget_C::FrameToAdd' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CanTakePhoto) == 0x000DA0, "Member 'UPhotoModeWidget_C::CanTakePhoto' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogoDynamicMaterial) == 0x000DA8, "Member 'UPhotoModeWidget_C::LogoDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CurrentLogo) == 0x000DB0, "Member 'UPhotoModeWidget_C::CurrentLogo' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LogosNames) == 0x000DC0, "Member 'UPhotoModeWidget_C::LogosNames' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ScreenshotResolution) == 0x000DD0, "Member 'UPhotoModeWidget_C::ScreenshotResolution' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PostProcessMaterialsEffects) == 0x000DD8, "Member 'UPhotoModeWidget_C::PostProcessMaterialsEffects' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PostProcessMaterialToAdd) == 0x000DE8, "Member 'UPhotoModeWidget_C::PostProcessMaterialToAdd' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, HighResFunction) == 0x000DF8, "Member 'UPhotoModeWidget_C::HighResFunction' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CommonButtons) == 0x000E00, "Member 'UPhotoModeWidget_C::CommonButtons' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, ShowGrid_) == 0x000E10, "Member 'UPhotoModeWidget_C::ShowGrid_' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, WithUI) == 0x000E11, "Member 'UPhotoModeWidget_C::WithUI' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PlayerVelocity) == 0x000E18, "Member 'UPhotoModeWidget_C::PlayerVelocity' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PlayerMovementMode) == 0x000E30, "Member 'UPhotoModeWidget_C::PlayerMovementMode' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PlayerCustomMovementMode) == 0x000E31, "Member 'UPhotoModeWidget_C::PlayerCustomMovementMode' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, DefaultUserScreenResolution) == 0x000E34, "Member 'UPhotoModeWidget_C::DefaultUserScreenResolution' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, KeyboardInput) == 0x000E3C, "Member 'UPhotoModeWidget_C::KeyboardInput' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, GamepadInput) == 0x000E3D, "Member 'UPhotoModeWidget_C::GamepadInput' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, UpDownIsNowLeftRight) == 0x000E3E, "Member 'UPhotoModeWidget_C::UpDownIsNowLeftRight' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastControlRotation) == 0x000E40, "Member 'UPhotoModeWidget_C::LastControlRotation' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CanUpdateMouseWheel) == 0x000E58, "Member 'UPhotoModeWidget_C::CanUpdateMouseWheel' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CameraLocation) == 0x000E60, "Member 'UPhotoModeWidget_C::CameraLocation' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CameraDistanceTAL) == 0x000E78, "Member 'UPhotoModeWidget_C::CameraDistanceTAL' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, FOV) == 0x000E80, "Member 'UPhotoModeWidget_C::FOV' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, Roll) == 0x000E88, "Member 'UPhotoModeWidget_C::Roll' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastKeyPressed) == 0x000EA0, "Member 'UPhotoModeWidget_C::LastKeyPressed' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, CameraMoveDelta) == 0x000EB8, "Member 'UPhotoModeWidget_C::CameraMoveDelta' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastScreenshotPath) == 0x000EC0, "Member 'UPhotoModeWidget_C::LastScreenshotPath' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastScreenshotName) == 0x000ED0, "Member 'UPhotoModeWidget_C::LastScreenshotName' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastThumbnailPath) == 0x000EE0, "Member 'UPhotoModeWidget_C::LastThumbnailPath' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, LastThumbnailName) == 0x000EF0, "Member 'UPhotoModeWidget_C::LastThumbnailName' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, TurnToCamera) == 0x000F00, "Member 'UPhotoModeWidget_C::TurnToCamera' has a wrong offset!");
static_assert(offsetof(UPhotoModeWidget_C, PlayerRotationBackup) == 0x000F08, "Member 'UPhotoModeWidget_C::PlayerRotationBackup' has a wrong offset!");

}

