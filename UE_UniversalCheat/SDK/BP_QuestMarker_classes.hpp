#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestMarker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_MasterQuestObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuestMarker.BP_QuestMarker_C
// 0x0050 (0x0310 - 0x02C0)
class ABP_QuestMarker_C final : public ABP_MasterQuestObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_QuestMarker_C;                   // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTexture2D*                             Marker_Texture;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Text;                                              // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UW_QuestMarker_C*>               Markers;                                           // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class ABP_CompassMarker_C*                    CompassMarker;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Underground_;                                      // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void AddMarker();
	void ExecuteUbergraph_BP_QuestMarker(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuestMarker_C">();
	}
	static class ABP_QuestMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_QuestMarker_C>();
	}
};
static_assert(alignof(ABP_QuestMarker_C) == 0x000008, "Wrong alignment on ABP_QuestMarker_C");
static_assert(sizeof(ABP_QuestMarker_C) == 0x000310, "Wrong size on ABP_QuestMarker_C");
static_assert(offsetof(ABP_QuestMarker_C, UberGraphFrame_BP_QuestMarker_C) == 0x0002C0, "Member 'ABP_QuestMarker_C::UberGraphFrame_BP_QuestMarker_C' has a wrong offset!");
static_assert(offsetof(ABP_QuestMarker_C, Marker_Texture) == 0x0002C8, "Member 'ABP_QuestMarker_C::Marker_Texture' has a wrong offset!");
static_assert(offsetof(ABP_QuestMarker_C, Color) == 0x0002D0, "Member 'ABP_QuestMarker_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_QuestMarker_C, Text) == 0x0002E0, "Member 'ABP_QuestMarker_C::Text' has a wrong offset!");
static_assert(offsetof(ABP_QuestMarker_C, Markers) == 0x0002F0, "Member 'ABP_QuestMarker_C::Markers' has a wrong offset!");
static_assert(offsetof(ABP_QuestMarker_C, CompassMarker) == 0x000300, "Member 'ABP_QuestMarker_C::CompassMarker' has a wrong offset!");
static_assert(offsetof(ABP_QuestMarker_C, Underground_) == 0x000308, "Member 'ABP_QuestMarker_C::Underground_' has a wrong offset!");

}

