#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressBarLinear

#include "Basic.hpp"

#include "S_Effects_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EGradientTypes_structs.hpp"
#include "EProgressMethod_structs.hpp"
#include "Slate_structs.hpp"
#include "EEffectLayer_structs.hpp"
#include "EMarqueeMask_structs.hpp"
#include "EMarqueeMethod_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ProgressBarLinear.ProgressBarLinear_C.AddEffect
// 0x0088 (0x0088 - 0x0000)
struct ProgressBarLinear_C_AddEffect final
{
public:
	struct FS_Effects                             Effect;                                            // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_AddEffect) == 0x000008, "Wrong alignment on ProgressBarLinear_C_AddEffect");
static_assert(sizeof(ProgressBarLinear_C_AddEffect) == 0x000088, "Wrong size on ProgressBarLinear_C_AddEffect");
static_assert(offsetof(ProgressBarLinear_C_AddEffect, Effect) == 0x000000, "Member 'ProgressBarLinear_C_AddEffect::Effect' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.AddEntry
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_AddEntry final
{
public:
	double                                        NewPercent_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_AddEntry) == 0x000008, "Wrong alignment on ProgressBarLinear_C_AddEntry");
static_assert(sizeof(ProgressBarLinear_C_AddEntry) == 0x000008, "Wrong size on ProgressBarLinear_C_AddEntry");
static_assert(offsetof(ProgressBarLinear_C_AddEntry, NewPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_AddEntry::NewPercent_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.ClearEffectLayers
// 0x0038 (0x0038 - 0x0000)
struct ProgressBarLinear_C_ClearEffectLayers final
{
public:
	EEffectLayer                                  EffectLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               CallFunc_FindEffectOverlay_Overlay;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Effect_C*                           K2Node_DynamicCast_AsWB_Effect;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_ClearEffectLayers) == 0x000008, "Wrong alignment on ProgressBarLinear_C_ClearEffectLayers");
static_assert(sizeof(ProgressBarLinear_C_ClearEffectLayers) == 0x000038, "Wrong size on ProgressBarLinear_C_ClearEffectLayers");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, EffectLayer) == 0x000000, "Member 'ProgressBarLinear_C_ClearEffectLayers::EffectLayer' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, CallFunc_FindEffectOverlay_Overlay) == 0x000008, "Member 'ProgressBarLinear_C_ClearEffectLayers::CallFunc_FindEffectOverlay_Overlay' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, Temp_int_Variable) == 0x000010, "Member 'ProgressBarLinear_C_ClearEffectLayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, CallFunc_GetChildrenCount_ReturnValue) == 0x000014, "Member 'ProgressBarLinear_C_ClearEffectLayers::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'ProgressBarLinear_C_ClearEffectLayers::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'ProgressBarLinear_C_ClearEffectLayers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, K2Node_DynamicCast_AsWB_Effect) == 0x000028, "Member 'ProgressBarLinear_C_ClearEffectLayers::K2Node_DynamicCast_AsWB_Effect' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ProgressBarLinear_C_ClearEffectLayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ProgressBarLinear_C_ClearEffectLayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ClearEffectLayers, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ProgressBarLinear_C_ClearEffectLayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Count_Percent
// 0x0078 (0x0078 - 0x0000)
struct ProgressBarLinear_C_Count_Percent final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Count_Percent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_Count_Percent");
static_assert(sizeof(ProgressBarLinear_C_Count_Percent) == 0x000078, "Wrong size on ProgressBarLinear_C_Count_Percent");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Time) == 0x000000, "Member 'ProgressBarLinear_C_Count_Percent::Time' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Value) == 0x000008, "Member 'ProgressBarLinear_C_Count_Percent::Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Temp_bool_Variable) == 0x000010, "Member 'ProgressBarLinear_C_Count_Percent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Temp_bool_Variable_1) == 0x000012, "Member 'ProgressBarLinear_C_Count_Percent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Temp_real_Variable) == 0x000018, "Member 'ProgressBarLinear_C_Count_Percent::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Temp_bool_Variable_2) == 0x000020, "Member 'ProgressBarLinear_C_Count_Percent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, K2Node_Select_Default) == 0x000028, "Member 'ProgressBarLinear_C_Count_Percent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, Temp_real_Variable_1) == 0x000030, "Member 'ProgressBarLinear_C_Count_Percent::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, K2Node_Select_Default_1) == 0x000058, "Member 'ProgressBarLinear_C_Count_Percent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'ProgressBarLinear_C_Count_Percent::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_Percent, K2Node_Select_Default_2) == 0x000070, "Member 'ProgressBarLinear_C_Count_Percent::K2Node_Select_Default_2' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Count_TargetPercent
// 0x0078 (0x0078 - 0x0000)
struct ProgressBarLinear_C_Count_TargetPercent final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Count_TargetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_Count_TargetPercent");
static_assert(sizeof(ProgressBarLinear_C_Count_TargetPercent) == 0x000078, "Wrong size on ProgressBarLinear_C_Count_TargetPercent");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Time) == 0x000000, "Member 'ProgressBarLinear_C_Count_TargetPercent::Time' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Value) == 0x000008, "Member 'ProgressBarLinear_C_Count_TargetPercent::Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Temp_bool_Variable) == 0x000010, "Member 'ProgressBarLinear_C_Count_TargetPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Temp_bool_Variable_1) == 0x000012, "Member 'ProgressBarLinear_C_Count_TargetPercent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Temp_real_Variable) == 0x000018, "Member 'ProgressBarLinear_C_Count_TargetPercent::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Temp_bool_Variable_2) == 0x000020, "Member 'ProgressBarLinear_C_Count_TargetPercent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, K2Node_Select_Default) == 0x000028, "Member 'ProgressBarLinear_C_Count_TargetPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, Temp_real_Variable_1) == 0x000030, "Member 'ProgressBarLinear_C_Count_TargetPercent::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, K2Node_Select_Default_1) == 0x000058, "Member 'ProgressBarLinear_C_Count_TargetPercent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'ProgressBarLinear_C_Count_TargetPercent::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Count_TargetPercent, K2Node_Select_Default_2) == 0x000070, "Member 'ProgressBarLinear_C_Count_TargetPercent::K2Node_Select_Default_2' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.ExecuteEntry
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_ExecuteEntry final
{
public:
	double                                        CurrentEntry;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_ExecuteEntry) == 0x000008, "Wrong alignment on ProgressBarLinear_C_ExecuteEntry");
static_assert(sizeof(ProgressBarLinear_C_ExecuteEntry) == 0x000008, "Wrong size on ProgressBarLinear_C_ExecuteEntry");
static_assert(offsetof(ProgressBarLinear_C_ExecuteEntry, CurrentEntry) == 0x000000, "Member 'ProgressBarLinear_C_ExecuteEntry::CurrentEntry' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.ExecuteUbergraph_ProgressBarLinear
// 0x0AE0 (0x0AE0 - 0x0000)
struct ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_1;   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_Size;                                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Value;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color_3;                              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TargetPercent;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Thickness;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_UseTargetPercent;                     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressMethod                               K2Node_Event_EProgressMethod;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_CurrentInterpTime;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_2;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_TargetInterpTime;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color_2;                              // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color_1;                              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_UseGradientFillColor;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_3;   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_Color;                                // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_GradientPower;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_Event_Tiling_1;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_Mask_1;                               // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_4;   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_Mask;                                 // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_Event_Tiling;                               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_BlurStrength;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGradientTypes                                K2Node_Event_GradientType;                         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_5;   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_BlendMask;                            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          K2Node_Event_FillType;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Spacing_1;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_6;   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsMarquee_1;                          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsMarquee;                            // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_Image_1;                              // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMarqueeMask                                  K2Node_Event_MaskType;                             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_Image;                                // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_7;   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Steps;                                // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Spacing;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_AbsoluteFillMethod;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Effects>                     K2Node_Event_Effects;                              // 0x0170(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_8;   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Index_1;                              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEnabled_1;                          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEnabled;                            // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Effects                             K2Node_MakeStruct_S_Effects;                       // 0x0198(0x0088)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Percent;                        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0238(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_9;   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_10;  // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color_5;                        // 0x024C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_GradientPower;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_CustomEvent_Tiling_1;                       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Size_1;                         // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseGradient;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FLinearColor& Color)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x02B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseTargetPercent;               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_TargetPercent;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_11;  // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color_4;                        // 0x02DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color_3;                        // 0x02EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_BackgroundColorMask;            // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_CustomEvent_In_Brush_Tiling_1;              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color_2;                        // 0x030C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProgressMethodInterpolated_ReturnValue; // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_12;  // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressMethod                               K2Node_CustomEvent_ProgressMethod;                 // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31F[0x1];                                      // 0x031F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_NewPercent_1;                   // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInterpolationTime_ReturnValue;         // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Count_Percent_Value;                      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Count_TargetPercent_Value;                // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Count_Percent_Value_1;                    // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Value;                          // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0360(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGradientTypes                                K2Node_CustomEvent_GradientType;                   // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x0373(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_13;  // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Brush;                          // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_CustomEvent_In_Brush_Tiling;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383[0x5];                                      // 0x0383(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetTexture2DSizeClamped_ReturnValue;      // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_BlendMask;                      // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsMarquee;                     // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarqueeMethod                                K2Node_CustomEvent_MarqueeMethod;                  // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB[0x5];                                      // 0x03AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Speed;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_14;  // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarqueeMask                                  K2Node_CustomEvent_MaskType;                       // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Mask;                           // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_CustomEvent_MaskTiling;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsMarquee;                      // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_15;  // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB[0x5];                                      // 0x03CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Image;                          // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Image_Size;                     // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Tint;                           // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateBrushDrawType                           K2Node_CustomEvent_Draw_As;                        // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           K2Node_CustomEvent_Tiling;                         // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_16;  // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB[0x5];                                      // 0x03FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Effect_C*                           CallFunc_Create_ReturnValue;                       // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_Effect_C*                           CallFunc_Create_ReturnValue_1;                     // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_17;  // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413[0x1];                                      // 0x0413(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_InColorAndOpacity;              // 0x0414(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NumSegments;                    // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Spacing;                        // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Size;                           // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_FillColor;                      // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          K2Node_CustomEvent_FillType_1;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_452[0x2];                                      // 0x0452(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color_1;                        // 0x0454(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_18;  // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          Temp_byte_Variable;                                // 0x0465(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_19;  // 0x0466(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bAbsoluteFill;                  // 0x0467(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          K2Node_CustomEvent_FillType;                       // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bUseShader;                     // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_20;  // 0x046E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x046F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetFillFromCenterSpacing_ReturnValue;     // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          Temp_byte_Variable_1;                              // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_21;  // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCenterSpacingSize_ReturnValue;         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetFillFromCenterSpacing_ReturnValue_1;   // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x04A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Effects                             CallFunc_Array_Get_Item;                           // 0x04B8(0x0088)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0544(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_545[0x3];                                      // 0x0545(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Effects                             K2Node_CustomEvent_Effect;                         // 0x0548(0x0088)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_8;               // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEffectProgressChangeColor_ReturnValue;  // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D2[0x6];                                      // 0x05D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOverlay*>                       CallFunc_FindEffectOverlaysCentered_Overlays;      // 0x05D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UOverlay*                               CallFunc_FindEffectOverlay_Overlay;                // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               CallFunc_Array_Get_Item_1;                         // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0600(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue_1;          // 0x0610(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_8;                     // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x061D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61E[0x2];                                      // 0x061E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          K2Node_Select_Default;                             // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseBackgroundBlur;              // 0x0625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_626[0x2];                                      // 0x0626(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_BackgroundBlurStrength;         // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_632[0x6];                                      // 0x0632(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeTopOrBottom_ReturnValue;        // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_642[0x6];                                      // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_FindThicknessSizeCentered_ReturnValue;    // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0678(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0688(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_22;  // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyValueChanged_ReturnValue;           // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEffectChanged_ReturnValue;             // 0x0692(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_693[0x1];                                      // 0x0693(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0694(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_NewPercent;                     // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidEntryIndex_ReturnValue;            // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DD[0x3];                                      // 0x06DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_CurrentEntry;                   // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetEntryIndex_Value;                      // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_9;               // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_23;  // 0x06F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F3[0x5];                                      // 0x06F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_FindThicknessSize_ReturnValue;            // 0x06F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_1;               // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindThicknessSize_ReturnValue_1;          // 0x0720(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_742[0x6];                                      // 0x0742(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_24;  // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x6];                                      // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_9;                     // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_10;              // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782[0x6];                                      // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_10;                    // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_792[0x6];                                      // 0x0792(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGradientTypes                                Temp_byte_Variable_2;                              // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_2;                           // 0x07A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_25;  // 0x07B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B3[0x5];                                      // 0x07B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_5;                            // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_11;              // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_Container_Linear_C*>         CallFunc_GetChildren_Array;                        // 0x07C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_Container_Linear_C*                 CallFunc_Array_Get_Item_2;                         // 0x07E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x3];                                      // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x3];                                      // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_11;                    // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FA[0x6];                                      // 0x07FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_3;                           // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_12;                    // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_12;              // 0x080A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_13;                    // 0x080B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_13;              // 0x080D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80E[0x2];                                      // 0x080E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_4;                           // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_14;              // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_14;                    // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_15;              // 0x0822(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_26;  // 0x0823(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_15;                    // 0x0824(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeTopOrBottom_ReturnValue_1;      // 0x0825(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_27;  // 0x0826(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_28;  // 0x0827(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x082C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82D[0x3];                                      // 0x082D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Effects                             CallFunc_Array_Get_Item_3;                         // 0x0838(0x0088)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Effects                             K2Node_MakeStruct_S_Effects_1;                     // 0x08C8(0x0088)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_16;              // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_952[0x6];                                      // 0x0952(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_16;                    // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_29;  // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_17;              // 0x0962(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0963(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_17;                    // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2; // 0x0965(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_966[0x2];                                      // 0x0966(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_5;                           // 0x0978(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x09A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_30;  // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_31;  // 0x09B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_18;              // 0x09B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x09B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_18;                    // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x09C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C2[0x6];                                      // 0x09C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Container_Linear_C*                 K2Node_Select_Default_6;                           // 0x09C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPercent_Separated_Percent;             // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPercent_Percent;                       // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UOverlay*>                       CallFunc_GetEffectOverlays_Array;                  // 0x09E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UOverlay*                               CallFunc_Array_Get_Item_4;                         // 0x09F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0A02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A03[0x5];                                      // 0x0A03(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0A08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_Effect_C*                           K2Node_DynamicCast_AsWB_Effect;                    // 0x0A10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0A19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0A1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0A1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_7;                           // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_19;              // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_32;  // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0A2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2B[0x5];                                      // 0x0A2B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Container_Linear_C*                 K2Node_Select_Default_8;                           // 0x0A30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3; // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPercent_Separated_Percent_1;           // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPercent_Percent_1;                     // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_33;  // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A51[0x7];                                      // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0A70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_19;                    // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A81[0x7];                                      // 0x0A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_9;                           // 0x0A88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9A[0x6];                                      // 0x0A9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_10;                          // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x3];                                      // 0x0AA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0AAC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0ABC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABD[0x3];                                      // 0x0ABD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Container_Linear_C*                 K2Node_Select_Default_11;                          // 0x0AC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue_34;  // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD4[0x4];                                      // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DeltaTime_ImplicitCast;         // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear) == 0x000008, "Wrong alignment on ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear");
static_assert(sizeof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear) == 0x000AE0, "Wrong size on ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, EntryPoint) == 0x000000, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_1) == 0x000020, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000021, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_1) == 0x000022, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_1) == 0x000023, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Variable) == 0x000034, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_2) == 0x00003C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Size) == 0x000040, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Size' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Value) == 0x000050, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Color_3) == 0x000058, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Color_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_TargetPercent) == 0x000070, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_TargetPercent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Thickness) == 0x000078, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Thickness' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue_1) == 0x000080, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_UseTargetPercent) == 0x000089, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_UseTargetPercent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_EProgressMethod) == 0x00008A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_EProgressMethod' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_CurrentInterpTime) == 0x000090, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_CurrentInterpTime' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_2) == 0x000098, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_TargetInterpTime) == 0x0000A0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_TargetInterpTime' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Color_2) == 0x0000A8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Color_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Color_1) == 0x0000B8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Color_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_UseGradientFillColor) == 0x0000C8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_UseGradientFillColor' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_3) == 0x0000C9, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Color) == 0x0000CC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_GradientPower) == 0x0000E0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_GradientPower' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Tiling_1) == 0x0000E8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Tiling_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Mask_1) == 0x0000F0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Mask_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_4) == 0x0000F8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Mask) == 0x000100, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Mask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Tiling) == 0x000108, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Tiling' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_BlurStrength) == 0x000110, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_BlurStrength' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_GradientType) == 0x000118, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_GradientType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_5) == 0x000119, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_BlendMask) == 0x000120, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_BlendMask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_FillType) == 0x000128, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_FillType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Spacing_1) == 0x000130, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Spacing_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_6) == 0x000138, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_IsMarquee_1) == 0x000139, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_IsMarquee_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_IsMarquee) == 0x00013A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_IsMarquee' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Image_1) == 0x000140, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Image_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_MaskType) == 0x000148, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_MaskType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Image) == 0x000150, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Image' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_7) == 0x000158, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000159, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Steps) == 0x00015C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Steps' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Spacing) == 0x000160, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Spacing' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_AbsoluteFillMethod) == 0x000168, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_AbsoluteFillMethod' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Effects) == 0x000170, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Effects' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_8) == 0x000180, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Index_1) == 0x000184, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Index_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_IsEnabled_1) == 0x000188, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_IsEnabled_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000189, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_2) == 0x00018A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_IsEnabled) == 0x00018B, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_IsEnabled' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_Index) == 0x00018C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000190, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000191, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_MakeStruct_S_Effects) == 0x000198, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_MakeStruct_S_Effects' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_3) == 0x000220, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Length_ReturnValue) == 0x000224, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Percent) == 0x000228, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Percent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue_2) == 0x000230, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CreateDelegate_OutputDelegate) == 0x000238, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_9) == 0x000248, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_10) == 0x000249, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Color_5) == 0x00024C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Color_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_GradientPower) == 0x000260, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_GradientPower' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Tiling_1) == 0x000268, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Tiling_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Size_1) == 0x000270, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Size_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X) == 0x000280, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y) == 0x000288, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_UseGradient) == 0x000290, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_UseGradient' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue_3) == 0x000298, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue_4) == 0x0002A0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MakeVector2D_ReturnValue) == 0x0002A8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002B8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_UseTargetPercent) == 0x0002C8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_UseTargetPercent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_TargetPercent) == 0x0002D0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_TargetPercent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_11) == 0x0002D8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Color_4) == 0x0002DC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Color_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Color_3) == 0x0002EC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Color_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_BackgroundColorMask) == 0x000300, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_BackgroundColorMask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_In_Brush_Tiling_1) == 0x000308, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_In_Brush_Tiling_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Color_2) == 0x00030C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Color_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsProgressMethodInterpolated_ReturnValue) == 0x00031C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsProgressMethodInterpolated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_12) == 0x00031D, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_ProgressMethod) == 0x00031E, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_ProgressMethod' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_NewPercent_1) == 0x000320, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_NewPercent_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue_5) == 0x000328, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetInterpolationTime_ReturnValue) == 0x000330, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetInterpolationTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_3) == 0x000338, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Count_Percent_Value) == 0x000340, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Count_Percent_Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Count_TargetPercent_Value) == 0x000348, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Count_TargetPercent_Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Count_Percent_Value_1) == 0x000350, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Count_Percent_Value_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Value) == 0x000358, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CreateDelegate_OutputDelegate_2) == 0x000360, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue) == 0x000370, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_GradientType) == 0x000371, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_GradientType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Not_PreBool_ReturnValue) == 0x000372, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_4) == 0x000373, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_13) == 0x000374, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Brush) == 0x000378, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Brush' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_In_Brush_Tiling) == 0x000380, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_In_Brush_Tiling' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable) == 0x000381, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_1) == 0x000382, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetTexture2DSizeClamped_ReturnValue) == 0x000388, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetTexture2DSizeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_2) == 0x000398, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_BlendMask) == 0x0003A0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_BlendMask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_3) == 0x0003A8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_bIsMarquee) == 0x0003A9, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_bIsMarquee' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_MarqueeMethod) == 0x0003AA, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_MarqueeMethod' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Speed) == 0x0003B0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Speed' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_14) == 0x0003B8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_MaskType) == 0x0003B9, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_MaskType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Mask) == 0x0003C0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Mask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_MaskTiling) == 0x0003C8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_MaskTiling' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_IsMarquee) == 0x0003C9, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_IsMarquee' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_15) == 0x0003CA, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Image) == 0x0003D0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Image' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Image_Size) == 0x0003D8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Image_Size' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Tint) == 0x0003E8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Tint' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Draw_As) == 0x0003F8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Draw_As' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Tiling) == 0x0003F9, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Tiling' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_16) == 0x0003FA, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Create_ReturnValue) == 0x000400, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Create_ReturnValue_1) == 0x000408, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_4) == 0x000410, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_5) == 0x000411, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_17) == 0x000412, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_InColorAndOpacity) == 0x000414, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_NumSegments) == 0x000424, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_NumSegments' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Spacing) == 0x000428, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Spacing' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Size) == 0x000430, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Size' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_FillColor) == 0x000440, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_FillColor' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_FillType_1) == 0x000450, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_FillType_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Greater_IntInt_ReturnValue) == 0x000451, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Color_1) == 0x000454, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Color_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_18) == 0x000464, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_byte_Variable) == 0x000465, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_19) == 0x000466, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_bAbsoluteFill) == 0x000467, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_bAbsoluteFill' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_4) == 0x000468, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_FillType) == 0x000469, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_FillType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_bUseShader) == 0x00046A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_bUseShader' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_5) == 0x00046B, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_5) == 0x00046C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_6) == 0x00046D, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_20) == 0x00046E, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_6) == 0x00046F, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetFillFromCenterSpacing_ReturnValue) == 0x000470, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetFillFromCenterSpacing_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_7) == 0x000478, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_byte_Variable_1) == 0x000479, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_21) == 0x00047A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_7) == 0x00047B, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetCenterSpacingSize_ReturnValue) == 0x000480, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetCenterSpacingSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_1) == 0x000488, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_1) == 0x000490, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000498, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetFillFromCenterSpacing_ReturnValue_1) == 0x0004A0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetFillFromCenterSpacing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MakeVector2D_ReturnValue_1) == 0x0004A8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Get_Item) == 0x0004B8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Length_ReturnValue_1) == 0x000540, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Less_IntInt_ReturnValue) == 0x000544, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Effect) == 0x000548, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Effect' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_8) == 0x0005D0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsEffectProgressChangeColor_ReturnValue) == 0x0005D1, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsEffectProgressChangeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FindEffectOverlaysCentered_Overlays) == 0x0005D8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FindEffectOverlaysCentered_Overlays' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FindEffectOverlay_Overlay) == 0x0005E8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FindEffectOverlay_Overlay' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Get_Item_1) == 0x0005F0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_6) == 0x0005F8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_AddChildToOverlay_ReturnValue) == 0x000600, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_7) == 0x000608, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_AddChildToOverlay_ReturnValue_1) == 0x000610, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_AddChildToOverlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Length_ReturnValue_2) == 0x000618, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_8) == 0x00061C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Less_IntInt_ReturnValue_1) == 0x00061D, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Variable_1) == 0x000620, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default) == 0x000624, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_UseBackgroundBlur) == 0x000625, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_UseBackgroundBlur' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_BackgroundBlurStrength) == 0x000628, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_BackgroundBlurStrength' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000630, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000631, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_object_Variable) == 0x000638, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeTopOrBottom_ReturnValue) == 0x000640, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeTopOrBottom_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Not_PreBool_ReturnValue_1) == 0x000641, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FindThicknessSizeCentered_ReturnValue) == 0x000648, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FindThicknessSizeCentered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_2) == 0x000658, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_2) == 0x000660, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000668, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000670, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MakeVector2D_ReturnValue_2) == 0x000678, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000688, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_22) == 0x000690, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_HasAnyValueChanged_ReturnValue) == 0x000691, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_HasAnyValueChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_HasEffectChanged_ReturnValue) == 0x000692, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_HasEffectChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_MyGeometry) == 0x000694, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_InDeltaTime) == 0x0006CC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_NewPercent) == 0x0006D0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_NewPercent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Add_ReturnValue) == 0x0006D8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValidEntryIndex_ReturnValue) == 0x0006DC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValidEntryIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_CurrentEntry) == 0x0006E0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_CurrentEntry' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetEntryIndex_Value) == 0x0006E8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetEntryIndex_Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_9) == 0x0006F0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetIsEnabled_ReturnValue) == 0x0006F1, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_23) == 0x0006F2, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FindThicknessSize_ReturnValue) == 0x0006F8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FindThicknessSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetIsEnabled_ReturnValue_1) == 0x000708, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetIsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_3) == 0x000710, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_3) == 0x000718, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FindThicknessSize_ReturnValue_1) == 0x000720, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FindThicknessSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_4) == 0x000730, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_4) == 0x000738, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Event_IsDesignTime) == 0x000740, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Not_PreBool_ReturnValue_2) == 0x000741, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_5) == 0x000748, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_5) == 0x000750, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_1) == 0x000758, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_24) == 0x000759, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_1) == 0x000760, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_9) == 0x000768, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_object_Variable_1) == 0x000770, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_object_Variable_2) == 0x000778, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000780, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_10) == 0x000781, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_object_Variable_3) == 0x000788, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsGamePaused_ReturnValue) == 0x000790, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_10) == 0x000791, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_object_Variable_4) == 0x000798, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_byte_Variable_2) == 0x0007A0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_2) == 0x0007A8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BooleanAND_ReturnValue) == 0x0007B0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_8) == 0x0007B1, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_25) == 0x0007B2, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_object_Variable_5) == 0x0007B8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_11) == 0x0007C0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_11' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetChildren_Array) == 0x0007C8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetChildren_Array' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Length_ReturnValue_3) == 0x0007D8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Array_Index_Variable_3) == 0x0007DC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Get_Item_2) == 0x0007E0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_9) == 0x0007E8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Loop_Counter_Variable_3) == 0x0007EC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Less_IntInt_ReturnValue_2) == 0x0007F0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_IntInt_ReturnValue_4) == 0x0007F4, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_11) == 0x0007F8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_11' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_2) == 0x0007F9, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_3) == 0x000800, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_12) == 0x000808, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_12' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000809, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_12) == 0x00080A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_12' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_13) == 0x00080B, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_13' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_3) == 0x00080C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_13) == 0x00080D, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_13' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_4) == 0x000810, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_FClamp_ReturnValue_6) == 0x000818, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_14) == 0x000820, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_14' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_14) == 0x000821, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_14' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_15) == 0x000822, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_15' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_26) == 0x000823, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_15) == 0x000824, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_15' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeTopOrBottom_ReturnValue_1) == 0x000825, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeTopOrBottom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_27) == 0x000826, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_28) == 0x000827, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Loop_Counter_Variable_4) == 0x000828, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Less_IntInt_ReturnValue_3) == 0x00082C, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Add_IntInt_ReturnValue_5) == 0x000830, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_int_Array_Index_Variable_4) == 0x000834, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Get_Item_3) == 0x000838, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0008C0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_MakeStruct_S_Effects_1) == 0x0008C8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_MakeStruct_S_Effects_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000950, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_16) == 0x000951, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_16' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MapRangeClamped_ReturnValue) == 0x000958, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_16) == 0x000960, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_16' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_29) == 0x000961, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_17) == 0x000962, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_17' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000963, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_17) == 0x000964, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_17' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2) == 0x000965, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000968, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_4) == 0x000970, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_5) == 0x000978, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_6) == 0x000988, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_6) == 0x000990, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000998, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MakeVector2D_ReturnValue_3) == 0x0009A0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_30) == 0x0009B0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_31) == 0x0009B1, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_18) == 0x0009B2, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_18' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0009B3, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0009B8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_18) == 0x0009C0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_18' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_5) == 0x0009C1, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_6) == 0x0009C8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetPercent_Separated_Percent) == 0x0009D0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetPercent_Separated_Percent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetPercent_Percent) == 0x0009D8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetPercent_Percent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetEffectOverlays_Array) == 0x0009E0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetEffectOverlays_Array' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Get_Item_4) == 0x0009F0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Array_Length_ReturnValue_4) == 0x0009F8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetChildrenCount_ReturnValue) == 0x0009FC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Less_IntInt_ReturnValue_4) == 0x000A00, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000A01, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_HasAnyChildren_ReturnValue) == 0x000A02, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetChildAt_ReturnValue) == 0x000A08, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_DynamicCast_AsWB_Effect) == 0x000A10, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_DynamicCast_AsWB_Effect' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_DynamicCast_bSuccess) == 0x000A18, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_10) == 0x000A19, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsValid_ReturnValue_11) == 0x000A1A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_6) == 0x000A1B, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_7) == 0x000A20, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Has_Been_Initd_Variable_19) == 0x000A28, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Has_Been_Initd_Variable_19' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_32) == 0x000A29, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_7) == 0x000A2A, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_8) == 0x000A30, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3) == 0x000A38, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetPercent_Separated_Percent_1) == 0x000A40, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetPercent_Separated_Percent_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_GetPercent_Percent_1) == 0x000A48, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_GetPercent_Percent_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_33) == 0x000A50, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_X_7) == 0x000A58, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BreakVector2D_Y_7) == 0x000A60, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000A68, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_MakeVector2D_ReturnValue_4) == 0x000A70, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_IsClosed_Variable_19) == 0x000A80, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_IsClosed_Variable_19' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_9) == 0x000A88, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_8) == 0x000A98, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Not_PreBool_ReturnValue_3) == 0x000A99, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_10) == 0x000AA0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_BooleanAND_ReturnValue_1) == 0x000AA8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_CustomEvent_Color) == 0x000AAC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, Temp_bool_Variable_9) == 0x000ABC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_Select_Default_11) == 0x000AC0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_IsFillTypeFillFromCenter_ReturnValue_34) == 0x000AC8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_IsFillTypeFillFromCenter_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_Delay_Duration_ImplicitCast) == 0x000ACC, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000AD0, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear, K2Node_VariableSet_DeltaTime_ImplicitCast) == 0x000AD8, "Member 'ProgressBarLinear_C_ExecuteUbergraph_ProgressBarLinear::K2Node_VariableSet_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.FindEffectOverlay
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_FindEffectOverlay final
{
public:
	EEffectLayer                                  EffectLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               Overlay;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EEffectLayer                                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_FindEffectOverlay) == 0x000008, "Wrong alignment on ProgressBarLinear_C_FindEffectOverlay");
static_assert(sizeof(ProgressBarLinear_C_FindEffectOverlay) == 0x000020, "Wrong size on ProgressBarLinear_C_FindEffectOverlay");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlay, EffectLayer) == 0x000000, "Member 'ProgressBarLinear_C_FindEffectOverlay::EffectLayer' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlay, Overlay) == 0x000008, "Member 'ProgressBarLinear_C_FindEffectOverlay::Overlay' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlay, Temp_byte_Variable) == 0x000010, "Member 'ProgressBarLinear_C_FindEffectOverlay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlay, K2Node_Select_Default) == 0x000018, "Member 'ProgressBarLinear_C_FindEffectOverlay::K2Node_Select_Default' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.FindEffectOverlaysCentered
// 0x0040 (0x0040 - 0x0000)
struct ProgressBarLinear_C_FindEffectOverlaysCentered final
{
public:
	EEffectLayer                                  EffectLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOverlay*>                       Overlays;                                          // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOverlay*>                       K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UOverlay*>                       K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ProgressBarLinear_C_FindEffectOverlaysCentered) == 0x000008, "Wrong alignment on ProgressBarLinear_C_FindEffectOverlaysCentered");
static_assert(sizeof(ProgressBarLinear_C_FindEffectOverlaysCentered) == 0x000040, "Wrong size on ProgressBarLinear_C_FindEffectOverlaysCentered");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlaysCentered, EffectLayer) == 0x000000, "Member 'ProgressBarLinear_C_FindEffectOverlaysCentered::EffectLayer' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlaysCentered, Overlays) == 0x000008, "Member 'ProgressBarLinear_C_FindEffectOverlaysCentered::Overlays' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlaysCentered, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ProgressBarLinear_C_FindEffectOverlaysCentered::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlaysCentered, K2Node_MakeArray_Array) == 0x000020, "Member 'ProgressBarLinear_C_FindEffectOverlaysCentered::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindEffectOverlaysCentered, K2Node_MakeArray_Array_1) == 0x000030, "Member 'ProgressBarLinear_C_FindEffectOverlaysCentered::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.FindThicknessSize
// 0x0030 (0x0030 - 0x0000)
struct ProgressBarLinear_C_FindThicknessSize final
{
public:
	double                                        Thickness;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_FindThicknessSize) == 0x000008, "Wrong alignment on ProgressBarLinear_C_FindThicknessSize");
static_assert(sizeof(ProgressBarLinear_C_FindThicknessSize) == 0x000030, "Wrong size on ProgressBarLinear_C_FindThicknessSize");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSize, Thickness) == 0x000000, "Member 'ProgressBarLinear_C_FindThicknessSize::Thickness' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSize, ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_FindThicknessSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSize, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'ProgressBarLinear_C_FindThicknessSize::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSize, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000020, "Member 'ProgressBarLinear_C_FindThicknessSize::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.FindThicknessSizeCentered
// 0x0048 (0x0048 - 0x0000)
struct ProgressBarLinear_C_FindThicknessSizeCentered final
{
public:
	double                                        Thickness;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_FindThicknessSizeCentered) == 0x000008, "Wrong alignment on ProgressBarLinear_C_FindThicknessSizeCentered");
static_assert(sizeof(ProgressBarLinear_C_FindThicknessSizeCentered) == 0x000048, "Wrong size on ProgressBarLinear_C_FindThicknessSizeCentered");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, Thickness) == 0x000000, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::Thickness' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, Temp_bool_Variable) == 0x000018, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000019, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, K2Node_Select_Default) == 0x000020, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_FindThicknessSizeCentered, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000038, "Member 'ProgressBarLinear_C_FindThicknessSizeCentered::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.GetCenterSpacingSize
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_GetCenterSpacingSize final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_GetCenterSpacingSize) == 0x000008, "Wrong alignment on ProgressBarLinear_C_GetCenterSpacingSize");
static_assert(sizeof(ProgressBarLinear_C_GetCenterSpacingSize) == 0x000020, "Wrong size on ProgressBarLinear_C_GetCenterSpacingSize");
static_assert(offsetof(ProgressBarLinear_C_GetCenterSpacingSize, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_GetCenterSpacingSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetCenterSpacingSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_GetCenterSpacingSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetCenterSpacingSize, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000010, "Member 'ProgressBarLinear_C_GetCenterSpacingSize::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetCenterSpacingSize, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'ProgressBarLinear_C_GetCenterSpacingSize::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.GetChildren
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_GetChildren final
{
public:
	TArray<class UWB_Container_Linear_C*>         Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWB_Container_Linear_C*>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ProgressBarLinear_C_GetChildren) == 0x000008, "Wrong alignment on ProgressBarLinear_C_GetChildren");
static_assert(sizeof(ProgressBarLinear_C_GetChildren) == 0x000020, "Wrong size on ProgressBarLinear_C_GetChildren");
static_assert(offsetof(ProgressBarLinear_C_GetChildren, Array) == 0x000000, "Member 'ProgressBarLinear_C_GetChildren::Array' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetChildren, K2Node_MakeArray_Array) == 0x000010, "Member 'ProgressBarLinear_C_GetChildren::K2Node_MakeArray_Array' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.GetEffectOverlays
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_GetEffectOverlays final
{
public:
	TArray<class UOverlay*>                       Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UOverlay*>                       K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ProgressBarLinear_C_GetEffectOverlays) == 0x000008, "Wrong alignment on ProgressBarLinear_C_GetEffectOverlays");
static_assert(sizeof(ProgressBarLinear_C_GetEffectOverlays) == 0x000020, "Wrong size on ProgressBarLinear_C_GetEffectOverlays");
static_assert(offsetof(ProgressBarLinear_C_GetEffectOverlays, Array) == 0x000000, "Member 'ProgressBarLinear_C_GetEffectOverlays::Array' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetEffectOverlays, K2Node_MakeArray_Array) == 0x000010, "Member 'ProgressBarLinear_C_GetEffectOverlays::K2Node_MakeArray_Array' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.GetEntryIndex
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_GetEntryIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_GetEntryIndex) == 0x000008, "Wrong alignment on ProgressBarLinear_C_GetEntryIndex");
static_assert(sizeof(ProgressBarLinear_C_GetEntryIndex) == 0x000010, "Wrong size on ProgressBarLinear_C_GetEntryIndex");
static_assert(offsetof(ProgressBarLinear_C_GetEntryIndex, Index_0) == 0x000000, "Member 'ProgressBarLinear_C_GetEntryIndex::Index_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetEntryIndex, Value) == 0x000008, "Member 'ProgressBarLinear_C_GetEntryIndex::Value' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.GetFillFromCenterSpacing
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_GetFillFromCenterSpacing final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_GetFillFromCenterSpacing) == 0x000008, "Wrong alignment on ProgressBarLinear_C_GetFillFromCenterSpacing");
static_assert(sizeof(ProgressBarLinear_C_GetFillFromCenterSpacing) == 0x000010, "Wrong size on ProgressBarLinear_C_GetFillFromCenterSpacing");
static_assert(offsetof(ProgressBarLinear_C_GetFillFromCenterSpacing, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_GetFillFromCenterSpacing::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetFillFromCenterSpacing, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_GetFillFromCenterSpacing::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.GetInterpolationTime
// 0x0038 (0x0038 - 0x0000)
struct ProgressBarLinear_C_GetInterpolationTime final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_GetInterpolationTime) == 0x000008, "Wrong alignment on ProgressBarLinear_C_GetInterpolationTime");
static_assert(sizeof(ProgressBarLinear_C_GetInterpolationTime) == 0x000038, "Wrong size on ProgressBarLinear_C_GetInterpolationTime");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_GetInterpolationTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, Temp_bool_Variable) == 0x000008, "Member 'ProgressBarLinear_C_GetInterpolationTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, Temp_real_Variable) == 0x000010, "Member 'ProgressBarLinear_C_GetInterpolationTime::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000018, "Member 'ProgressBarLinear_C_GetInterpolationTime::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, K2Node_Select_Default) == 0x000020, "Member 'ProgressBarLinear_C_GetInterpolationTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'ProgressBarLinear_C_GetInterpolationTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_GetInterpolationTime, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'ProgressBarLinear_C_GetInterpolationTime::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.HasAnyValueChanged
// 0x002C (0x002C - 0x0000)
struct ProgressBarLinear_C_HasAnyValueChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEffectChanged_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue_1;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_4;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue_2;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue_3;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue_4;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_5;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_6;      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_6;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue_5;              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_7;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_8;      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_4;      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_9;      // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_10;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1;  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_HasAnyValueChanged) == 0x000001, "Wrong alignment on ProgressBarLinear_C_HasAnyValueChanged");
static_assert(sizeof(ProgressBarLinear_C_HasAnyValueChanged) == 0x00002C, "Wrong size on ProgressBarLinear_C_HasAnyValueChanged");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_HasAnyValueChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000002, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_HasEffectChanged_ReturnValue) == 0x000003, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_HasEffectChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000004, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000005, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000006, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000007, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000008, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqualColor_ReturnValue) == 0x000009, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqualColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x00000A, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00000B, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x00000C, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00000D, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00000E, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00000F, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqualColor_ReturnValue_1) == 0x000010, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqualColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000011, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000012, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_4) == 0x000013, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000014, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000015, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000016, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000017, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqualColor_ReturnValue_2) == 0x000018, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqualColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqualColor_ReturnValue_3) == 0x000019, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqualColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqualColor_ReturnValue_4) == 0x00001A, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqualColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x00001B, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x00001C, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_5) == 0x00001D, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_6) == 0x00001E, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x00001F, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_6) == 0x000020, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000021, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x000022, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqualColor_ReturnValue_5) == 0x000023, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqualColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_7) == 0x000024, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_8) == 0x000025, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ObjectObject_ReturnValue_4) == 0x000026, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_9) == 0x000027, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x000028, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_10) == 0x000029, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x00002A, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasAnyValueChanged, CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1) == 0x00002B, "Member 'ProgressBarLinear_C_HasAnyValueChanged::CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.HasEffectChanged
// 0x0138 (0x0138 - 0x0000)
struct ProgressBarLinear_C_HasEffectChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasChanged;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Effects                             CallFunc_Array_Get_Item;                           // 0x0020(0x0088)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualColor_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1;  // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue_2;  // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue_3;  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4;   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2;   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_3;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_4;   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_5;   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_HasEffectChanged) == 0x000008, "Wrong alignment on ProgressBarLinear_C_HasEffectChanged");
static_assert(sizeof(ProgressBarLinear_C_HasEffectChanged) == 0x000138, "Wrong size on ProgressBarLinear_C_HasEffectChanged");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_HasEffectChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, HasChanged) == 0x000001, "Member 'ProgressBarLinear_C_HasEffectChanged::HasChanged' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ProgressBarLinear_C_HasEffectChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ProgressBarLinear_C_HasEffectChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000011, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Array_Get_Item) == 0x000020, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A8, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Array_Length_ReturnValue_2) == 0x0000AC, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000B0, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000B2, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000B3, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000B4, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x0000B5, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x0000B6, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x0000B7, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqualColor_ReturnValue) == 0x0000B8, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqualColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000B9, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000BA, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000BB, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0000BC, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x0000BD, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1) == 0x0000BE, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_Vector2DVector2D_ReturnValue_2) == 0x0000BF, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_Vector2DVector2D_ReturnValue_3) == 0x0000C0, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x0000C1, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0000C2, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x0000C3, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue) == 0x0000C4, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C5, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_2) == 0x0000C6, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_3) == 0x0000C7, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_4) == 0x0000C8, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_5) == 0x0000C9, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_6) == 0x0000CA, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_7) == 0x0000CB, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_8) == 0x0000CC, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_9) == 0x0000CD, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_10) == 0x0000CE, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_11) == 0x0000CF, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_12) == 0x0000D0, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_13) == 0x0000D1, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_14) == 0x0000D2, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_15) == 0x0000D3, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_16) == 0x0000D4, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_BooleanOR_ReturnValue_17) == 0x0000D5, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x0000E0, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2) == 0x0000E8, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3) == 0x0000F0, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4) == 0x0000F8, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5) == 0x000100, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x000108, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1) == 0x000110, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2) == 0x000118, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_3) == 0x000120, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_4) == 0x000128, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_HasEffectChanged, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_5) == 0x000130, "Member 'ProgressBarLinear_C_HasEffectChanged::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.IsEffectProgressChangeColor
// 0x0090 (0x0090 - 0x0000)
struct ProgressBarLinear_C_IsEffectProgressChangeColor final
{
public:
	struct FS_Effects                             Effect;                                            // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_IsEffectProgressChangeColor) == 0x000008, "Wrong alignment on ProgressBarLinear_C_IsEffectProgressChangeColor");
static_assert(sizeof(ProgressBarLinear_C_IsEffectProgressChangeColor) == 0x000090, "Wrong size on ProgressBarLinear_C_IsEffectProgressChangeColor");
static_assert(offsetof(ProgressBarLinear_C_IsEffectProgressChangeColor, Effect) == 0x000000, "Member 'ProgressBarLinear_C_IsEffectProgressChangeColor::Effect' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsEffectProgressChangeColor, ReturnValue) == 0x000088, "Member 'ProgressBarLinear_C_IsEffectProgressChangeColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsEffectProgressChangeColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'ProgressBarLinear_C_IsEffectProgressChangeColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.IsFillTypeFillFromCenter
// 0x0002 (0x0002 - 0x0000)
struct ProgressBarLinear_C_IsFillTypeFillFromCenter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_IsFillTypeFillFromCenter) == 0x000001, "Wrong alignment on ProgressBarLinear_C_IsFillTypeFillFromCenter");
static_assert(sizeof(ProgressBarLinear_C_IsFillTypeFillFromCenter) == 0x000002, "Wrong size on ProgressBarLinear_C_IsFillTypeFillFromCenter");
static_assert(offsetof(ProgressBarLinear_C_IsFillTypeFillFromCenter, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_IsFillTypeFillFromCenter::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsFillTypeFillFromCenter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ProgressBarLinear_C_IsFillTypeFillFromCenter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.IsFillTypeTopOrBottom
// 0x0004 (0x0004 - 0x0000)
struct ProgressBarLinear_C_IsFillTypeTopOrBottom final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_IsFillTypeTopOrBottom) == 0x000001, "Wrong alignment on ProgressBarLinear_C_IsFillTypeTopOrBottom");
static_assert(sizeof(ProgressBarLinear_C_IsFillTypeTopOrBottom) == 0x000004, "Wrong size on ProgressBarLinear_C_IsFillTypeTopOrBottom");
static_assert(offsetof(ProgressBarLinear_C_IsFillTypeTopOrBottom, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_IsFillTypeTopOrBottom::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsFillTypeTopOrBottom, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ProgressBarLinear_C_IsFillTypeTopOrBottom::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsFillTypeTopOrBottom, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'ProgressBarLinear_C_IsFillTypeTopOrBottom::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsFillTypeTopOrBottom, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'ProgressBarLinear_C_IsFillTypeTopOrBottom::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.IsProgressMethodInterpolated
// 0x0002 (0x0002 - 0x0000)
struct ProgressBarLinear_C_IsProgressMethodInterpolated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_IsProgressMethodInterpolated) == 0x000001, "Wrong alignment on ProgressBarLinear_C_IsProgressMethodInterpolated");
static_assert(sizeof(ProgressBarLinear_C_IsProgressMethodInterpolated) == 0x000002, "Wrong size on ProgressBarLinear_C_IsProgressMethodInterpolated");
static_assert(offsetof(ProgressBarLinear_C_IsProgressMethodInterpolated, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_IsProgressMethodInterpolated::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsProgressMethodInterpolated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ProgressBarLinear_C_IsProgressMethodInterpolated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.IsProgressMethodStatic
// 0x0002 (0x0002 - 0x0000)
struct ProgressBarLinear_C_IsProgressMethodStatic final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_IsProgressMethodStatic) == 0x000001, "Wrong alignment on ProgressBarLinear_C_IsProgressMethodStatic");
static_assert(sizeof(ProgressBarLinear_C_IsProgressMethodStatic) == 0x000002, "Wrong size on ProgressBarLinear_C_IsProgressMethodStatic");
static_assert(offsetof(ProgressBarLinear_C_IsProgressMethodStatic, ReturnValue) == 0x000000, "Member 'ProgressBarLinear_C_IsProgressMethodStatic::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsProgressMethodStatic, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ProgressBarLinear_C_IsProgressMethodStatic::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.IsValidEntryIndex
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_IsValidEntryIndex final
{
public:
	int32                                         IndexToTest;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_IsValidEntryIndex) == 0x000004, "Wrong alignment on ProgressBarLinear_C_IsValidEntryIndex");
static_assert(sizeof(ProgressBarLinear_C_IsValidEntryIndex) == 0x000008, "Wrong size on ProgressBarLinear_C_IsValidEntryIndex");
static_assert(offsetof(ProgressBarLinear_C_IsValidEntryIndex, IndexToTest) == 0x000000, "Member 'ProgressBarLinear_C_IsValidEntryIndex::IndexToTest' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsValidEntryIndex, ReturnValue) == 0x000004, "Member 'ProgressBarLinear_C_IsValidEntryIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_IsValidEntryIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'ProgressBarLinear_C_IsValidEntryIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.NotEqualColor
// 0x0090 (0x0090 - 0x0000)
struct ProgressBarLinear_C_NotEqualColor final
{
public:
	struct FLinearColor                           A;                                                 // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           B;                                                 // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2;   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_3;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_NotEqualColor) == 0x000008, "Wrong alignment on ProgressBarLinear_C_NotEqualColor");
static_assert(sizeof(ProgressBarLinear_C_NotEqualColor) == 0x000090, "Wrong size on ProgressBarLinear_C_NotEqualColor");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, A) == 0x000000, "Member 'ProgressBarLinear_C_NotEqualColor::A' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, B) == 0x000010, "Member 'ProgressBarLinear_C_NotEqualColor::B' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, ReturnValue) == 0x000020, "Member 'ProgressBarLinear_C_NotEqualColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_R) == 0x000024, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_G) == 0x000028, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_B) == 0x00002C, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_A) == 0x000030, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_R_1) == 0x000034, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_G_1) == 0x000038, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_B_1) == 0x00003C, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BreakColor_A_1) == 0x000040, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000044, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000045, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000046, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000047, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BooleanOR_ReturnValue_1) == 0x000049, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_BooleanOR_ReturnValue_2) == 0x00004A, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x000058, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2) == 0x000060, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3) == 0x000068, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1) == 0x000078, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2) == 0x000080, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_NotEqualColor, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_3) == 0x000088, "Member 'ProgressBarLinear_C_NotEqualColor::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_AddEffect
// 0x0090 (0x0090 - 0x0000)
struct ProgressBarLinear_C_PB_AddEffect final
{
public:
	struct FS_Effects                             Effect;                                            // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_AddEffect) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_AddEffect");
static_assert(sizeof(ProgressBarLinear_C_PB_AddEffect) == 0x000090, "Wrong size on ProgressBarLinear_C_PB_AddEffect");
static_assert(offsetof(ProgressBarLinear_C_PB_AddEffect, Effect) == 0x000000, "Member 'ProgressBarLinear_C_PB_AddEffect::Effect' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_AddEffect, Index_0) == 0x000088, "Member 'ProgressBarLinear_C_PB_AddEffect::Index_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_AddEffect, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'ProgressBarLinear_C_PB_AddEffect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetEffects
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_GetEffects final
{
public:
	TArray<struct FS_Effects>                     Effects_0;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetEffects) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_GetEffects");
static_assert(sizeof(ProgressBarLinear_C_PB_GetEffects) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_GetEffects");
static_assert(offsetof(ProgressBarLinear_C_PB_GetEffects, Effects_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetEffects::Effects_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetFillColor
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_GetFillColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetFillColor) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_GetFillColor");
static_assert(sizeof(ProgressBarLinear_C_PB_GetFillColor) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_GetFillColor");
static_assert(offsetof(ProgressBarLinear_C_PB_GetFillColor, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetFillColor::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetInterpTimeCurrent
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_GetInterpTimeCurrent final
{
public:
	double                                        CurrentInterpTime;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetInterpTimeCurrent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_GetInterpTimeCurrent");
static_assert(sizeof(ProgressBarLinear_C_PB_GetInterpTimeCurrent) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_GetInterpTimeCurrent");
static_assert(offsetof(ProgressBarLinear_C_PB_GetInterpTimeCurrent, CurrentInterpTime) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetInterpTimeCurrent::CurrentInterpTime' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetInterpTimeTarget
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_GetInterpTimeTarget final
{
public:
	double                                        TargetInterpTime;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetInterpTimeTarget) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_GetInterpTimeTarget");
static_assert(sizeof(ProgressBarLinear_C_PB_GetInterpTimeTarget) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_GetInterpTimeTarget");
static_assert(offsetof(ProgressBarLinear_C_PB_GetInterpTimeTarget, TargetInterpTime) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetInterpTimeTarget::TargetInterpTime' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetIsCustomMarquee
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_GetIsCustomMarquee final
{
public:
	bool                                          IsMarquee;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetIsCustomMarquee) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_GetIsCustomMarquee");
static_assert(sizeof(ProgressBarLinear_C_PB_GetIsCustomMarquee) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_GetIsCustomMarquee");
static_assert(offsetof(ProgressBarLinear_C_PB_GetIsCustomMarquee, IsMarquee) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetIsCustomMarquee::IsMarquee' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetIsMarquee
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_GetIsMarquee final
{
public:
	bool                                          IsMarquee;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetIsMarquee) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_GetIsMarquee");
static_assert(sizeof(ProgressBarLinear_C_PB_GetIsMarquee) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_GetIsMarquee");
static_assert(offsetof(ProgressBarLinear_C_PB_GetIsMarquee, IsMarquee) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetIsMarquee::IsMarquee' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetPercent
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_PB_GetPercent final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Container_Linear_C*                 K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPercent_Percent;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_GetPercent");
static_assert(sizeof(ProgressBarLinear_C_PB_GetPercent) == 0x000020, "Wrong size on ProgressBarLinear_C_PB_GetPercent");
static_assert(offsetof(ProgressBarLinear_C_PB_GetPercent, Percent) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetPercent::Percent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetPercent, Temp_bool_Variable) == 0x000008, "Member 'ProgressBarLinear_C_PB_GetPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetPercent, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000009, "Member 'ProgressBarLinear_C_PB_GetPercent::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetPercent, K2Node_Select_Default) == 0x000010, "Member 'ProgressBarLinear_C_PB_GetPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetPercent, CallFunc_GetPercent_Percent) == 0x000018, "Member 'ProgressBarLinear_C_PB_GetPercent::CallFunc_GetPercent_Percent' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetProgressMethod
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_GetProgressMethod final
{
public:
	EProgressMethod                               EProgressMethod;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetProgressMethod) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_GetProgressMethod");
static_assert(sizeof(ProgressBarLinear_C_PB_GetProgressMethod) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_GetProgressMethod");
static_assert(offsetof(ProgressBarLinear_C_PB_GetProgressMethod, EProgressMethod) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetProgressMethod::EProgressMethod' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetSeparationSteps
// 0x0004 (0x0004 - 0x0000)
struct ProgressBarLinear_C_PB_GetSeparationSteps final
{
public:
	int32                                         Steps;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetSeparationSteps) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_GetSeparationSteps");
static_assert(sizeof(ProgressBarLinear_C_PB_GetSeparationSteps) == 0x000004, "Wrong size on ProgressBarLinear_C_PB_GetSeparationSteps");
static_assert(offsetof(ProgressBarLinear_C_PB_GetSeparationSteps, Steps) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetSeparationSteps::Steps' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetSize
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_GetSize final
{
public:
	struct FVector2D                              Size_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetSize) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_GetSize");
static_assert(sizeof(ProgressBarLinear_C_PB_GetSize) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_GetSize");
static_assert(offsetof(ProgressBarLinear_C_PB_GetSize, Size_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetSize::Size_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetTargetFillColor_Negative
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_GetTargetFillColor_Negative final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetTargetFillColor_Negative) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_GetTargetFillColor_Negative");
static_assert(sizeof(ProgressBarLinear_C_PB_GetTargetFillColor_Negative) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_GetTargetFillColor_Negative");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetFillColor_Negative, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetTargetFillColor_Negative::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetTargetFillColor_Positive
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_GetTargetFillColor_Positive final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetTargetFillColor_Positive) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_GetTargetFillColor_Positive");
static_assert(sizeof(ProgressBarLinear_C_PB_GetTargetFillColor_Positive) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_GetTargetFillColor_Positive");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetFillColor_Positive, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetTargetFillColor_Positive::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetTargetPercent
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_PB_GetTargetPercent final
{
public:
	double                                        TargetPercent_0;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Container_Linear_C*                 K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTargetPercent_Percent;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetTargetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_GetTargetPercent");
static_assert(sizeof(ProgressBarLinear_C_PB_GetTargetPercent) == 0x000020, "Wrong size on ProgressBarLinear_C_PB_GetTargetPercent");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetPercent, TargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetTargetPercent::TargetPercent_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetPercent, Temp_bool_Variable) == 0x000008, "Member 'ProgressBarLinear_C_PB_GetTargetPercent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetPercent, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000009, "Member 'ProgressBarLinear_C_PB_GetTargetPercent::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetPercent, K2Node_Select_Default) == 0x000010, "Member 'ProgressBarLinear_C_PB_GetTargetPercent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_GetTargetPercent, CallFunc_GetTargetPercent_Percent) == 0x000018, "Member 'ProgressBarLinear_C_PB_GetTargetPercent::CallFunc_GetTargetPercent_Percent' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetUseGradientFillColor
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_GetUseGradientFillColor final
{
public:
	bool                                          UseGradientFillColor;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetUseGradientFillColor) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_GetUseGradientFillColor");
static_assert(sizeof(ProgressBarLinear_C_PB_GetUseGradientFillColor) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_GetUseGradientFillColor");
static_assert(offsetof(ProgressBarLinear_C_PB_GetUseGradientFillColor, UseGradientFillColor) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetUseGradientFillColor::UseGradientFillColor' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_GetUseTargetPercent
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_GetUseTargetPercent final
{
public:
	bool                                          UseTargetPercent_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_GetUseTargetPercent) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_GetUseTargetPercent");
static_assert(sizeof(ProgressBarLinear_C_PB_GetUseTargetPercent) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_GetUseTargetPercent");
static_assert(offsetof(ProgressBarLinear_C_PB_GetUseTargetPercent, UseTargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_GetUseTargetPercent::UseTargetPercent_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_RemoveEffect
// 0x0004 (0x0004 - 0x0000)
struct ProgressBarLinear_C_PB_RemoveEffect final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_RemoveEffect) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_RemoveEffect");
static_assert(sizeof(ProgressBarLinear_C_PB_RemoveEffect) == 0x000004, "Wrong size on ProgressBarLinear_C_PB_RemoveEffect");
static_assert(offsetof(ProgressBarLinear_C_PB_RemoveEffect, Index_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_RemoveEffect::Index_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetAllEffectsEnabled
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetAllEffectsEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetAllEffectsEnabled) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetAllEffectsEnabled");
static_assert(sizeof(ProgressBarLinear_C_PB_SetAllEffectsEnabled) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetAllEffectsEnabled");
static_assert(offsetof(ProgressBarLinear_C_PB_SetAllEffectsEnabled, IsEnabled) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetAllEffectsEnabled::IsEnabled' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetBackgroundBlurStrength
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetBackgroundBlurStrength final
{
public:
	double                                        BlurStrength;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetBackgroundBlurStrength) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetBackgroundBlurStrength");
static_assert(sizeof(ProgressBarLinear_C_PB_SetBackgroundBlurStrength) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetBackgroundBlurStrength");
static_assert(offsetof(ProgressBarLinear_C_PB_SetBackgroundBlurStrength, BlurStrength) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetBackgroundBlurStrength::BlurStrength' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetBackgroundBrushTiling
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetBackgroundBrushTiling final
{
public:
	ESlateBrushTileType                           Tiling;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetBackgroundBrushTiling) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetBackgroundBrushTiling");
static_assert(sizeof(ProgressBarLinear_C_PB_SetBackgroundBrushTiling) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetBackgroundBrushTiling");
static_assert(offsetof(ProgressBarLinear_C_PB_SetBackgroundBrushTiling, Tiling) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetBackgroundBrushTiling::Tiling' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_SetBackgroundColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetBackgroundColor) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_SetBackgroundColor");
static_assert(sizeof(ProgressBarLinear_C_PB_SetBackgroundColor) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_SetBackgroundColor");
static_assert(offsetof(ProgressBarLinear_C_PB_SetBackgroundColor, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetBackgroundColor::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetBackgroundColorMask
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetBackgroundColorMask final
{
public:
	class UTexture2D*                             Mask;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetBackgroundColorMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetBackgroundColorMask");
static_assert(sizeof(ProgressBarLinear_C_PB_SetBackgroundColorMask) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetBackgroundColorMask");
static_assert(offsetof(ProgressBarLinear_C_PB_SetBackgroundColorMask, Mask) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetBackgroundColorMask::Mask' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetBlendMask
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetBlendMask final
{
public:
	class UTexture2D*                             BlendMask_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetBlendMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetBlendMask");
static_assert(sizeof(ProgressBarLinear_C_PB_SetBlendMask) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetBlendMask");
static_assert(offsetof(ProgressBarLinear_C_PB_SetBlendMask, BlendMask_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetBlendMask::BlendMask_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetCustomMarqueeImage
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetCustomMarqueeImage final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetCustomMarqueeImage) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetCustomMarqueeImage");
static_assert(sizeof(ProgressBarLinear_C_PB_SetCustomMarqueeImage) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetCustomMarqueeImage");
static_assert(offsetof(ProgressBarLinear_C_PB_SetCustomMarqueeImage, Image) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetCustomMarqueeImage::Image' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetCustomMarqueeMaskType
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetCustomMarqueeMaskType final
{
public:
	EMarqueeMask                                  MaskType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetCustomMarqueeMaskType) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetCustomMarqueeMaskType");
static_assert(sizeof(ProgressBarLinear_C_PB_SetCustomMarqueeMaskType) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetCustomMarqueeMaskType");
static_assert(offsetof(ProgressBarLinear_C_PB_SetCustomMarqueeMaskType, MaskType) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetCustomMarqueeMaskType::MaskType' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetEffectEnabled
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetEffectEnabled final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnabled;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetEffectEnabled) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_SetEffectEnabled");
static_assert(sizeof(ProgressBarLinear_C_PB_SetEffectEnabled) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetEffectEnabled");
static_assert(offsetof(ProgressBarLinear_C_PB_SetEffectEnabled, Index_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetEffectEnabled::Index_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_PB_SetEffectEnabled, IsEnabled) == 0x000004, "Member 'ProgressBarLinear_C_PB_SetEffectEnabled::IsEnabled' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetEffects
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_SetEffects final
{
public:
	TArray<struct FS_Effects>                     Effects_0;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetEffects) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetEffects");
static_assert(sizeof(ProgressBarLinear_C_PB_SetEffects) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_SetEffects");
static_assert(offsetof(ProgressBarLinear_C_PB_SetEffects, Effects_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetEffects::Effects_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillColor
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillColor) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_SetFillColor");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillColor) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_SetFillColor");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillColor, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillColor::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillColorBrushTiling
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillColorBrushTiling final
{
public:
	ESlateBrushTileType                           Tiling;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillColorBrushTiling) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetFillColorBrushTiling");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillColorBrushTiling) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetFillColorBrushTiling");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillColorBrushTiling, Tiling) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillColorBrushTiling::Tiling' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillColorGradientPower
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillColorGradientPower final
{
public:
	double                                        GradientPower;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillColorGradientPower) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetFillColorGradientPower");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillColorGradientPower) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetFillColorGradientPower");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillColorGradientPower, GradientPower) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillColorGradientPower::GradientPower' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillColorGradientType
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillColorGradientType final
{
public:
	EGradientTypes                                GradientType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillColorGradientType) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetFillColorGradientType");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillColorGradientType) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetFillColorGradientType");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillColorGradientType, GradientType) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillColorGradientType::GradientType' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillColorMask
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillColorMask final
{
public:
	class UObject*                                Mask;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillColorMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetFillColorMask");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillColorMask) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetFillColorMask");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillColorMask, Mask) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillColorMask::Mask' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillFromCenterSpacing
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillFromCenterSpacing final
{
public:
	double                                        Spacing;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillFromCenterSpacing) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetFillFromCenterSpacing");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillFromCenterSpacing) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetFillFromCenterSpacing");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillFromCenterSpacing, Spacing) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillFromCenterSpacing::Spacing' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetFillType
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetFillType final
{
public:
	EProgressBarFillType                          FillType_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetFillType) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetFillType");
static_assert(sizeof(ProgressBarLinear_C_PB_SetFillType) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetFillType");
static_assert(offsetof(ProgressBarLinear_C_PB_SetFillType, FillType_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetFillType::FillType_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetInterpTimeCurrent
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetInterpTimeCurrent final
{
public:
	double                                        CurrentInterpTime;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetInterpTimeCurrent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetInterpTimeCurrent");
static_assert(sizeof(ProgressBarLinear_C_PB_SetInterpTimeCurrent) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetInterpTimeCurrent");
static_assert(offsetof(ProgressBarLinear_C_PB_SetInterpTimeCurrent, CurrentInterpTime) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetInterpTimeCurrent::CurrentInterpTime' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetInterpTimeTarget
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetInterpTimeTarget final
{
public:
	double                                        TargetInterpTime;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetInterpTimeTarget) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetInterpTimeTarget");
static_assert(sizeof(ProgressBarLinear_C_PB_SetInterpTimeTarget) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetInterpTimeTarget");
static_assert(offsetof(ProgressBarLinear_C_PB_SetInterpTimeTarget, TargetInterpTime) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetInterpTimeTarget::TargetInterpTime' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetIsCustomMarquee
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetIsCustomMarquee final
{
public:
	bool                                          IsMarquee;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetIsCustomMarquee) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetIsCustomMarquee");
static_assert(sizeof(ProgressBarLinear_C_PB_SetIsCustomMarquee) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetIsCustomMarquee");
static_assert(offsetof(ProgressBarLinear_C_PB_SetIsCustomMarquee, IsMarquee) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetIsCustomMarquee::IsMarquee' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetIsMarquee
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetIsMarquee final
{
public:
	bool                                          IsMarquee;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetIsMarquee) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetIsMarquee");
static_assert(sizeof(ProgressBarLinear_C_PB_SetIsMarquee) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetIsMarquee");
static_assert(offsetof(ProgressBarLinear_C_PB_SetIsMarquee, IsMarquee) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetIsMarquee::IsMarquee' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetMarqueeImage
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetMarqueeImage final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetMarqueeImage) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetMarqueeImage");
static_assert(sizeof(ProgressBarLinear_C_PB_SetMarqueeImage) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetMarqueeImage");
static_assert(offsetof(ProgressBarLinear_C_PB_SetMarqueeImage, Image) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetMarqueeImage::Image' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetPercent
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetPercent final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetPercent");
static_assert(sizeof(ProgressBarLinear_C_PB_SetPercent) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetPercent");
static_assert(offsetof(ProgressBarLinear_C_PB_SetPercent, Value) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetPercent::Value' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetProgressMethod
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetProgressMethod final
{
public:
	EProgressMethod                               EProgressMethod;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetProgressMethod) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetProgressMethod");
static_assert(sizeof(ProgressBarLinear_C_PB_SetProgressMethod) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetProgressMethod");
static_assert(offsetof(ProgressBarLinear_C_PB_SetProgressMethod, EProgressMethod) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetProgressMethod::EProgressMethod' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetSeparationAbsoluteFill
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetSeparationAbsoluteFill final
{
public:
	bool                                          AbsoluteFillMethod;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetSeparationAbsoluteFill) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetSeparationAbsoluteFill");
static_assert(sizeof(ProgressBarLinear_C_PB_SetSeparationAbsoluteFill) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetSeparationAbsoluteFill");
static_assert(offsetof(ProgressBarLinear_C_PB_SetSeparationAbsoluteFill, AbsoluteFillMethod) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetSeparationAbsoluteFill::AbsoluteFillMethod' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetSeparationSteps
// 0x0004 (0x0004 - 0x0000)
struct ProgressBarLinear_C_PB_SetSeparationSteps final
{
public:
	int32                                         Steps;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetSeparationSteps) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_SetSeparationSteps");
static_assert(sizeof(ProgressBarLinear_C_PB_SetSeparationSteps) == 0x000004, "Wrong size on ProgressBarLinear_C_PB_SetSeparationSteps");
static_assert(offsetof(ProgressBarLinear_C_PB_SetSeparationSteps, Steps) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetSeparationSteps::Steps' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetSeparationStepsSpacing
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetSeparationStepsSpacing final
{
public:
	double                                        Spacing;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetSeparationStepsSpacing) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetSeparationStepsSpacing");
static_assert(sizeof(ProgressBarLinear_C_PB_SetSeparationStepsSpacing) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetSeparationStepsSpacing");
static_assert(offsetof(ProgressBarLinear_C_PB_SetSeparationStepsSpacing, Spacing) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetSeparationStepsSpacing::Spacing' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetSize
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_SetSize final
{
public:
	struct FVector2D                              Size_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetSize) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetSize");
static_assert(sizeof(ProgressBarLinear_C_PB_SetSize) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_SetSize");
static_assert(offsetof(ProgressBarLinear_C_PB_SetSize, Size_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetSize::Size_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetTargetFillColor_Negative
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_SetTargetFillColor_Negative final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetTargetFillColor_Negative) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_SetTargetFillColor_Negative");
static_assert(sizeof(ProgressBarLinear_C_PB_SetTargetFillColor_Negative) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_SetTargetFillColor_Negative");
static_assert(offsetof(ProgressBarLinear_C_PB_SetTargetFillColor_Negative, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetTargetFillColor_Negative::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetTargetFillColor_Positive
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_PB_SetTargetFillColor_Positive final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetTargetFillColor_Positive) == 0x000004, "Wrong alignment on ProgressBarLinear_C_PB_SetTargetFillColor_Positive");
static_assert(sizeof(ProgressBarLinear_C_PB_SetTargetFillColor_Positive) == 0x000010, "Wrong size on ProgressBarLinear_C_PB_SetTargetFillColor_Positive");
static_assert(offsetof(ProgressBarLinear_C_PB_SetTargetFillColor_Positive, Color) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetTargetFillColor_Positive::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetTargetPercent
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetTargetPercent final
{
public:
	double                                        TargetPercent_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetTargetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetTargetPercent");
static_assert(sizeof(ProgressBarLinear_C_PB_SetTargetPercent) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetTargetPercent");
static_assert(offsetof(ProgressBarLinear_C_PB_SetTargetPercent, TargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetTargetPercent::TargetPercent_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetThickness
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_PB_SetThickness final
{
public:
	double                                        Thickness;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetThickness) == 0x000008, "Wrong alignment on ProgressBarLinear_C_PB_SetThickness");
static_assert(sizeof(ProgressBarLinear_C_PB_SetThickness) == 0x000008, "Wrong size on ProgressBarLinear_C_PB_SetThickness");
static_assert(offsetof(ProgressBarLinear_C_PB_SetThickness, Thickness) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetThickness::Thickness' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetUseGradientFillColor
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetUseGradientFillColor final
{
public:
	bool                                          UseGradientFillColor;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetUseGradientFillColor) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetUseGradientFillColor");
static_assert(sizeof(ProgressBarLinear_C_PB_SetUseGradientFillColor) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetUseGradientFillColor");
static_assert(offsetof(ProgressBarLinear_C_PB_SetUseGradientFillColor, UseGradientFillColor) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetUseGradientFillColor::UseGradientFillColor' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PB_SetUseTargetPercent
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PB_SetUseTargetPercent final
{
public:
	bool                                          UseTargetPercent_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PB_SetUseTargetPercent) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PB_SetUseTargetPercent");
static_assert(sizeof(ProgressBarLinear_C_PB_SetUseTargetPercent) == 0x000001, "Wrong size on ProgressBarLinear_C_PB_SetUseTargetPercent");
static_assert(offsetof(ProgressBarLinear_C_PB_SetUseTargetPercent, UseTargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_PB_SetUseTargetPercent::UseTargetPercent_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_PreConstruct) == 0x000001, "Wrong alignment on ProgressBarLinear_C_PreConstruct");
static_assert(sizeof(ProgressBarLinear_C_PreConstruct) == 0x000001, "Wrong size on ProgressBarLinear_C_PreConstruct");
static_assert(offsetof(ProgressBarLinear_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProgressBarLinear_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.RemoveEntryIndex
// 0x0004 (0x0004 - 0x0000)
struct ProgressBarLinear_C_RemoveEntryIndex final
{
public:
	int32                                         IndexToRemove;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_RemoveEntryIndex) == 0x000004, "Wrong alignment on ProgressBarLinear_C_RemoveEntryIndex");
static_assert(sizeof(ProgressBarLinear_C_RemoveEntryIndex) == 0x000004, "Wrong size on ProgressBarLinear_C_RemoveEntryIndex");
static_assert(offsetof(ProgressBarLinear_C_RemoveEntryIndex, IndexToRemove) == 0x000000, "Member 'ProgressBarLinear_C_RemoveEntryIndex::IndexToRemove' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SendPercentToEffects
// 0x0038 (0x0038 - 0x0000)
struct ProgressBarLinear_C_SendPercentToEffects final
{
public:
	class UOverlay*                               EffectsOverlay;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_Effect_C*                           K2Node_DynamicCast_AsWB_Effect;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SendPercentToEffects) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SendPercentToEffects");
static_assert(sizeof(ProgressBarLinear_C_SendPercentToEffects) == 0x000038, "Wrong size on ProgressBarLinear_C_SendPercentToEffects");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, EffectsOverlay) == 0x000000, "Member 'ProgressBarLinear_C_SendPercentToEffects::EffectsOverlay' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, Percent) == 0x000008, "Member 'ProgressBarLinear_C_SendPercentToEffects::Percent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'ProgressBarLinear_C_SendPercentToEffects::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, CallFunc_HasAnyChildren_ReturnValue) == 0x000014, "Member 'ProgressBarLinear_C_SendPercentToEffects::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, Temp_int_Variable) == 0x000018, "Member 'ProgressBarLinear_C_SendPercentToEffects::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'ProgressBarLinear_C_SendPercentToEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'ProgressBarLinear_C_SendPercentToEffects::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, K2Node_DynamicCast_AsWB_Effect) == 0x000028, "Member 'ProgressBarLinear_C_SendPercentToEffects::K2Node_DynamicCast_AsWB_Effect' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ProgressBarLinear_C_SendPercentToEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ProgressBarLinear_C_SendPercentToEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SendPercentToEffects, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000032, "Member 'ProgressBarLinear_C_SendPercentToEffects::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Separation_AddBackground
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_Separation_AddBackground final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Separation_AddBackground) == 0x000004, "Wrong alignment on ProgressBarLinear_C_Separation_AddBackground");
static_assert(sizeof(ProgressBarLinear_C_Separation_AddBackground) == 0x000010, "Wrong size on ProgressBarLinear_C_Separation_AddBackground");
static_assert(offsetof(ProgressBarLinear_C_Separation_AddBackground, Color) == 0x000000, "Member 'ProgressBarLinear_C_Separation_AddBackground::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Separation_AddSegments
// 0x0038 (0x0038 - 0x0000)
struct ProgressBarLinear_C_Separation_AddSegments final
{
public:
	int32                                         NumSegments;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spacing;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size_0;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FillColor;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarFillType                          FillType_0;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Separation_AddSegments) == 0x000008, "Wrong alignment on ProgressBarLinear_C_Separation_AddSegments");
static_assert(sizeof(ProgressBarLinear_C_Separation_AddSegments) == 0x000038, "Wrong size on ProgressBarLinear_C_Separation_AddSegments");
static_assert(offsetof(ProgressBarLinear_C_Separation_AddSegments, NumSegments) == 0x000000, "Member 'ProgressBarLinear_C_Separation_AddSegments::NumSegments' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Separation_AddSegments, Spacing) == 0x000008, "Member 'ProgressBarLinear_C_Separation_AddSegments::Spacing' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Separation_AddSegments, Size_0) == 0x000010, "Member 'ProgressBarLinear_C_Separation_AddSegments::Size_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Separation_AddSegments, FillColor) == 0x000020, "Member 'ProgressBarLinear_C_Separation_AddSegments::FillColor' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Separation_AddSegments, FillType_0) == 0x000030, "Member 'ProgressBarLinear_C_Separation_AddSegments::FillType_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Separation_SetUseAbsoluteFillValue
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue final
{
public:
	bool                                          bAbsoluteFill;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue) == 0x000001, "Wrong alignment on ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue");
static_assert(sizeof(ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue) == 0x000001, "Wrong size on ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue");
static_assert(offsetof(ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue, bAbsoluteFill) == 0x000000, "Member 'ProgressBarLinear_C_Separation_SetUseAbsoluteFillValue::bAbsoluteFill' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBackgroundBlur
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetBackgroundBlur final
{
public:
	bool                                          UseBackgroundBlur;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        BackgroundBlurStrength_0;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBackgroundBlur) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetBackgroundBlur");
static_assert(sizeof(ProgressBarLinear_C_SetBackgroundBlur) == 0x000010, "Wrong size on ProgressBarLinear_C_SetBackgroundBlur");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundBlur, UseBackgroundBlur) == 0x000000, "Member 'ProgressBarLinear_C_SetBackgroundBlur::UseBackgroundBlur' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundBlur, BackgroundBlurStrength_0) == 0x000008, "Member 'ProgressBarLinear_C_SetBackgroundBlur::BackgroundBlurStrength_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBackgroundColor
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_SetBackgroundColor final
{
public:
	class UTexture2D*                             BackgroundColorMask;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           In_Brush_Tiling;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBackgroundColor) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetBackgroundColor");
static_assert(sizeof(ProgressBarLinear_C_SetBackgroundColor) == 0x000020, "Wrong size on ProgressBarLinear_C_SetBackgroundColor");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundColor, BackgroundColorMask) == 0x000000, "Member 'ProgressBarLinear_C_SetBackgroundColor::BackgroundColorMask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundColor, In_Brush_Tiling) == 0x000008, "Member 'ProgressBarLinear_C_SetBackgroundColor::In_Brush_Tiling' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundColor, Color) == 0x00000C, "Member 'ProgressBarLinear_C_SetBackgroundColor::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBackgroundColorMask
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetBackgroundColorMask final
{
public:
	class UTexture2D*                             Brush;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           In_Brush_Tiling;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBackgroundColorMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetBackgroundColorMask");
static_assert(sizeof(ProgressBarLinear_C_SetBackgroundColorMask) == 0x000010, "Wrong size on ProgressBarLinear_C_SetBackgroundColorMask");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundColorMask, Brush) == 0x000000, "Member 'ProgressBarLinear_C_SetBackgroundColorMask::Brush' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBackgroundColorMask, In_Brush_Tiling) == 0x000008, "Member 'ProgressBarLinear_C_SetBackgroundColorMask::In_Brush_Tiling' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBarFillType
// 0x0002 (0x0002 - 0x0000)
struct ProgressBarLinear_C_SetBarFillType final
{
public:
	EProgressBarFillType                          FillType_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseShader;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBarFillType) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetBarFillType");
static_assert(sizeof(ProgressBarLinear_C_SetBarFillType) == 0x000002, "Wrong size on ProgressBarLinear_C_SetBarFillType");
static_assert(offsetof(ProgressBarLinear_C_SetBarFillType, FillType_0) == 0x000000, "Member 'ProgressBarLinear_C_SetBarFillType::FillType_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBarFillType, bUseShader) == 0x000001, "Member 'ProgressBarLinear_C_SetBarFillType::bUseShader' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBlendMask
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetBlendMask final
{
public:
	class UTexture*                               Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetEffectMaterial_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBlendMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetBlendMask");
static_assert(sizeof(ProgressBarLinear_C_SetBlendMask) == 0x000010, "Wrong size on ProgressBarLinear_C_SetBlendMask");
static_assert(offsetof(ProgressBarLinear_C_SetBlendMask, Value) == 0x000000, "Member 'ProgressBarLinear_C_SetBlendMask::Value' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBlendMask, CallFunc_GetEffectMaterial_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_SetBlendMask::CallFunc_GetEffectMaterial_ReturnValue' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBlurEnabledCentered
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetBlurEnabledCentered final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBlurEnabledCentered) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetBlurEnabledCentered");
static_assert(sizeof(ProgressBarLinear_C_SetBlurEnabledCentered) == 0x000001, "Wrong size on ProgressBarLinear_C_SetBlurEnabledCentered");
static_assert(offsetof(ProgressBarLinear_C_SetBlurEnabledCentered, bInIsEnabled) == 0x000000, "Member 'ProgressBarLinear_C_SetBlurEnabledCentered::bInIsEnabled' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBlurEnabledDefault
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetBlurEnabledDefault final
{
public:
	bool                                          bInIsEnabled;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBlurEnabledDefault) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetBlurEnabledDefault");
static_assert(sizeof(ProgressBarLinear_C_SetBlurEnabledDefault) == 0x000001, "Wrong size on ProgressBarLinear_C_SetBlurEnabledDefault");
static_assert(offsetof(ProgressBarLinear_C_SetBlurEnabledDefault, bInIsEnabled) == 0x000000, "Member 'ProgressBarLinear_C_SetBlurEnabledDefault::bInIsEnabled' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBlurStrengthCentered
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetBlurStrengthCentered final
{
public:
	double                                        InStrength;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBlurStrength_InStrength_ImplicitCast;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBlurStrengthCentered) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetBlurStrengthCentered");
static_assert(sizeof(ProgressBarLinear_C_SetBlurStrengthCentered) == 0x000010, "Wrong size on ProgressBarLinear_C_SetBlurStrengthCentered");
static_assert(offsetof(ProgressBarLinear_C_SetBlurStrengthCentered, InStrength) == 0x000000, "Member 'ProgressBarLinear_C_SetBlurStrengthCentered::InStrength' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBlurStrengthCentered, CallFunc_SetBlurStrength_InStrength_ImplicitCast) == 0x000008, "Member 'ProgressBarLinear_C_SetBlurStrengthCentered::CallFunc_SetBlurStrength_InStrength_ImplicitCast' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetBlurStrengthDefault
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetBlurStrengthDefault final
{
public:
	double                                        InStrength;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBlurStrength_InStrength_ImplicitCast;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetBlurStrengthDefault) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetBlurStrengthDefault");
static_assert(sizeof(ProgressBarLinear_C_SetBlurStrengthDefault) == 0x000010, "Wrong size on ProgressBarLinear_C_SetBlurStrengthDefault");
static_assert(offsetof(ProgressBarLinear_C_SetBlurStrengthDefault, InStrength) == 0x000000, "Member 'ProgressBarLinear_C_SetBlurStrengthDefault::InStrength' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetBlurStrengthDefault, CallFunc_SetBlurStrength_InStrength_ImplicitCast) == 0x000008, "Member 'ProgressBarLinear_C_SetBlurStrengthDefault::CallFunc_SetBlurStrength_InStrength_ImplicitCast' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetCenterSpacing
// 0x0030 (0x0030 - 0x0000)
struct ProgressBarLinear_C_SetCenterSpacing final
{
public:
	double                                        PaddingValue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetCenterSpacing) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetCenterSpacing");
static_assert(sizeof(ProgressBarLinear_C_SetCenterSpacing) == 0x000030, "Wrong size on ProgressBarLinear_C_SetCenterSpacing");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing, PaddingValue) == 0x000000, "Member 'ProgressBarLinear_C_SetCenterSpacing::PaddingValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing, K2Node_MakeStruct_Margin) == 0x000008, "Member 'ProgressBarLinear_C_SetCenterSpacing::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing, K2Node_MakeStruct_Margin_1) == 0x000018, "Member 'ProgressBarLinear_C_SetCenterSpacing::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing, K2Node_MakeStruct_Right_ImplicitCast) == 0x000028, "Member 'ProgressBarLinear_C_SetCenterSpacing::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing, K2Node_MakeStruct_Left_ImplicitCast) == 0x00002C, "Member 'ProgressBarLinear_C_SetCenterSpacing::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetCenterSpacing_BG
// 0x0040 (0x0040 - 0x0000)
struct ProgressBarLinear_C_SetCenterSpacing_BG final
{
public:
	double                                        PaddingValue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetCenterSpacing_BG) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetCenterSpacing_BG");
static_assert(sizeof(ProgressBarLinear_C_SetCenterSpacing_BG) == 0x000040, "Wrong size on ProgressBarLinear_C_SetCenterSpacing_BG");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, PaddingValue) == 0x000000, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::PaddingValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000010, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, K2Node_MakeStruct_Margin) == 0x000018, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, K2Node_MakeStruct_Margin_1) == 0x000028, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, K2Node_MakeStruct_Right_ImplicitCast) == 0x000038, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_BG, K2Node_MakeStruct_Left_ImplicitCast) == 0x00003C, "Member 'ProgressBarLinear_C_SetCenterSpacing_BG::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetCenterSpacing_Effects
// 0x0078 (0x0078 - 0x0000)
struct ProgressBarLinear_C_SetCenterSpacing_Effects final
{
public:
	double                                        PaddingValue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_3;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Left_ImplicitCast_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetCenterSpacing_Effects) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetCenterSpacing_Effects");
static_assert(sizeof(ProgressBarLinear_C_SetCenterSpacing_Effects) == 0x000078, "Wrong size on ProgressBarLinear_C_SetCenterSpacing_Effects");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, PaddingValue) == 0x000000, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::PaddingValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000010, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Margin) == 0x000018, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Margin_1) == 0x000028, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2) == 0x000038, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_3) == 0x000040, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Margin_2) == 0x000048, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Margin_3) == 0x000058, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Right_ImplicitCast) == 0x000068, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Left_ImplicitCast) == 0x00006C, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Right_ImplicitCast_1) == 0x000070, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Right_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetCenterSpacing_Effects, K2Node_MakeStruct_Left_ImplicitCast_1) == 0x000074, "Member 'ProgressBarLinear_C_SetCenterSpacing_Effects::K2Node_MakeStruct_Left_ImplicitCast_1' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetDefaultMarquee_DrawAs
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetDefaultMarquee_DrawAs final
{
public:
	ESlateBrushDrawType                           Draw_As;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetDefaultMarquee_DrawAs) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetDefaultMarquee_DrawAs");
static_assert(sizeof(ProgressBarLinear_C_SetDefaultMarquee_DrawAs) == 0x000001, "Wrong size on ProgressBarLinear_C_SetDefaultMarquee_DrawAs");
static_assert(offsetof(ProgressBarLinear_C_SetDefaultMarquee_DrawAs, Draw_As) == 0x000000, "Member 'ProgressBarLinear_C_SetDefaultMarquee_DrawAs::Draw_As' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetDefaultMarquee_Image
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_SetDefaultMarquee_Image final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetDefaultMarquee_Image) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetDefaultMarquee_Image");
static_assert(sizeof(ProgressBarLinear_C_SetDefaultMarquee_Image) == 0x000008, "Wrong size on ProgressBarLinear_C_SetDefaultMarquee_Image");
static_assert(offsetof(ProgressBarLinear_C_SetDefaultMarquee_Image, Image) == 0x000000, "Member 'ProgressBarLinear_C_SetDefaultMarquee_Image::Image' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetDefaultMarquee_ImageSize
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetDefaultMarquee_ImageSize final
{
public:
	struct FVector2D                              Image_Size;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetDefaultMarquee_ImageSize) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetDefaultMarquee_ImageSize");
static_assert(sizeof(ProgressBarLinear_C_SetDefaultMarquee_ImageSize) == 0x000010, "Wrong size on ProgressBarLinear_C_SetDefaultMarquee_ImageSize");
static_assert(offsetof(ProgressBarLinear_C_SetDefaultMarquee_ImageSize, Image_Size) == 0x000000, "Member 'ProgressBarLinear_C_SetDefaultMarquee_ImageSize::Image_Size' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetDefaultMarquee_IsMarquee
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetDefaultMarquee_IsMarquee final
{
public:
	bool                                          IsMarquee;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetDefaultMarquee_IsMarquee) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetDefaultMarquee_IsMarquee");
static_assert(sizeof(ProgressBarLinear_C_SetDefaultMarquee_IsMarquee) == 0x000001, "Wrong size on ProgressBarLinear_C_SetDefaultMarquee_IsMarquee");
static_assert(offsetof(ProgressBarLinear_C_SetDefaultMarquee_IsMarquee, IsMarquee) == 0x000000, "Member 'ProgressBarLinear_C_SetDefaultMarquee_IsMarquee::IsMarquee' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetDefaultMarquee_Tiling
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetDefaultMarquee_Tiling final
{
public:
	ESlateBrushTileType                           Tiling;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetDefaultMarquee_Tiling) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetDefaultMarquee_Tiling");
static_assert(sizeof(ProgressBarLinear_C_SetDefaultMarquee_Tiling) == 0x000001, "Wrong size on ProgressBarLinear_C_SetDefaultMarquee_Tiling");
static_assert(offsetof(ProgressBarLinear_C_SetDefaultMarquee_Tiling, Tiling) == 0x000000, "Member 'ProgressBarLinear_C_SetDefaultMarquee_Tiling::Tiling' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetDefaultMarquee_Tint
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetDefaultMarquee_Tint final
{
public:
	struct FLinearColor                           Tint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetDefaultMarquee_Tint) == 0x000004, "Wrong alignment on ProgressBarLinear_C_SetDefaultMarquee_Tint");
static_assert(sizeof(ProgressBarLinear_C_SetDefaultMarquee_Tint) == 0x000010, "Wrong size on ProgressBarLinear_C_SetDefaultMarquee_Tint");
static_assert(offsetof(ProgressBarLinear_C_SetDefaultMarquee_Tint, Tint) == 0x000000, "Member 'ProgressBarLinear_C_SetDefaultMarquee_Tint::Tint' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetFillColor
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_SetFillColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GradientPower;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           Tiling;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetFillColor) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetFillColor");
static_assert(sizeof(ProgressBarLinear_C_SetFillColor) == 0x000020, "Wrong size on ProgressBarLinear_C_SetFillColor");
static_assert(offsetof(ProgressBarLinear_C_SetFillColor, Color) == 0x000000, "Member 'ProgressBarLinear_C_SetFillColor::Color' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetFillColor, GradientPower) == 0x000010, "Member 'ProgressBarLinear_C_SetFillColor::GradientPower' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetFillColor, Tiling) == 0x000018, "Member 'ProgressBarLinear_C_SetFillColor::Tiling' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetFillColorMask
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_SetFillColorMask final
{
public:
	class UObject*                                Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetFillColorMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetFillColorMask");
static_assert(sizeof(ProgressBarLinear_C_SetFillColorMask) == 0x000008, "Wrong size on ProgressBarLinear_C_SetFillColorMask");
static_assert(offsetof(ProgressBarLinear_C_SetFillColorMask, Value) == 0x000000, "Member 'ProgressBarLinear_C_SetFillColorMask::Value' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetGradientMask
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetGradientMask final
{
public:
	EGradientTypes                                GradientType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetGradientMask) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetGradientMask");
static_assert(sizeof(ProgressBarLinear_C_SetGradientMask) == 0x000001, "Wrong size on ProgressBarLinear_C_SetGradientMask");
static_assert(offsetof(ProgressBarLinear_C_SetGradientMask, GradientType) == 0x000000, "Member 'ProgressBarLinear_C_SetGradientMask::GradientType' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetOverallBlendMask
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_SetOverallBlendMask final
{
public:
	class UTexture2D*                             BlendMask_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetOverallBlendMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetOverallBlendMask");
static_assert(sizeof(ProgressBarLinear_C_SetOverallBlendMask) == 0x000008, "Wrong size on ProgressBarLinear_C_SetOverallBlendMask");
static_assert(offsetof(ProgressBarLinear_C_SetOverallBlendMask, BlendMask_0) == 0x000000, "Member 'ProgressBarLinear_C_SetOverallBlendMask::BlendMask_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetPercentInterpolated
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_SetPercentInterpolated final
{
public:
	double                                        NewPercent_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetPercentInterpolated) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetPercentInterpolated");
static_assert(sizeof(ProgressBarLinear_C_SetPercentInterpolated) == 0x000008, "Wrong size on ProgressBarLinear_C_SetPercentInterpolated");
static_assert(offsetof(ProgressBarLinear_C_SetPercentInterpolated, NewPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_SetPercentInterpolated::NewPercent_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetProgressMethod
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetProgressMethod final
{
public:
	EProgressMethod                               ProgressMethod_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetProgressMethod) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetProgressMethod");
static_assert(sizeof(ProgressBarLinear_C_SetProgressMethod) == 0x000001, "Wrong size on ProgressBarLinear_C_SetProgressMethod");
static_assert(offsetof(ProgressBarLinear_C_SetProgressMethod, ProgressMethod_0) == 0x000000, "Member 'ProgressBarLinear_C_SetProgressMethod::ProgressMethod_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetSize
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetSize final
{
public:
	struct FVector2D                              Size_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetSize) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetSize");
static_assert(sizeof(ProgressBarLinear_C_SetSize) == 0x000010, "Wrong size on ProgressBarLinear_C_SetSize");
static_assert(offsetof(ProgressBarLinear_C_SetSize, Size_0) == 0x000000, "Member 'ProgressBarLinear_C_SetSize::Size_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetSize_BGBrushLeftRight
// 0x0020 (0x0020 - 0x0000)
struct ProgressBarLinear_C_SetSize_BGBrushLeftRight final
{
public:
	struct FVector2D                              Size_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetSize_BGBrushLeftRight) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetSize_BGBrushLeftRight");
static_assert(sizeof(ProgressBarLinear_C_SetSize_BGBrushLeftRight) == 0x000020, "Wrong size on ProgressBarLinear_C_SetSize_BGBrushLeftRight");
static_assert(offsetof(ProgressBarLinear_C_SetSize_BGBrushLeftRight, Size_0) == 0x000000, "Member 'ProgressBarLinear_C_SetSize_BGBrushLeftRight::Size_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetSize_BGBrushLeftRight, CallFunc_BreakVector2D_X) == 0x000010, "Member 'ProgressBarLinear_C_SetSize_BGBrushLeftRight::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetSize_BGBrushLeftRight, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'ProgressBarLinear_C_SetSize_BGBrushLeftRight::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetTargetFillColorNegative
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetTargetFillColorNegative final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetTargetFillColorNegative) == 0x000004, "Wrong alignment on ProgressBarLinear_C_SetTargetFillColorNegative");
static_assert(sizeof(ProgressBarLinear_C_SetTargetFillColorNegative) == 0x000010, "Wrong size on ProgressBarLinear_C_SetTargetFillColorNegative");
static_assert(offsetof(ProgressBarLinear_C_SetTargetFillColorNegative, Color) == 0x000000, "Member 'ProgressBarLinear_C_SetTargetFillColorNegative::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetTargetFillColorPositive
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetTargetFillColorPositive final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetTargetFillColorPositive) == 0x000004, "Wrong alignment on ProgressBarLinear_C_SetTargetFillColorPositive");
static_assert(sizeof(ProgressBarLinear_C_SetTargetFillColorPositive) == 0x000010, "Wrong size on ProgressBarLinear_C_SetTargetFillColorPositive");
static_assert(offsetof(ProgressBarLinear_C_SetTargetFillColorPositive, Color) == 0x000000, "Member 'ProgressBarLinear_C_SetTargetFillColorPositive::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetTargetPercent
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_SetTargetPercent final
{
public:
	bool                                          UseTargetPercent_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TargetPercent_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetTargetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_SetTargetPercent");
static_assert(sizeof(ProgressBarLinear_C_SetTargetPercent) == 0x000010, "Wrong size on ProgressBarLinear_C_SetTargetPercent");
static_assert(offsetof(ProgressBarLinear_C_SetTargetPercent, UseTargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_SetTargetPercent::UseTargetPercent_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_SetTargetPercent, TargetPercent_0) == 0x000008, "Member 'ProgressBarLinear_C_SetTargetPercent::TargetPercent_0' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.SetUseGradient
// 0x0001 (0x0001 - 0x0000)
struct ProgressBarLinear_C_SetUseGradient final
{
public:
	bool                                          UseGradient;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_SetUseGradient) == 0x000001, "Wrong alignment on ProgressBarLinear_C_SetUseGradient");
static_assert(sizeof(ProgressBarLinear_C_SetUseGradient) == 0x000001, "Wrong size on ProgressBarLinear_C_SetUseGradient");
static_assert(offsetof(ProgressBarLinear_C_SetUseGradient, UseGradient) == 0x000000, "Member 'ProgressBarLinear_C_SetUseGradient::UseGradient' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.StartTriggerProgressChangeColor
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_StartTriggerProgressChangeColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_StartTriggerProgressChangeColor) == 0x000004, "Wrong alignment on ProgressBarLinear_C_StartTriggerProgressChangeColor");
static_assert(sizeof(ProgressBarLinear_C_StartTriggerProgressChangeColor) == 0x000010, "Wrong size on ProgressBarLinear_C_StartTriggerProgressChangeColor");
static_assert(offsetof(ProgressBarLinear_C_StartTriggerProgressChangeColor, Color) == 0x000000, "Member 'ProgressBarLinear_C_StartTriggerProgressChangeColor::Color' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Tick
// 0x003C (0x003C - 0x0000)
struct ProgressBarLinear_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Tick) == 0x000004, "Wrong alignment on ProgressBarLinear_C_Tick");
static_assert(sizeof(ProgressBarLinear_C_Tick) == 0x00003C, "Wrong size on ProgressBarLinear_C_Tick");
static_assert(offsetof(ProgressBarLinear_C_Tick, MyGeometry) == 0x000000, "Member 'ProgressBarLinear_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Tick, InDeltaTime) == 0x000038, "Member 'ProgressBarLinear_C_Tick::InDeltaTime' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Transfer_CurrentPercent
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_Transfer_CurrentPercent final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Transfer_CurrentPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_Transfer_CurrentPercent");
static_assert(sizeof(ProgressBarLinear_C_Transfer_CurrentPercent) == 0x000010, "Wrong size on ProgressBarLinear_C_Transfer_CurrentPercent");
static_assert(offsetof(ProgressBarLinear_C_Transfer_CurrentPercent, Percent) == 0x000000, "Member 'ProgressBarLinear_C_Transfer_CurrentPercent::Percent' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_CurrentPercent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_Transfer_CurrentPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_CurrentPercent, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000009, "Member 'ProgressBarLinear_C_Transfer_CurrentPercent::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_CurrentPercent, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'ProgressBarLinear_C_Transfer_CurrentPercent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_CurrentPercent, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'ProgressBarLinear_C_Transfer_CurrentPercent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Transfer_TargetPercent
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_Transfer_TargetPercent final
{
public:
	double                                        TargetPercent_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Transfer_TargetPercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_Transfer_TargetPercent");
static_assert(sizeof(ProgressBarLinear_C_Transfer_TargetPercent) == 0x000010, "Wrong size on ProgressBarLinear_C_Transfer_TargetPercent");
static_assert(offsetof(ProgressBarLinear_C_Transfer_TargetPercent, TargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_Transfer_TargetPercent::TargetPercent_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_TargetPercent, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000008, "Member 'ProgressBarLinear_C_Transfer_TargetPercent::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_TargetPercent, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ProgressBarLinear_C_Transfer_TargetPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_TargetPercent, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'ProgressBarLinear_C_Transfer_TargetPercent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_TargetPercent, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'ProgressBarLinear_C_Transfer_TargetPercent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.Transfer_UseTargetPercent
// 0x0005 (0x0005 - 0x0000)
struct ProgressBarLinear_C_Transfer_UseTargetPercent final
{
public:
	bool                                          UseTargetPercent_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFillTypeFillFromCenter_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_Transfer_UseTargetPercent) == 0x000001, "Wrong alignment on ProgressBarLinear_C_Transfer_UseTargetPercent");
static_assert(sizeof(ProgressBarLinear_C_Transfer_UseTargetPercent) == 0x000005, "Wrong size on ProgressBarLinear_C_Transfer_UseTargetPercent");
static_assert(offsetof(ProgressBarLinear_C_Transfer_UseTargetPercent, UseTargetPercent_0) == 0x000000, "Member 'ProgressBarLinear_C_Transfer_UseTargetPercent::UseTargetPercent_0' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_UseTargetPercent, CallFunc_IsFillTypeFillFromCenter_ReturnValue) == 0x000001, "Member 'ProgressBarLinear_C_Transfer_UseTargetPercent::CallFunc_IsFillTypeFillFromCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_UseTargetPercent, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'ProgressBarLinear_C_Transfer_UseTargetPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_UseTargetPercent, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'ProgressBarLinear_C_Transfer_UseTargetPercent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_Transfer_UseTargetPercent, CallFunc_IsValid_ReturnValue_2) == 0x000004, "Member 'ProgressBarLinear_C_Transfer_UseTargetPercent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.UpdateCustomMarquee
// 0x0002 (0x0002 - 0x0000)
struct ProgressBarLinear_C_UpdateCustomMarquee final
{
public:
	bool                                          bIsMarquee;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarqueeMethod                                MarqueeMethod;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_UpdateCustomMarquee) == 0x000001, "Wrong alignment on ProgressBarLinear_C_UpdateCustomMarquee");
static_assert(sizeof(ProgressBarLinear_C_UpdateCustomMarquee) == 0x000002, "Wrong size on ProgressBarLinear_C_UpdateCustomMarquee");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarquee, bIsMarquee) == 0x000000, "Member 'ProgressBarLinear_C_UpdateCustomMarquee::bIsMarquee' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarquee, MarqueeMethod) == 0x000001, "Member 'ProgressBarLinear_C_UpdateCustomMarquee::MarqueeMethod' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.UpdateCustomMarqueeColor
// 0x0010 (0x0010 - 0x0000)
struct ProgressBarLinear_C_UpdateCustomMarqueeColor final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_UpdateCustomMarqueeColor) == 0x000004, "Wrong alignment on ProgressBarLinear_C_UpdateCustomMarqueeColor");
static_assert(sizeof(ProgressBarLinear_C_UpdateCustomMarqueeColor) == 0x000010, "Wrong size on ProgressBarLinear_C_UpdateCustomMarqueeColor");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarqueeColor, InColorAndOpacity) == 0x000000, "Member 'ProgressBarLinear_C_UpdateCustomMarqueeColor::InColorAndOpacity' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.UpdateCustomMarqueeMask
// 0x0018 (0x0018 - 0x0000)
struct ProgressBarLinear_C_UpdateCustomMarqueeMask final
{
public:
	EMarqueeMask                                  MaskType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Mask;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateBrushTileType                           MaskTiling;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_UpdateCustomMarqueeMask) == 0x000008, "Wrong alignment on ProgressBarLinear_C_UpdateCustomMarqueeMask");
static_assert(sizeof(ProgressBarLinear_C_UpdateCustomMarqueeMask) == 0x000018, "Wrong size on ProgressBarLinear_C_UpdateCustomMarqueeMask");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarqueeMask, MaskType) == 0x000000, "Member 'ProgressBarLinear_C_UpdateCustomMarqueeMask::MaskType' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarqueeMask, Mask) == 0x000008, "Member 'ProgressBarLinear_C_UpdateCustomMarqueeMask::Mask' has a wrong offset!");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarqueeMask, MaskTiling) == 0x000010, "Member 'ProgressBarLinear_C_UpdateCustomMarqueeMask::MaskTiling' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.UpdateCustomMarqueeSpeed
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_UpdateCustomMarqueeSpeed final
{
public:
	double                                        Speed;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_UpdateCustomMarqueeSpeed) == 0x000008, "Wrong alignment on ProgressBarLinear_C_UpdateCustomMarqueeSpeed");
static_assert(sizeof(ProgressBarLinear_C_UpdateCustomMarqueeSpeed) == 0x000008, "Wrong size on ProgressBarLinear_C_UpdateCustomMarqueeSpeed");
static_assert(offsetof(ProgressBarLinear_C_UpdateCustomMarqueeSpeed, Speed) == 0x000000, "Member 'ProgressBarLinear_C_UpdateCustomMarqueeSpeed::Speed' has a wrong offset!");

// Function ProgressBarLinear.ProgressBarLinear_C.UpdatePercent
// 0x0008 (0x0008 - 0x0000)
struct ProgressBarLinear_C_UpdatePercent final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressBarLinear_C_UpdatePercent) == 0x000008, "Wrong alignment on ProgressBarLinear_C_UpdatePercent");
static_assert(sizeof(ProgressBarLinear_C_UpdatePercent) == 0x000008, "Wrong size on ProgressBarLinear_C_UpdatePercent");
static_assert(offsetof(ProgressBarLinear_C_UpdatePercent, Percent) == 0x000000, "Member 'ProgressBarLinear_C_UpdatePercent::Percent' has a wrong offset!");

}

