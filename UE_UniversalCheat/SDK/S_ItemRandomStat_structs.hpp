#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_ItemRandomStat

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_ItemRandomStat.S_ItemRandomStat
// 0x0030 (0x0030 - 0x0000)
struct FS_ItemRandomStat final
{
public:
	struct FGameplayTag                           STAT_NAME_23_8D9D8D5D48A145FB1BAD6E98C69D0A10;     // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	double                                        RandomMinValue_9_4B4822A7420F784740B6A58155973EE6; // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RandomMaxValue_10_04A5809A498E900862BCCA9A6E412BD7; // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Txt_22_E0F5EFD44434F58678FE088E508B5B53;           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RollForBothMinMax__19_FEE7FBE94044DC3E7E09DCA48626158A; // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Truncate__12_44A60F2C4A467758D866B5BCE56695AE;     // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceToMinValue__27_531AA2464812E07068161A898359479B; // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Chance_15_AF3D90B44051B6E1B6D8F194C1F20BD4;        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_ItemRandomStat) == 0x000008, "Wrong alignment on FS_ItemRandomStat");
static_assert(sizeof(FS_ItemRandomStat) == 0x000030, "Wrong size on FS_ItemRandomStat");
static_assert(offsetof(FS_ItemRandomStat, STAT_NAME_23_8D9D8D5D48A145FB1BAD6E98C69D0A10) == 0x000000, "Member 'FS_ItemRandomStat::STAT_NAME_23_8D9D8D5D48A145FB1BAD6E98C69D0A10' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, RandomMinValue_9_4B4822A7420F784740B6A58155973EE6) == 0x000008, "Member 'FS_ItemRandomStat::RandomMinValue_9_4B4822A7420F784740B6A58155973EE6' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, RandomMaxValue_10_04A5809A498E900862BCCA9A6E412BD7) == 0x000010, "Member 'FS_ItemRandomStat::RandomMaxValue_10_04A5809A498E900862BCCA9A6E412BD7' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, Txt_22_E0F5EFD44434F58678FE088E508B5B53) == 0x000018, "Member 'FS_ItemRandomStat::Txt_22_E0F5EFD44434F58678FE088E508B5B53' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, RollForBothMinMax__19_FEE7FBE94044DC3E7E09DCA48626158A) == 0x000020, "Member 'FS_ItemRandomStat::RollForBothMinMax__19_FEE7FBE94044DC3E7E09DCA48626158A' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, Truncate__12_44A60F2C4A467758D866B5BCE56695AE) == 0x000021, "Member 'FS_ItemRandomStat::Truncate__12_44A60F2C4A467758D866B5BCE56695AE' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, ForceToMinValue__27_531AA2464812E07068161A898359479B) == 0x000022, "Member 'FS_ItemRandomStat::ForceToMinValue__27_531AA2464812E07068161A898359479B' has a wrong offset!");
static_assert(offsetof(FS_ItemRandomStat, Chance_15_AF3D90B44051B6E1B6D8F194C1F20BD4) == 0x000028, "Member 'FS_ItemRandomStat::Chance_15_AF3D90B44051B6E1B6D8F194C1F20BD4' has a wrong offset!");

}

