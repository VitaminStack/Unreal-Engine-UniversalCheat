#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipmentSlotTitle

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.ExecuteUbergraph_EquipmentSlotTitle
// 0x00A8 (0x00A8 - 0x0000)
struct EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_SlotName;                       // 0x0008(0x0018)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0028(0x0058)(HasGetValueTypeHash)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_CustomEvent_Color;                          // 0x008C(0x0014)()
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_Size_ImplicitCast;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle) == 0x000008, "Wrong alignment on EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle");
static_assert(sizeof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle) == 0x0000A8, "Wrong size on EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, EntryPoint) == 0x000000, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, K2Node_Event_IsDesignTime) == 0x000004, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, K2Node_CustomEvent_SlotName) == 0x000008, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::K2Node_CustomEvent_SlotName' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, K2Node_MakeStruct_SlateFontInfo) == 0x000028, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000080, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, K2Node_CustomEvent_Color) == 0x00008C, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, Temp_bool_Has_Been_Initd_Variable) == 0x0000A0, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle, K2Node_MakeStruct_Size_ImplicitCast) == 0x0000A4, "Member 'EquipmentSlotTitle_C_ExecuteUbergraph_EquipmentSlotTitle::K2Node_MakeStruct_Size_ImplicitCast' has a wrong offset!");

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.IsEmptyEquipmentSlot
// 0x0001 (0x0001 - 0x0000)
struct EquipmentSlotTitle_C_IsEmptyEquipmentSlot final
{
public:
	bool                                          IsEmpty_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipmentSlotTitle_C_IsEmptyEquipmentSlot) == 0x000001, "Wrong alignment on EquipmentSlotTitle_C_IsEmptyEquipmentSlot");
static_assert(sizeof(EquipmentSlotTitle_C_IsEmptyEquipmentSlot) == 0x000001, "Wrong size on EquipmentSlotTitle_C_IsEmptyEquipmentSlot");
static_assert(offsetof(EquipmentSlotTitle_C_IsEmptyEquipmentSlot, IsEmpty_0) == 0x000000, "Member 'EquipmentSlotTitle_C_IsEmptyEquipmentSlot::IsEmpty_0' has a wrong offset!");

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.OnMouseButtonDoubleClick
// 0x0220 (0x0220 - 0x0000)
struct EquipmentSlotTitle_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(EquipmentSlotTitle_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on EquipmentSlotTitle_C_OnMouseButtonDoubleClick");
static_assert(sizeof(EquipmentSlotTitle_C_OnMouseButtonDoubleClick) == 0x000220, "Wrong size on EquipmentSlotTitle_C_OnMouseButtonDoubleClick");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'EquipmentSlotTitle_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000038, "Member 'EquipmentSlotTitle_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000B0, "Member 'EquipmentSlotTitle_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDoubleClick, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'EquipmentSlotTitle_C_OnMouseButtonDoubleClick::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.OnMouseButtonDown
// 0x0238 (0x0238 - 0x0000)
struct EquipmentSlotTitle_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0220(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(EquipmentSlotTitle_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on EquipmentSlotTitle_C_OnMouseButtonDown");
static_assert(sizeof(EquipmentSlotTitle_C_OnMouseButtonDown) == 0x000238, "Wrong size on EquipmentSlotTitle_C_OnMouseButtonDown");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'EquipmentSlotTitle_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'EquipmentSlotTitle_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'EquipmentSlotTitle_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'EquipmentSlotTitle_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquipmentSlotTitle_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000220, "Member 'EquipmentSlotTitle_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct EquipmentSlotTitle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquipmentSlotTitle_C_PreConstruct) == 0x000001, "Wrong alignment on EquipmentSlotTitle_C_PreConstruct");
static_assert(sizeof(EquipmentSlotTitle_C_PreConstruct) == 0x000001, "Wrong size on EquipmentSlotTitle_C_PreConstruct");
static_assert(offsetof(EquipmentSlotTitle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'EquipmentSlotTitle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.UpdateName
// 0x0018 (0x0018 - 0x0000)
struct EquipmentSlotTitle_C_UpdateName final
{
public:
	class FText                                   SlotName_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(EquipmentSlotTitle_C_UpdateName) == 0x000008, "Wrong alignment on EquipmentSlotTitle_C_UpdateName");
static_assert(sizeof(EquipmentSlotTitle_C_UpdateName) == 0x000018, "Wrong size on EquipmentSlotTitle_C_UpdateName");
static_assert(offsetof(EquipmentSlotTitle_C_UpdateName, SlotName_0) == 0x000000, "Member 'EquipmentSlotTitle_C_UpdateName::SlotName_0' has a wrong offset!");

// Function EquipmentSlotTitle.EquipmentSlotTitle_C.UpdateTextColor
// 0x0014 (0x0014 - 0x0000)
struct EquipmentSlotTitle_C_UpdateTextColor final
{
public:
	struct FSlateColor                            Color_0;                                           // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(EquipmentSlotTitle_C_UpdateTextColor) == 0x000004, "Wrong alignment on EquipmentSlotTitle_C_UpdateTextColor");
static_assert(sizeof(EquipmentSlotTitle_C_UpdateTextColor) == 0x000014, "Wrong size on EquipmentSlotTitle_C_UpdateTextColor");
static_assert(offsetof(EquipmentSlotTitle_C_UpdateTextColor, Color_0) == 0x000000, "Member 'EquipmentSlotTitle_C_UpdateTextColor::Color_0' has a wrong offset!");

}

