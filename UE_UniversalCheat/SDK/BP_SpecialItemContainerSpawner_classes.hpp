#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpecialItemContainerSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SpecialItemContainerSpawner.BP_SpecialItemContainerSpawner_C
// 0x0070 (0x0310 - 0x02A0)
class ABP_SpecialItemContainerSpawner_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Case4;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case3;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case2;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case1;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Spawn4;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Spawn3;                                            // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Spawn2;                                            // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Spawn1;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   Container_Name;                                    // 0x02E8(0x0018)(Edit, BlueprintVisible)
	TArray<class FName>                           UniqueLootSets;                                    // 0x0300(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_SpecialItemContainerSpawner(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SpawnContainer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SpecialItemContainerSpawner_C">();
	}
	static class ABP_SpecialItemContainerSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SpecialItemContainerSpawner_C>();
	}
};
static_assert(alignof(ABP_SpecialItemContainerSpawner_C) == 0x000008, "Wrong alignment on ABP_SpecialItemContainerSpawner_C");
static_assert(sizeof(ABP_SpecialItemContainerSpawner_C) == 0x000310, "Wrong size on ABP_SpecialItemContainerSpawner_C");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_SpecialItemContainerSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Case4) == 0x0002A8, "Member 'ABP_SpecialItemContainerSpawner_C::Case4' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Case3) == 0x0002B0, "Member 'ABP_SpecialItemContainerSpawner_C::Case3' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Case2) == 0x0002B8, "Member 'ABP_SpecialItemContainerSpawner_C::Case2' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Case1) == 0x0002C0, "Member 'ABP_SpecialItemContainerSpawner_C::Case1' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Spawn4) == 0x0002C8, "Member 'ABP_SpecialItemContainerSpawner_C::Spawn4' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Spawn3) == 0x0002D0, "Member 'ABP_SpecialItemContainerSpawner_C::Spawn3' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Spawn2) == 0x0002D8, "Member 'ABP_SpecialItemContainerSpawner_C::Spawn2' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Spawn1) == 0x0002E0, "Member 'ABP_SpecialItemContainerSpawner_C::Spawn1' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, Container_Name) == 0x0002E8, "Member 'ABP_SpecialItemContainerSpawner_C::Container_Name' has a wrong offset!");
static_assert(offsetof(ABP_SpecialItemContainerSpawner_C, UniqueLootSets) == 0x000300, "Member 'ABP_SpecialItemContainerSpawner_C::UniqueLootSets' has a wrong offset!");

}

