#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_Manager

#include "Basic.hpp"

#include "BP_Audio_Manager_classes.hpp"
#include "BP_Audio_Manager_parameters.hpp"


namespace SDK
{

// Function BP_Audio_Manager.BP_Audio_Manager_C.AddToAudioArray
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Audio_Area_C*                 NewArea                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::AddToAudioArray(const class ABP_Audio_Area_C*& NewArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "AddToAudioArray");

	Params::BP_Audio_Manager_C_AddToAudioArray Parms{};

	Parms.NewArea = NewArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.ChangeAudio
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::ChangeAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "ChangeAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.CheckForCombatMusic
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::CheckForCombatMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "CheckForCombatMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.CheckRandomSounds
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FadeOutSounds                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::CheckRandomSounds(bool* FadeOutSounds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "CheckRandomSounds");

	Params::BP_Audio_Manager_C_CheckRandomSounds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FadeOutSounds != nullptr)
		*FadeOutSounds = Parms.FadeOutSounds;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.CloseDelayedMusicGate
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::CloseDelayedMusicGate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "CloseDelayedMusicGate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.CombatMusicBlend__FinishedFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::CombatMusicBlend__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "CombatMusicBlend__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.CombatMusicBlend__UpdateFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::CombatMusicBlend__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "CombatMusicBlend__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.CombatMusicCheck
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::CombatMusicCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "CombatMusicCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Continue Music
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::Continue_Music()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Continue Music");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.ExecuteUbergraph_BP_Audio_Manager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::ExecuteUbergraph_BP_Audio_Manager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "ExecuteUbergraph_BP_Audio_Manager");

	Params::BP_Audio_Manager_C_ExecuteUbergraph_BP_Audio_Manager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.ExplorationTimeOfDayBlend__FinishedFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::ExplorationTimeOfDayBlend__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "ExplorationTimeOfDayBlend__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.ExplorationTimeOfDayBlend__UpdateFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::ExplorationTimeOfDayBlend__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "ExplorationTimeOfDayBlend__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.FadeOutRandomAmbient
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::FadeOutRandomAmbient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "FadeOutRandomAmbient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.GetAmbientComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UAudioComponent* ABP_Audio_Manager_C::GetAmbientComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "GetAmbientComponent");

	Params::BP_Audio_Manager_C_GetAmbientComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.GetMusicComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAudioComponent*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UAudioComponent* ABP_Audio_Manager_C::GetMusicComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "GetMusicComponent");

	Params::BP_Audio_Manager_C_GetMusicComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.GetRandomAudioInteger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FST_Audio>                TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_Audio_Manager_C::GetRandomAudioInteger(const TArray<struct FST_Audio>& TargetArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "GetRandomAudioInteger");

	Params::BP_Audio_Manager_C_GetRandomAudioInteger Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.HideAllAreaVisualizers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::HideAllAreaVisualizers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "HideAllAreaVisualizers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Pause Ambient
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::Pause_Ambient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Pause Ambient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Pause Music
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::Pause_Music()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Pause Music");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.PlayDelayedMusic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ContinueTimeline_Delay                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::PlayDelayedMusic(bool ContinueTimeline_Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "PlayDelayedMusic");

	Params::BP_Audio_Manager_C_PlayDelayedMusic Parms{};

	Parms.ContinueTimeline_Delay = ContinueTimeline_Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.PlayDelayedMusicInstant
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::PlayDelayedMusicInstant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "PlayDelayedMusicInstant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.PlayRandomSound
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::PlayRandomSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "PlayRandomSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Random Combat or exploration
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FST_Audio                        SelectedAudio                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::Random_Combat_or_exploration(struct FST_Audio* SelectedAudio, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Random Combat or exploration");

	Params::BP_Audio_Manager_C_Random_Combat_or_exploration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedAudio != nullptr)
		*SelectedAudio = std::move(Parms.SelectedAudio);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.RandomAmbient
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FST_Audio                        SelectedAudio                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ValidResult                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::RandomAmbient(struct FST_Audio* SelectedAudio, bool* ValidResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "RandomAmbient");

	Params::BP_Audio_Manager_C_RandomAmbient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedAudio != nullptr)
		*SelectedAudio = std::move(Parms.SelectedAudio);

	if (ValidResult != nullptr)
		*ValidResult = Parms.ValidResult;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.RandomAmbientTrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Condition                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::RandomAmbientTrace(struct FVector* Location, bool* Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "RandomAmbientTrace");

	Params::BP_Audio_Manager_C_RandomAmbientTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Condition != nullptr)
		*Condition = Parms.Condition;
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Audio_Manager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.RemoveFromArray
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Audio_Area_C*                 AreaToRemove                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::RemoveFromArray(class ABP_Audio_Area_C* AreaToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "RemoveFromArray");

	Params::BP_Audio_Manager_C_RemoveFromArray Parms{};

	Parms.AreaToRemove = AreaToRemove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Set Combat or tension sound
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::Set_Combat_or_tension_sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Set Combat or tension sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Set Time Of Day New Sound
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::Set_Time_Of_Day_New_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Set Time Of Day New Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.SetAmbientVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewVolumeMultiplier                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::SetAmbientVolume(double NewVolumeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "SetAmbientVolume");

	Params::BP_Audio_Manager_C_SetAmbientVolume Parms{};

	Parms.NewVolumeMultiplier = NewVolumeMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.SetAudioVariables
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Audio_Area_C*                 AudioAreaReference_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::SetAudioVariables(class ABP_Audio_Area_C* AudioAreaReference_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "SetAudioVariables");

	Params::BP_Audio_Manager_C_SetAudioVariables Parms{};

	Parms.AudioAreaReference_0 = AudioAreaReference_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.SetFloatParametersCombat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Combat                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::SetFloatParametersCombat(double Combat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "SetFloatParametersCombat");

	Params::BP_Audio_Manager_C_SetFloatParametersCombat Parms{};

	Parms.Combat = Combat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.SetFloatParametersTimeOfDay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeOfDay_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::SetFloatParametersTimeOfDay(double TimeOfDay_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "SetFloatParametersTimeOfDay");

	Params::BP_Audio_Manager_C_SetFloatParametersTimeOfDay Parms{};

	Parms.TimeOfDay_0 = TimeOfDay_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.SetInside
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInside                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AmbientMultiplier                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FReverbSettings                  ReverbSettings                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class FName                             ReverbAreaName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReverbPriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::SetInside(bool bInside, double AmbientMultiplier, const struct FReverbSettings& ReverbSettings, class FName ReverbAreaName, double ReverbPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "SetInside");

	Params::BP_Audio_Manager_C_SetInside Parms{};

	Parms.bInside = bInside;
	Parms.AmbientMultiplier = AmbientMultiplier;
	Parms.ReverbSettings = std::move(ReverbSettings);
	Parms.ReverbAreaName = ReverbAreaName;
	Parms.ReverbPriority = ReverbPriority;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.ShowAllAreaVisualizers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::ShowAllAreaVisualizers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "ShowAllAreaVisualizers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.StartCombatMusic
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::StartCombatMusic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "StartCombatMusic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.TimeBeforeNewSong__Continue__EventFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::TimeBeforeNewSong__Continue__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "TimeBeforeNewSong__Continue__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.TimeBeforeNewSong__FinishedFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::TimeBeforeNewSong__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "TimeBeforeNewSong__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.TimeBeforeNewSong__UpdateFunc
// (BlueprintEvent)

void ABP_Audio_Manager_C::TimeBeforeNewSong__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "TimeBeforeNewSong__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.Unpause Ambient
// (BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::Unpause_Ambient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "Unpause Ambient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.UpdateCombatStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Combat                                CombatStatus_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::UpdateCombatStatus(E_Combat CombatStatus_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "UpdateCombatStatus");

	Params::BP_Audio_Manager_C_UpdateCombatStatus Parms{};

	Parms.CombatStatus_0 = CombatStatus_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.UpdateTimeOfDay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_TimeOfDay                             Night_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Audio_Manager_C::UpdateTimeOfDay(double Time, E_TimeOfDay Night_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "UpdateTimeOfDay");

	Params::BP_Audio_Manager_C_UpdateTimeOfDay Parms{};

	Parms.Time = Time;
	Parms.Night_ = Night_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Audio_Manager.BP_Audio_Manager_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Audio_Manager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Audio_Manager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

