#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhotoModeComponent

#include "Basic.hpp"

#include "PhotoModeComponent_classes.hpp"
#include "PhotoModeComponent_parameters.hpp"


namespace SDK
{

// Function PhotoModeComponent.PhotoModeComponent_C.ExecuteUbergraph_PhotoModeComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::ExecuteUbergraph_PhotoModeComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "ExecuteUbergraph_PhotoModeComponent");

	Params::PhotoModeComponent_C_ExecuteUbergraph_PhotoModeComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhotoModeComponent.PhotoModeComponent_C.GetCameraLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          CameraLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::GetCameraLocation(struct FVector* CameraLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "GetCameraLocation");

	Params::PhotoModeComponent_C_GetCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraLocation != nullptr)
		*CameraLocation = std::move(Parms.CameraLocation);
}


// Function PhotoModeComponent.PhotoModeComponent_C.GetPostProcessVolume
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APostProcessVolume*               PostProcessVolume_0                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::GetPostProcessVolume(bool* IsValid, class APostProcessVolume** PostProcessVolume_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "GetPostProcessVolume");

	Params::PhotoModeComponent_C_GetPostProcessVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;

	if (PostProcessVolume_0 != nullptr)
		*PostProcessVolume_0 = Parms.PostProcessVolume_0;
}


// Function PhotoModeComponent.PhotoModeComponent_C.GetSliderCameraDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  CameraDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::GetSliderCameraDistance(double* CameraDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "GetSliderCameraDistance");

	Params::PhotoModeComponent_C_GetSliderCameraDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraDistance != nullptr)
		*CameraDistance = Parms.CameraDistance;
}


// Function PhotoModeComponent.PhotoModeComponent_C.GetSliderFOV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  FOV                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::GetSliderFOV(double* FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "GetSliderFOV");

	Params::PhotoModeComponent_C_GetSliderFOV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FOV != nullptr)
		*FOV = Parms.FOV;
}


// Function PhotoModeComponent.PhotoModeComponent_C.GetSliderRoll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Roll                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::GetSliderRoll(double* Roll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "GetSliderRoll");

	Params::PhotoModeComponent_C_GetSliderRoll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Roll != nullptr)
		*Roll = Parms.Roll;
}


// Function PhotoModeComponent.PhotoModeComponent_C.IconSelector - Gallery
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UPhotoModeComponent_C::IconSelector___Gallery(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "IconSelector - Gallery");

	Params::PhotoModeComponent_C_IconSelector___Gallery Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhotoModeComponent.PhotoModeComponent_C.IconSelector - Photo Mode Menu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UPhotoModeComponent_C::IconSelector___Photo_Mode_Menu(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "IconSelector - Photo Mode Menu");

	Params::PhotoModeComponent_C_IconSelector___Photo_Mode_Menu Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhotoModeComponent.PhotoModeComponent_C.Initialization
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       PlayerReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCameraComponent*                 CameraComponentReference                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USpringArmComponent*              SpringArmReference                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::Initialization(class ACharacter* PlayerReference, class UCameraComponent* CameraComponentReference, class USpringArmComponent* SpringArmReference, const class APlayerController*& PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "Initialization");

	Params::PhotoModeComponent_C_Initialization Parms{};

	Parms.PlayerReference = PlayerReference;
	Parms.CameraComponentReference = CameraComponentReference;
	Parms.SpringArmReference = SpringArmReference;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhotoModeComponent.PhotoModeComponent_C.OpenGallery
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             LastKey_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UPhotoModeComponent_C::OpenGallery(const struct FKey& LastKey_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "OpenGallery");

	Params::PhotoModeComponent_C_OpenGallery Parms{};

	Parms.LastKey_0 = std::move(LastKey_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhotoModeComponent.PhotoModeComponent_C.Photo Mode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UPhotoModeComponent_C::Photo_Mode(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "Photo Mode");

	Params::PhotoModeComponent_C_Photo_Mode Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhotoModeComponent.PhotoModeComponent_C.ResetGallery
// (BlueprintCallable, BlueprintEvent)

void UPhotoModeComponent_C::ResetGallery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "ResetGallery");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhotoModeComponent.PhotoModeComponent_C.ResetPhotoMode
// (BlueprintCallable, BlueprintEvent)

void UPhotoModeComponent_C::ResetPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "ResetPhotoMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhotoModeComponent.PhotoModeComponent_C.UnpausedGameAxisMovementControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  AxisValueIn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AxisValueOut                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::UnpausedGameAxisMovementControl(double AxisValueIn, double* AxisValueOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "UnpausedGameAxisMovementControl");

	Params::PhotoModeComponent_C_UnpausedGameAxisMovementControl Parms{};

	Parms.AxisValueIn = AxisValueIn;

	UObject::ProcessEvent(Func, &Parms);

	if (AxisValueOut != nullptr)
		*AxisValueOut = Parms.AxisValueOut;
}


// Function PhotoModeComponent.PhotoModeComponent_C.UpdateOutputFolder
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Custom_Path                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPhotoModeComponent_C::UpdateOutputFolder(const class FString& Custom_Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PhotoModeComponent_C", "UpdateOutputFolder");

	Params::PhotoModeComponent_C_UpdateOutputFolder Parms{};

	Parms.Custom_Path = std::move(Custom_Path);

	UObject::ProcessEvent(Func, &Parms);
}

}

