#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_OcclusionState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UDS_OcclusionState.UDS_OcclusionState_C.Current Facing Direction
// 0x0060 (0x0060 - 0x0000)
struct UDS_OcclusionState_C_Current_Facing_Direction final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_OcclusionState_C_Current_Facing_Direction) == 0x000008, "Wrong alignment on UDS_OcclusionState_C_Current_Facing_Direction");
static_assert(sizeof(UDS_OcclusionState_C_Current_Facing_Direction) == 0x000060, "Wrong size on UDS_OcclusionState_C_Current_Facing_Direction");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, Step) == 0x000000, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::Step' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, ReturnValue) == 0x000008, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, CallFunc_RotateAngleAxis_ReturnValue) == 0x000040, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Facing_Direction, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000058, "Member 'UDS_OcclusionState_C_Current_Facing_Direction::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function UDS_OcclusionState.UDS_OcclusionState_C.Current Trace Direction
// 0x0120 (0x0120 - 0x0000)
struct UDS_OcclusionState_C_Current_Trace_Direction final
{
public:
	struct FVector                                Facing_Direction;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Vertical_Step;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_OcclusionState_C_Current_Trace_Direction) == 0x000008, "Wrong alignment on UDS_OcclusionState_C_Current_Trace_Direction");
static_assert(sizeof(UDS_OcclusionState_C_Current_Trace_Direction) == 0x000120, "Wrong size on UDS_OcclusionState_C_Current_Trace_Direction");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, Facing_Direction) == 0x000000, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::Facing_Direction' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, Vertical_Step) == 0x000018, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::Vertical_Step' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, ReturnValue) == 0x000020, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000040, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000050, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000060, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_VLerp_ReturnValue) == 0x000078, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_RotateAngleAxis_ReturnValue) == 0x000098, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x0000B0, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_BreakVector_X) == 0x0000C8, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_FMax_ReturnValue) == 0x0000E0, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_Normal_ReturnValue) == 0x000100, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000118, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Current_Trace_Direction, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x00011C, "Member 'UDS_OcclusionState_C_Current_Trace_Direction::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function UDS_OcclusionState.UDS_OcclusionState_C.Directional Mask Value
// 0x0050 (0x0050 - 0x0000)
struct UDS_OcclusionState_C_Directional_Mask_Value final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Compare;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_OcclusionState_C_Directional_Mask_Value) == 0x000008, "Wrong alignment on UDS_OcclusionState_C_Directional_Mask_Value");
static_assert(sizeof(UDS_OcclusionState_C_Directional_Mask_Value) == 0x000050, "Wrong size on UDS_OcclusionState_C_Directional_Mask_Value");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Mask_Value, Direction) == 0x000000, "Member 'UDS_OcclusionState_C_Directional_Mask_Value::Direction' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Mask_Value, Compare) == 0x000018, "Member 'UDS_OcclusionState_C_Directional_Mask_Value::Compare' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Mask_Value, ReturnValue) == 0x000030, "Member 'UDS_OcclusionState_C_Directional_Mask_Value::ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Mask_Value, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'UDS_OcclusionState_C_Directional_Mask_Value::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Mask_Value, CallFunc_DegAcos_ReturnValue) == 0x000040, "Member 'UDS_OcclusionState_C_Directional_Mask_Value::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Mask_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'UDS_OcclusionState_C_Directional_Mask_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function UDS_OcclusionState.UDS_OcclusionState_C.Directional Vector Mask
// 0x0068 (0x0068 - 0x0000)
struct UDS_OcclusionState_C_Directional_Vector_Mask final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Mask;                                              // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Mask_Value_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Mask_Value_ReturnValue_1;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Mask_Value_ReturnValue_2;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Mask_Value_ReturnValue_3;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_OcclusionState_C_Directional_Vector_Mask) == 0x000008, "Wrong alignment on UDS_OcclusionState_C_Directional_Vector_Mask");
static_assert(sizeof(UDS_OcclusionState_C_Directional_Vector_Mask) == 0x000068, "Wrong size on UDS_OcclusionState_C_Directional_Vector_Mask");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, Direction) == 0x000000, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::Direction' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, Mask) == 0x000018, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::Mask' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, CallFunc_Directional_Mask_Value_ReturnValue) == 0x000028, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::CallFunc_Directional_Mask_Value_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, CallFunc_Directional_Mask_Value_ReturnValue_1) == 0x000030, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::CallFunc_Directional_Mask_Value_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, CallFunc_Directional_Mask_Value_ReturnValue_2) == 0x000038, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::CallFunc_Directional_Mask_Value_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, CallFunc_Directional_Mask_Value_ReturnValue_3) == 0x000040, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::CallFunc_Directional_Mask_Value_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, K2Node_MakeStruct_R_ImplicitCast) == 0x000058, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, K2Node_MakeStruct_A_ImplicitCast) == 0x00005C, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, K2Node_MakeStruct_B_ImplicitCast) == 0x000060, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Directional_Vector_Mask, K2Node_MakeStruct_G_ImplicitCast) == 0x000064, "Member 'UDS_OcclusionState_C_Directional_Vector_Mask::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");

// Function UDS_OcclusionState.UDS_OcclusionState_C.Save Unchanging Values
// 0x0210 (0x0210 - 0x0000)
struct UDS_OcclusionState_C_Save_Unchanging_Values final
{
public:
	TArray<double>                                Upward_Max_Values_in_Order;                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Selected_Random_Index;                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Integer_List;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Random_Order;                                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FLinearColor>                   Directional_Max_Values_in_Order;                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Trace_Offsets_In_Order;                            // 0x0048(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Trace_Direction;                                   // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Facing_Direction;                                  // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Current_Facing_Direction_ReturnValue;     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_3;                         // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutItem;                     // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Directional_Vector_Mask_Mask;             // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Trace_Direction_ReturnValue;      // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_OcclusionState_C_Save_Unchanging_Values) == 0x000008, "Wrong alignment on UDS_OcclusionState_C_Save_Unchanging_Values");
static_assert(sizeof(UDS_OcclusionState_C_Save_Unchanging_Values) == 0x000210, "Wrong size on UDS_OcclusionState_C_Save_Unchanging_Values");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Upward_Max_Values_in_Order) == 0x000000, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Upward_Max_Values_in_Order' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Selected_Random_Index) == 0x000010, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Selected_Random_Index' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Integer_List) == 0x000018, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Integer_List' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Random_Order) == 0x000028, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Random_Order' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Directional_Max_Values_in_Order) == 0x000038, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Directional_Max_Values_in_Order' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Trace_Offsets_In_Order) == 0x000048, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Trace_Offsets_In_Order' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Trace_Direction) == 0x000058, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Trace_Direction' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Facing_Direction) == 0x000070, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Facing_Direction' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Temp_int_Variable) == 0x000088, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Temp_int_Variable_1) == 0x000098, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Temp_int_Variable_2) == 0x0000A0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Current_Facing_Direction_ReturnValue) == 0x0000A8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Current_Facing_Direction_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Not_PreBool_ReturnValue) == 0x0000C4, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000E4, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000E8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000E9, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000F8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000100, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000108, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000128, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Dot_VectorVector_ReturnValue) == 0x000140, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_DegAcos_ReturnValue) == 0x000148, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_MapRangeClamped_ReturnValue) == 0x000158, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000160, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_1) == 0x000168, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Get_Item) == 0x00016C, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_2) == 0x000184, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Get_Item_3) == 0x0001A0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_3) == 0x0001B0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_4) == 0x0001B4, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Get_Item_4) == 0x0001B8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Random_OutItem) == 0x0001BC, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Random_OutIndex) == 0x0001C0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0001C4, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_5) == 0x0001C8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_6) == 0x0001CC, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Directional_Vector_Mask_Mask) == 0x0001D0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Directional_Vector_Mask_Mask' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Current_Trace_Direction_ReturnValue) == 0x0001E0, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Current_Trace_Direction_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Array_Add_ReturnValue_7) == 0x000200, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UDS_OcclusionState_C_Save_Unchanging_Values, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000208, "Member 'UDS_OcclusionState_C_Save_Unchanging_Values::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

