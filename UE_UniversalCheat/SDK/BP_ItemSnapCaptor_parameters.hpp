#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemSnapCaptor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_LocalAttContainerIndexSocket_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.CaptureFromTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_ItemSnapCaptor_C_CaptureFromTarget final
{
public:
	class UTextureRenderTarget2D*                 TextureTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GoNext_;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_CaptureFromTarget) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_CaptureFromTarget");
static_assert(sizeof(BP_ItemSnapCaptor_C_CaptureFromTarget) == 0x000010, "Wrong size on BP_ItemSnapCaptor_C_CaptureFromTarget");
static_assert(offsetof(BP_ItemSnapCaptor_C_CaptureFromTarget, TextureTarget) == 0x000000, "Member 'BP_ItemSnapCaptor_C_CaptureFromTarget::TextureTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_CaptureFromTarget, GoNext_) == 0x000008, "Member 'BP_ItemSnapCaptor_C_CaptureFromTarget::GoNext_' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.CaptureFromTargetCustom
// 0x0010 (0x0010 - 0x0000)
struct BP_ItemSnapCaptor_C_CaptureFromTargetCustom final
{
public:
	class UTextureRenderTarget2D*                 TextureTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GoNext_;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_CaptureFromTargetCustom) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_CaptureFromTargetCustom");
static_assert(sizeof(BP_ItemSnapCaptor_C_CaptureFromTargetCustom) == 0x000010, "Wrong size on BP_ItemSnapCaptor_C_CaptureFromTargetCustom");
static_assert(offsetof(BP_ItemSnapCaptor_C_CaptureFromTargetCustom, TextureTarget) == 0x000000, "Member 'BP_ItemSnapCaptor_C_CaptureFromTargetCustom::TextureTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_CaptureFromTargetCustom, GoNext_) == 0x000008, "Member 'BP_ItemSnapCaptor_C_CaptureFromTargetCustom::GoNext_' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.ClearAttachments
// 0x0028 (0x0028 - 0x0000)
struct BP_ItemSnapCaptor_C_ClearAttachments final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AMainLocalAttachment_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_ClearAttachments) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_ClearAttachments");
static_assert(sizeof(BP_ItemSnapCaptor_C_ClearAttachments) == 0x000028, "Wrong size on BP_ItemSnapCaptor_C_ClearAttachments");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_Max_ReturnValue) == 0x000020, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ClearAttachments, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_ItemSnapCaptor_C_ClearAttachments::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.ExecuteUbergraph_BP_ItemSnapCaptor
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_FOVAngle_ImplicitCast;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor) == 0x000004, "Wrong alignment on BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor");
static_assert(sizeof(BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor) == 0x000008, "Wrong size on BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor");
static_assert(offsetof(BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor, EntryPoint) == 0x000000, "Member 'BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor, K2Node_VariableSet_FOVAngle_ImplicitCast) == 0x000004, "Member 'BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor::K2Node_VariableSet_FOVAngle_ImplicitCast' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetActiveComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemSnapCaptor_C_GetActiveComponent final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_GetActiveComponent) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_GetActiveComponent");
static_assert(sizeof(BP_ItemSnapCaptor_C_GetActiveComponent) == 0x000008, "Wrong size on BP_ItemSnapCaptor_C_GetActiveComponent");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetActiveComponent, Comp) == 0x000000, "Member 'BP_ItemSnapCaptor_C_GetActiveComponent::Comp' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetAttachSocketByInContainerIndex
// 0x0038 (0x0038 - 0x0000)
struct BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         InContainerIndex;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LocalAttContainerIndexSocket        CallFunc_Array_Get_Item;                           // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex");
static_assert(sizeof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex) == 0x000038, "Wrong size on BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, Info) == 0x000000, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::Info' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, InContainerIndex) == 0x000008, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::InContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, Socket) == 0x00000C, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::Socket' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetDefaultDim
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemSnapCaptor_C_GetDefaultDim final
{
public:
	class UJSI_Slot_C*                            Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SlotDimension;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_GetDefaultDim) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_GetDefaultDim");
static_assert(sizeof(BP_ItemSnapCaptor_C_GetDefaultDim) == 0x000020, "Wrong size on BP_ItemSnapCaptor_C_GetDefaultDim");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetDefaultDim, Target) == 0x000000, "Member 'BP_ItemSnapCaptor_C_GetDefaultDim::Target' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetDefaultDim, SlotDimension) == 0x000008, "Member 'BP_ItemSnapCaptor_C_GetDefaultDim::SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetDefaultDim, CallFunc_GetJigDA_JigDataAsset) == 0x000018, "Member 'BP_ItemSnapCaptor_C_GetDefaultDim::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetInitValues
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ItemSnapCaptor_C_GetInitValues final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOVAngle;                                          // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_FOVAngle_ImplicitCast;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_GetInitValues) == 0x000010, "Wrong alignment on BP_ItemSnapCaptor_C_GetInitValues");
static_assert(sizeof(BP_ItemSnapCaptor_C_GetInitValues) == 0x0000E0, "Wrong size on BP_ItemSnapCaptor_C_GetInitValues");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetInitValues, ReturnValue) == 0x000000, "Member 'BP_ItemSnapCaptor_C_GetInitValues::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetInitValues, FOVAngle) == 0x000060, "Member 'BP_ItemSnapCaptor_C_GetInitValues::FOVAngle' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetInitValues, CallFunc_GetRelativeTransform_ReturnValue) == 0x000070, "Member 'BP_ItemSnapCaptor_C_GetInitValues::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetInitValues, K2Node_FunctionResult_FOVAngle_ImplicitCast) == 0x0000D0, "Member 'BP_ItemSnapCaptor_C_GetInitValues::K2Node_FunctionResult_FOVAngle_ImplicitCast' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetSnap
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ItemSnapCaptor_C_GetSnap final
{
public:
	bool                                          ShareRTarget;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Output_Get;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FromShared_;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SaveRTarget;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RenderTarg;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemID_ItemID_1;                       // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDefaultDim_SlotDimension;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionbar_Result;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_GetSnap) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_GetSnap");
static_assert(sizeof(BP_ItemSnapCaptor_C_GetSnap) == 0x0000B0, "Wrong size on BP_ItemSnapCaptor_C_GetSnap");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, ShareRTarget) == 0x000000, "Member 'BP_ItemSnapCaptor_C_GetSnap::ShareRTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, Output_Get) == 0x000008, "Member 'BP_ItemSnapCaptor_C_GetSnap::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, FromShared_) == 0x000010, "Member 'BP_ItemSnapCaptor_C_GetSnap::FromShared_' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, SaveRTarget) == 0x000011, "Member 'BP_ItemSnapCaptor_C_GetSnap::SaveRTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, RenderTarg) == 0x000018, "Member 'BP_ItemSnapCaptor_C_GetSnap::RenderTarg' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, Temp_struct_Variable) == 0x000020, "Member 'BP_ItemSnapCaptor_C_GetSnap::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, Temp_bool_Variable) == 0x000031, "Member 'BP_ItemSnapCaptor_C_GetSnap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_GetItemID_ItemID) == 0x000034, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_GetItemID_ItemID_1) == 0x00003C, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_GetItemID_ItemID_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_GetDefaultDim_SlotDimension) == 0x000048, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_GetDefaultDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_Map_Find_Value) == 0x000058, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000068, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_IsActionbar_Result) == 0x000078, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_IsActionbar_Result' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, K2Node_Select_Default) == 0x000080, "Member 'BP_ItemSnapCaptor_C_GetSnap::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_FTrunc_ReturnValue) == 0x0000A0, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_FTrunc_ReturnValue_1) == 0x0000A4, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnap, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000A8, "Member 'BP_ItemSnapCaptor_C_GetSnap::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetSnapNoCapture
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ItemSnapCaptor_C_GetSnapNoCapture final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShareRTarget;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Output_Get;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FromShared_;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SaveRTarget;                                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RenderTarg;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDefaultDim_SlotDimension;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionbar_Result;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemID_ItemID_1;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Map_Find_Value;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_GetSnapNoCapture) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_GetSnapNoCapture");
static_assert(sizeof(BP_ItemSnapCaptor_C_GetSnapNoCapture) == 0x0000C8, "Wrong size on BP_ItemSnapCaptor_C_GetSnapNoCapture");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, Item) == 0x000000, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::Item' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, ShareRTarget) == 0x000008, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::ShareRTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, Output_Get) == 0x000010, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, FromShared_) == 0x000018, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::FromShared_' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, SaveRTarget) == 0x000019, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::SaveRTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, RenderTarg) == 0x000020, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::RenderTarg' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, Temp_struct_Variable) == 0x000028, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_GetDefaultDim_SlotDimension) == 0x000038, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_GetDefaultDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_IsActionbar_Result) == 0x000048, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_IsActionbar_Result' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_GetItemID_ItemID) == 0x00004C, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_GetFloatCVar_ReturnValue) == 0x000054, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000060, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_GetItemID_ItemID_1) == 0x000070, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_GetItemID_ItemID_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, Temp_bool_Variable) == 0x000078, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, K2Node_Select_Default) == 0x000080, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_FTrunc_ReturnValue) == 0x0000A0, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_FTrunc_ReturnValue_1) == 0x0000A4, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000A8, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_GetSnapNoCapture, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0000C0, "Member 'BP_ItemSnapCaptor_C_GetSnapNoCapture::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.InstallAttachments
// 0x0380 (0x0380 - 0x0000)
struct BP_ItemSnapCaptor_C_InstallAttachments final
{
public:
	class UJSI_Slot_C*                            JigItem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ParentUid;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                LocalInfo;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AMainLocalAttachment_C*             SpawnedItem;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CurrentJig;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    AllAttachments;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_WeaponAttachments_C> CallFunc_Jig_OnAttachmentSnapInspector_self_CastInput; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerIndex_Index;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketByInContainerIndex_Socket; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerIndex_Index_1;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAttachSocketByInContainerIndex_Socket_1; // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_WeaponAttachments_C> K2Node_DynamicCast_AsBP_Weapon_Attachments;        // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Jig_GetPrimitiveComponent_Comp;           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_AMainLocalAttachment_C*             CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_WeaponAttachments_C> K2Node_DynamicCast_AsBP_Weapon_Attachments_1;      // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Jig_GetPrimitiveComponent_Comp_1;         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_WeaponAttachments_C> K2Node_DynamicCast_AsBP_Weapon_Attachments_2;      // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Jig_GetAttachmentInfo_UID;                // 0x016C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_Jig_GetAttachmentInfo_AttachmentInfo;     // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AMainLocalAttachment_C*             CallFunc_Array_Get_Item_2;                         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_WeaponAttachments_C> K2Node_DynamicCast_AsBP_Weapon_Attachments_3;      // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Jig_GetPrimitiveComponent_Comp_2;         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetActiveComponent_Comp;                  // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_WeaponAttachments_C> K2Node_DynamicCast_AsBP_Weapon_Attachments_4;      // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Jig_GetPrimitiveComponent_Comp_3;         // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8[0x8];                                      // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetSlotMotherUID_UDID;                    // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AMainLocalAttachment_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Jig_SetAttachmentInfo_Result;             // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_InstallAttachments) == 0x000010, "Wrong alignment on BP_ItemSnapCaptor_C_InstallAttachments");
static_assert(sizeof(BP_ItemSnapCaptor_C_InstallAttachments) == 0x000380, "Wrong size on BP_ItemSnapCaptor_C_InstallAttachments");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, JigItem) == 0x000000, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::JigItem' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, ParentUid) == 0x000008, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::ParentUid' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, LocalInfo) == 0x000018, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::LocalInfo' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, SpawnedItem) == 0x000020, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::SpawnedItem' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CurrentJig) == 0x000028, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CurrentJig' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, AllAttachments) == 0x000030, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::AllAttachments' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetContainerOneRef_ContainerRef) == 0x000040, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000050, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetListOfContainers_Containers) == 0x000068, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_OnAttachmentSnapInspector_self_CastInput) == 0x000088, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_OnAttachmentSnapInspector_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Array_Index_Variable_2) == 0x0000AC, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Loop_Counter_Variable_3) == 0x0000B0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_int_Array_Index_Variable_3) == 0x0000BC, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_IsEquipTo__ReturnValue) == 0x0000D0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetContainerIndex_Index) == 0x0000D4, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetContainerIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetJigDA_JigDataAsset) == 0x0000D8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetAttachSocketByInContainerIndex_Socket) == 0x0000E0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetAttachSocketByInContainerIndex_Socket' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetContainerIndex_Index_1) == 0x0000EC, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetContainerIndex_Index_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_IsValidClass_ReturnValue) == 0x0000F0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetAttachSocketByInContainerIndex_Socket_1) == 0x0000F4, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetAttachSocketByInContainerIndex_Socket_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_AsBP_Weapon_Attachments) == 0x000100, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_AsBP_Weapon_Attachments' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_GetPrimitiveComponent_Comp) == 0x000118, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_GetPrimitiveComponent_Comp' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_AsBP_Weapon_Attachments_1) == 0x000130, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_AsBP_Weapon_Attachments_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Less_IntInt_ReturnValue_1) == 0x000141, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_GetPrimitiveComponent_Comp_1) == 0x000148, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_GetPrimitiveComponent_Comp_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_BooleanAND_ReturnValue) == 0x000150, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000151, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_AsBP_Weapon_Attachments_2) == 0x000158, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_AsBP_Weapon_Attachments_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_GetAttachmentInfo_UID) == 0x00016C, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_GetAttachmentInfo_UID' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_GetAttachmentInfo_AttachmentInfo) == 0x000180, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_GetAttachmentInfo_AttachmentInfo' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000188, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Get_Item_2) == 0x000190, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Length_ReturnValue_2) == 0x000198, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_AsBP_Weapon_Attachments_3) == 0x0001A0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_AsBP_Weapon_Attachments_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_bSuccess_4) == 0x0001B0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B1, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_GetPrimitiveComponent_Comp_2) == 0x0001B8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_GetPrimitiveComponent_Comp_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetActiveComponent_Comp) == 0x0001C0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetActiveComponent_Comp' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_AsBP_Weapon_Attachments_4) == 0x0001C8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_AsBP_Weapon_Attachments_4' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, K2Node_DynamicCast_bSuccess_5) == 0x0001D8, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_GetPrimitiveComponent_Comp_3) == 0x0001E0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_GetPrimitiveComponent_Comp_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetSocketTransform_ReturnValue) == 0x0001F0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_BreakTransform_Location) == 0x000250, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_BreakTransform_Rotation) == 0x000268, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_BreakTransform_Scale) == 0x000280, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000298, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetUniqueID_UniqueServerID) == 0x00029C, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x0002AC, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetSlotMotherUID_UDID) == 0x0002B0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetSlotMotherUID_UDID' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_GetUniqueID_UniqueServerID_1) == 0x0002C0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002D0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_MakeTransform_ReturnValue) == 0x0002F0, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Get_Item_3) == 0x000350, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000358, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_FinishSpawningActor_ReturnValue) == 0x000360, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Length_ReturnValue_3) == 0x000368, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Jig_SetAttachmentInfo_Result) == 0x00036C, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Jig_SetAttachmentInfo_Result' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Less_IntInt_ReturnValue_3) == 0x00036D, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_Array_Add_ReturnValue) == 0x000370, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_InstallAttachments, CallFunc_IsValid_ReturnValue_2) == 0x000374, "Member 'BP_ItemSnapCaptor_C_InstallAttachments::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.IsActionbar
// 0x0010 (0x0010 - 0x0000)
struct BP_ItemSnapCaptor_C_IsActionbar final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_IsActionbar) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_IsActionbar");
static_assert(sizeof(BP_ItemSnapCaptor_C_IsActionbar) == 0x000010, "Wrong size on BP_ItemSnapCaptor_C_IsActionbar");
static_assert(offsetof(BP_ItemSnapCaptor_C_IsActionbar, ItemRef) == 0x000000, "Member 'BP_ItemSnapCaptor_C_IsActionbar::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_IsActionbar, Result) == 0x000008, "Member 'BP_ItemSnapCaptor_C_IsActionbar::Result' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.IsLocked
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemSnapCaptor_C_IsLocked final
{
public:
	bool                                          IsLocked__0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_IsLocked) == 0x000001, "Wrong alignment on BP_ItemSnapCaptor_C_IsLocked");
static_assert(sizeof(BP_ItemSnapCaptor_C_IsLocked) == 0x000001, "Wrong size on BP_ItemSnapCaptor_C_IsLocked");
static_assert(offsetof(BP_ItemSnapCaptor_C_IsLocked, IsLocked__0) == 0x000000, "Member 'BP_ItemSnapCaptor_C_IsLocked::IsLocked__0' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.RemoveIronsights
// 0x0060 (0x0060 - 0x0000)
struct BP_ItemSnapCaptor_C_RemoveIronsights final
{
public:
	bool                                          Hide_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AMainLocalAttachment_C*             Attachment;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_WeaponAttachments_C> K2Node_DynamicCast_AsBP_Weapon_Attachments;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Jig_GetAttachmentInfo_UID;                // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_Jig_GetAttachmentInfo_AttachmentInfo;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_RemoveIronsights) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_RemoveIronsights");
static_assert(sizeof(BP_ItemSnapCaptor_C_RemoveIronsights) == 0x000060, "Wrong size on BP_ItemSnapCaptor_C_RemoveIronsights");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, Hide_) == 0x000000, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::Hide_' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, Attachment) == 0x000008, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::Attachment' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, SceneComp) == 0x000010, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::SceneComp' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000018, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, K2Node_DynamicCast_AsBP_Weapon_Attachments) == 0x000028, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::K2Node_DynamicCast_AsBP_Weapon_Attachments' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, CallFunc_Jig_GetAttachmentInfo_UID) == 0x00003C, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::CallFunc_Jig_GetAttachmentInfo_UID' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, CallFunc_Jig_GetAttachmentInfo_AttachmentInfo) == 0x000050, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::CallFunc_Jig_GetAttachmentInfo_AttachmentInfo' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000058, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_RemoveIronsights, CallFunc_DoesSocketExist_ReturnValue) == 0x000059, "Member 'BP_ItemSnapCaptor_C_RemoveIronsights::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.SetJigitem
// 0x0410 (0x0410 - 0x0000)
struct BP_ItemSnapCaptor_C_SetJigitem final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShareRenderTargetWithSimilarItems;                 // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Mats;                                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UStaticMeshComponent*                   DynStatic;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSkel_;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 DynSkel;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActionBarItem;                                   // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x00D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue_1;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_1;                  // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionbar_Result;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x0160(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_2;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_3;                  // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_4;                  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0310(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_FOVAngle_ImplicitCast;          // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_SetJigitem) == 0x000010, "Wrong alignment on BP_ItemSnapCaptor_C_SetJigitem");
static_assert(sizeof(BP_ItemSnapCaptor_C_SetJigitem) == 0x000410, "Wrong size on BP_ItemSnapCaptor_C_SetJigitem");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, ItemRef) == 0x000000, "Member 'BP_ItemSnapCaptor_C_SetJigitem::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Found) == 0x000008, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Found' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, ShareRenderTargetWithSimilarItems) == 0x000009, "Member 'BP_ItemSnapCaptor_C_SetJigitem::ShareRenderTargetWithSimilarItems' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Mats) == 0x000010, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Mats' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, DynStatic) == 0x000020, "Member 'BP_ItemSnapCaptor_C_SetJigitem::DynStatic' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, UseSkel_) == 0x000028, "Member 'BP_ItemSnapCaptor_C_SetJigitem::UseSkel_' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, DynSkel) == 0x000030, "Member 'BP_ItemSnapCaptor_C_SetJigitem::DynSkel' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, IsActionBarItem) == 0x000038, "Member 'BP_ItemSnapCaptor_C_SetJigitem::IsActionBarItem' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetMaterials_ReturnValue) == 0x000040, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Temp_struct_Variable) == 0x000060, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Temp_struct_Variable_1) == 0x0000D0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetJigDA_JigDataAsset) == 0x000130, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_AddComponent_ReturnValue_1) == 0x000138, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetJigDA_JigDataAsset_1) == 0x000140, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetJigDA_JigDataAsset_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_IsActionbar_Result) == 0x000148, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_IsActionbar_Result' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Temp_int_Array_Index_Variable) == 0x00014C, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00015C, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Temp_bool_Variable) == 0x00015D, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetMaterials_ReturnValue_1) == 0x000160, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Temp_bool_Variable_1) == 0x000170, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetMaterial_ReturnValue) == 0x000178, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetJigDA_JigDataAsset_2) == 0x000180, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetJigDA_JigDataAsset_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_IsValid_ReturnValue_2) == 0x000188, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_IsValid_ReturnValue_3) == 0x000189, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_SetStaticMesh_ReturnValue) == 0x00018A, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, K2Node_Select_Default) == 0x000190, "Member 'BP_ItemSnapCaptor_C_SetJigitem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetMaterial_ReturnValue_1) == 0x000198, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetJigDA_JigDataAsset_3) == 0x0001A0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetJigDA_JigDataAsset_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, K2Node_Select_Default_1) == 0x0001A8, "Member 'BP_ItemSnapCaptor_C_SetJigitem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_IsValid_ReturnValue_4) == 0x0001B0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_GetJigDA_JigDataAsset_4) == 0x0001B8, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_GetJigDA_JigDataAsset_4' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0001C0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_BreakTransform_Location) == 0x0001C8, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_BreakTransform_Rotation) == 0x0001E0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_BreakTransform_Scale) == 0x0001F8, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_BreakTransform_Location_1) == 0x000210, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_BreakTransform_Rotation_1) == 0x000228, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_BreakTransform_Scale_1) == 0x000240, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_SelectFloat_ReturnValue) == 0x000258, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_SelectVector_ReturnValue) == 0x000260, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_SelectVector_ReturnValue_1) == 0x000278, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_SelectRotator_ReturnValue) == 0x000290, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_MakeTransform_ReturnValue) == 0x0002B0, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000310, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, Temp_int_Loop_Counter_Variable) == 0x0003F8, "Member 'BP_ItemSnapCaptor_C_SetJigitem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_Less_IntInt_ReturnValue) == 0x0003FC, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, CallFunc_Add_IntInt_ReturnValue) == 0x000400, "Member 'BP_ItemSnapCaptor_C_SetJigitem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem, K2Node_VariableSet_FOVAngle_ImplicitCast) == 0x000404, "Member 'BP_ItemSnapCaptor_C_SetJigitem::K2Node_VariableSet_FOVAngle_ImplicitCast' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.SetJigitem_Custom
// 0x0320 (0x0320 - 0x0000)
struct BP_ItemSnapCaptor_C_SetJigitem_Custom final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV;                                               // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShareRenderTargetWithSimilarItems;                 // 0x0079(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             Mats;                                              // 0x0080(0x0010)(Edit, BlueprintVisible)
	bool                                          UseSkel_;                                          // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   DynStatic;                                         // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DynSkel;                                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActionBarItem;                                   // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0xF];                                       // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0140(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue_1;               // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionbar_Result;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue_1;               // 0x01D8(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_1;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_2;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0230(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_VariableSet_FOVAngle_ImplicitCast;          // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_SetJigitem_Custom) == 0x000010, "Wrong alignment on BP_ItemSnapCaptor_C_SetJigitem_Custom");
static_assert(sizeof(BP_ItemSnapCaptor_C_SetJigitem_Custom) == 0x000320, "Wrong size on BP_ItemSnapCaptor_C_SetJigitem_Custom");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, ItemRef) == 0x000000, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Transform) == 0x000010, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Transform' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, FOV) == 0x000070, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::FOV' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Found) == 0x000078, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Found' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, ShareRenderTargetWithSimilarItems) == 0x000079, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::ShareRenderTargetWithSimilarItems' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Mats) == 0x000080, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Mats' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, UseSkel_) == 0x000090, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::UseSkel_' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, DynStatic) == 0x000098, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::DynStatic' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, DynSkel) == 0x0000A0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::DynSkel' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, IsActionBarItem) == 0x0000A8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::IsActionBarItem' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetMaterials_ReturnValue) == 0x0000B0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Temp_struct_Variable) == 0x0000D0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_AddComponent_ReturnValue) == 0x000130, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Temp_struct_Variable_1) == 0x000140, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_AddComponent_ReturnValue_1) == 0x0001A0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetJigDA_JigDataAsset) == 0x0001A8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_IsActionbar_Result) == 0x0001B0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_IsActionbar_Result' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Temp_int_Array_Index_Variable) == 0x0001B4, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Temp_int_Loop_Counter_Variable) == 0x0001B8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_Add_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Temp_bool_Variable) == 0x0001C0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_Array_Length_ReturnValue) == 0x0001D0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001D4, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_Less_IntInt_ReturnValue) == 0x0001D5, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, Temp_bool_Variable_1) == 0x0001D6, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetMaterials_ReturnValue_1) == 0x0001D8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetMaterial_ReturnValue) == 0x0001E8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetJigDA_JigDataAsset_1) == 0x0001F0, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetJigDA_JigDataAsset_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_IsValid_ReturnValue_2) == 0x0001F8, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_IsValid_ReturnValue_3) == 0x0001F9, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, K2Node_Select_Default) == 0x000200, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_SetStaticMesh_ReturnValue) == 0x000208, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetMaterial_ReturnValue_1) == 0x000210, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_GetJigDA_JigDataAsset_2) == 0x000218, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_GetJigDA_JigDataAsset_2' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, K2Node_Select_Default_1) == 0x000220, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_IsValid_ReturnValue_4) == 0x000228, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000229, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000230, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetJigitem_Custom, K2Node_VariableSet_FOVAngle_ImplicitCast) == 0x000318, "Member 'BP_ItemSnapCaptor_C_SetJigitem_Custom::K2Node_VariableSet_FOVAngle_ImplicitCast' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemSnapCaptor_C_SetLocked final
{
public:
	bool                                          IsLocked__0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_SetLocked) == 0x000001, "Wrong alignment on BP_ItemSnapCaptor_C_SetLocked");
static_assert(sizeof(BP_ItemSnapCaptor_C_SetLocked) == 0x000001, "Wrong size on BP_ItemSnapCaptor_C_SetLocked");
static_assert(offsetof(BP_ItemSnapCaptor_C_SetLocked, IsLocked__0) == 0x000000, "Member 'BP_ItemSnapCaptor_C_SetLocked::IsLocked__0' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.UpdateSnap
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemSnapCaptor_C_UpdateSnap final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 TextureTarget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Output_Get;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetJigitem_Found;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetJigitem_ShareRenderTargetWithSimilarItems; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemSnapCaptor_C_UpdateSnap) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_UpdateSnap");
static_assert(sizeof(BP_ItemSnapCaptor_C_UpdateSnap) == 0x000020, "Wrong size on BP_ItemSnapCaptor_C_UpdateSnap");
static_assert(offsetof(BP_ItemSnapCaptor_C_UpdateSnap, ItemRef) == 0x000000, "Member 'BP_ItemSnapCaptor_C_UpdateSnap::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_UpdateSnap, TextureTarget) == 0x000008, "Member 'BP_ItemSnapCaptor_C_UpdateSnap::TextureTarget' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_UpdateSnap, Output_Get) == 0x000010, "Member 'BP_ItemSnapCaptor_C_UpdateSnap::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_UpdateSnap, CallFunc_SetJigitem_Found) == 0x000018, "Member 'BP_ItemSnapCaptor_C_UpdateSnap::CallFunc_SetJigitem_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemSnapCaptor_C_UpdateSnap, CallFunc_SetJigitem_ShareRenderTargetWithSimilarItems) == 0x000019, "Member 'BP_ItemSnapCaptor_C_UpdateSnap::CallFunc_SetJigitem_ShareRenderTargetWithSimilarItems' has a wrong offset!");

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_ItemSnapCaptor_C_UserConstructionScript final
{
public:
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemSnapCaptor_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_ItemSnapCaptor_C_UserConstructionScript");
static_assert(sizeof(BP_ItemSnapCaptor_C_UserConstructionScript) == 0x000010, "Wrong size on BP_ItemSnapCaptor_C_UserConstructionScript");
static_assert(offsetof(BP_ItemSnapCaptor_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_ItemSnapCaptor_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");

}

