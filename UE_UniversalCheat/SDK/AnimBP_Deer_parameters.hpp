#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Deer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_Deer.AnimBP_Deer_C.GetSpeed
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_Deer_C_GetSpeed final
{
public:
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Deer_C_GetSpeed) == 0x000008, "Wrong alignment on AnimBP_Deer_C_GetSpeed");
static_assert(sizeof(AnimBP_Deer_C_GetSpeed) == 0x000008, "Wrong size on AnimBP_Deer_C_GetSpeed");
static_assert(offsetof(AnimBP_Deer_C_GetSpeed, CallFunc_VSize_ReturnValue) == 0x000000, "Member 'AnimBP_Deer_C_GetSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function AnimBP_Deer.AnimBP_Deer_C.ExecuteUbergraph_AnimBP_Deer
// 0x02D8 (0x02D8 - 0x0000)
struct AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_17;                           // 0x0098(0x0010)(ConstParm, ReferenceParm)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AnimalDeer_C*                       K2Node_DynamicCast_AsBP_Animal_Deer;               // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0110(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer) == 0x000008, "Wrong alignment on AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer");
static_assert(sizeof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer) == 0x0002D8, "Wrong size on AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, EntryPoint) == 0x000000, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable) == 0x000008, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_1) == 0x000010, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_2) == 0x000018, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_3) == 0x000020, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_4) == 0x000028, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_5) == 0x000030, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_6) == 0x000038, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_7) == 0x000040, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_8) == 0x000048, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_9) == 0x000050, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_10) == 0x000058, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_11) == 0x000060, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_12) == 0x000068, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_13) == 0x000070, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_14) == 0x000078, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_15) == 0x000080, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_16) == 0x000088, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_byte_Variable) == 0x000090, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000091, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000092, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_17) == 0x000098, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_18) == 0x0000A8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, Temp_object_Variable_19) == 0x0000B0, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0000B8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, K2Node_DynamicCast_AsBP_Animal_Deer) == 0x0000C8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::K2Node_DynamicCast_AsBP_Animal_Deer' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_GetOwningActor_ReturnValue) == 0x0000D8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_LineTraceSingle_OutHit) == 0x000110, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_LineTraceSingle_ReturnValue) == 0x0001F8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_GetSurfaceType_ReturnValue) == 0x0001F9, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_bBlockingHit) == 0x0001FA, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001FB, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_Time) == 0x0001FC, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_Distance) == 0x000200, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_Location) == 0x000208, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_ImpactPoint) == 0x000220, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_Normal) == 0x000238, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_ImpactNormal) == 0x000250, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_PhysMat) == 0x000268, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_HitActor) == 0x000270, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_HitComponent) == 0x000278, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_HitBoneName) == 0x000280, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_BoneName) == 0x000288, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_HitItem) == 0x000290, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_ElementIndex) == 0x000294, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_FaceIndex) == 0x000298, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_TraceStart) == 0x0002A0, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, CallFunc_BreakHitResult_TraceEnd) == 0x0002B8, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer, K2Node_Select_Default) == 0x0002D0, "Member 'AnimBP_Deer_C_ExecuteUbergraph_AnimBP_Deer::K2Node_Select_Default' has a wrong offset!");

// Function AnimBP_Deer.AnimBP_Deer_C.BlueprintThreadSafeUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong size on AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'AnimBP_Deer_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");

// Function AnimBP_Deer.AnimBP_Deer_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_Deer_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_Deer_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_Deer_C_AnimGraph");
static_assert(sizeof(AnimBP_Deer_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_Deer_C_AnimGraph");
static_assert(offsetof(AnimBP_Deer_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_Deer_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

