#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevellingComponent

#include "Basic.hpp"

#include "LevellingComponent_classes.hpp"
#include "LevellingComponent_parameters.hpp"


namespace SDK
{

// Function LevellingComponent.LevellingComponent_C.ActorLoaded
// (Event, Public, BlueprintEvent)

void ULevellingComponent_C::ActorLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "ActorLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.ActorPreLoad
// (Event, Public, BlueprintEvent)

void ULevellingComponent_C::ActorPreLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "ActorPreLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.ActorPreSave
// (Event, Public, BlueprintEvent)

void ULevellingComponent_C::ActorPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "ActorPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.ActorSaved
// (Event, Public, BlueprintEvent)

void ULevellingComponent_C::ActorSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "ActorSaved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.AddXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  XP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LevelUp_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  XPOutput                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevellingComponent_C::AddXP(double XP, bool LevelUp_, double* XPOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "AddXP");

	Params::LevellingComponent_C_AddXP Parms{};

	Parms.XP = XP;
	Parms.LevelUp_ = LevelUp_;

	UObject::ProcessEvent(Func, &Parms);

	if (XPOutput != nullptr)
		*XPOutput = Parms.XPOutput;
}


// Function LevellingComponent.LevellingComponent_C.CalculateMaxXP
// (Public, BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::CalculateMaxXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "CalculateMaxXP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.CalculatePercentage
// (Public, BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::CalculatePercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "CalculatePercentage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.ComponentsToSave
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UActorComponent*>          Components                                             (Parm, OutParm, ContainsInstancedReference)

void ULevellingComponent_C::ComponentsToSave(TArray<class UActorComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "ComponentsToSave");

	Params::LevellingComponent_C_ComponentsToSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function LevellingComponent.LevellingComponent_C.Event_levelBar
// (BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::Event_levelBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "Event_levelBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.Event_LevelBarTimer
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::Event_LevelBarTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "Event_LevelBarTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.Event_Multiplier
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevellingComponent_C::Event_Multiplier(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "Event_Multiplier");

	Params::LevellingComponent_C_Event_Multiplier Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevellingComponent.LevellingComponent_C.Event_XPDeath
// (BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::Event_XPDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "Event_XPDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.ExecuteUbergraph_LevellingComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULevellingComponent_C::ExecuteUbergraph_LevellingComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "ExecuteUbergraph_LevellingComponent");

	Params::LevellingComponent_C_ExecuteUbergraph_LevellingComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LevellingComponent.LevellingComponent_C.LevelUp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.LoadComponent
// (BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::LoadComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "LoadComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LevellingComponent.LevellingComponent_C.XPDeath
// (Public, BlueprintCallable, BlueprintEvent)

void ULevellingComponent_C::XPDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LevellingComponent_C", "XPDeath");

	UObject::ProcessEvent(Func, nullptr);
}

}

