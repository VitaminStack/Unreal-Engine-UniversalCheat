#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Zombie

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "AnimBP_Zombie_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_Zombie.AnimBP_Zombie_C
// 0x0430 (0x0780 - 0x0350)
class UAnimBP_Zombie_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AnimBP_Zombie::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0370(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0390(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0400(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0420(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x04E8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0568(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0590(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0680(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x06C8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x06F0(0x0048)()
	struct FVector                                K2Node_PropertyAccess_1;                           // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess;                             // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0751(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_752[0x6];                                      // 0x0752(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsZombie_;                                         // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Falling_;                                          // 0x0761(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_762[0x6];                                      // 0x0762(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace1D*                          Movement_Blendspace;                               // 0x0768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterZombie_C*                     ZombieRef;                                         // 0x0770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void BlueprintInitializeAnimation();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void CombatState(int32 BlendSpace);
	void DeathState(bool Dead_0);
	void ExecuteUbergraph_AnimBP_Zombie(int32 EntryPoint);
	void GetSpeed();
	void IsFalling_();
	void SetAnimations();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_Zombie_C">();
	}
	static class UAnimBP_Zombie_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_Zombie_C>();
	}
};
static_assert(alignof(UAnimBP_Zombie_C) == 0x000010, "Wrong alignment on UAnimBP_Zombie_C");
static_assert(sizeof(UAnimBP_Zombie_C) == 0x000780, "Wrong size on UAnimBP_Zombie_C");
static_assert(offsetof(UAnimBP_Zombie_C, UberGraphFrame) == 0x000350, "Member 'UAnimBP_Zombie_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, __AnimBlueprintMutables) == 0x000358, "Member 'UAnimBP_Zombie_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimBlueprintExtension_PropertyAccess) == 0x000360, "Member 'UAnimBP_Zombie_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UAnimBP_Zombie_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_Root) == 0x000370, "Member 'UAnimBP_Zombie_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_BlendSpacePlayer) == 0x000390, "Member 'UAnimBP_Zombie_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_StateResult) == 0x000400, "Member 'UAnimBP_Zombie_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_StateMachine) == 0x000420, "Member 'UAnimBP_Zombie_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_SaveCachedPose) == 0x0004E8, "Member 'UAnimBP_Zombie_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_UseCachedPose_1) == 0x000568, "Member 'UAnimBP_Zombie_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_LayeredBoneBlend) == 0x000590, "Member 'UAnimBP_Zombie_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_Slot_1) == 0x000680, "Member 'UAnimBP_Zombie_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_UseCachedPose) == 0x0006C8, "Member 'UAnimBP_Zombie_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, AnimGraphNode_Slot) == 0x0006F0, "Member 'UAnimBP_Zombie_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, K2Node_PropertyAccess_1) == 0x000738, "Member 'UAnimBP_Zombie_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, K2Node_PropertyAccess) == 0x000750, "Member 'UAnimBP_Zombie_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, Dead) == 0x000751, "Member 'UAnimBP_Zombie_C::Dead' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, Speed) == 0x000758, "Member 'UAnimBP_Zombie_C::Speed' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, IsZombie_) == 0x000760, "Member 'UAnimBP_Zombie_C::IsZombie_' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, Falling_) == 0x000761, "Member 'UAnimBP_Zombie_C::Falling_' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, Movement_Blendspace) == 0x000768, "Member 'UAnimBP_Zombie_C::Movement_Blendspace' has a wrong offset!");
static_assert(offsetof(UAnimBP_Zombie_C, ZombieRef) == 0x000770, "Member 'UAnimBP_Zombie_C::ZombieRef' has a wrong offset!");

}

