#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ControlRig_structs.hpp"
#include "Player_AnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DragonIKPlugin_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Player_AnimBP.Player_AnimBP_C
// 0x5840 (0x5B90 - 0x0350)
class UPlayer_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Player_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x00D8)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0430(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0438(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0440(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x05F0(0x0028)()
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_7;                            // 0x0620(0x01F0)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_6;                            // 0x0810(0x01F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_14;            // 0x0A00(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_14;            // 0x0A20(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x0A40(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_13;            // 0x0B68(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_13;            // 0x0B88(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0BA8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_12;            // 0x0CD0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_11;            // 0x0CF0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_23;                 // 0x0D10(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_22;                 // 0x0D80(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0DF0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_12;            // 0x0E38(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_11;            // 0x0E58(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_5;          // 0x0E78(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_21;                 // 0x0F90(0x0070)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_4;                    // 0x1000(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x1048(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_20;                 // 0x1160(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x11D0(0x0020)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_5;                            // 0x11F0(0x01F0)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_4;                            // 0x13E0(0x01F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_10;            // 0x15D0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_10;            // 0x15F0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1610(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9;             // 0x1738(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_9;             // 0x1758(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1778(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8;             // 0x18A0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7;             // 0x18C0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_19;                 // 0x18E0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_18;                 // 0x1950(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x19C0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8;             // 0x1A08(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7;             // 0x1A28(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x1A48(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_17;                 // 0x1B60(0x0070)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_3;                    // 0x1BD0(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x1C18(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_16;                 // 0x1D30(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1DA0(0x0020)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_3;                            // 0x1DC0(0x01F0)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_2;                            // 0x1FB0(0x01F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x21A0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x21C0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x21E0(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x2308(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x2328(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x2348(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x2368(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2388(0x0128)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_15;                 // 0x24B0(0x0070)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x2520(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_14;                 // 0x2540(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_13;                 // 0x25B0(0x0070)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2620(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x2668(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_12;                 // 0x2688(0x0070)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x26F8(0x0118)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x2810(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x2858(0x0118)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2970(0x0020)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik_1;                            // 0x2990(0x01F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x2B80(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_11;                 // 0x2BA0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x2C10(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x2C80(0x0070)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x2CF0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x2D10(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x2D80(0x0070)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x2DF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2E38(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2E58(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2EA0(0x0020)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x2EC0(0x01F0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x30B0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x3120(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x3190(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x3200(0x0070)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x3270(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x3290(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x32B0(0x0070)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x3320(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x3368(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x3388(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x3450(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x34D0(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x35C0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x3608(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x3650(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3678(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x36A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x36E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3708(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3750(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3770(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x3838(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x3888(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x38B0(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x38D8(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x3948(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x3990(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3A00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3A20(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x3A68(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x3A88(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3B50(0x0048)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x3B98(0x0460)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3FF8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x4020(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x4068(0x0080)()
	uint8                                         Pad_40E8[0x8];                                     // 0x40E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_DragonSpineSolver            AnimGraphNode_DragonSpineSolver;                   // 0x40F0(0x0EA0)(ContainsInstancedReference)
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x4F90(0x0020)()
	struct FAnimNode_DragonFeetSolver             AnimGraphNode_DragonFeetSolver;                    // 0x4FB0(0x09B0)(ContainsInstancedReference)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x5960(0x0020)()
	bool                                          K2Node_PropertyAccess_23;                          // 0x5980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_22;                          // 0x5981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_21;                          // 0x5982(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_20;                          // 0x5983(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_19;                          // 0x5984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_18;                          // 0x5985(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_17;                          // 0x5986(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_16;                          // 0x5987(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_15;                          // 0x5988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_14;                          // 0x5989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598A[0x6];                                     // 0x598A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_13;                          // 0x5990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_PropertyAccess_12;                          // 0x59A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_11;                          // 0x59B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_10;                          // 0x59C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_9;                           // 0x59E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_PropertyAccess_8;                           // 0x59F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59F9[0x7];                                     // 0x59F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_7;                           // 0x5A00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_PropertyAccess_6;                           // 0x5A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_5;                           // 0x5A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_PropertyAccess_4;                           // 0x5A48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_3;                           // 0x5A60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_2;                           // 0x5A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_1;                           // 0x5A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess;                             // 0x5A91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_InVehicle_A31173534EA4855360B47798EBE6692F; // 0x5A92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A93[0xD];                                     // 0x5A93(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  __CustomProperty_HeadRotation_A31173534EA4855360B47798EBE6692F; // 0x5AA0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x5AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BlendSpaceInt;                                     // 0x5AC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ACC[0x4];                                     // 0x5ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  PlayerRef;                                         // 0x5AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Falling;                                           // 0x5AD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD9[0x7];                                     // 0x5AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Direction;                                         // 0x5AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouching;                                       // 0x5AE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsADS;                                             // 0x5AE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AEA[0x6];                                     // 0x5AEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Pitch;                                             // 0x5AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x5AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x5B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B01[0x3];                                     // 0x5B01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CActiveSlot;                                       // 0x5B04(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRotateHead_;                                    // 0x5B0C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMeleeStance;                                     // 0x5B0D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LadderClimb;                                       // 0x5B0E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swimming;                                          // 0x5B0F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swimming_UnderWater;                               // 0x5B10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B11[0x7];                                     // 0x5B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Lean;                                              // 0x5B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftHandWeaponLocation;                            // 0x5B20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HeadRotation;                                      // 0x5B38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FQuat                                  HeadQuat;                                          // 0x5B50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LeftHandWeaponRotator;                             // 0x5B70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanFootIK_;                                        // 0x5B88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InVehicle_;                                        // 0x5B89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Footstep();
	void AnimNotify_Swim();
	void AnimNotify_SwimFast();
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void CombatState(int32 BlendSpace);
	void DeathState(bool Dead_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_DragonFeetSolver_6BBF7963439FA21FFFC5828195C23548();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_DragonSpineSolver_D9AF0FD549548C0D9C967B82046139FD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_03D9281D4290CF9D3D79F58EE11CE592();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_053E72544A6314D2ADEAA787D9BFC5F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_315465A045AB880A81C662914A3E89B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_31BAC05D486A8E2F5D5AFF87706BFF20();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_93738C354571E336438A498FA5B6BA55();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_AEE6C8684E3A7AB462B8439C3AD088FD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_AF8CB55449FDEB26FA14F38357C17595();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_Fabrik_C442D981495DB3EA62149D8911CE1C3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_1D52F779406FC4110BBFC4B70C211957();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_30D16A454BEE8EE89CA8E092A5D4D768();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_47507ADE41BD83534859F3B0009BD8B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_7D78CD2542FC8B864766A5B979BC9813();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_8A762ACA40A26E5901F2CEB7BDE081B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_ADDCBBF44FF1C8EBF5B6219C3ACDA7B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_BBB23FD64534A8C709D41A83C640C98B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_D57793F2441362344ECA5AB8AD87C8D7();
	void ExecuteUbergraph_Player_AnimBP(int32 EntryPoint);
	void GetAimOffset(float DeltaTime);
	void GetAnimationInfoFromCharacter();
	void GetHeadRot();
	void GetLean(double DeltaTime);
	void GetLeftHandLoc();
	void GetSpeed_Direction();
	void GetThreadSafeBooleans();
	void GetVehicleVars();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Player_AnimBP_C">();
	}
	static class UPlayer_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayer_AnimBP_C>();
	}
};
static_assert(alignof(UPlayer_AnimBP_C) == 0x000010, "Wrong alignment on UPlayer_AnimBP_C");
static_assert(sizeof(UPlayer_AnimBP_C) == 0x005B90, "Wrong size on UPlayer_AnimBP_C");
static_assert(offsetof(UPlayer_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UPlayer_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, __AnimBlueprintMutables) == 0x000358, "Member 'UPlayer_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000430, "Member 'UPlayer_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimBlueprintExtension_Base) == 0x000438, "Member 'UPlayer_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Root) == 0x000440, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000460, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x000488, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x0004B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x0004D8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000500, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000528, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000550, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000578, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0005A0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0005C8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0005F0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_7) == 0x000620, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_6) == 0x000810, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_14) == 0x000A00, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_14) == 0x000A20, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone_5) == 0x000A40, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_13) == 0x000B68, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_13) == 0x000B88, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone_4) == 0x000BA8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_12) == 0x000CD0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_11) == 0x000CF0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_23) == 0x000D10, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_23' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_22) == 0x000D80, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_22' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000DF0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_12) == 0x000E38, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_11) == 0x000E58, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_5) == 0x000E78, "Member 'UPlayer_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_21) == 0x000F90, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_21' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByInt_4) == 0x001000, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByInt_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x001048, "Member 'UPlayer_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_20) == 0x001160, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_20' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_9) == 0x0011D0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_5) == 0x0011F0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_4) == 0x0013E0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_10) == 0x0015D0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_10) == 0x0015F0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone_3) == 0x001610, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_9) == 0x001738, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_9) == 0x001758, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone_2) == 0x001778, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_8) == 0x0018A0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_7) == 0x0018C0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_19) == 0x0018E0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_19' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_18) == 0x001950, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_18' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x0019C0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_8) == 0x001A08, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_7) == 0x001A28, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x001A48, "Member 'UPlayer_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_17) == 0x001B60, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_17' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByInt_3) == 0x001BD0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByInt_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x001C18, "Member 'UPlayer_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_16) == 0x001D30, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_16' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_8) == 0x001DA0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_3) == 0x001DC0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_2) == 0x001FB0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x0021A0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_6) == 0x0021C0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x0021E0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x002308, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_5) == 0x002328, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x002348, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_4) == 0x002368, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone) == 0x002388, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_15) == 0x0024B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_15' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x002520, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_14) == 0x002540, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_13) == 0x0025B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x002620, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_3) == 0x002668, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_12) == 0x002688, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x0026F8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByInt_2) == 0x002810, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x002858, "Member 'UPlayer_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_7) == 0x002970, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik_1) == 0x002990, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x002B80, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_11) == 0x002BA0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_10) == 0x002C10, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_9) == 0x002C80, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x002CF0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_8) == 0x002D10, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_7) == 0x002D80, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x002DF0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_6) == 0x002E38, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x002E58, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_5) == 0x002EA0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Fabrik) == 0x002EC0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x0030B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x003120, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x003190, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x003200, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x003270, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x003290, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0032B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x003320, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_4) == 0x003368, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateMachine_2) == 0x003388, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x003450, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x0034D0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Slot_1) == 0x0035C0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x003608, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x003650, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x003678, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0036A0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_3) == 0x0036E8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x003708, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_2) == 0x003750, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x003770, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x003838, "Member 'UPlayer_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x003860, "Member 'UPlayer_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x003888, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0038B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0038D8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x003948, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x003990, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_1) == 0x003A00, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x003A20, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult) == 0x003A68, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateMachine) == 0x003A88, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x003B50, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ControlRig) == 0x003B98, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x003FF8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Slot) == 0x004020, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x004068, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_DragonSpineSolver) == 0x0040F0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_DragonSpineSolver' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x004F90, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_DragonFeetSolver) == 0x004FB0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_DragonFeetSolver' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x005960, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_23) == 0x005980, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_23' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_22) == 0x005981, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_22' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_21) == 0x005982, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_21' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_20) == 0x005983, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_20' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_19) == 0x005984, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_19' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_18) == 0x005985, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_18' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_17) == 0x005986, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_16) == 0x005987, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_15) == 0x005988, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_14) == 0x005989, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_13) == 0x005990, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_12) == 0x0059A8, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_11) == 0x0059B0, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_10) == 0x0059C8, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_9) == 0x0059E0, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_8) == 0x0059F8, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_7) == 0x005A00, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_6) == 0x005A18, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_5) == 0x005A30, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_4) == 0x005A48, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_3) == 0x005A60, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_2) == 0x005A78, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess_1) == 0x005A90, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, K2Node_PropertyAccess) == 0x005A91, "Member 'UPlayer_AnimBP_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, __CustomProperty_InVehicle_A31173534EA4855360B47798EBE6692F) == 0x005A92, "Member 'UPlayer_AnimBP_C::__CustomProperty_InVehicle_A31173534EA4855360B47798EBE6692F' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, __CustomProperty_HeadRotation_A31173534EA4855360B47798EBE6692F) == 0x005AA0, "Member 'UPlayer_AnimBP_C::__CustomProperty_HeadRotation_A31173534EA4855360B47798EBE6692F' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Speed) == 0x005AC0, "Member 'UPlayer_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, BlendSpaceInt) == 0x005AC8, "Member 'UPlayer_AnimBP_C::BlendSpaceInt' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, PlayerRef) == 0x005AD0, "Member 'UPlayer_AnimBP_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Falling) == 0x005AD8, "Member 'UPlayer_AnimBP_C::Falling' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Direction) == 0x005AE0, "Member 'UPlayer_AnimBP_C::Direction' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, IsCrouching) == 0x005AE8, "Member 'UPlayer_AnimBP_C::IsCrouching' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, IsADS) == 0x005AE9, "Member 'UPlayer_AnimBP_C::IsADS' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Pitch) == 0x005AF0, "Member 'UPlayer_AnimBP_C::Pitch' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Yaw) == 0x005AF8, "Member 'UPlayer_AnimBP_C::Yaw' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Dead) == 0x005B00, "Member 'UPlayer_AnimBP_C::Dead' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, CActiveSlot) == 0x005B04, "Member 'UPlayer_AnimBP_C::CActiveSlot' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, CanRotateHead_) == 0x005B0C, "Member 'UPlayer_AnimBP_C::CanRotateHead_' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, InMeleeStance) == 0x005B0D, "Member 'UPlayer_AnimBP_C::InMeleeStance' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, LadderClimb) == 0x005B0E, "Member 'UPlayer_AnimBP_C::LadderClimb' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Swimming) == 0x005B0F, "Member 'UPlayer_AnimBP_C::Swimming' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Swimming_UnderWater) == 0x005B10, "Member 'UPlayer_AnimBP_C::Swimming_UnderWater' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Lean) == 0x005B18, "Member 'UPlayer_AnimBP_C::Lean' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, LeftHandWeaponLocation) == 0x005B20, "Member 'UPlayer_AnimBP_C::LeftHandWeaponLocation' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, HeadRotation) == 0x005B38, "Member 'UPlayer_AnimBP_C::HeadRotation' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, HeadQuat) == 0x005B50, "Member 'UPlayer_AnimBP_C::HeadQuat' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, LeftHandWeaponRotator) == 0x005B70, "Member 'UPlayer_AnimBP_C::LeftHandWeaponRotator' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, CanFootIK_) == 0x005B88, "Member 'UPlayer_AnimBP_C::CanFootIK_' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, InVehicle_) == 0x005B89, "Member 'UPlayer_AnimBP_C::InVehicle_' has a wrong offset!");

}

