#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterThrowable

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MasterThrowable.BP_MasterThrowable_C.ExecuteUbergraph_BP_MasterThrowable
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable) == 0x000008, "Wrong alignment on BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable");
static_assert(sizeof(BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable) == 0x000010, "Wrong size on BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable");
static_assert(offsetof(BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable, EntryPoint) == 0x000000, "Member 'BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable, CallFunc_GetSkillTreeManager_TechTree) == 0x000008, "Member 'BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");

// Function BP_MasterThrowable.BP_MasterThrowable_C.SkillCheck
// 0x0028 (0x0028 - 0x0000)
struct BP_MasterThrowable_C_SkillCheck final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTechnologyUnlocked_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterThrowable_C_SkillCheck) == 0x000008, "Wrong alignment on BP_MasterThrowable_C_SkillCheck");
static_assert(sizeof(BP_MasterThrowable_C_SkillCheck) == 0x000028, "Wrong size on BP_MasterThrowable_C_SkillCheck");
static_assert(offsetof(BP_MasterThrowable_C_SkillCheck, Damage) == 0x000000, "Member 'BP_MasterThrowable_C_SkillCheck::Damage' has a wrong offset!");
static_assert(offsetof(BP_MasterThrowable_C_SkillCheck, Multiplier) == 0x000008, "Member 'BP_MasterThrowable_C_SkillCheck::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_MasterThrowable_C_SkillCheck, CallFunc_IsTechnologyUnlocked_ReturnValue) == 0x000010, "Member 'BP_MasterThrowable_C_SkillCheck::CallFunc_IsTechnologyUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterThrowable_C_SkillCheck, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_MasterThrowable_C_SkillCheck::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterThrowable_C_SkillCheck, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_MasterThrowable_C_SkillCheck::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

}

