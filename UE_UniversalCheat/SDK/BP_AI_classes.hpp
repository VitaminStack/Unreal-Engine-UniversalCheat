#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AI.BP_AI_C
// 0x0010 (0x0690 - 0x0680)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_AI_C : public ACharacter
{
public:
	uint8                                         Pad_678[0x8];                                      // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Dead;                                              // 0x0688(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BloodSplatterEnabled_;                             // 0x0689(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Event_BloodSplatter();
	void ExecuteUbergraph_BP_AI(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AI_C">();
	}
	static class ABP_AI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AI_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_AI_C) == 0x000010, "Wrong alignment on ABP_AI_C");
static_assert(sizeof(ABP_AI_C) == 0x000690, "Wrong size on ABP_AI_C");
static_assert(offsetof(ABP_AI_C, UberGraphFrame) == 0x000680, "Member 'ABP_AI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AI_C, Dead) == 0x000688, "Member 'ABP_AI_C::Dead' has a wrong offset!");
static_assert(offsetof(ABP_AI_C, BloodSplatterEnabled_) == 0x000689, "Member 'ABP_AI_C::BloodSplatterEnabled_' has a wrong offset!");

}

