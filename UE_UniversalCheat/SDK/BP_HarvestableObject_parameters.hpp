#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HarvestableObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HarvestableObject.BP_HarvestableObject_C.BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_HarvestableObject_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

// Function BP_HarvestableObject.BP_HarvestableObject_C.ExecuteUbergraph_BP_HarvestableObject
// 0x0030 (0x0030 - 0x0000)
struct BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Hits;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject) == 0x000008, "Wrong alignment on BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject");
static_assert(sizeof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject) == 0x000030, "Wrong size on BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, EntryPoint) == 0x000000, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000004, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, K2Node_ComponentBoundEvent_LayerIndex) == 0x000008, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, K2Node_ComponentBoundEvent_bIsSeen) == 0x00000C, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, K2Node_Event_HitLocation) == 0x000010, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, K2Node_Event_Hits) == 0x000028, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::K2Node_Event_Hits' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject, K2Node_SwitchInteger_CmpSuccess) == 0x00002C, "Member 'BP_HarvestableObject_C_ExecuteUbergraph_BP_HarvestableObject::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_HarvestableObject.BP_HarvestableObject_C.HitHarvestableObject
// 0x0020 (0x0020 - 0x0000)
struct BP_HarvestableObject_C_HitHarvestableObject final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hits;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_C_HitHarvestableObject) == 0x000008, "Wrong alignment on BP_HarvestableObject_C_HitHarvestableObject");
static_assert(sizeof(BP_HarvestableObject_C_HitHarvestableObject) == 0x000020, "Wrong size on BP_HarvestableObject_C_HitHarvestableObject");
static_assert(offsetof(BP_HarvestableObject_C_HitHarvestableObject, HitLocation) == 0x000000, "Member 'BP_HarvestableObject_C_HitHarvestableObject::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_C_HitHarvestableObject, Hits) == 0x000018, "Member 'BP_HarvestableObject_C_HitHarvestableObject::Hits' has a wrong offset!");

}

