#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_StrafeLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTT_StrafeLocation.BTT_StrafeLocation_C.ExecuteUbergraph_BTT_StrafeLocation
// 0x02B0 (0x02B0 - 0x0000)
struct BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB[0x1];                                      // 0x01DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation) == 0x000008, "Wrong alignment on BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation");
static_assert(sizeof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation) == 0x0002B0, "Wrong size on BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, EntryPoint) == 0x000000, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_RandomBool_ReturnValue) == 0x000028, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, K2Node_MakeArray_Array) == 0x000030, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000040, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, K2Node_Event_OwnerController) == 0x000058, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, K2Node_Event_ControlledPawn) == 0x000060, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_GetActorRightVector_ReturnValue) == 0x000068, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000088, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, Temp_bool_Variable) == 0x0000A2, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, K2Node_Select_Default) == 0x0000A8, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C0, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_LineTraceSingle_OutHit) == 0x0000F0, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x0001D8, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D9, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001DA, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_Time) == 0x0001DC, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_Distance) == 0x0001E0, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_Location) == 0x0001E8, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000200, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_Normal) == 0x000218, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000230, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_PhysMat) == 0x000248, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_HitActor) == 0x000250, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_HitComponent) == 0x000258, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000260, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_BoneName) == 0x000268, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_HitItem) == 0x000270, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_ElementIndex) == 0x000274, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000278, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_TraceStart) == 0x000280, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000298, "Member 'BTT_StrafeLocation_C_ExecuteUbergraph_BTT_StrafeLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BTT_StrafeLocation.BTT_StrafeLocation_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_StrafeLocation_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_StrafeLocation_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_StrafeLocation_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_StrafeLocation_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_StrafeLocation_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_StrafeLocation_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_StrafeLocation_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_StrafeLocation_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_StrafeLocation_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

