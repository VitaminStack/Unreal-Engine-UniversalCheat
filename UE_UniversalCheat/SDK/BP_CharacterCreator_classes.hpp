#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterCreator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterCreator.BP_CharacterCreator_C
// 0x00A8 (0x0340 - 0x0298)
class ABP_CharacterCreator_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight1;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mouth;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Accessory3;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Accessory2;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Accessory1;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EyebrowsMesh;                                      // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Torso;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HairMesh;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BeardMesh;                                         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LowerLegs;                                         // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Legs;                                              // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Feet;                                              // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 head;                                              // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Arms;                                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hands;                                             // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightTL_NewTrack_0_5B74E44B4A6536A3886F7A9607115F97; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightTL__Direction_5B74E44B4A6536A3886F7A9607115F97; // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightTL;                                           // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CharacterCreator(int32 EntryPoint);
	void LightTL__FinishedFunc();
	void LightTL__UpdateFunc();
	void SetDefault();
	void ToggleLight(bool TurnOn);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterCreator_C">();
	}
	static class ABP_CharacterCreator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CharacterCreator_C>();
	}
};
static_assert(alignof(ABP_CharacterCreator_C) == 0x000008, "Wrong alignment on ABP_CharacterCreator_C");
static_assert(sizeof(ABP_CharacterCreator_C) == 0x000340, "Wrong size on ABP_CharacterCreator_C");
static_assert(offsetof(ABP_CharacterCreator_C, UberGraphFrame) == 0x000298, "Member 'ABP_CharacterCreator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, PointLight1) == 0x0002A0, "Member 'ABP_CharacterCreator_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, PointLight) == 0x0002A8, "Member 'ABP_CharacterCreator_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Mouth) == 0x0002B0, "Member 'ABP_CharacterCreator_C::Mouth' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Accessory3) == 0x0002B8, "Member 'ABP_CharacterCreator_C::Accessory3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Accessory2) == 0x0002C0, "Member 'ABP_CharacterCreator_C::Accessory2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Accessory1) == 0x0002C8, "Member 'ABP_CharacterCreator_C::Accessory1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, EyebrowsMesh) == 0x0002D0, "Member 'ABP_CharacterCreator_C::EyebrowsMesh' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Torso) == 0x0002D8, "Member 'ABP_CharacterCreator_C::Torso' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, SkeletalMesh) == 0x0002E0, "Member 'ABP_CharacterCreator_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, HairMesh) == 0x0002E8, "Member 'ABP_CharacterCreator_C::HairMesh' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, BeardMesh) == 0x0002F0, "Member 'ABP_CharacterCreator_C::BeardMesh' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, LowerLegs) == 0x0002F8, "Member 'ABP_CharacterCreator_C::LowerLegs' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Legs) == 0x000300, "Member 'ABP_CharacterCreator_C::Legs' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Feet) == 0x000308, "Member 'ABP_CharacterCreator_C::Feet' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, head) == 0x000310, "Member 'ABP_CharacterCreator_C::head' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Arms) == 0x000318, "Member 'ABP_CharacterCreator_C::Arms' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, Hands) == 0x000320, "Member 'ABP_CharacterCreator_C::Hands' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, DefaultSceneRoot) == 0x000328, "Member 'ABP_CharacterCreator_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, LightTL_NewTrack_0_5B74E44B4A6536A3886F7A9607115F97) == 0x000330, "Member 'ABP_CharacterCreator_C::LightTL_NewTrack_0_5B74E44B4A6536A3886F7A9607115F97' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, LightTL__Direction_5B74E44B4A6536A3886F7A9607115F97) == 0x000334, "Member 'ABP_CharacterCreator_C::LightTL__Direction_5B74E44B4A6536A3886F7A9607115F97' has a wrong offset!");
static_assert(offsetof(ABP_CharacterCreator_C, LightTL) == 0x000338, "Member 'ABP_CharacterCreator_C::LightTL' has a wrong offset!");

}

