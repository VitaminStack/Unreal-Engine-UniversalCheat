#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HarvestableObject_ScrapMetal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_HarvestableObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C
// 0x0038 (0x0310 - 0x02D8)
class ABP_HarvestableObject_ScrapMetal_C final : public ABP_HarvestableObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HarvestableObject_ScrapMetal_C;  // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Current_Actor;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InteractingActorLoc;                               // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHeld;                                            // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Salvaged_;                                         // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Svr_PlaySound(const struct FVector& Location);
	void SetPickupCount(int32 NewCount, bool* Result);
	void SetInteractOption(const struct FGameplayTag& Option);
	void ReceiveBeginPlay();
	void PickupBuildFromGround();
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnExecuteInteractEnded();
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnEndInteract();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void MC_PlaySound(const struct FVector& Location);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void JigCanInteract(bool* Result);
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void ExecuteUbergraph_BP_HarvestableObject_ScrapMetal(int32 EntryPoint);
	void Event_UpdateTimer();
	void Event_StopTimer();
	void Event_HoldTimer();
	void BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HarvestableObject_ScrapMetal_C">();
	}
	static class ABP_HarvestableObject_ScrapMetal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HarvestableObject_ScrapMetal_C>();
	}
};
static_assert(alignof(ABP_HarvestableObject_ScrapMetal_C) == 0x000008, "Wrong alignment on ABP_HarvestableObject_ScrapMetal_C");
static_assert(sizeof(ABP_HarvestableObject_ScrapMetal_C) == 0x000310, "Wrong size on ABP_HarvestableObject_ScrapMetal_C");
static_assert(offsetof(ABP_HarvestableObject_ScrapMetal_C, UberGraphFrame_BP_HarvestableObject_ScrapMetal_C) == 0x0002D8, "Member 'ABP_HarvestableObject_ScrapMetal_C::UberGraphFrame_BP_HarvestableObject_ScrapMetal_C' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableObject_ScrapMetal_C, ParticleSystem) == 0x0002E0, "Member 'ABP_HarvestableObject_ScrapMetal_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableObject_ScrapMetal_C, Current_Actor) == 0x0002E8, "Member 'ABP_HarvestableObject_ScrapMetal_C::Current_Actor' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableObject_ScrapMetal_C, InteractingActorLoc) == 0x0002F0, "Member 'ABP_HarvestableObject_ScrapMetal_C::InteractingActorLoc' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableObject_ScrapMetal_C, IsHeld) == 0x000308, "Member 'ABP_HarvestableObject_ScrapMetal_C::IsHeld' has a wrong offset!");
static_assert(offsetof(ABP_HarvestableObject_ScrapMetal_C, Salvaged_) == 0x000309, "Member 'ABP_HarvestableObject_ScrapMetal_C::Salvaged_' has a wrong offset!");

}

