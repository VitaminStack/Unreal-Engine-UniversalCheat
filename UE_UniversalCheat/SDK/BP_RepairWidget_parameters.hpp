#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RepairWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_RepairWidget.BP_RepairWidget_C.ExecuteUbergraph_BP_RepairWidget
// 0x0110 (0x0110 - 0x0000)
struct BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Health;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxHealth;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget) == 0x000008, "Wrong alignment on BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget");
static_assert(sizeof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget) == 0x000110, "Wrong size on BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, EntryPoint) == 0x000000, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, K2Node_CustomEvent_Health) == 0x000008, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::K2Node_CustomEvent_Health' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, K2Node_CustomEvent_MaxHealth) == 0x000010, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::K2Node_CustomEvent_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000078, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000108, "Member 'BP_RepairWidget_C_ExecuteUbergraph_BP_RepairWidget::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function BP_RepairWidget.BP_RepairWidget_C.UpdateHealth
// 0x0010 (0x0010 - 0x0000)
struct BP_RepairWidget_C_UpdateHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RepairWidget_C_UpdateHealth) == 0x000008, "Wrong alignment on BP_RepairWidget_C_UpdateHealth");
static_assert(sizeof(BP_RepairWidget_C_UpdateHealth) == 0x000010, "Wrong size on BP_RepairWidget_C_UpdateHealth");
static_assert(offsetof(BP_RepairWidget_C_UpdateHealth, Health) == 0x000000, "Member 'BP_RepairWidget_C_UpdateHealth::Health' has a wrong offset!");
static_assert(offsetof(BP_RepairWidget_C_UpdateHealth, MaxHealth) == 0x000008, "Member 'BP_RepairWidget_C_UpdateHealth::MaxHealth' has a wrong offset!");

}

