#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIFunctions

#include "Basic.hpp"

#include "E_HitboxTypeAI_structs.hpp"
#include "S_BoneHitbox_structs.hpp"


namespace SDK::Params
{

// Function BP_AIFunctions.BP_AIFunctions_C.Is Hitbox?
// 0x0080 (0x0080 - 0x0000)
struct BP_AIFunctions_C_Is_Hitbox_ final
{
public:
	class FName                                   Bone_Name;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_HitboxTypeAI                                HitBox;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BoneHitbox>                  Bone_Hitbox_L;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BoneHitbox>                  K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BoneHitbox                          CallFunc_Array_Get_Item;                           // 0x0060(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIFunctions_C_Is_Hitbox_) == 0x000008, "Wrong alignment on BP_AIFunctions_C_Is_Hitbox_");
static_assert(sizeof(BP_AIFunctions_C_Is_Hitbox_) == 0x000080, "Wrong size on BP_AIFunctions_C_Is_Hitbox_");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, Bone_Name) == 0x000000, "Member 'BP_AIFunctions_C_Is_Hitbox_::Bone_Name' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, __WorldContext) == 0x000008, "Member 'BP_AIFunctions_C_Is_Hitbox_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, HitBox) == 0x000010, "Member 'BP_AIFunctions_C_Is_Hitbox_::HitBox' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, Bone_Hitbox_L) == 0x000018, "Member 'BP_AIFunctions_C_Is_Hitbox_::Bone_Hitbox_L' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_AIFunctions_C_Is_Hitbox_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_AIFunctions_C_Is_Hitbox_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_AIFunctions_C_Is_Hitbox_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'BP_AIFunctions_C_Is_Hitbox_::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_AIFunctions_C_Is_Hitbox_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_AIFunctions_C_Is_Hitbox_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_AIFunctions_C_Is_Hitbox_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_AIFunctions_C_Is_Hitbox_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Is_Hitbox_, CallFunc_Contains_ReturnValue) == 0x00007D, "Member 'BP_AIFunctions_C_Is_Hitbox_::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_AIFunctions.BP_AIFunctions_C.Same Team?
// 0x0040 (0x0040 - 0x0000)
struct BP_AIFunctions_C_Same_Team_ final
{
public:
	class UBP_SmartAIComponent_C*                 AI_1;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 AI_2;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Match;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Same_Team_L;                                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIFunctions_C_Same_Team_) == 0x000008, "Wrong alignment on BP_AIFunctions_C_Same_Team_");
static_assert(sizeof(BP_AIFunctions_C_Same_Team_) == 0x000040, "Wrong size on BP_AIFunctions_C_Same_Team_");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, AI_1) == 0x000000, "Member 'BP_AIFunctions_C_Same_Team_::AI_1' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, AI_2) == 0x000008, "Member 'BP_AIFunctions_C_Same_Team_::AI_2' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, __WorldContext) == 0x000010, "Member 'BP_AIFunctions_C_Same_Team_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, Match) == 0x000018, "Member 'BP_AIFunctions_C_Same_Team_::Match' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, Same_Team_L) == 0x000019, "Member 'BP_AIFunctions_C_Same_Team_::Same_Team_L' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, Temp_bool_True_if_break_was_hit_Variable) == 0x00001A, "Member 'BP_AIFunctions_C_Same_Team_::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AIFunctions_C_Same_Team_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AIFunctions_C_Same_Team_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_Array_Contains_ReturnValue) == 0x000039, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIFunctions_C_Same_Team_, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_AIFunctions_C_Same_Team_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

