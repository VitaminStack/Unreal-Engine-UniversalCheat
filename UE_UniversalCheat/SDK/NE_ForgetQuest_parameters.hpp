#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NE_ForgetQuest

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NE_ForgetQuest.NE_ForgetQuest_C.ExecuteEvent
// 0x0020 (0x0020 - 0x0000)
struct NE_ForgetQuest_C_ExecuteEvent final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNarrativeComponent*                    NarrativeComponent;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ForgetQuest_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NE_ForgetQuest_C_ExecuteEvent) == 0x000008, "Wrong alignment on NE_ForgetQuest_C_ExecuteEvent");
static_assert(sizeof(NE_ForgetQuest_C_ExecuteEvent) == 0x000020, "Wrong size on NE_ForgetQuest_C_ExecuteEvent");
static_assert(offsetof(NE_ForgetQuest_C_ExecuteEvent, Pawn) == 0x000000, "Member 'NE_ForgetQuest_C_ExecuteEvent::Pawn' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_ExecuteEvent, Controller) == 0x000008, "Member 'NE_ForgetQuest_C_ExecuteEvent::Controller' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_ExecuteEvent, NarrativeComponent) == 0x000010, "Member 'NE_ForgetQuest_C_ExecuteEvent::NarrativeComponent' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_ExecuteEvent, CallFunc_ForgetQuest_ReturnValue) == 0x000018, "Member 'NE_ForgetQuest_C_ExecuteEvent::CallFunc_ForgetQuest_ReturnValue' has a wrong offset!");

// Function NE_ForgetQuest.NE_ForgetQuest_C.GetGraphDisplayText
// 0x00C0 (0x00C0 - 0x0000)
struct NE_ForgetQuest_C_GetGraphDisplayText final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(NE_ForgetQuest_C_GetGraphDisplayText) == 0x000008, "Wrong alignment on NE_ForgetQuest_C_GetGraphDisplayText");
static_assert(sizeof(NE_ForgetQuest_C_GetGraphDisplayText) == 0x0000C0, "Wrong size on NE_ForgetQuest_C_GetGraphDisplayText");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, ReturnValue) == 0x000000, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::ReturnValue' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, CallFunc_GetClassDisplayName_ReturnValue) == 0x000010, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, K2Node_MakeArray_Array) == 0x000088, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, CallFunc_Format_ReturnValue) == 0x000098, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(NE_ForgetQuest_C_GetGraphDisplayText, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'NE_ForgetQuest_C_GetGraphDisplayText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

}

