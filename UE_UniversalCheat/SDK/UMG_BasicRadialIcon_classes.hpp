#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_BasicRadialIcon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FBasicIconSettings_structs.hpp"
#include "UMG_classes.hpp"
#include "EIconAnimationStyles_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UMG_BasicRadialIcon.UMG_BasicRadialIcon_C
// 0x0080 (0x0340 - 0x02C0)
class UUMG_BasicRadialIcon_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Shake;                                             // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Grow;                                              // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Sizer;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             IconImage;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        IconSize;                                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FFBasicIconSettings                    Settings;                                          // 0x02F8(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           CurrentColor;                                      // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          highlighted;                                       // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Alpha;                                             // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UMG_BasicRadialIcon(int32 EntryPoint);
	struct FLinearColor Get_Icon_ColorAndOpacity_0();
	void OnHighlight();
	void OnUnhighlight();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UMG_BasicRadialIcon_C">();
	}
	static class UUMG_BasicRadialIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUMG_BasicRadialIcon_C>();
	}
};
static_assert(alignof(UUMG_BasicRadialIcon_C) == 0x000008, "Wrong alignment on UUMG_BasicRadialIcon_C");
static_assert(sizeof(UUMG_BasicRadialIcon_C) == 0x000340, "Wrong size on UUMG_BasicRadialIcon_C");
static_assert(offsetof(UUMG_BasicRadialIcon_C, UberGraphFrame) == 0x0002C0, "Member 'UUMG_BasicRadialIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, Shake) == 0x0002C8, "Member 'UUMG_BasicRadialIcon_C::Shake' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, Grow) == 0x0002D0, "Member 'UUMG_BasicRadialIcon_C::Grow' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, Icon) == 0x0002D8, "Member 'UUMG_BasicRadialIcon_C::Icon' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, Sizer) == 0x0002E0, "Member 'UUMG_BasicRadialIcon_C::Sizer' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, IconImage) == 0x0002E8, "Member 'UUMG_BasicRadialIcon_C::IconImage' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, IconSize) == 0x0002F0, "Member 'UUMG_BasicRadialIcon_C::IconSize' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, Settings) == 0x0002F8, "Member 'UUMG_BasicRadialIcon_C::Settings' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, CurrentColor) == 0x000320, "Member 'UUMG_BasicRadialIcon_C::CurrentColor' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, highlighted) == 0x000330, "Member 'UUMG_BasicRadialIcon_C::highlighted' has a wrong offset!");
static_assert(offsetof(UUMG_BasicRadialIcon_C, Alpha) == 0x000338, "Member 'UUMG_BasicRadialIcon_C::Alpha' has a wrong offset!");

}

