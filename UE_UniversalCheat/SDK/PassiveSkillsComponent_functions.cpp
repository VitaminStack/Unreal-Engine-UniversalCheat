#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkillsComponent

#include "Basic.hpp"

#include "PassiveSkillsComponent_classes.hpp"
#include "PassiveSkillsComponent_parameters.hpp"


namespace SDK
{

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AddXP_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewXP                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP(double AddXP_0, double Skill, double* NewXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP");

	Params::PassiveSkillsComponent_C_AddXP Parms{};

	Parms.AddXP_0 = AddXP_0;
	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (NewXP != nullptr)
		*NewXP = Parms.NewXP;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_FirstAid
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_FirstAid(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_FirstAid");

	Params::PassiveSkillsComponent_C_AddXP_FirstAid Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Fishing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Fishing(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Fishing");

	Params::PassiveSkillsComponent_C_AddXP_Fishing Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Fitness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Fitness(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Fitness");

	Params::PassiveSkillsComponent_C_AddXP_Fitness Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Marksmanship
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Marksmanship(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Marksmanship");

	Params::PassiveSkillsComponent_C_AddXP_Marksmanship Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Reloading
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Reloading(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Reloading");

	Params::PassiveSkillsComponent_C_AddXP_Reloading Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Scavenging
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Scavenging(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Scavenging");

	Params::PassiveSkillsComponent_C_AddXP_Scavenging Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Sneaking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Sneaking(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Sneaking");

	Params::PassiveSkillsComponent_C_AddXP_Sneaking Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Strength
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Strength(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Strength");

	Params::PassiveSkillsComponent_C_AddXP_Strength Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Thief
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Thief(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Thief");

	Params::PassiveSkillsComponent_C_AddXP_Thief Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Toughness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::AddXP_Toughness(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "AddXP_Toughness");

	Params::PassiveSkillsComponent_C_AddXP_Toughness Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.CalculateMaxXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  MaxXP                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxXPLevel                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::CalculateMaxXP(double MaxXP, float* MaxXPLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "CalculateMaxXP");

	Params::PassiveSkillsComponent_C_CalculateMaxXP Parms{};

	Parms.MaxXP = MaxXP;

	UObject::ProcessEvent(Func, &Parms);

	if (MaxXPLevel != nullptr)
		*MaxXPLevel = Parms.MaxXPLevel;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.CalculatePercentage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentXP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxXP                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentPercentage                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::CalculatePercentage(double CurrentXP, double MaxXP, double* CurrentPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "CalculatePercentage");

	Params::PassiveSkillsComponent_C_CalculatePercentage Parms{};

	Parms.CurrentXP = CurrentXP;
	Parms.MaxXP = MaxXP;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentPercentage != nullptr)
		*CurrentPercentage = Parms.CurrentPercentage;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ComponentLoaded
// (Event, Public, BlueprintEvent)

void UPassiveSkillsComponent_C::ComponentLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "ComponentLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ComponentPreSave
// (Event, Public, BlueprintEvent)

void UPassiveSkillsComponent_C::ComponentPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "ComponentPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Event_ComponentLoad
// (BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Event_ComponentLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Event_ComponentLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ExecuteUbergraph_PassiveSkillsComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::ExecuteUbergraph_PassiveSkillsComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "ExecuteUbergraph_PassiveSkillsComponent");

	Params::PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.FirstAid_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::FirstAid_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "FirstAid_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Fishing_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Fishing_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Fishing_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Fitness_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Fitness_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Fitness_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.LevelUpNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::LevelUpNotification(const class FText& Skill, double Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "LevelUpNotification");

	Params::PassiveSkillsComponent_C_LevelUpNotification Parms{};

	Parms.Skill = std::move(Skill);
	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.LoadComponent
// (BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::LoadComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "LoadComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Marksmanship_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Marksmanship_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Marksmanship_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Reloading_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Reloading_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Reloading_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ResetPassiveSkills
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::ResetPassiveSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "ResetPassiveSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ResetPassiveSkills_NewSave
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::ResetPassiveSkills_NewSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "ResetPassiveSkills_NewSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Scavenging_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Scavenging_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Scavenging_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Sneaking_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Sneaking_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Sneaking_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Strength_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Strength_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Strength_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Thief_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Thief_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Thief_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Toughness_LevelUp
// (Public, BlueprintCallable, BlueprintEvent)

void UPassiveSkillsComponent_C::Toughness_LevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "Toughness_LevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_FirstAid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_FirstAid(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_FirstAid");

	Params::PassiveSkillsComponent_C_XPMultiplier_FirstAid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Fishing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Fishing(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Fishing");

	Params::PassiveSkillsComponent_C_XPMultiplier_Fishing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Fitness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Fitness(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Fitness");

	Params::PassiveSkillsComponent_C_XPMultiplier_Fitness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Marksmanship
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Marksmanship(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Marksmanship");

	Params::PassiveSkillsComponent_C_XPMultiplier_Marksmanship Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Reloading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Reloading(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Reloading");

	Params::PassiveSkillsComponent_C_XPMultiplier_Reloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Scavenging
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Scavenging(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Scavenging");

	Params::PassiveSkillsComponent_C_XPMultiplier_Scavenging Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Sneaking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Sneaking(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Sneaking");

	Params::PassiveSkillsComponent_C_XPMultiplier_Sneaking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Strength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Strength(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Strength");

	Params::PassiveSkillsComponent_C_XPMultiplier_Strength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Thief
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Thief(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Thief");

	Params::PassiveSkillsComponent_C_XPMultiplier_Thief Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Toughness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPassiveSkillsComponent_C::XPMultiplier_Toughness(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PassiveSkillsComponent_C", "XPMultiplier_Toughness");

	Params::PassiveSkillsComponent_C_XPMultiplier_Toughness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}

}

