#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterAICharacter

#include "Basic.hpp"

#include "E_BlockType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterAICharacter.BP_MasterAICharacter_C
// 0x01F0 (0x0870 - 0x0680)
class ABP_MasterAICharacter_C : public ACharacter
{
public:
	uint8                                         Pad_678[0x8];                                      // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNavigationInvokerComponent*            NavigationInvoker;                                 // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RangeStartPoint;                                   // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 BP_AIComponent;                                    // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Edge_Timeline_NewTrack_0_E35BA4E241D5E59A8EB450B4FEA52937; // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Edge_Timeline__Direction_E35BA4E241D5E59A8EB450B4FEA52937; // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5[0x3];                                      // 0x06A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Edge_Timeline;                                     // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Smooth_Move_Lerp_C8A3EC80484780C3B672F688B96D1C2A; // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Smooth_Move__Direction_C8A3EC80484780C3B672F688B96D1C2A; // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Smooth_Move;                                       // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Valt_Timeline_Up_Alpha_D0168D9449470A31646DA0ADA61D8223; // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Valt_Timeline__Direction_D0168D9449470A31646DA0ADA61D8223; // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C5[0x3];                                      // 0x06C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Valt_Timeline;                                     // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Climb_Timeline_Across_Alpha_ABEC2831489E1A5D1118BC8DC7BB5664; // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Climb_Timeline_Up_Alpha_ABEC2831489E1A5D1118BC8DC7BB5664; // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Climb_Timeline__Direction_ABEC2831489E1A5D1118BC8DC7BB5664; // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Climb_Timeline;                                    // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 ArgumentForQuest;                                  // 0x06E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Debug_Mode;                                        // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Debug_Text_Duration;                               // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AIWeapon_Master_C*                  Holdable_Actor;                                    // 0x0708(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End_Climb_Location;                                // 0x0710(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End_Climb_Hight;                                   // 0x0728(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Up_Movement_Done;                                  // 0x0740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Edge_Impact_Point;                                 // 0x0748(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Edge_Start_Location;                               // 0x0760(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_778[0x8];                                      // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             End_Location;                                      // 0x0780(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Start_Transform;                                   // 0x07E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start_Climb_Location;                              // 0x0840(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              BeginPlay;                                         // 0x0858(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          XpPopUpEnabled_;                                   // 0x0868(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Actor_Aim_Focus(class AActor* Instigator_0);
	void Actor_Attack_Target(class AActor** Attack_Target);
	void ActorDead_(bool* Dead_);
	void AI_Alert(class AActor* Alert_Actor);
	void AI_Animation_Switch(E_AIBehaviour Behaviour);
	void AI_Block(E_BlockType Block_Type, class AActor* Block_Attacker);
	void AI_Camera_Activate(bool Activate);
	void AI_Can_Interact_(bool* Can_Interact);
	void AI_Dead();
	void AI_End_Alert();
	void Alert_Actor_Defenders(class AActor* Attacked, class AActor* Attacker);
	void Climb_Location_Movement(bool Is_Valting, const struct FVector& End_Climb_Location_0, double Play_Rate);
	void Climb_Timeline__FinishedFunc();
	void Climb_Timeline__UpdateFunc();
	void Debug_Text(const class FString& InString, const struct FLinearColor& TextColor);
	void Edge_Timeline__FinishedFunc();
	void Edge_Timeline__UpdateFunc();
	void Event_BloodSplatter();
	void ExecuteUbergraph_BP_MasterAICharacter(int32 EntryPoint);
	void GetQuestArgument(const class FString& Argument);
	void OnLanded(const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void ReceivePossessed(class AController* NewController);
	void Smooth_Move_AI_Actor(const struct FTransform& End_Location_0, double Play_Time);
	void Smooth_Move__FinishedFunc();
	void Smooth_Move__UpdateFunc();
	void Turret_Destroyed_Effect();
	void Turret_End_Reload();
	void Turret_Idle_Start();
	void Turret_Idle_Stop();
	void Turret_Start_Reload();
	void Valt_Timeline__FinishedFunc();
	void Valt_Timeline__UpdateFunc();
	void XP(bool NewValue);

	void AI_Is_Dead_(bool* Dead) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterAICharacter_C">();
	}
	static class ABP_MasterAICharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterAICharacter_C>();
	}
};
static_assert(alignof(ABP_MasterAICharacter_C) == 0x000010, "Wrong alignment on ABP_MasterAICharacter_C");
static_assert(sizeof(ABP_MasterAICharacter_C) == 0x000870, "Wrong size on ABP_MasterAICharacter_C");
static_assert(offsetof(ABP_MasterAICharacter_C, UberGraphFrame) == 0x000680, "Member 'ABP_MasterAICharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, NavigationInvoker) == 0x000688, "Member 'ABP_MasterAICharacter_C::NavigationInvoker' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, RangeStartPoint) == 0x000690, "Member 'ABP_MasterAICharacter_C::RangeStartPoint' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, BP_AIComponent) == 0x000698, "Member 'ABP_MasterAICharacter_C::BP_AIComponent' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Edge_Timeline_NewTrack_0_E35BA4E241D5E59A8EB450B4FEA52937) == 0x0006A0, "Member 'ABP_MasterAICharacter_C::Edge_Timeline_NewTrack_0_E35BA4E241D5E59A8EB450B4FEA52937' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Edge_Timeline__Direction_E35BA4E241D5E59A8EB450B4FEA52937) == 0x0006A4, "Member 'ABP_MasterAICharacter_C::Edge_Timeline__Direction_E35BA4E241D5E59A8EB450B4FEA52937' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Edge_Timeline) == 0x0006A8, "Member 'ABP_MasterAICharacter_C::Edge_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Smooth_Move_Lerp_C8A3EC80484780C3B672F688B96D1C2A) == 0x0006B0, "Member 'ABP_MasterAICharacter_C::Smooth_Move_Lerp_C8A3EC80484780C3B672F688B96D1C2A' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Smooth_Move__Direction_C8A3EC80484780C3B672F688B96D1C2A) == 0x0006B4, "Member 'ABP_MasterAICharacter_C::Smooth_Move__Direction_C8A3EC80484780C3B672F688B96D1C2A' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Smooth_Move) == 0x0006B8, "Member 'ABP_MasterAICharacter_C::Smooth_Move' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Valt_Timeline_Up_Alpha_D0168D9449470A31646DA0ADA61D8223) == 0x0006C0, "Member 'ABP_MasterAICharacter_C::Valt_Timeline_Up_Alpha_D0168D9449470A31646DA0ADA61D8223' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Valt_Timeline__Direction_D0168D9449470A31646DA0ADA61D8223) == 0x0006C4, "Member 'ABP_MasterAICharacter_C::Valt_Timeline__Direction_D0168D9449470A31646DA0ADA61D8223' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Valt_Timeline) == 0x0006C8, "Member 'ABP_MasterAICharacter_C::Valt_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Climb_Timeline_Across_Alpha_ABEC2831489E1A5D1118BC8DC7BB5664) == 0x0006D0, "Member 'ABP_MasterAICharacter_C::Climb_Timeline_Across_Alpha_ABEC2831489E1A5D1118BC8DC7BB5664' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Climb_Timeline_Up_Alpha_ABEC2831489E1A5D1118BC8DC7BB5664) == 0x0006D4, "Member 'ABP_MasterAICharacter_C::Climb_Timeline_Up_Alpha_ABEC2831489E1A5D1118BC8DC7BB5664' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Climb_Timeline__Direction_ABEC2831489E1A5D1118BC8DC7BB5664) == 0x0006D8, "Member 'ABP_MasterAICharacter_C::Climb_Timeline__Direction_ABEC2831489E1A5D1118BC8DC7BB5664' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Climb_Timeline) == 0x0006E0, "Member 'ABP_MasterAICharacter_C::Climb_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, ArgumentForQuest) == 0x0006E8, "Member 'ABP_MasterAICharacter_C::ArgumentForQuest' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Debug_Mode) == 0x0006F8, "Member 'ABP_MasterAICharacter_C::Debug_Mode' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Debug_Text_Duration) == 0x000700, "Member 'ABP_MasterAICharacter_C::Debug_Text_Duration' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Holdable_Actor) == 0x000708, "Member 'ABP_MasterAICharacter_C::Holdable_Actor' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, End_Climb_Location) == 0x000710, "Member 'ABP_MasterAICharacter_C::End_Climb_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, End_Climb_Hight) == 0x000728, "Member 'ABP_MasterAICharacter_C::End_Climb_Hight' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Up_Movement_Done) == 0x000740, "Member 'ABP_MasterAICharacter_C::Up_Movement_Done' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Edge_Impact_Point) == 0x000748, "Member 'ABP_MasterAICharacter_C::Edge_Impact_Point' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Edge_Start_Location) == 0x000760, "Member 'ABP_MasterAICharacter_C::Edge_Start_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, End_Location) == 0x000780, "Member 'ABP_MasterAICharacter_C::End_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Start_Transform) == 0x0007E0, "Member 'ABP_MasterAICharacter_C::Start_Transform' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, Start_Climb_Location) == 0x000840, "Member 'ABP_MasterAICharacter_C::Start_Climb_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, BeginPlay) == 0x000858, "Member 'ABP_MasterAICharacter_C::BeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_MasterAICharacter_C, XpPopUpEnabled_) == 0x000868, "Member 'ABP_MasterAICharacter_C::XpPopUpEnabled_' has a wrong offset!");

}

