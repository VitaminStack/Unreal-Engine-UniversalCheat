#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KeypadDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterDoor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KeypadDoor.BP_KeypadDoor_C
// 0x0080 (0x0320 - 0x02A0)
class ABP_KeypadDoor_C final : public ABP_MasterDoor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Keypad;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorFrame;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Alpha_24B1A35C4ABB2793F93ECF91F5D538BF; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_24B1A35C4ABB2793F93ECF91F5D538BF; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_CloseDoor_Alpha_CA3F5BFE4C8C6A0CDF98E6B85C2F1F32; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_CloseDoor__Direction_CA3F5BFE4C8C6A0CDF98E6B85C2F1F32; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_CloseDoor;                                // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_OpenDoor_Alpha_4C2311F541FA940284509BA379658CCF; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_OpenDoor__Direction_4C2311F541FA940284509BA379658CCF; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_OpenDoor;                                 // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorFrame_;                                        // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Code;                                              // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Open_;                                             // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XPGiven_;                                          // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentActor;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          OpenedInThisInstance_;                             // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Timeline_OpenDoor__UpdateFunc();
	void Timeline_OpenDoor__FinishedFunc();
	void Timeline_CloseDoor__UpdateFunc();
	void Timeline_CloseDoor__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void SetPickupCount(int32 NewCount, bool* Result);
	void SetInteractOption(const struct FGameplayTag& Option);
	void ReceiveBeginPlay();
	void PickupBuildFromGround();
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnExecuteInteractEnded();
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnEndInteract();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void MC_PlaySound(class USoundBase* Sound);
	void MC_OpenDoor(class AActor* Actor);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void JigCanInteract(bool* Result);
	void IncorrectCode();
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void ExecuteUbergraph_BP_KeypadDoor(int32 EntryPoint);
	void Event_OpenDoorBehind();
	void Event_OpenDoor(class AActor* Actor);
	void Event_CloseDoor(class AActor* Actor);
	void CorrectCode();
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KeypadDoor_C">();
	}
	static class ABP_KeypadDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KeypadDoor_C>();
	}
};
static_assert(alignof(ABP_KeypadDoor_C) == 0x000008, "Wrong alignment on ABP_KeypadDoor_C");
static_assert(sizeof(ABP_KeypadDoor_C) == 0x000320, "Wrong size on ABP_KeypadDoor_C");
static_assert(offsetof(ABP_KeypadDoor_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_KeypadDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Keypad) == 0x0002A8, "Member 'ABP_KeypadDoor_C::Keypad' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, AIOSubject) == 0x0002B0, "Member 'ABP_KeypadDoor_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Arrow) == 0x0002B8, "Member 'ABP_KeypadDoor_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Door) == 0x0002C0, "Member 'ABP_KeypadDoor_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, DoorFrame) == 0x0002C8, "Member 'ABP_KeypadDoor_C::DoorFrame' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_1_Alpha_24B1A35C4ABB2793F93ECF91F5D538BF) == 0x0002D0, "Member 'ABP_KeypadDoor_C::Timeline_1_Alpha_24B1A35C4ABB2793F93ECF91F5D538BF' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_1__Direction_24B1A35C4ABB2793F93ECF91F5D538BF) == 0x0002D4, "Member 'ABP_KeypadDoor_C::Timeline_1__Direction_24B1A35C4ABB2793F93ECF91F5D538BF' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_1) == 0x0002D8, "Member 'ABP_KeypadDoor_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_CloseDoor_Alpha_CA3F5BFE4C8C6A0CDF98E6B85C2F1F32) == 0x0002E0, "Member 'ABP_KeypadDoor_C::Timeline_CloseDoor_Alpha_CA3F5BFE4C8C6A0CDF98E6B85C2F1F32' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_CloseDoor__Direction_CA3F5BFE4C8C6A0CDF98E6B85C2F1F32) == 0x0002E4, "Member 'ABP_KeypadDoor_C::Timeline_CloseDoor__Direction_CA3F5BFE4C8C6A0CDF98E6B85C2F1F32' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_CloseDoor) == 0x0002E8, "Member 'ABP_KeypadDoor_C::Timeline_CloseDoor' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_OpenDoor_Alpha_4C2311F541FA940284509BA379658CCF) == 0x0002F0, "Member 'ABP_KeypadDoor_C::Timeline_OpenDoor_Alpha_4C2311F541FA940284509BA379658CCF' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_OpenDoor__Direction_4C2311F541FA940284509BA379658CCF) == 0x0002F4, "Member 'ABP_KeypadDoor_C::Timeline_OpenDoor__Direction_4C2311F541FA940284509BA379658CCF' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Timeline_OpenDoor) == 0x0002F8, "Member 'ABP_KeypadDoor_C::Timeline_OpenDoor' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, DoorFrame_) == 0x000300, "Member 'ABP_KeypadDoor_C::DoorFrame_' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Code) == 0x000304, "Member 'ABP_KeypadDoor_C::Code' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, Open_) == 0x000308, "Member 'ABP_KeypadDoor_C::Open_' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, XPGiven_) == 0x000309, "Member 'ABP_KeypadDoor_C::XPGiven_' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, CurrentActor) == 0x000310, "Member 'ABP_KeypadDoor_C::CurrentActor' has a wrong offset!");
static_assert(offsetof(ABP_KeypadDoor_C, OpenedInThisInstance_) == 0x000318, "Member 'ABP_KeypadDoor_C::OpenedInThisInstance_' has a wrong offset!");

}

