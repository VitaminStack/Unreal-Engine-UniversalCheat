#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HarvestableObject_ScrapMetal

#include "Basic.hpp"

#include "S_RandomStatsConfig_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.Svr_PlaySound
// 0x0018 (0x0018 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound) == 0x000018, "Wrong size on BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound, Location) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_Svr_PlaySound::Location' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_SetPickupCount");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_SetPickupCount) == 0x000008, "Wrong size on BP_HarvestableObject_ScrapMetal_C_SetPickupCount");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_SetPickupCount, Result) == 0x000004, "Member 'BP_HarvestableObject_ScrapMetal_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_SetInteractOption");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_SetInteractOption) == 0x000008, "Wrong size on BP_HarvestableObject_ScrapMetal_C_SetInteractOption");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_SetInteractOption, Option) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_HarvestableObject_ScrapMetal_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_HarvestableObject_ScrapMetal_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_OnBeginInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_OnBeginInteract) == 0x000058, "Wrong size on BP_HarvestableObject_ScrapMetal_C_OnBeginInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.MC_PlaySound
// 0x0018 (0x0018 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_MC_PlaySound final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_MC_PlaySound) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_MC_PlaySound");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_MC_PlaySound) == 0x000018, "Wrong size on BP_HarvestableObject_ScrapMetal_C_MC_PlaySound");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_MC_PlaySound, Location) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_MC_PlaySound::Location' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_HarvestableObject_ScrapMetal_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.JigCanInteract
// 0x0002 (0x0002 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_JigCanInteract");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_JigCanInteract) == 0x000002, "Wrong size on BP_HarvestableObject_ScrapMetal_C_JigCanInteract");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_JigCanInteract, Result) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_JigCanInteract::Result' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_JigCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_HarvestableObject_ScrapMetal_C_JigCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_GetItemInfo");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_GetItemInfo) == 0x000078, "Wrong size on BP_HarvestableObject_ScrapMetal_C_GetItemInfo");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetItemInfo, Info) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetItemInfo, Count) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_HarvestableObject_ScrapMetal_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_HarvestableObject_ScrapMetal_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_GetInteractOptions");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_HarvestableObject_ScrapMetal_C_GetInteractOptions");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_HarvestableObject_ScrapMetal_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.ExecuteUbergraph_BP_HarvestableObject_ScrapMetal
// 0x0380 (0x0380 - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0028(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x00A0(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_3;                             // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_4;                             // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTechnologyUnlocked_ReturnValue;         // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0178(0x0050)(ConstParm)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_1;                              // 0x01D0(0x0050)(ConstParm)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map_2;                              // 0x0228(0x0050)()
	bool                                          CallFunc_JigTryAddItemSomewhere_Added_;            // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_JigTryAddItemSomewhere_UID;               // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FText>                K2Node_MakeMap_Map_3;                              // 0x0298(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_4;                              // 0x02E8(0x0050)()
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_2;              // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x034C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0360(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x036E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F[0x1];                                      // 0x036F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentTime_ImplicitCast;       // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal) == 0x000008, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal) == 0x000380, "Wrong size on BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, EntryPoint) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000004, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_ComponentBoundEvent_LayerIndex) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_ComponentBoundEvent_bIsSeen) == 0x00000C, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_SwitchInteger_CmpSuccess) == 0x00000D, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, Temp_bool_Has_Been_Initd_Variable) == 0x00000E, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_InteractingActor_3) == 0x000010, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_Option_2) == 0x000018, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_ByActor) == 0x000020, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_Payload) == 0x000028, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_InteractingActor_2) == 0x000058, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_Option_1) == 0x000060, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_CustomEvent_Location_1) == 0x000068, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_CustomEvent_Location) == 0x000080, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_InteractingActor_1) == 0x000098, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_Options) == 0x0000A0, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetHUD_HUD) == 0x0000F0, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetBoolCVar_ReturnValue) == 0x0000F8, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetHUD_HUD_1) == 0x000100, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_InteractingActor) == 0x000108, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_Event_Option) == 0x000110, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetHUD_HUD_2) == 0x000118, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetGameHUD_HUD) == 0x000120, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetHUD_HUD_3) == 0x000128, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetHUD_HUD_4) == 0x000148, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetHUD_HUD_4' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000150, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetComponentByClass_ReturnValue) == 0x000158, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000160, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_GetSkillTreeManager_TechTree) == 0x000168, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_IsTechnologyUnlocked_ReturnValue) == 0x000170, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_IsTechnologyUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_MakeMap_Map) == 0x000178, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_SelectInt_ReturnValue) == 0x0001C8, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_MakeMap_Map_1) == 0x0001D0, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_Multiply_IntInt_ReturnValue) == 0x000220, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_MakeMap_Map_2) == 0x000228, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_JigTryAddItemSomewhere_Added_) == 0x000278, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_JigTryAddItemSomewhere_Added_' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_JigTryAddItemSomewhere_UID) == 0x00027C, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_JigTryAddItemSomewhere_UID' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_ShowInteractWidget_Widget) == 0x000290, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_MakeMap_Map_3) == 0x000298, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_MakeMap_Map_3' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_MakeMap_Map_4) == 0x0002E8, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_MakeMap_Map_4' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_ShowInteractWidget_Widget_1) == 0x000338, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_ShowInteractWidget_Widget_2) == 0x000340, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_ShowInteractWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, Temp_bool_IsClosed_Variable) == 0x000348, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_CreateDelegate_OutputDelegate) == 0x00034C, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000360, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000368, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_IsValid_ReturnValue) == 0x00036C, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_IsValid_ReturnValue_1) == 0x00036D, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_IsValid_ReturnValue_2) == 0x00036E, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000370, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal, K2Node_VariableSet_CurrentTime_ImplicitCast) == 0x000378, "Member 'BP_HarvestableObject_ScrapMetal_C_ExecuteUbergraph_BP_HarvestableObject_ScrapMetal::K2Node_VariableSet_CurrentTime_ImplicitCast' has a wrong offset!");

// Function BP_HarvestableObject_ScrapMetal.BP_HarvestableObject_ScrapMetal_C.BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_HarvestableObject_ScrapMetal_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

