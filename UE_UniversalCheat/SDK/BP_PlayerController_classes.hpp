#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Struct_KeepInventory_structs.hpp"
#include "BP_MasterPlayerController_classes.hpp"
#include "Enum_Occupation_structs.hpp"
#include "EJoystickTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerController.BP_PlayerController_C
// 0x0138 (0x0990 - 0x0858)
class ABP_PlayerController_C final : public ABP_MasterPlayerController_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0858(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNarrativeComponent*                    NarrativeComponent;                                // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULevellingComponent_C*                  LevellingComponent;                                // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTechTreeComponent_C*                   TechTreeComponent;                                 // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              PassiveSkillsComponent;                            // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          AutoSaveEnabled;                                   // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_KeepInventory                  KeepInventory;                                     // 0x0890(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   Level;                                             // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Forename;                                          // 0x08C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Surname;                                           // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Sex;                                               // 0x08E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Age;                                               // 0x08F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	Enum_Occupation                               Occupation;                                        // 0x0908(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_909[0x3];                                      // 0x0909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ZombieKills;                                       // 0x090C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BossZombieKills;                                   // 0x0910(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimalKills;                                       // 0x0914(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HumanKills;                                        // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DaysSurvived;                                      // 0x091C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceTravelled;                                 // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InfestationsDestroyed;                             // 0x0928(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RespawnPointEnabled;                               // 0x092C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92D[0x3];                                      // 0x092D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RespawnLoc;                                        // 0x0930(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActorLoaded();
	void ActorPreLoad();
	void ActorPreSave();
	void ActorSaved();
	void BindPlayerRespawn();
	void CameraShake(class UClass* CameraShake_0, bool Force_);
	void CameraShakeClient(class UClass* Shake, float Scale);
	void Client_Died();
	void Client_Suicide();
	void ComponentsToSave(TArray<class UActorComponent*>* Components);
	void Death_PlayerStats();
	void EventLightShafts(bool NewValue);
	void EventVolFog(bool NewValue);
	void ExecuteUbergraph_BP_PlayerController(int32 EntryPoint);
	void GetJoystickDirection(EJoystickTypes Stick, struct FVector2D* StickInput);
	void LoadGameFromSlot();
	void LoadPlayerInventoryFromSlot();
	void OnCompleted_9CDBA9034C950D925C1539BE037C23EF();
	void OnCompleted_F36E30354316ADD99BBAD29E4E315233();
	void OnFailed_9CDBA9034C950D925C1539BE037C23EF();
	void OnFailed_F36E30354316ADD99BBAD29E4E315233();
	void ReceiveBeginPlay();
	void ReceivePossess(class APawn* PossessedPawn);
	void SaveGameToSlot();
	void SensitivityChanged(float NewValue);
	void Svr_RequestRespawn_Random();
	void Svr_RequestRespawn_SpawnPoint();
	void Svr_RequestRespawnSuicide();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerController_C">();
	}
	static class ABP_PlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerController_C>();
	}
};
static_assert(alignof(ABP_PlayerController_C) == 0x000010, "Wrong alignment on ABP_PlayerController_C");
static_assert(sizeof(ABP_PlayerController_C) == 0x000990, "Wrong size on ABP_PlayerController_C");
static_assert(offsetof(ABP_PlayerController_C, UberGraphFrame) == 0x000858, "Member 'ABP_PlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, NarrativeComponent) == 0x000860, "Member 'ABP_PlayerController_C::NarrativeComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, LevellingComponent) == 0x000868, "Member 'ABP_PlayerController_C::LevellingComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, TechTreeComponent) == 0x000870, "Member 'ABP_PlayerController_C::TechTreeComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, PassiveSkillsComponent) == 0x000878, "Member 'ABP_PlayerController_C::PassiveSkillsComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Widget) == 0x000880, "Member 'ABP_PlayerController_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, AutoSaveEnabled) == 0x000888, "Member 'ABP_PlayerController_C::AutoSaveEnabled' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, KeepInventory) == 0x000890, "Member 'ABP_PlayerController_C::KeepInventory' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Level) == 0x0008C0, "Member 'ABP_PlayerController_C::Level' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Forename) == 0x0008C8, "Member 'ABP_PlayerController_C::Forename' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Surname) == 0x0008D8, "Member 'ABP_PlayerController_C::Surname' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Sex) == 0x0008E8, "Member 'ABP_PlayerController_C::Sex' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Age) == 0x0008F8, "Member 'ABP_PlayerController_C::Age' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, Occupation) == 0x000908, "Member 'ABP_PlayerController_C::Occupation' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, ZombieKills) == 0x00090C, "Member 'ABP_PlayerController_C::ZombieKills' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, BossZombieKills) == 0x000910, "Member 'ABP_PlayerController_C::BossZombieKills' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, AnimalKills) == 0x000914, "Member 'ABP_PlayerController_C::AnimalKills' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, HumanKills) == 0x000918, "Member 'ABP_PlayerController_C::HumanKills' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, DaysSurvived) == 0x00091C, "Member 'ABP_PlayerController_C::DaysSurvived' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, DistanceTravelled) == 0x000920, "Member 'ABP_PlayerController_C::DistanceTravelled' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, InfestationsDestroyed) == 0x000928, "Member 'ABP_PlayerController_C::InfestationsDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, RespawnPointEnabled) == 0x00092C, "Member 'ABP_PlayerController_C::RespawnPointEnabled' has a wrong offset!");
static_assert(offsetof(ABP_PlayerController_C, RespawnLoc) == 0x000930, "Member 'ABP_PlayerController_C::RespawnLoc' has a wrong offset!");

}

