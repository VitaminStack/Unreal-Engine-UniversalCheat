#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_MoveToSpecificLoc

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.ExecuteUbergraph_AI_MoveToSpecificLoc
// 0x00F0 (0x00F0 - 0x0000)
struct AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_3;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLoc_RandomLoc;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue_1;    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USD_AIComponent_C*                      CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_2;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc) == 0x000008, "Wrong alignment on AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc");
static_assert(sizeof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc) == 0x0000F0, "Wrong size on AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, EntryPoint) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::EntryPoint' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CustomEvent_MovementResult_3) == 0x000004, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CustomEvent_MovementResult_3' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, Temp_byte_Variable) == 0x000005, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CustomEvent_MovementResult_1) == 0x000018, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CustomEvent_MovementResult) == 0x000019, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, Temp_byte_Variable_1) == 0x00002C, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_Event_OwnerController) == 0x000030, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_Event_ControlledPawn) == 0x000038, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000048, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_GetTargetLoc_RandomLoc) == 0x000060, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_GetTargetLoc_RandomLoc' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000078, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_CreateMoveToProxyObject_ReturnValue_1) == 0x000088, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_CreateMoveToProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000090, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000099, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00009A, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_IsValid_ReturnValue_2) == 0x00009B, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_BooleanOR_ReturnValue) == 0x00009C, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A0, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_Vector_Distance_ReturnValue) == 0x0000B8, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_Vector_Distance_ReturnValue_1) == 0x0000C0, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000C9, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000CC, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CustomEvent_MovementResult_2) == 0x0000DC, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CustomEvent_MovementResult_2' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000E0, "Member 'AI_MoveToSpecificLoc_C_ExecuteUbergraph_AI_MoveToSpecificLoc::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.GetDistance&Direction
// 0x0088 (0x0088 - 0x0000)
struct AI_MoveToSpecificLoc_C_GetDistance_Direction final
{
public:
	struct FVector                                TargetLoc;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLoc;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_GetDistance_Direction) == 0x000008, "Wrong alignment on AI_MoveToSpecificLoc_C_GetDistance_Direction");
static_assert(sizeof(AI_MoveToSpecificLoc_C_GetDistance_Direction) == 0x000088, "Wrong size on AI_MoveToSpecificLoc_C_GetDistance_Direction");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, TargetLoc) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::TargetLoc' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, CurrentLoc) == 0x000018, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::CurrentLoc' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, Distance) == 0x000030, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::Distance' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, Direction) == 0x000038, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::Direction' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetDistance_Direction, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'AI_MoveToSpecificLoc_C_GetDistance_Direction::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.GetTargetLoc
// 0x0100 (0x0100 - 0x0000)
struct AI_MoveToSpecificLoc_C_GetTargetLoc final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Controlled_Pawn;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomLoc;                                         // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDistance_Direction_Distance;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDistance_Direction_Direction;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation_1; // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue_1; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_GetTargetLoc) == 0x000008, "Wrong alignment on AI_MoveToSpecificLoc_C_GetTargetLoc");
static_assert(sizeof(AI_MoveToSpecificLoc_C_GetTargetLoc) == 0x000100, "Wrong size on AI_MoveToSpecificLoc_C_GetTargetLoc");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, Target) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::Target' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, Controlled_Pawn) == 0x000018, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::Controlled_Pawn' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, RandomLoc) == 0x000020, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::RandomLoc' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x000068, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000080, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_GetDistance_Direction_Distance) == 0x000088, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_GetDistance_Direction_Distance' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_GetDistance_Direction_Direction) == 0x000090, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_GetDistance_Direction_Direction' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_Vector_Distance_ReturnValue) == 0x0000D8, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation_1) == 0x0000E0, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue_1) == 0x0000F8, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_GetTargetLoc, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F9, "Member 'AI_MoveToSpecificLoc_C_GetTargetLoc::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.OnFail_23691D184123CB040E4C31A41B25C185
// 0x0001 (0x0001 - 0x0000)
struct AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185) == 0x000001, "Wrong alignment on AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185");
static_assert(sizeof(AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185) == 0x000001, "Wrong size on AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185");
static_assert(offsetof(AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185, MovementResult) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_OnFail_23691D184123CB040E4C31A41B25C185::MovementResult' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.OnFail_413338964241E2AC5210E1B19DC04362
// 0x0001 (0x0001 - 0x0000)
struct AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362) == 0x000001, "Wrong alignment on AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362");
static_assert(sizeof(AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362) == 0x000001, "Wrong size on AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362");
static_assert(offsetof(AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362, MovementResult) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_OnFail_413338964241E2AC5210E1B19DC04362::MovementResult' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.OnSuccess_23691D184123CB040E4C31A41B25C185
// 0x0001 (0x0001 - 0x0000)
struct AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185) == 0x000001, "Wrong alignment on AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185");
static_assert(sizeof(AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185) == 0x000001, "Wrong size on AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185");
static_assert(offsetof(AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185, MovementResult) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_OnSuccess_23691D184123CB040E4C31A41B25C185::MovementResult' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.OnSuccess_413338964241E2AC5210E1B19DC04362
// 0x0001 (0x0001 - 0x0000)
struct AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362 final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362) == 0x000001, "Wrong alignment on AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362");
static_assert(sizeof(AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362) == 0x000001, "Wrong size on AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362");
static_assert(offsetof(AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362, MovementResult) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_OnSuccess_413338964241E2AC5210E1B19DC04362::MovementResult' has a wrong offset!");

// Function AI_MoveToSpecificLoc.AI_MoveToSpecificLoc_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct AI_MoveToSpecificLoc_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AI_MoveToSpecificLoc_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on AI_MoveToSpecificLoc_C_ReceiveExecuteAI");
static_assert(sizeof(AI_MoveToSpecificLoc_C_ReceiveExecuteAI) == 0x000010, "Wrong size on AI_MoveToSpecificLoc_C_ReceiveExecuteAI");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'AI_MoveToSpecificLoc_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(AI_MoveToSpecificLoc_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'AI_MoveToSpecificLoc_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

