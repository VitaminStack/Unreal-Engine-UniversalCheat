#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FishingRodPickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_StaticMeshPickup_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FishingRodPickup.BP_FishingRodPickup_C
// 0x0030 (0x0340 - 0x0310)
class ABP_FishingRodPickup_C final : public ABP_StaticMeshPickup_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FishingRodPickup_C;              // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFishingRodPickupComponent_C*           FishingRodPickupComponent;                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        ChanceToCatch;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        CableVar;                                          // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FishingTimer;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_FishingBuoy_C*                      FishingLocation;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CastRod();
	void CatchFish();
	void Event_Fish_();
	void Event_FishingBehaviour();
	void ExecuteUbergraph_BP_FishingRodPickup(int32 EntryPoint);
	void RandomChance(double Chance, bool* Fish_);
	void StartFishing();
	void StopFishing(bool Caught_A_Fish_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FishingRodPickup_C">();
	}
	static class ABP_FishingRodPickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FishingRodPickup_C>();
	}
};
static_assert(alignof(ABP_FishingRodPickup_C) == 0x000008, "Wrong alignment on ABP_FishingRodPickup_C");
static_assert(sizeof(ABP_FishingRodPickup_C) == 0x000340, "Wrong size on ABP_FishingRodPickup_C");
static_assert(offsetof(ABP_FishingRodPickup_C, UberGraphFrame_BP_FishingRodPickup_C) == 0x000310, "Member 'ABP_FishingRodPickup_C::UberGraphFrame_BP_FishingRodPickup_C' has a wrong offset!");
static_assert(offsetof(ABP_FishingRodPickup_C, FishingRodPickupComponent) == 0x000318, "Member 'ABP_FishingRodPickup_C::FishingRodPickupComponent' has a wrong offset!");
static_assert(offsetof(ABP_FishingRodPickup_C, ChanceToCatch) == 0x000320, "Member 'ABP_FishingRodPickup_C::ChanceToCatch' has a wrong offset!");
static_assert(offsetof(ABP_FishingRodPickup_C, CableVar) == 0x000328, "Member 'ABP_FishingRodPickup_C::CableVar' has a wrong offset!");
static_assert(offsetof(ABP_FishingRodPickup_C, FishingTimer) == 0x000330, "Member 'ABP_FishingRodPickup_C::FishingTimer' has a wrong offset!");
static_assert(offsetof(ABP_FishingRodPickup_C, FishingLocation) == 0x000338, "Member 'ABP_FishingRodPickup_C::FishingLocation' has a wrong offset!");

}

