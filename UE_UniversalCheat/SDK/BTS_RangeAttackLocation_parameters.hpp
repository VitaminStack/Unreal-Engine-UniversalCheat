#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_RangeAttackLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTS_RangeAttackLocation.BTS_RangeAttackLocation_C.Closest Attack Target
// 0x0070 (0x0070 - 0x0000)
struct BTS_RangeAttackLocation_C_Closest_Attack_Target final
{
public:
	class AActor*                                 Closest_Attack_Target_0;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Array_Element_L;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Closest_AI_L;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Closest_Distance_L;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Closest_Distance_L_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_RangeAttackLocation_C_Closest_Attack_Target) == 0x000008, "Wrong alignment on BTS_RangeAttackLocation_C_Closest_Attack_Target");
static_assert(sizeof(BTS_RangeAttackLocation_C_Closest_Attack_Target) == 0x000070, "Wrong size on BTS_RangeAttackLocation_C_Closest_Attack_Target");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Closest_Attack_Target_0) == 0x000000, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Closest_Attack_Target_0' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Array_Element_L) == 0x000008, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Array_Element_L' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Closest_AI_L) == 0x000010, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Closest_AI_L' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Closest_Distance_L) == 0x000018, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Closest_Distance_L' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_GetDistanceTo_ReturnValue) == 0x00003C, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000041, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Array_Get_Item) == 0x000048, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Closest_Attack_Target, K2Node_VariableSet_Closest_Distance_L_ImplicitCast) == 0x000068, "Member 'BTS_RangeAttackLocation_C_Closest_Attack_Target::K2Node_VariableSet_Closest_Distance_L_ImplicitCast' has a wrong offset!");

// Function BTS_RangeAttackLocation.BTS_RangeAttackLocation_C.ExecuteUbergraph_BTS_RangeAttackLocation
// 0x01A0 (0x01A0 - 0x0000)
struct BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Closest_Attack_Target_Closest_Attack_Target; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Reset_Attack_Target_New_Attack_Target;    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Reset_Attack_Target_Attack_Target;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Get_Range_Attack_Montage_Montage;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Range_Attack_Frequancy_Use_Anim_Time;     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Range_Attack_Frequancy_Range_Attack_Frequency; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue_1;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Range_Attack_Distance_Attack_Range; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue_2;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Ammo_Check_Has_Ammo;              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Current_Ammo_Check_Ammo;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Ammo_Check_Has_Ammo_1;            // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Current_Ammo_Check_Ammo_1;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineOfSightTo_ReturnValue;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x1];                                      // 0x0113(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0114(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Range_Attack_Distance_Attack_Range_1; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineOfSightTo_ReturnValue_1;              // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Reset_Attack_Target_New_Attack_Target_1;  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Reset_Attack_Target_Attack_Target_1;      // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_AIInterface_C>     K2Node_DynamicCast_AsBP_AIInterface;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_Is_Dead__Dead;                         // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineOfSightTo_ReturnValue_2;              // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AnimAttackTime_ImplicitCast;    // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation) == 0x000008, "Wrong alignment on BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation");
static_assert(sizeof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation) == 0x0001A0, "Wrong size on BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, EntryPoint) == 0x000000, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Closest_Attack_Target_Closest_Attack_Target) == 0x000030, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Closest_Attack_Target_Closest_Attack_Target' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_GetDistanceTo_ReturnValue) == 0x000038, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00003D, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Reset_Attack_Target_New_Attack_Target) == 0x00003E, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Reset_Attack_Target_New_Attack_Target' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Reset_Attack_Target_Attack_Target) == 0x000040, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Reset_Attack_Target_Attack_Target' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_VSize_ReturnValue_1) == 0x000078, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000080, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000088, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Get_Range_Attack_Montage_Montage) == 0x0000A8, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Get_Range_Attack_Montage_Montage' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Range_Attack_Frequancy_Use_Anim_Time) == 0x0000B0, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Range_Attack_Frequancy_Use_Anim_Time' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Range_Attack_Frequancy_Range_Attack_Frequency) == 0x0000B8, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Range_Attack_Frequancy_Range_Attack_Frequency' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_GetPlayLength_ReturnValue) == 0x0000C0, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_3) == 0x0000C4, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_GetDistanceTo_ReturnValue_1) == 0x0000C8, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_GetDistanceTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CC, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_4) == 0x0000CD, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000CE, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_BooleanAND_ReturnValue) == 0x0000CF, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Current_Range_Attack_Distance_Attack_Range) == 0x0000D0, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Current_Range_Attack_Distance_Attack_Range' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_GetDistanceTo_ReturnValue_2) == 0x0000D8, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_GetDistanceTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000DC, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Current_Ammo_Check_Has_Ammo) == 0x0000DD, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Current_Ammo_Check_Has_Ammo' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Current_Ammo_Check_Ammo) == 0x0000E0, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Current_Ammo_Check_Ammo' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Current_Ammo_Check_Has_Ammo_1) == 0x0000E4, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Current_Ammo_Check_Has_Ammo_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Current_Ammo_Check_Ammo_1) == 0x0000E8, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Current_Ammo_Check_Ammo_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, Temp_bool_Variable) == 0x0000EC, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_5) == 0x0000ED, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_Event_OwnerController) == 0x0000F0, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_Event_ControlledPawn) == 0x0000F8, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_Event_DeltaSeconds) == 0x000100, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000108, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_6) == 0x000110, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_7) == 0x000111, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_LineOfSightTo_ReturnValue) == 0x000112, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_LineOfSightTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_CreateDelegate_OutputDelegate) == 0x000114, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000124, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000128, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Current_Range_Attack_Distance_Attack_Range_1) == 0x000130, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Current_Range_Attack_Distance_Attack_Range_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000138, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_8) == 0x000141, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_9) == 0x000142, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_LineOfSightTo_ReturnValue_1) == 0x000143, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_LineOfSightTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Reset_Attack_Target_New_Attack_Target_1) == 0x000144, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Reset_Attack_Target_New_Attack_Target_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Reset_Attack_Target_Attack_Target_1) == 0x000148, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Reset_Attack_Target_Attack_Target_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_DynamicCast_AsBP_AIInterface) == 0x000150, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_DynamicCast_AsBP_AIInterface' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_AI_Is_Dead__Dead) == 0x000161, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_AI_Is_Dead__Dead' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_LineOfSightTo_ReturnValue_2) == 0x000162, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_LineOfSightTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_10) == 0x000163, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_Select_Default) == 0x000168, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_IsValid_ReturnValue_11) == 0x000170, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, K2Node_VariableSet_AnimAttackTime_ImplicitCast) == 0x000180, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::K2Node_VariableSet_AnimAttackTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000188, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000190, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000198, "Member 'BTS_RangeAttackLocation_C_ExecuteUbergraph_BTS_RangeAttackLocation::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BTS_RangeAttackLocation.BTS_RangeAttackLocation_C.Get Range Attack Montage
// 0x0078 (0x0078 - 0x0000)
struct BTS_RangeAttackLocation_C_Get_Range_Attack_Montage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_2;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_3;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage) == 0x000008, "Wrong alignment on BTS_RangeAttackLocation_C_Get_Range_Attack_Montage");
static_assert(sizeof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage) == 0x000078, "Wrong size on BTS_RangeAttackLocation_C_Get_Range_Attack_Montage");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, Montage) == 0x000000, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::Montage' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000010, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Get_Item) == 0x000018, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00002C, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000030, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000040, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Length_ReturnValue_2) == 0x000054, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000060, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Get_Item_3) == 0x000068, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_Length_ReturnValue_3) == 0x000070, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000074, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000075, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Get_Range_Attack_Montage, K2Node_SwitchEnum_CmpSuccess_1) == 0x000076, "Member 'BTS_RangeAttackLocation_C_Get_Range_Attack_Montage::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BTS_RangeAttackLocation.BTS_RangeAttackLocation_C.Range Attack Frequancy
// 0x0058 (0x0058 - 0x0000)
struct BTS_RangeAttackLocation_C_Range_Attack_Frequancy final
{
public:
	bool                                          Use_Anim_Time_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Range_Attack_Frequency;                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy) == 0x000008, "Wrong alignment on BTS_RangeAttackLocation_C_Range_Attack_Frequancy");
static_assert(sizeof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy) == 0x000058, "Wrong size on BTS_RangeAttackLocation_C_Range_Attack_Frequancy");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, Use_Anim_Time_0) == 0x000000, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::Use_Anim_Time_0' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, Range_Attack_Frequency) == 0x000008, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::Range_Attack_Frequency' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, Temp_real_Variable) == 0x000010, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, Temp_bool_Variable) == 0x000018, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, Temp_real_Variable_1) == 0x000020, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, Temp_bool_Variable_1) == 0x000028, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000029, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, K2Node_Select_Default) == 0x000030, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_Range_Attack_Frequancy, K2Node_Select_Default_1) == 0x000050, "Member 'BTS_RangeAttackLocation_C_Range_Attack_Frequancy::K2Node_Select_Default_1' has a wrong offset!");

// Function BTS_RangeAttackLocation.BTS_RangeAttackLocation_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTS_RangeAttackLocation_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTS_RangeAttackLocation_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTS_RangeAttackLocation_C_ReceiveTickAI");
static_assert(sizeof(BTS_RangeAttackLocation_C_ReceiveTickAI) == 0x000018, "Wrong size on BTS_RangeAttackLocation_C_ReceiveTickAI");
static_assert(offsetof(BTS_RangeAttackLocation_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTS_RangeAttackLocation_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTS_RangeAttackLocation_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTS_RangeAttackLocation_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTS_RangeAttackLocation_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

