#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SmartAIComponent

#include "Basic.hpp"

#include "BP_SmartAIComponent_classes.hpp"
#include "BP_SmartAIComponent_parameters.hpp"


namespace SDK
{

// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Activate AI
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Activate_AI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Activate AI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Active Melee Detect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Active_Melee_Detect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Active Melee Detect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Actor Aim Focus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Actor_Aim_Focus(class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Actor Aim Focus");

	Params::BP_SmartAIComponent_C_Actor_Aim_Focus Parms{};

	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Actor Attack Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attack_Target_0                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Actor_Attack_Target(class AActor** Attack_Target_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Actor Attack Target");

	Params::BP_SmartAIComponent_C_Actor_Attack_Target Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_Target_0 != nullptr)
		*Attack_Target_0 = Parms.Attack_Target_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Add Current Ammo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Add_Amount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Add_Current_Ammo(int32 Add_Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Add Current Ammo");

	Params::BP_SmartAIComponent_C_Add_Current_Ammo Parms{};

	Parms.Add_Amount = Add_Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Alert
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Alert_Actor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Alert(class AActor* Alert_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Alert");

	Params::BP_SmartAIComponent_C_AI_Alert Parms{};

	Parms.Alert_Actor = Alert_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Animation Switch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AIBehaviour                           Behaviour                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Animation_Switch(E_AIBehaviour Behaviour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Animation Switch");

	Params::BP_SmartAIComponent_C_AI_Animation_Switch Parms{};

	Parms.Behaviour = Behaviour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Block
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BlockType                             Block_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Block_Attacker                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Block(E_BlockType Block_Type, class AActor* Block_Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Block");

	Params::BP_SmartAIComponent_C_AI_Block Parms{};

	Parms.Block_Type = Block_Type;
	Parms.Block_Attacker = Block_Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Camera Activate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Camera_Activate(bool Activate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Camera Activate");

	Params::BP_SmartAIComponent_C_AI_Camera_Activate Parms{};

	Parms.Activate_0 = Activate_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Can Interact?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_Interact                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Can_Interact_(bool* Can_Interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Can Interact?");

	Params::BP_SmartAIComponent_C_AI_Can_Interact_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Interact != nullptr)
		*Can_Interact = Parms.Can_Interact;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Dead
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::AI_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI End Alert
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::AI_End_Alert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI End Alert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Interact Time Total
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Time_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Interact_Time_Total(double* Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Interact Time Total");

	Params::BP_SmartAIComponent_C_AI_Interact_Time_Total Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time_0 != nullptr)
		*Time_0 = Parms.Time_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Take Damage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Take_Damage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Take Damage");

	Params::BP_SmartAIComponent_C_AI_Take_Damage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Trigger Activated Bind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Overlap_Actor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_AITrigger_C*                  AI_Trigger                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Trigger_Activated_Bind(class AActor* Overlap_Actor, class ABP_AITrigger_C* AI_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Trigger Activated Bind");

	Params::BP_SmartAIComponent_C_AI_Trigger_Activated_Bind Parms{};

	Parms.Overlap_Actor = Overlap_Actor;
	Parms.AI_Trigger = AI_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Trigger Deactivated Bind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           End_Overlap_Actor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_AITrigger_C*                  AI_Trigger                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Trigger_Deactivated_Bind(class AActor* End_Overlap_Actor, class ABP_AITrigger_C* AI_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Trigger Deactivated Bind");

	Params::BP_SmartAIComponent_C_AI_Trigger_Deactivated_Bind Parms{};

	Parms.End_Overlap_Actor = End_Overlap_Actor;
	Parms.AI_Trigger = AI_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Aimed Focus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Aimed_Instigator                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Aimed_Focus(class AActor* Aimed_Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Aimed Focus");

	Params::BP_SmartAIComponent_C_Aimed_Focus Parms{};

	Parms.Aimed_Instigator = Aimed_Instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Alert Actor Defenders
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Alert_Actor_Defenders(class AActor* Attacked, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Alert Actor Defenders");

	Params::BP_SmartAIComponent_C_Alert_Actor_Defenders Parms{};

	Parms.Attacked = Attacked;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Alert Defenders
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Alert_Defenders(class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Alert Defenders");

	Params::BP_SmartAIComponent_C_Alert_Defenders Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Attack Distance Check
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Attack_Distance_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Attack Distance Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Audio Reaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      AI_Stimulus                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_SmartAIComponent_C::Audio_Reaction(class AActor* Actor, const struct FAIStimulus& AI_Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Audio Reaction");

	Params::BP_SmartAIComponent_C_Audio_Reaction Parms{};

	Parms.Actor = Actor;
	Parms.AI_Stimulus = std::move(AI_Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Basic Melee Attack Collision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Basic_Melee_Attack_Collision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Basic Melee Attack Collision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Begin Flee
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Begin_Flee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Begin Flee");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Cancel AI Interact
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Cancel_AI_Interact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Cancel AI Interact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Cancel Melee Timer
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Cancel_Melee_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Cancel Melee Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Cancel Temp Behaviour
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Cancel_Temp_Behaviour()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Cancel Temp Behaviour");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.ChangeDamageMulti
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ChangeAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::ChangeDamageMulti(double ChangeAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "ChangeDamageMulti");

	Params::BP_SmartAIComponent_C_ChangeDamageMulti Parms{};

	Parms.ChangeAmount = ChangeAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Check Attached Holdables
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Holdable_Class                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AIWeapon_Master_C*            Holdable                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Check_Attached_Holdables(class UClass* Holdable_Class, bool* Return_value, class ABP_AIWeapon_Master_C** Holdable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Check Attached Holdables");

	Params::BP_SmartAIComponent_C_Check_Attached_Holdables Parms{};

	Parms.Holdable_Class = Holdable_Class;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;

	if (Holdable != nullptr)
		*Holdable = Parms.Holdable;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Check Attack Targets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Target_Found                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Check_Attack_Targets(bool* Target_Found, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Check Attack Targets");

	Params::BP_SmartAIComponent_C_Check_Attack_Targets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target_Found != nullptr)
		*Target_Found = Parms.Target_Found;

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Check Block
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BlockType                             Block_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Block_Attacker                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Check_Block(E_BlockType Block_Type, class AActor* Block_Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Check Block");

	Params::BP_SmartAIComponent_C_Check_Block Parms{};

	Parms.Block_Type = Block_Type;
	Parms.Block_Attacker = Block_Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Check Flee Alert
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Check_Flee_Alert(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Check Flee Alert");

	Params::BP_SmartAIComponent_C_Check_Flee_Alert Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Check Start Deactivated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Check_Start_Deactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Check Start Deactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Clear Emote
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Clear_Emote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Clear Emote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Climb Up
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Climb_Up()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Climb Up");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Climb Up Close
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Climb_Up_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Climb Up Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Climbing Checks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Climbing_Checks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Climbing Checks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Closest Flee From Actor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Closest_Flee_From_Actor(class AActor** Actor, double* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Closest Flee From Actor");

	Params::BP_SmartAIComponent_C_Closest_Flee_From_Actor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Convert To Behaviour
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_StartingAIBehaviours                  Starting_Behaviour                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AIBehaviour                           Behaviour                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Convert_To_Behaviour(E_StartingAIBehaviours Starting_Behaviour, E_AIBehaviour* Behaviour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Convert To Behaviour");

	Params::BP_SmartAIComponent_C_Convert_To_Behaviour Parms{};

	Parms.Starting_Behaviour = Starting_Behaviour;

	UObject::ProcessEvent(Func, &Parms);

	if (Behaviour != nullptr)
		*Behaviour = Parms.Behaviour;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Cooldown Timer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Cooldown_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Cooldown Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.CreateNewController
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::CreateNewController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "CreateNewController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Crouch Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Crouch_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Crouch Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Current Ammo Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Has_Ammo                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ammo                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Current_Ammo_Check(bool* Has_Ammo, int32* Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Current Ammo Check");

	Params::BP_SmartAIComponent_C_Current_Ammo_Check Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Has_Ammo != nullptr)
		*Has_Ammo = Parms.Has_Ammo;

	if (Ammo != nullptr)
		*Ammo = Parms.Ammo;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Current Range Attack Distance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Attack_Range                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Current_Range_Attack_Distance(double* Attack_Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Current Range Attack Distance");

	Params::BP_SmartAIComponent_C_Current_Range_Attack_Distance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_Range != nullptr)
		*Attack_Range = Parms.Attack_Range;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Current Reaction Settings
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_GeneralSettings               Reaction_Settings                                      (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Current_Reaction_Settings(struct FS_GeneralSettings* Reaction_Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Current Reaction Settings");

	Params::BP_SmartAIComponent_C_Current_Reaction_Settings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Reaction_Settings != nullptr)
		*Reaction_Settings = std::move(Parms.Reaction_Settings);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Damage Reaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Damage_Reaction(double Damage, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Damage Reaction");

	Params::BP_SmartAIComponent_C_Damage_Reaction Parms{};

	Parms.Damage = Damage;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Deactivate AI
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Deactivate_AI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Deactivate AI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Deactive Melee Detect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Deactive_Melee_Detect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Deactive Melee Detect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Dead Body Reaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Reaction_Actor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Dead_Body_Reaction(class AActor* Reaction_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Dead Body Reaction");

	Params::BP_SmartAIComponent_C_Dead_Body_Reaction Parms{};

	Parms.Reaction_Actor = Reaction_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Debug Text
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Debug_Text(const class FString& InString, const struct FLinearColor& TextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Debug Text");

	Params::BP_SmartAIComponent_C_Debug_Text Parms{};

	Parms.InString = std::move(InString);
	Parms.TextColor = std::move(TextColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Defend Check
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Defend_Check(class AActor* Attacked, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Defend Check");

	Params::BP_SmartAIComponent_C_Defend_Check Parms{};

	Parms.Attacked = Attacked;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Delayed Range Attack
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Delayed_Range_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Delayed Range Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.DespawnCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::DespawnCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "DespawnCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Destroy Emote Actor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Destroy_Emote_Actor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Destroy Emote Actor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Determine Attack Type
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Determine_Attack_Type()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Determine Attack Type");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Drop Down Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Drop_Down_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Drop Down Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Emote
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Emote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Emote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Emote Done
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Emote_Done()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Emote Done");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.End Anim Transition
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::End_Anim_Transition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "End Anim Transition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.End Block Timer
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::End_Block_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "End Block Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.End Climb
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::End_Climb()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "End Climb");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.End Combat
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::End_Combat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "End Combat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.End Combat Stance
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::End_Combat_Stance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "End Combat Stance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.End Flee
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::End_Flee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "End Flee");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Entered Combat
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Entered_Combat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Entered Combat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Equip Holdable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Holdable_Class                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Equip_Holdable(class UClass* Holdable_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Equip Holdable");

	Params::BP_SmartAIComponent_C_Equip_Holdable Parms{};

	Parms.Holdable_Class = Holdable_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.ExecuteUbergraph_BP_SmartAIComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::ExecuteUbergraph_BP_SmartAIComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "ExecuteUbergraph_BP_SmartAIComponent");

	Params::BP_SmartAIComponent_C_ExecuteUbergraph_BP_SmartAIComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Flee Timer End
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Flee_Timer_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Flee Timer End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Forget Attackers Timer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Forget_Attackers_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Forget Attackers Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Forward Check
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Forward_Distance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Down_Distance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Trace_Towards                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_Result                                             (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Forward_Check(double Forward_Distance, double Down_Distance, const struct FVector& Trace_Towards, struct FHitResult* Hit_Result, bool* Return_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Forward Check");

	Params::BP_SmartAIComponent_C_Forward_Check Parms{};

	Parms.Forward_Distance = Forward_Distance;
	Parms.Down_Distance = Down_Distance;
	Parms.Trace_Towards = std::move(Trace_Towards);

	UObject::ProcessEvent(Func, &Parms);

	if (Hit_Result != nullptr)
		*Hit_Result = std::move(Parms.Hit_Result);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.FrequencyTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::FrequencyTimer(double Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "FrequencyTimer");

	Params::BP_SmartAIComponent_C_FrequencyTimer Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Generic Damage Reaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Damage_Cause                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Generic_Damage_Reaction(class AActor* Damage_Cause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Generic Damage Reaction");

	Params::BP_SmartAIComponent_C_Generic_Damage_Reaction Parms{};

	Parms.Damage_Cause = Damage_Cause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Get Attached Weapon Ammo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ammo_Found                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AIWeapon_Master_C*            Holdable_With_Ammo                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Get_Attached_Weapon_Ammo(bool* Ammo_Found, class ABP_AIWeapon_Master_C** Holdable_With_Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Get Attached Weapon Ammo");

	Params::BP_SmartAIComponent_C_Get_Attached_Weapon_Ammo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ammo_Found != nullptr)
		*Ammo_Found = Parms.Ammo_Found;

	if (Holdable_With_Ammo != nullptr)
		*Holdable_With_Ammo = Parms.Holdable_With_Ammo;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Hit React Timer Done
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Hit_React_Timer_Done()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Hit React Timer Done");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Holdable Equip Socket
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Holdable_Class                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Equip_Socket                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Unequip_Socket                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Equip_Montage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Holdable_Equip_Socket(class UClass* Holdable_Class, class FName* Equip_Socket, class FName* Unequip_Socket, bool* Equip_Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Holdable Equip Socket");

	Params::BP_SmartAIComponent_C_Holdable_Equip_Socket Parms{};

	Parms.Holdable_Class = Holdable_Class;

	UObject::ProcessEvent(Func, &Parms);

	if (Equip_Socket != nullptr)
		*Equip_Socket = Parms.Equip_Socket;

	if (Unequip_Socket != nullptr)
		*Unequip_Socket = Parms.Unequip_Socket;

	if (Equip_Montage != nullptr)
		*Equip_Montage = Parms.Equip_Montage;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Holdable Unequipped
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Holdable_Unequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Holdable Unequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Is Holding Weapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Weapon                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AIWeapon_Master_C*            Holdable_Actor_0                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Is_Holding_Weapon(bool* Is_Weapon, class ABP_AIWeapon_Master_C** Holdable_Actor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Is Holding Weapon");

	Params::BP_SmartAIComponent_C_Is_Holding_Weapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_Weapon != nullptr)
		*Is_Weapon = Parms.Is_Weapon;

	if (Holdable_Actor_0 != nullptr)
		*Holdable_Actor_0 = Parms.Holdable_Actor_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Is In Combat?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_SmartAIComponent_C::Is_In_Combat_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Is In Combat?");

	Params::BP_SmartAIComponent_C_Is_In_Combat_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Is Low Health
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Low_Health                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Health_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Is_Low_Health(bool* Low_Health, int32* Health_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Is Low Health");

	Params::BP_SmartAIComponent_C_Is_Low_Health Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Low_Health != nullptr)
		*Low_Health = Parms.Low_Health;

	if (Health_0 != nullptr)
		*Health_0 = Parms.Health_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Jump Down
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          End_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Jump_Down(const struct FVector& End_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Jump Down");

	Params::BP_SmartAIComponent_C_Jump_Down Parms{};

	Parms.End_Location = std::move(End_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Jump Down Close
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Jump_Down_Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Jump Down Close");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Jump Down Enter
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Jump_Down_Enter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Jump Down Enter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Last Attacker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Attacker                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Last_Attacker(class AActor** Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Last Attacker");

	Params::BP_SmartAIComponent_C_Last_Attacker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attacker != nullptr)
		*Attacker = Parms.Attacker;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Melee Collision Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Hit_Actor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Hit_Component                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_SmartAIComponent_C::Melee_Collision_Check(class AActor* Hit_Actor, class UPrimitiveComponent* Hit_Component, class FName Bone_Name, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Melee Collision Check");

	Params::BP_SmartAIComponent_C_Melee_Collision_Check Parms{};

	Parms.Hit_Actor = Hit_Actor;
	Parms.Hit_Component = Hit_Component;
	Parms.Bone_Name = Bone_Name;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Melee Trace Timer Events
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Melee_Trace_Timer_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Melee Trace Timer Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Move Across
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Move_Across()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Move Across");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast AI Dead
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Multicast_AI_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast AI Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Combat Stance
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Combat_Stance_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Combat_Stance(bool Combat_Stance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Combat Stance");

	Params::BP_SmartAIComponent_C_Multicast_Combat_Stance Parms{};

	Parms.Combat_Stance_0 = Combat_Stance_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Despawn Body
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Multicast_Despawn_Body()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Despawn Body");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Homing Projectile Spawn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attack_Target_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Homing_Projectile_Spawn(const struct FVector& Spawn_Transform_Location, class AActor* Attack_Target_0, class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Homing Projectile Spawn");

	Params::BP_SmartAIComponent_C_Multicast_Homing_Projectile_Spawn Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Attack_Target_0 = Attack_Target_0;
	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Melee Emitter
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_SmartAIComponent_C::Multicast_Melee_Emitter(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Melee Emitter");

	Params::BP_SmartAIComponent_C_Multicast_Melee_Emitter Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Play Montage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Play_Rate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Start_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Play_Montage(class UAnimMontage* Montage, double Play_Rate, class FName Start_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Play Montage");

	Params::BP_SmartAIComponent_C_Multicast_Play_Montage Parms{};

	Parms.Montage = Montage;
	Parms.Play_Rate = Play_Rate;
	Parms.Start_Name = Start_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Play Transition to Audio
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Play_In                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Audio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Play_Transition_to_Audio(double Play_In, class USoundCue* Audio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Play Transition to Audio");

	Params::BP_SmartAIComponent_C_Multicast_Play_Transition_to_Audio Parms{};

	Parms.Play_In = Play_In;
	Parms.Audio = Audio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Projectile Spawn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Spawn_Transform_Location                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Projectile_Spawn(const struct FVector& Spawn_Transform_Location, const struct FVector& Velocity, class UClass* Class_0, double Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Projectile Spawn");

	Params::BP_SmartAIComponent_C_Multicast_Projectile_Spawn Parms{};

	Parms.Spawn_Transform_Location = std::move(Spawn_Transform_Location);
	Parms.Velocity = std::move(Velocity);
	Parms.Class_0 = Class_0;
	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Range Attack Partical
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_Result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_SmartAIComponent_C::Multicast_Range_Attack_Partical(const struct FHitResult& Hit_Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Range Attack Partical");

	Params::BP_SmartAIComponent_C_Multicast_Range_Attack_Partical Parms{};

	Parms.Hit_Result = std::move(Hit_Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Respawn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Multicast_Respawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Respawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Set Collision Profile
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Capsule_Profile                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Mesh_Profile                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Set_Collision_Profile(class FName Capsule_Profile, class FName Mesh_Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Set Collision Profile");

	Params::BP_SmartAIComponent_C_Multicast_Set_Collision_Profile Parms{};

	Parms.Capsule_Profile = Capsule_Profile;
	Parms.Mesh_Profile = Mesh_Profile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Sound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Sound(class USoundCue* Sound, double Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Sound");

	Params::BP_SmartAIComponent_C_Multicast_Sound Parms{};

	Parms.Sound = Sound;
	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Start Aim Offset
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Start_Aim_Offset(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Start Aim Offset");

	Params::BP_SmartAIComponent_C_Multicast_Start_Aim_Offset Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Stop Aim Offset
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Multicast_Stop_Aim_Offset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Stop Aim Offset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Stop Current Montage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Keep_EmoteMontages                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Stop_Current_Montage(bool Keep_EmoteMontages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Stop Current Montage");

	Params::BP_SmartAIComponent_C_Multicast_Stop_Current_Montage Parms{};

	Parms.Keep_EmoteMontages = Keep_EmoteMontages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Multicast Stop Montage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Multicast_Stop_Montage(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Multicast Stop Montage");

	Params::BP_SmartAIComponent_C_Multicast_Stop_Montage Parms{};

	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnBlendOut_2049CB47425917B35D40CBAEB03142CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnBlendOut_2049CB47425917B35D40CBAEB03142CE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnBlendOut_2049CB47425917B35D40CBAEB03142CE");

	Params::BP_SmartAIComponent_C_OnBlendOut_2049CB47425917B35D40CBAEB03142CE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnCompleted_2049CB47425917B35D40CBAEB03142CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnCompleted_2049CB47425917B35D40CBAEB03142CE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnCompleted_2049CB47425917B35D40CBAEB03142CE");

	Params::BP_SmartAIComponent_C_OnCompleted_2049CB47425917B35D40CBAEB03142CE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnFail_EC17E16E4EA49390E6C1F7A05964C877
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnFail_EC17E16E4EA49390E6C1F7A05964C877(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnFail_EC17E16E4EA49390E6C1F7A05964C877");

	Params::BP_SmartAIComponent_C_OnFail_EC17E16E4EA49390E6C1F7A05964C877 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnInterrupted_2049CB47425917B35D40CBAEB03142CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnInterrupted_2049CB47425917B35D40CBAEB03142CE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnInterrupted_2049CB47425917B35D40CBAEB03142CE");

	Params::BP_SmartAIComponent_C_OnInterrupted_2049CB47425917B35D40CBAEB03142CE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnNotifyBegin_2049CB47425917B35D40CBAEB03142CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnNotifyBegin_2049CB47425917B35D40CBAEB03142CE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnNotifyBegin_2049CB47425917B35D40CBAEB03142CE");

	Params::BP_SmartAIComponent_C_OnNotifyBegin_2049CB47425917B35D40CBAEB03142CE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnNotifyEnd_2049CB47425917B35D40CBAEB03142CE
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnNotifyEnd_2049CB47425917B35D40CBAEB03142CE(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnNotifyEnd_2049CB47425917B35D40CBAEB03142CE");

	Params::BP_SmartAIComponent_C_OnNotifyEnd_2049CB47425917B35D40CBAEB03142CE Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.OnSuccess_EC17E16E4EA49390E6C1F7A05964C877
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::OnSuccess_EC17E16E4EA49390E6C1F7A05964C877(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "OnSuccess_EC17E16E4EA49390E6C1F7A05964C877");

	Params::BP_SmartAIComponent_C_OnSuccess_EC17E16E4EA49390E6C1F7A05964C877 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Possessed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Possessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Possessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Proximity Activated
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Proximity_Actor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Proximity_Triggered                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Proximity_Activated(class AActor* Proximity_Actor, bool* Proximity_Triggered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Proximity Activated");

	Params::BP_SmartAIComponent_C_Proximity_Activated Parms{};

	Parms.Proximity_Actor = Proximity_Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Proximity_Triggered != nullptr)
		*Proximity_Triggered = Parms.Proximity_Triggered;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Proximity Deactivated
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Proximity_Actor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Proximity_Deactivated_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Proximity_Deactivated(class AActor* Proximity_Actor, bool* Proximity_Deactivated_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Proximity Deactivated");

	Params::BP_SmartAIComponent_C_Proximity_Deactivated Parms{};

	Parms.Proximity_Actor = Proximity_Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Proximity_Deactivated_0 != nullptr)
		*Proximity_Deactivated_0 = Parms.Proximity_Deactivated_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Proximity Updates
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Proximity_Updates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Proximity Updates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Random IP
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterInteractionPoint_C*     Last_Interaction_Point                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_MasterInteractionPoint_C*     Interaction_Point_0                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Random_IP(class ABP_MasterInteractionPoint_C* Last_Interaction_Point, bool* Return_value, class ABP_MasterInteractionPoint_C** Interaction_Point_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Random IP");

	Params::BP_SmartAIComponent_C_Random_IP Parms{};

	Parms.Last_Interaction_Point = Last_Interaction_Point;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;

	if (Interaction_Point_0 != nullptr)
		*Interaction_Point_0 = Parms.Interaction_Point_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Random Specified IP
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterInteractionPoint_C*     Last_Interaction_Point                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_MasterInteractionPoint_C*     Interaction_Point_0                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Random_Specified_IP(class ABP_MasterInteractionPoint_C* Last_Interaction_Point, bool* Return_value, class ABP_MasterInteractionPoint_C** Interaction_Point_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Random Specified IP");

	Params::BP_SmartAIComponent_C_Random_Specified_IP Parms{};

	Parms.Last_Interaction_Point = Last_Interaction_Point;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;

	if (Interaction_Point_0 != nullptr)
		*Interaction_Point_0 = Parms.Interaction_Point_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Range Attack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Range_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Range Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Reacted Actor Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Actor_Found                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Reacted_Actor_Check(class AActor* Actor, bool* Actor_Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Reacted Actor Check");

	Params::BP_SmartAIComponent_C_Reacted_Actor_Check Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor_Found != nullptr)
		*Actor_Found = Parms.Actor_Found;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_SmartAIComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "ReceiveTick");

	Params::BP_SmartAIComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Remove Attacker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Remove_Attacker(class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Remove Attacker");

	Params::BP_SmartAIComponent_C_Remove_Attacker Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Remove Current Ammo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Remove_Amount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Remove_Current_Ammo(int32 Remove_Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Remove Current Ammo");

	Params::BP_SmartAIComponent_C_Remove_Current_Ammo Parms{};

	Parms.Remove_Amount = Remove_Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Remove Total Amount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Remove_Amount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Removed_All                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Remaining_Ammo                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Remove_Total_Amount(int32 Remove_Amount, bool* Removed_All, int32* Remaining_Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Remove Total Amount");

	Params::BP_SmartAIComponent_C_Remove_Total_Amount Parms{};

	Parms.Remove_Amount = Remove_Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Removed_All != nullptr)
		*Removed_All = Parms.Removed_All;

	if (Remaining_Ammo != nullptr)
		*Remaining_Ammo = Parms.Remaining_Ammo;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Reset Attack Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_Attack_Target                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attack_Target_0                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Reset_Attack_Target(bool* New_Attack_Target, class AActor** Attack_Target_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Reset Attack Target");

	Params::BP_SmartAIComponent_C_Reset_Attack_Target Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (New_Attack_Target != nullptr)
		*New_Attack_Target = Parms.New_Attack_Target;

	if (Attack_Target_0 != nullptr)
		*Attack_Target_0 = Parms.Attack_Target_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Reset Proximity Cooldown Timer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Reset_Proximity_Cooldown_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Reset Proximity Cooldown Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Reset Trigger Cooldown Timer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Reset_Trigger_Cooldown_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Reset Trigger Cooldown Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Return Emote Montages
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UAnimMontage*>             Emote_Montages                                         (Parm, OutParm)

void UBP_SmartAIComponent_C::Return_Emote_Montages(TArray<class UAnimMontage*>* Emote_Montages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Return Emote Montages");

	Params::BP_SmartAIComponent_C_Return_Emote_Montages Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Emote_Montages != nullptr)
		*Emote_Montages = std::move(Parms.Emote_Montages);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Return Hit Reaction Anims
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UAnimMontage*>             Hit_Reactions                                          (Parm, OutParm)

void UBP_SmartAIComponent_C::Return_Hit_Reaction_Anims(TArray<class UAnimMontage*>* Hit_Reactions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Return Hit Reaction Anims");

	Params::BP_SmartAIComponent_C_Return_Hit_Reaction_Anims Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hit_Reactions != nullptr)
		*Hit_Reactions = std::move(Parms.Hit_Reactions);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Roam Emotes
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Roam_Emotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Roam Emotes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Routine
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Hour                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Routine(int32 Hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Routine");

	Params::BP_SmartAIComponent_C_Routine Parms{};

	Parms.Hour = Hour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server AI Setup
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_AI_Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server AI Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Block Attack
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Block_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Block Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Despawn Body
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Despawn_Body()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Despawn Body");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Holdable Unequipped
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Holdable_Unequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Holdable Unequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Holdable Visibility
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Server_Holdable_Visibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Holdable Visibility");

	Params::BP_SmartAIComponent_C_Server_Holdable_Visibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Reload
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Respawn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AIBehaviour                           Behaviour                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Server_Respawn(E_AIBehaviour Behaviour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Respawn");

	Params::BP_SmartAIComponent_C_Server_Respawn Parms{};

	Parms.Behaviour = Behaviour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Start Combat Stance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Start_Combat_Stance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Start Combat Stance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Starting Weapon
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Starting_Weapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Starting Weapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Unblock Attack
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Unblock_Attack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Unblock Attack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Server Unequip Holdable
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Server_Unequip_Holdable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Server Unequip Holdable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set AI Dead
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Set_AI_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set AI Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB AllowRotate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllowRotate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_AllowRotate(bool AllowRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB AllowRotate");

	Params::BP_SmartAIComponent_C_Set_BB_AllowRotate Parms{};

	Parms.AllowRotate = AllowRotate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Attack Target
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Attack_Target(class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Attack Target");

	Params::BP_SmartAIComponent_C_Set_BB_Attack_Target Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Being Interacted With
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interacted_With                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Being_Interacted_With(bool Interacted_With)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Being Interacted With");

	Params::BP_SmartAIComponent_C_Set_BB_Being_Interacted_With Parms{};

	Parms.Interacted_With = Interacted_With;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB BlockMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StopNode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_BlockMove(bool StopNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB BlockMove");

	Params::BP_SmartAIComponent_C_Set_BB_BlockMove Parms{};

	Parms.StopNode = StopNode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Current Behaviour
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AIBehaviour                           AI_New_Behaviour                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Base_Behaviour                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Current_Behaviour(E_AIBehaviour AI_New_Behaviour, bool Is_Base_Behaviour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Current Behaviour");

	Params::BP_SmartAIComponent_C_Set_BB_Current_Behaviour Parms{};

	Parms.AI_New_Behaviour = AI_New_Behaviour;
	Parms.Is_Base_Behaviour = Is_Base_Behaviour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Dead
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Dead(bool Dead_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Dead");

	Params::BP_SmartAIComponent_C_Set_BB_Dead Parms{};

	Parms.Dead_0 = Dead_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Facing Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          VectorValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Facing_Location(const struct FVector& VectorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Facing Location");

	Params::BP_SmartAIComponent_C_Set_BB_Facing_Location Parms{};

	Parms.VectorValue = std::move(VectorValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Focus Actor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Focus_Actor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Focus_Actor(class AActor* Focus_Actor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Focus Actor");

	Params::BP_SmartAIComponent_C_Set_BB_Focus_Actor Parms{};

	Parms.Focus_Actor_0 = Focus_Actor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Follow Actor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Follow_Actor_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Follow_Actor(class AActor* Follow_Actor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Follow Actor");

	Params::BP_SmartAIComponent_C_Set_BB_Follow_Actor Parms{};

	Parms.Follow_Actor_0 = Follow_Actor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Location
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          VectorValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Location(const struct FVector& VectorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Location");

	Params::BP_SmartAIComponent_C_Set_BB_Location Parms{};

	Parms.VectorValue = std::move(VectorValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Move To Actor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Move_To_Actor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Move To Actor");

	Params::BP_SmartAIComponent_C_Set_BB_Move_To_Actor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Temporary Stop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Temp_Stop                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Temporary_Stop(bool Temp_Stop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Temporary Stop");

	Params::BP_SmartAIComponent_C_Set_BB_Temporary_Stop Parms{};

	Parms.Temp_Stop = Temp_Stop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set BB Wait Time
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FloatValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_BB_Wait_Time(double FloatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set BB Wait Time");

	Params::BP_SmartAIComponent_C_Set_BB_Wait_Time Parms{};

	Parms.FloatValue = FloatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set Behavior
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Set_Behavior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set Behavior");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set Flee Actor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Flee_From_Actor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_Flee_Actor(class AActor* Flee_From_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set Flee Actor");

	Params::BP_SmartAIComponent_C_Set_Flee_Actor Parms{};

	Parms.Flee_From_Actor = Flee_From_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Set Movement Speed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Movement_Speed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Set_Movement_Speed(double Movement_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Set Movement Speed");

	Params::BP_SmartAIComponent_C_Set_Movement_Speed Parms{};

	Parms.Movement_Speed = Movement_Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.SetupLevelStreamUnload
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::SetupLevelStreamUnload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "SetupLevelStreamUnload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Sight Reaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Sight_Actor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      AI_Stimulus                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_SmartAIComponent_C::Sight_Reaction(class AActor* Sight_Actor_0, const struct FAIStimulus& AI_Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Sight Reaction");

	Params::BP_SmartAIComponent_C_Sight_Reaction Parms{};

	Parms.Sight_Actor_0 = Sight_Actor_0;
	Parms.AI_Stimulus = std::move(AI_Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Spawn Attached Holdables
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Spawn_Attached_Holdables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Spawn Attached Holdables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Spawn Hit Effects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_Result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_SmartAIComponent_C::Spawn_Hit_Effects(const struct FHitResult& Hit_Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Spawn Hit Effects");

	Params::BP_SmartAIComponent_C_Spawn_Hit_Effects Parms{};

	Parms.Hit_Result = std::move(Hit_Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Spawn Holdable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           AI_Weapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Attach_Socket                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Visible                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AIWeapon_Master_C*            Holdable_Actor_0                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Spawn_Holdable(class UClass* AI_Weapon, class FName Attach_Socket, bool Is_Visible, class ABP_AIWeapon_Master_C** Holdable_Actor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Spawn Holdable");

	Params::BP_SmartAIComponent_C_Spawn_Holdable Parms{};

	Parms.AI_Weapon = AI_Weapon;
	Parms.Attach_Socket = Attach_Socket;
	Parms.Is_Visible = Is_Visible;

	UObject::ProcessEvent(Func, &Parms);

	if (Holdable_Actor_0 != nullptr)
		*Holdable_Actor_0 = Parms.Holdable_Actor_0;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Start Block Timer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Start_Block_Timer(double Time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Start Block Timer");

	Params::BP_SmartAIComponent_C_Start_Block_Timer Parms{};

	Parms.Time_0 = Time_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Start Flee Timer
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Start_Flee_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Start Flee Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Start Hit React Timer
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Start_Hit_React_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Start Hit React Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Start Melee Trace
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Start_Melee_Trace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Start Melee Trace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Start Temp Behaviour
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AIBehaviour                           Temp_Behavior                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Length                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_AIBehaviour                           End_Behavior                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Start_Temp_Behaviour(E_AIBehaviour Temp_Behavior, double Length, E_AIBehaviour End_Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Start Temp Behaviour");

	Params::BP_SmartAIComponent_C_Start_Temp_Behaviour Parms{};

	Parms.Temp_Behavior = Temp_Behavior;
	Parms.Length = Length;
	Parms.End_Behavior = End_Behavior;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.StartTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::StartTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "StartTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Stop Current Montage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Keep_Emote_Montages                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Stop_Current_Montage(bool Keep_Emote_Montages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Stop Current Montage");

	Params::BP_SmartAIComponent_C_Stop_Current_Montage Parms{};

	Parms.Keep_Emote_Montages = Keep_Emote_Montages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Stop Despawn Timer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Stop_Despawn_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Stop Despawn Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Stop Fleeing
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Stop_Fleeing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Stop Fleeing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.StopCurrentAudio
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::StopCurrentAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "StopCurrentAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.StreamLevelUnLoaded
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::StreamLevelUnLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "StreamLevelUnLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Tag Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Tags_1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     Tags_2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Found_Tag                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Tag_Check(TArray<class FName>& Tags_1, TArray<class FName>& Tags_2, bool* Return_value, class FName* Found_Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Tag Check");

	Params::BP_SmartAIComponent_C_Tag_Check Parms{};

	Parms.Tags_1 = std::move(Tags_1);
	Parms.Tags_2 = std::move(Tags_2);

	UObject::ProcessEvent(Func, &Parms);

	Tags_1 = std::move(Parms.Tags_1);
	Tags_2 = std::move(Parms.Tags_2);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;

	if (Found_Tag != nullptr)
		*Found_Tag = Parms.Found_Tag;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Take Damage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Take_Damage(double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Take Damage");

	Params::BP_SmartAIComponent_C_Take_Damage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Total Ammo Check
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Has_Ammo                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Ammo                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Total_Ammo_Check(bool* Has_Ammo, int32* Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Total Ammo Check");

	Params::BP_SmartAIComponent_C_Total_Ammo_Check Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Has_Ammo != nullptr)
		*Has_Ammo = Parms.Has_Ammo;

	if (Ammo != nullptr)
		*Ammo = Parms.Ammo;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Transition Anim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Start_Transition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_GeneralSettings               AI_Settings                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Use_Transition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Anim                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Transition_Anim(bool Start_Transition, const struct FS_GeneralSettings& AI_Settings, bool* Use_Transition, class UAnimMontage** Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Transition Anim");

	Params::BP_SmartAIComponent_C_Transition_Anim Parms{};

	Parms.Start_Transition = Start_Transition;
	Parms.AI_Settings = std::move(AI_Settings);

	UObject::ProcessEvent(Func, &Parms);

	if (Use_Transition != nullptr)
		*Use_Transition = Parms.Use_Transition;

	if (Anim != nullptr)
		*Anim = Parms.Anim;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Transition Anim Timer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_GeneralSettings               Transition_From                                        (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_GeneralSettings               Transition_To                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Transition_Anim_Timer(const struct FS_GeneralSettings& Transition_From, const struct FS_GeneralSettings& Transition_To)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Transition Anim Timer");

	Params::BP_SmartAIComponent_C_Transition_Anim_Timer Parms{};

	Parms.Transition_From = std::move(Transition_From);
	Parms.Transition_To = std::move(Transition_To);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Transition Audio
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Start_Transition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_GeneralSettings               AI_Settings                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Use_Transition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        Audio                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Transition_Audio(bool Start_Transition, const struct FS_GeneralSettings& AI_Settings, bool* Use_Transition, class USoundCue** Audio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Transition Audio");

	Params::BP_SmartAIComponent_C_Transition_Audio Parms{};

	Parms.Start_Transition = Start_Transition;
	Parms.AI_Settings = std::move(AI_Settings);

	UObject::ProcessEvent(Func, &Parms);

	if (Use_Transition != nullptr)
		*Use_Transition = Parms.Use_Transition;

	if (Audio != nullptr)
		*Audio = Parms.Audio;
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Transition To Audio Timer
// (BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Transition_To_Audio_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Transition To Audio Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Transitions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_GeneralSettings               Transition_From                                        (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_GeneralSettings               Transition_To                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Transitions(const struct FS_GeneralSettings& Transition_From, const struct FS_GeneralSettings& Transition_To)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Transitions");

	Params::BP_SmartAIComponent_C_Transitions Parms{};

	Parms.Transition_From = std::move(Transition_From);
	Parms.Transition_To = std::move(Transition_To);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Trigger Activated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Trigger_Actor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_AITrigger_C*                  AI_Trigger                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Trigger_Activated(class AActor* Trigger_Actor, class ABP_AITrigger_C* AI_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Trigger Activated");

	Params::BP_SmartAIComponent_C_Trigger_Activated Parms{};

	Parms.Trigger_Actor = Trigger_Actor;
	Parms.AI_Trigger = AI_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Trigger Deactivated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Trigger_Actor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_AITrigger_C*                  AI_Trigger                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Trigger_Deactivated(class AActor* Trigger_Actor, class ABP_AITrigger_C* AI_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Trigger Deactivated");

	Params::BP_SmartAIComponent_C_Trigger_Deactivated Parms{};

	Parms.Trigger_Actor = Trigger_Actor;
	Parms.AI_Trigger = AI_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Turret Destroyed Effect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Turret_Destroyed_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Turret Destroyed Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Turret End Reload
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Turret_End_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Turret End Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Turret Idle Start
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Turret_Idle_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Turret Idle Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Turret Idle Stop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Turret_Idle_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Turret Idle Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Turret Start Reload
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Turret_Start_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Turret Start Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Unequip Holdable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Unequip_Holdable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Unequip Holdable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Up Climb Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SmartAIComponent_C::Up_Climb_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Up Climb Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Update Aim Offset Yaw
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Look_At_Actor                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Update_Aim_Offset_Yaw(const class AActor*& Look_At_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Update Aim Offset Yaw");

	Params::BP_SmartAIComponent_C_Update_Aim_Offset_Yaw Parms{};

	Parms.Look_At_Actor = Look_At_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.Update Routine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Hour                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::Update_Routine(int32 Hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "Update Routine");

	Params::BP_SmartAIComponent_C_Update_Routine Parms{};

	Parms.Hour = Hour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.UpdateCapsuleCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::UpdateCapsuleCollision(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "UpdateCapsuleCollision");

	Params::BP_SmartAIComponent_C_UpdateCapsuleCollision Parms{};

	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SmartAIComponent.BP_SmartAIComponent_C.AI Is Dead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Dead_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SmartAIComponent_C::AI_Is_Dead_(bool* Dead_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SmartAIComponent_C", "AI Is Dead?");

	Params::BP_SmartAIComponent_C_AI_Is_Dead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead_0 != nullptr)
		*Dead_0 = Parms.Dead_0;
}

}

