#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ingame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Ingame.BP_Ingame_C
// 0x03A8 (0x0668 - 0x02C0)
class UBP_Ingame_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ReloadingAnim;                                     // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PowerAttackAnim;                                   // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowNightVisionDur;                                // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowFlashlightDur;                                 // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowRespiratorDur;                                 // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OxygenAnim;                                        // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ActionBarAnim;                                     // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StatsAnim;                                         // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HitmarkerEffect;                                   // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HitEffect;                                         // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Shoot;                                             // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CombatCrosshairFadeOut;                            // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InteractCrosshairFadeOut;                          // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CombatCrosshairFadeIn;                             // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InteractCrosshairFadeIn;                           // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                ActionBar;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                AmmoBox;                                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           BufferBar;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BuildBox;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BuildingDegrees;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CombatCrosshair;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCompass_C*                             Compass;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CrosshairBox;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentAmmoTxt;                                    // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CurrentEffectsOverlay;                             // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CurrentEffectsVB;                                  // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentFirearmName;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentXPText;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DamageEffect;                                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EnableSnappingText;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FireMode;                                          // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FishingRodText;                                    // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                FlashlightDur;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FlashlightText;                                    // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBarLinear_C*                   HealthBar;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HealthText;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HitmarkerCrosshair;                                // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hotbar6Text;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hotbar7Text;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Hotbar8Text;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBarCircular_C*                 HungerBar;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HungerIcon;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HungerText;                                        // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_78;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InteractCrosshair;                                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJournalUI_C*                           JournalUI;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Consumable1;                          // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Consumable2;                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Consumable3;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_FishingRod;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Grenade;                              // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Melee;                                // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Primary;                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Secondary;                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_Sidearm;                              // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelText;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapWidget_C*                           MapWidget;                                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxAmmoTxt;                                        // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxXP;                                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MeleeText;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                NightVisionDur;                                    // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NightVisionText;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Fishing;                                   // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBarLinear_C*                   OxygenBar;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OxygenStat;                                        // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OxygenText;                                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlaceText;                                         // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PrimaryText;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RadText;                                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RangeFinderDistance;                               // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ReloadingImg;                                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RespiratorDur;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RespiratorText;                                    // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SecondaryText;                                     // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SidearmText;                                       // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBarLinear_C*                   StaminaBar;                                        // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StaminaText;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Stats;                                             // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StopFiringCrosshair;                               // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StopText;                                          // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBarCircular_C*                 ThirstBar;                                         // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ThirstIcon;                                        // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ThirstText;                                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ThrowableText;                                     // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBarCircular_C*                 ToxinBar;                                          // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ToxinIcon;                                         // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RadialMenu_C*                       UI_RadialMenu;                                     // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_223;                                   // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           XPBar;                                             // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class UJSI_Slot_C*, class UJSI_Slot_C*>  MemicJSI;                                          // 0x05B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UCameraComponent*                       Rotation;                                          // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         FPS;                                               // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CombatCrosshairEnabled;                            // 0x060C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InteractCrosshairEnabled;                          // 0x060D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopFiringCrosshairEnabled;                        // 0x060E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60F[0x1];                                      // 0x060F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevellingComponent_C*                  LevelComponent;                                    // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FPSVisible;                                        // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeHeld;                                          // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTimeHeld;                                       // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Opened_;                                           // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMedicalUI_C*                           MedUI;                                             // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMedicalUI_Bleed_C*                     BleedUI;                                           // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMedicalUI_HeavyBleed_C*                HeavyBleedUI;                                      // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMedicalUI_BrokenBone_C*                BrokenBoneUI;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMedicalUI_Radiation_C*                 RadiationUI;                                       // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFilterDurabilityUI_C*                  FilterUI;                                          // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ActionBar_Keys(bool NewValue);
	class UW_PlayerMarker_C* AddScreenMarker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, int32 Index_0);
	void AllCrosshairsVisibility(ESlateVisibility InVisibility);
	void BindEvents();
	void ChangeFiringMode(bool Auto_);
	void ChangeSnappingModeText(bool Enable_);
	void ClearContainers();
	void Construct();
	void CreateMedicalUI(class FName MedicalEffect, bool Adding_);
	void Crosshairs_Scale(float NewValue);
	void CrosshairShoot();
	void Event_HideStopFiringCrosshair();
	void Event_StopFiringCrosshair();
	void Event_VisibilityChanged(ESlateVisibility InVisibility);
	void EventOnMouseBtnDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void EventOnSomethingDropped(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_);
	void ExecuteUbergraph_BP_Ingame(int32 EntryPoint);
	void FindAndUnbindCapacity(class UJSI_Slot_C* ItemRef);
	void GetActionbarUIDs(TArray<struct FGuid>* UIDs);
	float GetBufferBarPercent();
	float GetCurrentPercent();
	void GetFlashlightDurability(double Dur);
	void GetHotbarByIndex(int32 Index_0, class UJSI_Slot_C** ItemRef, bool* Found_, class UJSIContainer_C** ContainerRef, class UJSI_Slot_C** MainItem);
	void GetLevelUI(int32 Level);
	void GetNightVisionDurability(double Dur);
	void GetRespiratorDurability(double Dur);
	void GetXPUI(double CurrentXP, double MaxXP_0);
	void Name_0();
	void Hitmarker(const struct FLinearColor& InColorAndOpacity);
	void MedicalUIAnimation(class FName MedicalEffect);
	void OnCapacityUpdated_Event_0(int32 Current, int32 Max, class UJSIContainer_C* Container, class UJSI_Slot_C* SlotMother);
	void OnInitialized();
	void OnItemRemoved_Event_0(class UJSI_Slot_C* ItemRef, class UJSIContainer_C* FromContainer);
	void OxygenVisibility(bool Show_);
	void ReloadingUI(bool Show_);
	void SetCombatCrosshairType();
	void SetCrosshair();
	void SetHotbarText();
	void SetInteractCrosshairType();
	void ShowFlashlightDurability(bool Show_);
	void ShowNightVisionDurability(bool Show_);
	void ShowRespiratorDurability(bool Show_);
	void StatsVisibilty(bool Hide_);
	void UnequipExisting(class UJSI_Slot_C* Item);
	void UpdateAmmo(int32 Current, int32 Max);
	void UpdateBuildingDegree(double Degree);
	void UpdateFirearmName(const class FText& Text);
	void UpdateHealth(double Health);
	void UpdateHunger(double hunger);
	void UpdateOxygen(double Oxygen);
	void UpdateRadiation(double Radiation);
	void UpdateRangeFinderDistance(int32 Degree);
	void UpdateStamina(double Stamina);
	void UpdateThirst(double thirst);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Ingame_C">();
	}
	static class UBP_Ingame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Ingame_C>();
	}
};
static_assert(alignof(UBP_Ingame_C) == 0x000008, "Wrong alignment on UBP_Ingame_C");
static_assert(sizeof(UBP_Ingame_C) == 0x000668, "Wrong size on UBP_Ingame_C");
static_assert(offsetof(UBP_Ingame_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_Ingame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ReloadingAnim) == 0x0002C8, "Member 'UBP_Ingame_C::ReloadingAnim' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, PowerAttackAnim) == 0x0002D0, "Member 'UBP_Ingame_C::PowerAttackAnim' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ShowNightVisionDur) == 0x0002D8, "Member 'UBP_Ingame_C::ShowNightVisionDur' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ShowFlashlightDur) == 0x0002E0, "Member 'UBP_Ingame_C::ShowFlashlightDur' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ShowRespiratorDur) == 0x0002E8, "Member 'UBP_Ingame_C::ShowRespiratorDur' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, OxygenAnim) == 0x0002F0, "Member 'UBP_Ingame_C::OxygenAnim' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ActionBarAnim) == 0x0002F8, "Member 'UBP_Ingame_C::ActionBarAnim' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, StatsAnim) == 0x000300, "Member 'UBP_Ingame_C::StatsAnim' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HitmarkerEffect) == 0x000308, "Member 'UBP_Ingame_C::HitmarkerEffect' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HitEffect) == 0x000310, "Member 'UBP_Ingame_C::HitEffect' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FadeOut) == 0x000318, "Member 'UBP_Ingame_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FadeIn) == 0x000320, "Member 'UBP_Ingame_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Shoot) == 0x000328, "Member 'UBP_Ingame_C::Shoot' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CombatCrosshairFadeOut) == 0x000330, "Member 'UBP_Ingame_C::CombatCrosshairFadeOut' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, InteractCrosshairFadeOut) == 0x000338, "Member 'UBP_Ingame_C::InteractCrosshairFadeOut' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CombatCrosshairFadeIn) == 0x000340, "Member 'UBP_Ingame_C::CombatCrosshairFadeIn' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, InteractCrosshairFadeIn) == 0x000348, "Member 'UBP_Ingame_C::InteractCrosshairFadeIn' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ActionBar) == 0x000350, "Member 'UBP_Ingame_C::ActionBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, AmmoBox) == 0x000358, "Member 'UBP_Ingame_C::AmmoBox' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, BufferBar) == 0x000360, "Member 'UBP_Ingame_C::BufferBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, BuildBox) == 0x000368, "Member 'UBP_Ingame_C::BuildBox' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, BuildingDegrees) == 0x000370, "Member 'UBP_Ingame_C::BuildingDegrees' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CombatCrosshair) == 0x000378, "Member 'UBP_Ingame_C::CombatCrosshair' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Compass) == 0x000380, "Member 'UBP_Ingame_C::Compass' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CrosshairBox) == 0x000388, "Member 'UBP_Ingame_C::CrosshairBox' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CurrentAmmoTxt) == 0x000390, "Member 'UBP_Ingame_C::CurrentAmmoTxt' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CurrentEffectsOverlay) == 0x000398, "Member 'UBP_Ingame_C::CurrentEffectsOverlay' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CurrentEffectsVB) == 0x0003A0, "Member 'UBP_Ingame_C::CurrentEffectsVB' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CurrentFirearmName) == 0x0003A8, "Member 'UBP_Ingame_C::CurrentFirearmName' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CurrentXPText) == 0x0003B0, "Member 'UBP_Ingame_C::CurrentXPText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, DamageEffect) == 0x0003B8, "Member 'UBP_Ingame_C::DamageEffect' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, EnableSnappingText) == 0x0003C0, "Member 'UBP_Ingame_C::EnableSnappingText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FireMode) == 0x0003C8, "Member 'UBP_Ingame_C::FireMode' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FishingRodText) == 0x0003D0, "Member 'UBP_Ingame_C::FishingRodText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FlashlightDur) == 0x0003D8, "Member 'UBP_Ingame_C::FlashlightDur' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FlashlightText) == 0x0003E0, "Member 'UBP_Ingame_C::FlashlightText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HealthBar) == 0x0003E8, "Member 'UBP_Ingame_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HealthText) == 0x0003F0, "Member 'UBP_Ingame_C::HealthText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HitmarkerCrosshair) == 0x0003F8, "Member 'UBP_Ingame_C::HitmarkerCrosshair' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Hotbar6Text) == 0x000400, "Member 'UBP_Ingame_C::Hotbar6Text' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Hotbar7Text) == 0x000408, "Member 'UBP_Ingame_C::Hotbar7Text' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Hotbar8Text) == 0x000410, "Member 'UBP_Ingame_C::Hotbar8Text' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HungerBar) == 0x000418, "Member 'UBP_Ingame_C::HungerBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HungerIcon) == 0x000420, "Member 'UBP_Ingame_C::HungerIcon' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HungerText) == 0x000428, "Member 'UBP_Ingame_C::HungerText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Image) == 0x000430, "Member 'UBP_Ingame_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Image_1) == 0x000438, "Member 'UBP_Ingame_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Image_78) == 0x000440, "Member 'UBP_Ingame_C::Image_78' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, InteractCrosshair) == 0x000448, "Member 'UBP_Ingame_C::InteractCrosshair' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JournalUI) == 0x000450, "Member 'UBP_Ingame_C::JournalUI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Consumable1) == 0x000458, "Member 'UBP_Ingame_C::JSIContainer_Consumable1' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Consumable2) == 0x000460, "Member 'UBP_Ingame_C::JSIContainer_Consumable2' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Consumable3) == 0x000468, "Member 'UBP_Ingame_C::JSIContainer_Consumable3' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_FishingRod) == 0x000470, "Member 'UBP_Ingame_C::JSIContainer_FishingRod' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Grenade) == 0x000478, "Member 'UBP_Ingame_C::JSIContainer_Grenade' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Melee) == 0x000480, "Member 'UBP_Ingame_C::JSIContainer_Melee' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Primary) == 0x000488, "Member 'UBP_Ingame_C::JSIContainer_Primary' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Secondary) == 0x000490, "Member 'UBP_Ingame_C::JSIContainer_Secondary' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, JSIContainer_Sidearm) == 0x000498, "Member 'UBP_Ingame_C::JSIContainer_Sidearm' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, LevelText) == 0x0004A0, "Member 'UBP_Ingame_C::LevelText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MapWidget) == 0x0004A8, "Member 'UBP_Ingame_C::MapWidget' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MaxAmmoTxt) == 0x0004B0, "Member 'UBP_Ingame_C::MaxAmmoTxt' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MaxXP) == 0x0004B8, "Member 'UBP_Ingame_C::MaxXP' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MeleeText) == 0x0004C0, "Member 'UBP_Ingame_C::MeleeText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, NightVisionDur) == 0x0004C8, "Member 'UBP_Ingame_C::NightVisionDur' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, NightVisionText) == 0x0004D0, "Member 'UBP_Ingame_C::NightVisionText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Overlay_Fishing) == 0x0004D8, "Member 'UBP_Ingame_C::Overlay_Fishing' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, OxygenBar) == 0x0004E0, "Member 'UBP_Ingame_C::OxygenBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, OxygenStat) == 0x0004E8, "Member 'UBP_Ingame_C::OxygenStat' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, OxygenText) == 0x0004F0, "Member 'UBP_Ingame_C::OxygenText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, PlaceText) == 0x0004F8, "Member 'UBP_Ingame_C::PlaceText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, PrimaryText) == 0x000500, "Member 'UBP_Ingame_C::PrimaryText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, RadText) == 0x000508, "Member 'UBP_Ingame_C::RadText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, RangeFinderDistance) == 0x000510, "Member 'UBP_Ingame_C::RangeFinderDistance' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ReloadingImg) == 0x000518, "Member 'UBP_Ingame_C::ReloadingImg' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, RespiratorDur) == 0x000520, "Member 'UBP_Ingame_C::RespiratorDur' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, RespiratorText) == 0x000528, "Member 'UBP_Ingame_C::RespiratorText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, SecondaryText) == 0x000530, "Member 'UBP_Ingame_C::SecondaryText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, SidearmText) == 0x000538, "Member 'UBP_Ingame_C::SidearmText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, StaminaBar) == 0x000540, "Member 'UBP_Ingame_C::StaminaBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, StaminaText) == 0x000548, "Member 'UBP_Ingame_C::StaminaText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Stats) == 0x000550, "Member 'UBP_Ingame_C::Stats' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, StopFiringCrosshair) == 0x000558, "Member 'UBP_Ingame_C::StopFiringCrosshair' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, StopText) == 0x000560, "Member 'UBP_Ingame_C::StopText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ThirstBar) == 0x000568, "Member 'UBP_Ingame_C::ThirstBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ThirstIcon) == 0x000570, "Member 'UBP_Ingame_C::ThirstIcon' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ThirstText) == 0x000578, "Member 'UBP_Ingame_C::ThirstText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ThrowableText) == 0x000580, "Member 'UBP_Ingame_C::ThrowableText' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ToxinBar) == 0x000588, "Member 'UBP_Ingame_C::ToxinBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, ToxinIcon) == 0x000590, "Member 'UBP_Ingame_C::ToxinIcon' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, UI_RadialMenu) == 0x000598, "Member 'UBP_Ingame_C::UI_RadialMenu' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, VerticalBox_223) == 0x0005A0, "Member 'UBP_Ingame_C::VerticalBox_223' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, XPBar) == 0x0005A8, "Member 'UBP_Ingame_C::XPBar' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MemicJSI) == 0x0005B0, "Member 'UBP_Ingame_C::MemicJSI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Rotation) == 0x000600, "Member 'UBP_Ingame_C::Rotation' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FPS) == 0x000608, "Member 'UBP_Ingame_C::FPS' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, CombatCrosshairEnabled) == 0x00060C, "Member 'UBP_Ingame_C::CombatCrosshairEnabled' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, InteractCrosshairEnabled) == 0x00060D, "Member 'UBP_Ingame_C::InteractCrosshairEnabled' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, StopFiringCrosshairEnabled) == 0x00060E, "Member 'UBP_Ingame_C::StopFiringCrosshairEnabled' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, LevelComponent) == 0x000610, "Member 'UBP_Ingame_C::LevelComponent' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FPSVisible) == 0x000618, "Member 'UBP_Ingame_C::FPSVisible' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, TimeHeld) == 0x000620, "Member 'UBP_Ingame_C::TimeHeld' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MaxTimeHeld) == 0x000628, "Member 'UBP_Ingame_C::MaxTimeHeld' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, Opened_) == 0x000630, "Member 'UBP_Ingame_C::Opened_' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, MedUI) == 0x000638, "Member 'UBP_Ingame_C::MedUI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, BleedUI) == 0x000640, "Member 'UBP_Ingame_C::BleedUI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, HeavyBleedUI) == 0x000648, "Member 'UBP_Ingame_C::HeavyBleedUI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, BrokenBoneUI) == 0x000650, "Member 'UBP_Ingame_C::BrokenBoneUI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, RadiationUI) == 0x000658, "Member 'UBP_Ingame_C::RadiationUI' has a wrong offset!");
static_assert(offsetof(UBP_Ingame_C, FilterUI) == 0x000660, "Member 'UBP_Ingame_C::FilterUI' has a wrong offset!");

}

