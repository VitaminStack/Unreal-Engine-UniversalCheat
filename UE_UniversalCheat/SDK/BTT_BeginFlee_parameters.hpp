#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_BeginFlee

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTT_BeginFlee.BTT_BeginFlee_C.Check If Seen
// 0x0280 (0x0280 - 0x0000)
struct BTT_BeginFlee_C_Check_If_Seen final
{
public:
	bool                                          Seen;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor_L;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Flee_Actor_Seen_L;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SortFleeArray_Actors;                     // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_BeginFlee_C_Check_If_Seen) == 0x000008, "Wrong alignment on BTT_BeginFlee_C_Check_If_Seen");
static_assert(sizeof(BTT_BeginFlee_C_Check_If_Seen) == 0x000280, "Wrong size on BTT_BeginFlee_C_Check_If_Seen");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Seen) == 0x000000, "Member 'BTT_BeginFlee_C_Check_If_Seen::Seen' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Actor) == 0x000008, "Member 'BTT_BeginFlee_C_Check_If_Seen::Actor' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Actor_L) == 0x000010, "Member 'BTT_BeginFlee_C_Check_If_Seen::Actor_L' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Flee_Actor_Seen_L) == 0x000018, "Member 'BTT_BeginFlee_C_Check_If_Seen::Flee_Actor_Seen_L' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Temp_bool_True_if_break_was_hit_Variable) == 0x000019, "Member 'BTT_BeginFlee_C_Check_If_Seen::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BTT_BeginFlee_C_Check_If_Seen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_SortFleeArray_Actors) == 0x000028, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_SortFleeArray_Actors' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BTT_BeginFlee_C_Check_If_Seen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_Array_Get_Item) == 0x000040, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, K2Node_MakeArray_Array) == 0x000078, "Member 'BTT_BeginFlee_C_Check_If_Seen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, K2Node_MakeArray_Array_1) == 0x000090, "Member 'BTT_BeginFlee_C_Check_If_Seen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000B8, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0001A0, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A1, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A2, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_Time) == 0x0001A4, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_Distance) == 0x0001A8, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_Normal) == 0x0001E0, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_BoneName) == 0x000230, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_Check_If_Seen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000278, "Member 'BTT_BeginFlee_C_Check_If_Seen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BTT_BeginFlee.BTT_BeginFlee_C.EQS Done
// 0x0010 (0x0010 - 0x0000)
struct BTT_BeginFlee_C_EQS_Done final
{
public:
	class UEnvQueryInstanceBlueprintWrapper*      QueryInstance;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEnvQueryStatus                               QueryStatus;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_BeginFlee_C_EQS_Done) == 0x000008, "Wrong alignment on BTT_BeginFlee_C_EQS_Done");
static_assert(sizeof(BTT_BeginFlee_C_EQS_Done) == 0x000010, "Wrong size on BTT_BeginFlee_C_EQS_Done");
static_assert(offsetof(BTT_BeginFlee_C_EQS_Done, QueryInstance) == 0x000000, "Member 'BTT_BeginFlee_C_EQS_Done::QueryInstance' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_EQS_Done, QueryStatus) == 0x000008, "Member 'BTT_BeginFlee_C_EQS_Done::QueryStatus' has a wrong offset!");

// Function BTT_BeginFlee.BTT_BeginFlee_C.ExecuteUbergraph_BTT_BeginFlee
// 0x0100 (0x0100 - 0x0000)
struct BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQueryInstanceBlueprintWrapper*      K2Node_CustomEvent_QueryInstance;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEnvQueryStatus                               K2Node_CustomEvent_QueryStatus;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetQueryResultsAsLocations_ResultLocations; // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetQueryResultsAsLocations_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_If_Seen_Seen;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Check_If_Seen_Actor;                      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)> K2Node_CreateDelegate_OutputDelegate;              // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQueryInstanceBlueprintWrapper*      CallFunc_RunEQSQuery_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetNamedParam_Value_ImplicitCast;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNamedParam_Value_ImplicitCast_1;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee) == 0x000008, "Wrong alignment on BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee");
static_assert(sizeof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee) == 0x000100, "Wrong size on BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, EntryPoint) == 0x000000, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_CustomEvent_QueryInstance) == 0x000008, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_CustomEvent_QueryInstance' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_CustomEvent_QueryStatus) == 0x000010, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_CustomEvent_QueryStatus' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_GetQueryResultsAsLocations_ResultLocations) == 0x000018, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_GetQueryResultsAsLocations_ResultLocations' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_GetQueryResultsAsLocations_ReturnValue) == 0x000028, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_GetQueryResultsAsLocations_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Array_Get_Item) == 0x000030, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_Event_OwnerController) == 0x000050, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_Event_ControlledPawn) == 0x000058, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Check_If_Seen_Seen) == 0x000060, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Check_If_Seen_Seen' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Check_If_Seen_Actor) == 0x000068, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Check_If_Seen_Actor' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_CreateDelegate_OutputDelegate) == 0x000074, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_RunEQSQuery_ReturnValue) == 0x000088, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_RunEQSQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_GetDistanceTo_ReturnValue) == 0x000090, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000095, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_Event_OwnerActor) == 0x000098, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_DynamicCast_AsAIController) == 0x0000A0, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B0, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B8, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_VSize_ReturnValue) == 0x0000E0, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_SetNamedParam_Value_ImplicitCast) == 0x0000EC, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_SetNamedParam_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_SetNamedParam_Value_ImplicitCast_1) == 0x0000F0, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_SetNamedParam_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'BTT_BeginFlee_C_ExecuteUbergraph_BTT_BeginFlee::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BTT_BeginFlee.BTT_BeginFlee_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_BeginFlee_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_BeginFlee_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_BeginFlee_C_ReceiveAbortAI");
static_assert(sizeof(BTT_BeginFlee_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_BeginFlee_C_ReceiveAbortAI");
static_assert(offsetof(BTT_BeginFlee_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_BeginFlee_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_BeginFlee_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_BeginFlee.BTT_BeginFlee_C.ReceiveExecute
// 0x0008 (0x0008 - 0x0000)
struct BTT_BeginFlee_C_ReceiveExecute final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_BeginFlee_C_ReceiveExecute) == 0x000008, "Wrong alignment on BTT_BeginFlee_C_ReceiveExecute");
static_assert(sizeof(BTT_BeginFlee_C_ReceiveExecute) == 0x000008, "Wrong size on BTT_BeginFlee_C_ReceiveExecute");
static_assert(offsetof(BTT_BeginFlee_C_ReceiveExecute, OwnerActor) == 0x000000, "Member 'BTT_BeginFlee_C_ReceiveExecute::OwnerActor' has a wrong offset!");

// Function BTT_BeginFlee.BTT_BeginFlee_C.SortFleeArray
// 0x0118 (0x0118 - 0x0000)
struct BTT_BeginFlee_C_SortFleeArray final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         ActorsL;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 IndexsL;                                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                DistancesL;                                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0108(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BTT_BeginFlee_C_SortFleeArray) == 0x000008, "Wrong alignment on BTT_BeginFlee_C_SortFleeArray");
static_assert(sizeof(BTT_BeginFlee_C_SortFleeArray) == 0x000118, "Wrong size on BTT_BeginFlee_C_SortFleeArray");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Actors) == 0x000000, "Member 'BTT_BeginFlee_C_SortFleeArray::Actors' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, ActorsL) == 0x000010, "Member 'BTT_BeginFlee_C_SortFleeArray::ActorsL' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, IndexsL) == 0x000020, "Member 'BTT_BeginFlee_C_SortFleeArray::IndexsL' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, DistancesL) == 0x000030, "Member 'BTT_BeginFlee_C_SortFleeArray::DistancesL' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BTT_BeginFlee_C_SortFleeArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BTT_BeginFlee_C_SortFleeArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BTT_BeginFlee_C_SortFleeArray::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'BTT_BeginFlee_C_SortFleeArray::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'BTT_BeginFlee_C_SortFleeArray::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, Temp_int_Loop_Counter_Variable_2) == 0x00005C, "Member 'BTT_BeginFlee_C_SortFleeArray::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000064, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Get_Item) == 0x000068, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x00006C, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_MinOfFloatArray_MinValue) == 0x000070, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Add_ReturnValue_1) == 0x00008C, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000094, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Max_ReturnValue) == 0x0000B0, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C8, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_VSize_ReturnValue) == 0x0000F8, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_Array_Add_ReturnValue_2) == 0x000100, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_BeginFlee_C_SortFleeArray, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000108, "Member 'BTT_BeginFlee_C_SortFleeArray::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

}

