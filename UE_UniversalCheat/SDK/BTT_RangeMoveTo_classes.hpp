#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_RangeMoveTo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_RangeMoveTo.BTT_RangeMoveTo_C
// 0x0060 (0x0108 - 0x00A8)
class UBTT_RangeMoveTo_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                Attack_Target_Location;                            // 0x00B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EQS_Result;                                        // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAITask_MoveTo*                         Last_Seen_Task;                                    // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          Owner_Controller;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 Smart_AI;                                          // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Array_Element_L;                                   // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SamePositionCheck;                                 // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Cover_Move_EQS_Done(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void ExecuteUbergraph_BTT_RangeMoveTo(int32 EntryPoint);
	void FindTargets(class AActor** Closest_Attack_Target);
	void OnMoveFinished_147596BE4CB673FA8562839726C4DD21(EPathFollowingResult Result, class AAIController* AIController);
	void OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C(EPathFollowingResult Result, class AAIController* AIController);
	void OnRequestFailed_147596BE4CB673FA8562839726C4DD21();
	void OnRequestFailed_751C6ACC423B5631FA126CBB0CF58B1C();
	void Range_Move_EQS_Done(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	bool RangePointCheck();
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void Run_Cover_Move_EQS();
	void Run_Range_Move_EQS();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_RangeMoveTo_C">();
	}
	static class UBTT_RangeMoveTo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_RangeMoveTo_C>();
	}
};
static_assert(alignof(UBTT_RangeMoveTo_C) == 0x000008, "Wrong alignment on UBTT_RangeMoveTo_C");
static_assert(sizeof(UBTT_RangeMoveTo_C) == 0x000108, "Wrong size on UBTT_RangeMoveTo_C");
static_assert(offsetof(UBTT_RangeMoveTo_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_RangeMoveTo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, Attack_Target_Location) == 0x0000B0, "Member 'UBTT_RangeMoveTo_C::Attack_Target_Location' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, EQS_Result) == 0x0000C8, "Member 'UBTT_RangeMoveTo_C::EQS_Result' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, Last_Seen_Task) == 0x0000E0, "Member 'UBTT_RangeMoveTo_C::Last_Seen_Task' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, Owner_Controller) == 0x0000E8, "Member 'UBTT_RangeMoveTo_C::Owner_Controller' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, Smart_AI) == 0x0000F0, "Member 'UBTT_RangeMoveTo_C::Smart_AI' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, Array_Element_L) == 0x0000F8, "Member 'UBTT_RangeMoveTo_C::Array_Element_L' has a wrong offset!");
static_assert(offsetof(UBTT_RangeMoveTo_C, SamePositionCheck) == 0x000100, "Member 'UBTT_RangeMoveTo_C::SamePositionCheck' has a wrong offset!");

}

