#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JigMultiplayer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "RepItemInfo_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "S_RepAttachmentInfo_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_InvWeight_structs.hpp"
#include "S_ItemStat_structs.hpp"
#include "S_ContainerSlots_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "S_ReplicatedContainerInfo_structs.hpp"
#include "CraftingItem_structs.hpp"
#include "S_JigCompContentSettings_structs.hpp"
#include "Engine_structs.hpp"
#include "RandomContainerItem_structs.hpp"
#include "DefaultAttachments_structs.hpp"
#include "S_UpdateCount_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "S_SubContainerInfo_structs.hpp"
#include "S_JigCrafting_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AddItemFromComp
// 0x0198 (0x0198 - 0x0000)
struct BP_JigMultiplayer_C_AddItemFromComp final
{
public:
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     SubContainers;                                     // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  ToUID;                                             // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x00F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToIndex;                                           // 0x00FC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VendorAmount;                                      // 0x0100(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VendorCountUpdate;                                 // 0x0104(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0105(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToSlotIndex;                                       // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_VendorCompareItems_Proceed_;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0170(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AddItemFromComp) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AddItemFromComp");
static_assert(sizeof(BP_JigMultiplayer_C_AddItemFromComp) == 0x000198, "Wrong size on BP_JigMultiplayer_C_AddItemFromComp");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_AddItemFromComp::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, SubContainers) == 0x0000D8, "Member 'BP_JigMultiplayer_C_AddItemFromComp::SubContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, ToUID) == 0x0000E8, "Member 'BP_JigMultiplayer_C_AddItemFromComp::ToUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, FinalRotation) == 0x0000F8, "Member 'BP_JigMultiplayer_C_AddItemFromComp::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, ToIndex) == 0x0000FC, "Member 'BP_JigMultiplayer_C_AddItemFromComp::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, VendorAmount) == 0x000100, "Member 'BP_JigMultiplayer_C_AddItemFromComp::VendorAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, VendorCountUpdate) == 0x000104, "Member 'BP_JigMultiplayer_C_AddItemFromComp::VendorCountUpdate' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, FinalRot) == 0x000105, "Member 'BP_JigMultiplayer_C_AddItemFromComp::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, ToSlotIndex) == 0x000108, "Member 'BP_JigMultiplayer_C_AddItemFromComp::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, NewCount) == 0x00010C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_bool_Variable) == 0x000110, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Not_PreBool_ReturnValue) == 0x000111, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_int_Variable) == 0x000114, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_bool_Variable_1) == 0x000118, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Not_PreBool_ReturnValue_1) == 0x000119, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_bool_Variable_2) == 0x000120, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Not_PreBool_ReturnValue_2) == 0x000121, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_int_Variable_1) == 0x000124, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_bool_Variable_3) == 0x000128, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Not_PreBool_ReturnValue_3) == 0x000129, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_int_Variable_2) == 0x000130, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Add_IntInt_ReturnValue_2) == 0x000134, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_GetVectorRot_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_VendorCompareItems_Proceed_) == 0x000148, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_VendorCompareItems_Proceed_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Add_IntInt_ReturnValue_3) == 0x00014C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Array_LastIndex_ReturnValue) == 0x000150, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Array_Contains_ReturnValue) == 0x000154, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000155, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_BooleanAND_ReturnValue) == 0x000156, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000157, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_BooleanAND_ReturnValue_1) == 0x000158, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00015C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_IsVendor_ReturnValue) == 0x000161, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_BooleanAND_ReturnValue_2) == 0x000162, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, Temp_int_Variable_3) == 0x000164, "Member 'BP_JigMultiplayer_C_AddItemFromComp::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Add_IntInt_ReturnValue_4) == 0x000168, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_GetHostingSlots_Indexes) == 0x000170, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000180, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000184, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000188, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_Array_LastIndex_ReturnValue_3) == 0x00018C, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_BooleanAND_ReturnValue_3) == 0x000190, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000191, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemFromComp, CallFunc_BooleanAND_ReturnValue_4) == 0x000192, "Member 'BP_JigMultiplayer_C_AddItemFromComp::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AddItemToContainerByName
// 0x0528 (0x0528 - 0x0000)
struct BP_JigMultiplayer_C_AddItemToContainerByName final
{
public:
	class FName                                   ContainerName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TopLevelContainersOnly_;                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                ItemInside;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemInsideCount;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStack;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStack;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Indexes;                                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGuid>                          TempUIds;                                          // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_ReplicatedContainerInfo>     SubCont;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetMainContainerUIDByName_UID;            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMainContainerUIDByName_Index;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMainContainerUIDByName_Found_;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMainContainerUIDByName_IsEquipTo_;     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemByContainerUID_Found_;     // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemByContainerUID_IsEquipTo;  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetEquippedItemByContainerUID_Info;       // 0x0080(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SubContainerInfo                    CallFunc_Array_Get_Item;                           // 0x0174(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ReplicatedContainerInfo             CallFunc_FindJigContainerByUID_Output;             // 0x01A0(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_FindJigContainerByUID_Index;              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomContainerItem                   K2Node_MakeStruct_RandomContainerItem;             // 0x01F8(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedItem_ReturnValue;              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x2];                                      // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomContainerItem                   K2Node_MakeStruct_RandomContainerItem_1;           // 0x0298(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_TryAddNewItem_AddedItemInfo;              // 0x0300(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Added_;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Stacked_;                   // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x03DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ReplicatedContainerInfo             CallFunc_FindJigContainerByUID_Output_1;           // 0x03E0(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_FindJigContainerByUID_Index_1;            // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_TryAddNewItem_AddedItemInfo_1;            // 0x0438(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Added__1;                   // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Stacked__1;                 // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x0518(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_JigMultiplayer_C_AddItemToContainerByName) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AddItemToContainerByName");
static_assert(sizeof(BP_JigMultiplayer_C_AddItemToContainerByName) == 0x000528, "Wrong size on BP_JigMultiplayer_C_AddItemToContainerByName");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, ContainerName) == 0x000000, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, ItemId) == 0x000008, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::ItemId' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Count) == 0x000010, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, TopLevelContainersOnly_) == 0x000014, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::TopLevelContainersOnly_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, ItemInside) == 0x000018, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::ItemInside' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, ItemInsideCount) == 0x000020, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::ItemInsideCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, MaxStack) == 0x000024, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CanStack) == 0x000028, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Indexes) == 0x000030, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, TempUIds) == 0x000040, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::TempUIds' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, SubCont) == 0x000050, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::SubCont' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_bool_Variable) == 0x000060, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetMainContainerUIDByName_UID) == 0x000064, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetMainContainerUIDByName_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetMainContainerUIDByName_Index) == 0x000074, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetMainContainerUIDByName_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetMainContainerUIDByName_Found_) == 0x000078, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetMainContainerUIDByName_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetMainContainerUIDByName_IsEquipTo_) == 0x000079, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetMainContainerUIDByName_IsEquipTo_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_bool_Variable_1) == 0x00007A, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetEquippedItemByContainerUID_Found_) == 0x00007B, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetEquippedItemByContainerUID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetEquippedItemByContainerUID_IsEquipTo) == 0x00007C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetEquippedItemByContainerUID_IsEquipTo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GetEquippedItemByContainerUID_Info) == 0x000080, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GetEquippedItemByContainerUID_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Not_PreBool_ReturnValue_1) == 0x00015C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_int_Loop_Counter_Variable) == 0x000160, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_int_Array_Index_Variable) == 0x00016C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_int_Variable) == 0x000170, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Get_Item) == 0x000174, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Add_IntInt_ReturnValue_1) == 0x000198, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_FindJigContainerByUID_Output) == 0x0001A0, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_FindJigContainerByUID_Output' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_FindJigContainerByUID_Index) == 0x0001F0, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_FindJigContainerByUID_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_IsValid_ReturnValue) == 0x0001F4, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, K2Node_MakeStruct_RandomContainerItem) == 0x0001F8, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::K2Node_MakeStruct_RandomContainerItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Add_ReturnValue) == 0x000250, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Add_ReturnValue_1) == 0x000254, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_IsSupportedItem_ReturnValue) == 0x000258, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_IsSupportedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_int_Variable_1) == 0x00025C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Add_IntInt_ReturnValue_2) == 0x000260, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_int_Variable_2) == 0x000264, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Add_IntInt_ReturnValue_3) == 0x000268, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_LastIndex_ReturnValue) == 0x00026C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000270, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000274, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000278, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_BooleanAND_ReturnValue) == 0x000279, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Add_IntInt_ReturnValue_4) == 0x00027C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000280, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000281, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Add_ReturnValue_2) == 0x000284, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, Temp_bool_Variable_2) == 0x000288, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Add_ReturnValue_3) == 0x00028C, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Not_PreBool_ReturnValue_2) == 0x000290, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, K2Node_MakeStruct_RandomContainerItem_1) == 0x000298, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::K2Node_MakeStruct_RandomContainerItem_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F0, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_Get_Item_1) == 0x0002F4, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0002F8, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_BooleanAND_ReturnValue_2) == 0x0002F9, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002FA, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_BooleanAND_ReturnValue_3) == 0x0002FB, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0002FC, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_TryAddNewItem_AddedItemInfo) == 0x000300, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_TryAddNewItem_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_TryAddNewItem_Added_) == 0x0003D8, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_TryAddNewItem_Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_TryAddNewItem_Stacked_) == 0x0003D9, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_TryAddNewItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0003DA, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_BooleanAND_ReturnValue_4) == 0x0003DB, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_FindJigContainerByUID_Output_1) == 0x0003E0, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_FindJigContainerByUID_Output_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_FindJigContainerByUID_Index_1) == 0x000430, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_FindJigContainerByUID_Index_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_TryAddNewItem_AddedItemInfo_1) == 0x000438, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_TryAddNewItem_AddedItemInfo_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_TryAddNewItem_Added__1) == 0x000510, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_TryAddNewItem_Added__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, CallFunc_TryAddNewItem_Stacked__1) == 0x000511, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::CallFunc_TryAddNewItem_Stacked__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddItemToContainerByName, K2Node_MakeArray_Array) == 0x000518, "Member 'BP_JigMultiplayer_C_AddItemToContainerByName::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AddJSIContainer
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_AddJSIContainer final
{
public:
	const class UJSIContainer_C*                  InputPin;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AddJSIContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AddJSIContainer");
static_assert(sizeof(BP_JigMultiplayer_C_AddJSIContainer) == 0x000010, "Wrong size on BP_JigMultiplayer_C_AddJSIContainer");
static_assert(offsetof(BP_JigMultiplayer_C_AddJSIContainer, InputPin) == 0x000000, "Member 'BP_JigMultiplayer_C_AddJSIContainer::InputPin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddJSIContainer, CallFunc_IsCraftingStation_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_AddJSIContainer::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddJSIContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_JigMultiplayer_C_AddJSIContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddJSIContainer, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_AddJSIContainer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AddNewItemSomewhere
// 0x0598 (0x0598 - 0x0000)
struct BP_JigMultiplayer_C_AddNewItemSomewhere final
{
public:
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                ItemInside;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemInsideCount;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DropIfFailedToAdd_;                                // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dropped_;                                          // 0x001E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ItemUID;                                           // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AddedToUID;                                        // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          LContent;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FGuid                                  AddedTo;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 CountsToUpdate;                                    // 0x0070(0x0010)(Edit, BlueprintVisible)
	int32                                         FreeSpace;                                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          UpdateCounts;                                      // 0x0088(0x0010)(Edit, BlueprintVisible)
	int32                                         Remaining;                                         // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomContainerItem                   K2Node_MakeStruct_RandomContainerItem;             // 0x00C8(0x0058)(HasGetValueTypeHash)
	TArray<struct FRandomContainerItem>           K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue_1;            // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x0138(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnRequestDropItem_ActorRef;         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPickupCount_Result;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount;                   // 0x021C(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCapacityContainer_IsCapacity;      // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultAttachments>            K2Node_MakeArray_Array_1;                          // 0x0268(0x0010)(ReferenceParm)
	struct FRandomContainerItem                   K2Node_MakeStruct_RandomContainerItem_1;           // 0x0278(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_TryAddNewItem_AddedItemInfo;              // 0x02D8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Added_;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Stacked_;                   // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetItemByUID_Item;                        // 0x03B8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_Found;                       // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_InMainContainer_;            // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_493[0x5];                                      // 0x0493(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Generate_AddNewItemToContainer_AddedItemInfo; // 0x0498(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Generate_AddNewItemToContainer_Added_;    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedItem_ReturnValue;              // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_572[0x6];                                      // 0x0572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array_2;                          // 0x0578(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B[0x1];                                      // 0x058B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0596(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCapacityContainer_IsCapacity_1;    // 0x0597(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AddNewItemSomewhere) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AddNewItemSomewhere");
static_assert(sizeof(BP_JigMultiplayer_C_AddNewItemSomewhere) == 0x000598, "Wrong size on BP_JigMultiplayer_C_AddNewItemSomewhere");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, ItemId) == 0x000000, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::ItemId' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Count) == 0x000008, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, ItemInside) == 0x000010, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::ItemInside' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, ItemInsideCount) == 0x000018, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::ItemInsideCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, DropIfFailedToAdd_) == 0x00001C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::DropIfFailedToAdd_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Added) == 0x00001D, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Dropped_) == 0x00001E, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Dropped_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, ItemUID) == 0x000020, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, AddedToUID) == 0x000030, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::AddedToUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, LContent) == 0x000040, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::LContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, AddedTo) == 0x000050, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::AddedTo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, UID) == 0x000060, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CountsToUpdate) == 0x000070, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CountsToUpdate' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, FreeSpace) == 0x000080, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, UpdateCounts) == 0x000088, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::UpdateCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Remaining) == 0x000098, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Remaining' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Temp_int_Variable) == 0x00009C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Temp_int_Variable_1) == 0x0000A8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Temp_int_Variable_2) == 0x0000B0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B4, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Temp_int_Variable_3) == 0x0000B8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Temp_bool_Variable) == 0x0000BC, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Not_PreBool_ReturnValue) == 0x0000BD, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeStruct_RandomContainerItem) == 0x0000C8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeStruct_RandomContainerItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsLootContainer_ReturnValue) == 0x000131, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsLootContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsLootContainer_ReturnValue_1) == 0x000132, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsLootContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeStruct_RepItemInfo) == 0x000138, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GetOwner_ReturnValue) == 0x0001B8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x0001C0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_JigMP_OnRequestDropItem_ActorRef) == 0x0001D8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_JigMP_OnRequestDropItem_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x0001E0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_DynamicCast_bSuccess_1) == 0x0001F0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_SetPickupCount_Result) == 0x0001F1, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_SetPickupCount_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GetComponentByClass_ReturnValue) == 0x0001F8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000200, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_LastIndex_ReturnValue) == 0x000204, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000208, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00020C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000210, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Add_IntInt_ReturnValue_4) == 0x000214, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Subtract_IntInt_ReturnValue) == 0x000218, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeStruct_S_UpdateCount) == 0x00021C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeStruct_S_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_Add_ReturnValue) == 0x000230, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_Contains_ReturnValue) == 0x000234, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000235, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, Temp_int_Variable_4) == 0x000238, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Add_IntInt_ReturnValue_5) == 0x00023C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000240, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000244, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000248, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00024C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_Add_ReturnValue_1) == 0x000250, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000254, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000258, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000259, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_CheckIfCapacityContainer_IsCapacity) == 0x00025A, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_CheckIfCapacityContainer_IsCapacity' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Not_PreBool_ReturnValue_1) == 0x00025B, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00025C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00025D, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000260, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000264, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeArray_Array_1) == 0x000268, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeStruct_RandomContainerItem_1) == 0x000278, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeStruct_RandomContainerItem_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0002D0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_TryAddNewItem_AddedItemInfo) == 0x0002D8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_TryAddNewItem_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_TryAddNewItem_Added_) == 0x0003B0, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_TryAddNewItem_Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_TryAddNewItem_Stacked_) == 0x0003B1, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_TryAddNewItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GetItemByUID_Item) == 0x0003B8, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GetItemByUID_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GetItemByUID_Found) == 0x000490, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GetItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_GetItemByUID_InMainContainer_) == 0x000491, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_GetItemByUID_InMainContainer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsValid_ReturnValue_2) == 0x000492, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Generate_AddNewItemToContainer_AddedItemInfo) == 0x000498, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Generate_AddNewItemToContainer_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Generate_AddNewItemToContainer_Added_) == 0x000570, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Generate_AddNewItemToContainer_Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsSupportedItem_ReturnValue) == 0x000571, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsSupportedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, K2Node_MakeArray_Array_2) == 0x000578, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000588, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_BooleanAND_ReturnValue) == 0x000589, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_IsValid_Guid_ReturnValue) == 0x00058A, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00058C, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000590, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000594, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_BooleanAND_ReturnValue_1) == 0x000595, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000596, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemSomewhere, CallFunc_CheckIfCapacityContainer_IsCapacity_1) == 0x000597, "Member 'BP_JigMultiplayer_C_AddNewItemSomewhere::CallFunc_CheckIfCapacityContainer_IsCapacity_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AddNewItemToSlot
// 0x0490 (0x0490 - 0x0000)
struct BP_JigMultiplayer_C_AddNewItemToSlot final
{
public:
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  ToContainer;                                       // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     ContainerContent;                                  // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          SetUID_;                                           // 0x0100(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0101(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  AddedItemInfo;                                     // 0x0108(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Rows;                                              // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Col;                                               // 0x01E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewUID;                                            // 0x01E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     AppendNewContainers;                               // 0x01F8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FGuid                                  SubContainerUID;                                   // 0x0208(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  TempInfo;                                          // 0x0218(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector2D                              Vect;                                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F[0x1];                                      // 0x033F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x034C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_Select_Default;                             // 0x035C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0378(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x038D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38E[0x2];                                      // 0x038E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID_1;                        // 0x0394(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SubContainerInfo                    K2Node_MakeStruct_S_SubContainerInfo;              // 0x03A4(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_GetContainerDimensions_SpecialContainerDemensions; // 0x03D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ReplicatedContainerInfo             K2Node_MakeStruct_S_ReplicatedContainerInfo;       // 0x0408(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0458(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddToContainerIgnoreIndexes_Proceed;   // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x048D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x048E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AddNewItemToSlot) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AddNewItemToSlot");
static_assert(sizeof(BP_JigMultiplayer_C_AddNewItemToSlot) == 0x000490, "Wrong size on BP_JigMultiplayer_C_AddNewItemToSlot");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, ToContainer) == 0x0000D8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, ToIndex) == 0x0000E8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, ContainerContent) == 0x0000F0, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, SetUID_) == 0x000100, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::SetUID_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Added) == 0x000101, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, AddedItemInfo) == 0x000108, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Rows) == 0x0001E0, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Rows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Col) == 0x0001E4, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Col' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, NewUID) == 0x0001E8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, AppendNewContainers) == 0x0001F8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::AppendNewContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, SubContainerUID) == 0x000208, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::SubContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, TempInfo) == 0x000218, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::TempInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Vect) == 0x0002F0, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Vect' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_bool_Variable) == 0x000300, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BreakVector2D_X) == 0x000308, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BreakVector2D_Y) == 0x000310, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000318, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_MakeVector2D_ReturnValue) == 0x000320, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_bool_Variable_1) == 0x000330, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_int_Variable) == 0x000334, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000338, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x00033C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_bool_Variable_2) == 0x00033D, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x00033E, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_int_Variable_1) == 0x000340, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_bool_Variable_3) == 0x000344, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000348, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_GetUniqueID_UID) == 0x00034C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, K2Node_Select_Default) == 0x00035C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_Length_ReturnValue) == 0x00036C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000370, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_GetHostingSlots_Indexes) == 0x000378, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_LastIndex_ReturnValue) == 0x000388, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00038C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BooleanAND_ReturnValue) == 0x00038D, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_int_Variable_2) == 0x000390, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_GetUniqueID_UID_1) == 0x000394, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_GetUniqueID_UID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, K2Node_MakeStruct_S_SubContainerInfo) == 0x0003A4, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::K2Node_MakeStruct_S_SubContainerInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_Add_ReturnValue) == 0x0003C8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003CC, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_GetContainerDimensions_SpecialContainerDemensions) == 0x0003D0, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_GetContainerDimensions_SpecialContainerDemensions' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0003E0, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BreakVector2D_X_1) == 0x0003E8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BreakVector2D_Y_1) == 0x0003F0, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003F8, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_FTrunc_ReturnValue) == 0x0003FC, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BooleanAND_ReturnValue_1) == 0x000400, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_FTrunc_ReturnValue_1) == 0x000404, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, K2Node_MakeStruct_S_ReplicatedContainerInfo) == 0x000408, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::K2Node_MakeStruct_S_ReplicatedContainerInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, K2Node_MakeArray_Array) == 0x000458, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_Add_ReturnValue_1) == 0x000468, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, Temp_bool_Variable_4) == 0x00046C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, K2Node_Select_Default_1) == 0x000470, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_CanAddToContainerIgnoreIndexes_Proceed) == 0x000480, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_CanAddToContainerIgnoreIndexes_Proceed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_Add_ReturnValue_2) == 0x000484, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000488, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00048C, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_BooleanAND_ReturnValue_2) == 0x00048D, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewItemToSlot, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00048E, "Member 'BP_JigMultiplayer_C_AddNewItemToSlot::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AddNewPendingRequest
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_AddNewPendingRequest final
{
public:
	const class UJSI_Slot_C*                      NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AddNewPendingRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AddNewPendingRequest");
static_assert(sizeof(BP_JigMultiplayer_C_AddNewPendingRequest) == 0x000010, "Wrong size on BP_JigMultiplayer_C_AddNewPendingRequest");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewPendingRequest, NewItem) == 0x000000, "Member 'BP_JigMultiplayer_C_AddNewPendingRequest::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AddNewPendingRequest, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_AddNewPendingRequest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AdjustCrafting
// 0x01A0 (0x01A0 - 0x0000)
struct BP_JigMultiplayer_C_AdjustCrafting final
{
public:
	struct FRepItemInfo                           Needed;                                            // 0x0000(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         TempIndex;                                         // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_JigCrafting>                 Temp;                                              // 0x0080(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRepItemInfo>                   K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_JigCrafting                         K2Node_MakeStruct_S_JigCrafting;                   // 0x00D0(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AdjustCrafting) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AdjustCrafting");
static_assert(sizeof(BP_JigMultiplayer_C_AdjustCrafting) == 0x0001A0, "Wrong size on BP_JigMultiplayer_C_AdjustCrafting");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Needed) == 0x000000, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Needed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, TempIndex) == 0x000078, "Member 'BP_JigMultiplayer_C_AdjustCrafting::TempIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Temp) == 0x000080, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Temp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Temp_int_Variable) == 0x000090, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Temp_bool_Variable) == 0x000098, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Temp_bool_Variable_1) == 0x00009A, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009B, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Temp_int_Variable_1) == 0x00009C, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, Temp_int_Variable_2) == 0x0000A4, "Member 'BP_JigMultiplayer_C_AdjustCrafting::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A8, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_JigMultiplayer_C_AdjustCrafting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Array_LastIndex_ReturnValue) == 0x0000C4, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, K2Node_MakeStruct_S_JigCrafting) == 0x0000D0, "Member 'BP_JigMultiplayer_C_AdjustCrafting::K2Node_MakeStruct_S_JigCrafting' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_BooleanAND_ReturnValue) == 0x000188, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Array_Add_ReturnValue_1) == 0x00018C, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000190, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_BooleanAND_ReturnValue_1) == 0x000195, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000196, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Greater_IntInt_ReturnValue) == 0x000197, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Not_PreBool_ReturnValue_2) == 0x000198, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000199, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustCrafting, CallFunc_BooleanAND_ReturnValue_2) == 0x00019A, "Member 'BP_JigMultiplayer_C_AdjustCrafting::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AdjustEquipToContainerSettings
// 0x0014 (0x0014 - 0x0000)
struct BP_JigMultiplayer_C_AdjustEquipToContainerSettings final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_AdjustEquipToContainerSettings");
static_assert(sizeof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings) == 0x000014, "Wrong size on BP_JigMultiplayer_C_AdjustEquipToContainerSettings");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings, Temp_int_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_AdjustEquipToContainerSettings::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'BP_JigMultiplayer_C_AdjustEquipToContainerSettings::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_AdjustEquipToContainerSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings, CallFunc_Array_LastIndex_ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_AdjustEquipToContainerSettings::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustEquipToContainerSettings, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_AdjustEquipToContainerSettings::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.AdjustNewContainerSize
// 0x0108 (0x0108 - 0x0000)
struct BP_JigMultiplayer_C_AdjustNewContainerSize final
{
public:
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         NewRow;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCol;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ContainerSlots>              K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_5;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x00E8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_AdjustNewContainerSize) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_AdjustNewContainerSize");
static_assert(sizeof(BP_JigMultiplayer_C_AdjustNewContainerSize) == 0x000108, "Wrong size on BP_JigMultiplayer_C_AdjustNewContainerSize");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, DA) == 0x000000, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::DA' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, NewRow) == 0x000008, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::NewRow' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, NewCol) == 0x00000C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::NewCol' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_bool_Variable_1) == 0x00001D, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001E, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Variable_1) == 0x000020, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_bool_Variable_2) == 0x000028, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Not_PreBool_ReturnValue_2) == 0x000034, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Variable_2) == 0x00003C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Add_IntInt_ReturnValue_3) == 0x000040, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_bool_Variable_3) == 0x000044, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_bool_Variable_4) == 0x000045, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Not_PreBool_ReturnValue_3) == 0x000046, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Variable_3) == 0x000048, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Add_IntInt_ReturnValue_4) == 0x00004C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_bool_Variable_5) == 0x000060, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Not_PreBool_ReturnValue_4) == 0x000061, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_LastIndex_ReturnValue) == 0x000064, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BreakVector2D_X) == 0x000078, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_FTrunc_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_FTrunc_ReturnValue_1) == 0x00008C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, Temp_int_Variable_4) == 0x000090, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000094, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BooleanAND_ReturnValue_1) == 0x000099, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00009A, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_LastIndex_ReturnValue_3) == 0x00009C, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A1, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A2, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_LastIndex_ReturnValue_4) == 0x0000A4, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000A8, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BreakVector2D_X_1) == 0x0000B0, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BreakVector2D_Y_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C0, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, K2Node_Select_Default) == 0x0000D8, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_GetHostingSlots_Indexes) == 0x0000E8, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000F8, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_Get_Item) == 0x0000FC, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000105, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_AdjustNewContainerSize, CallFunc_BooleanAND_ReturnValue_4) == 0x000106, "Member 'BP_JigMultiplayer_C_AdjustNewContainerSize::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.BindMainEvents
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_BindMainEvents final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_BindMainEvents) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_BindMainEvents");
static_assert(sizeof(BP_JigMultiplayer_C_BindMainEvents) == 0x000008, "Wrong size on BP_JigMultiplayer_C_BindMainEvents");
static_assert(offsetof(BP_JigMultiplayer_C_BindMainEvents, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_BindMainEvents::Container' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.BuildContainerSlots
// 0x0080 (0x0080 - 0x0000)
struct BP_JigMultiplayer_C_BuildContainerSlots final
{
public:
	TArray<struct FS_ContainerSlots>              SlotArr;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Columns;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rows;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerSlots                      K2Node_MakeStruct_S_ContainerSlots;                // 0x0028(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Column;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Row;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerSlots                      K2Node_MakeStruct_S_ContainerSlots_1;              // 0x0054(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_BuildContainerSlots) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_BuildContainerSlots");
static_assert(sizeof(BP_JigMultiplayer_C_BuildContainerSlots) == 0x000080, "Wrong size on BP_JigMultiplayer_C_BuildContainerSlots");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, SlotArr) == 0x000000, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::SlotArr' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, Columns) == 0x000010, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::Columns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, Rows) == 0x000014, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::Rows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, Temp_int_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, K2Node_MakeStruct_S_ContainerSlots) == 0x000028, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::K2Node_MakeStruct_S_ContainerSlots' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_GetColumnRowBySlotIndex_Column) == 0x000048, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_GetColumnRowBySlotIndex_Column' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_GetColumnRowBySlotIndex_Row) == 0x00004C, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_GetColumnRowBySlotIndex_Row' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, K2Node_MakeStruct_S_ContainerSlots_1) == 0x000054, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::K2Node_MakeStruct_S_ContainerSlots_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_Array_Add_ReturnValue_1) == 0x000074, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildContainerSlots, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_JigMultiplayer_C_BuildContainerSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.BuildDataToContainer
// 0x0188 (0x0188 - 0x0000)
struct BP_JigMultiplayer_C_BuildDataToContainer final
{
public:
	TArray<struct FContainerPickupsInfo>          Data;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FRepItemInfo                           Info;                                              // 0x0010(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            AddedItem;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_2;                   // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_3;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_4;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef;                  // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateCount_Count;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_BuildDataToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_BuildDataToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_BuildDataToContainer) == 0x000188, "Wrong size on BP_JigMultiplayer_C_BuildDataToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Data) == 0x000000, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Data' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Info) == 0x000010, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Count) == 0x000088, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, AddedItem) == 0x000090, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::AddedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000098, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Temp_int_Variable) == 0x00009C, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsVendor_ReturnValue) == 0x0000A4, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Temp_bool_Variable) == 0x0000A5, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x0000A6, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A7, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_SelectInt_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsVendor_ReturnValue_1) == 0x0000AD, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsVendor_ReturnValue_2) == 0x0000AE, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsVendor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_SelectInt_ReturnValue_1) == 0x0000B0, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Temp_bool_Variable_1) == 0x0000C0, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_CanStack__CanStack) == 0x0000C1, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_CanStack__FreeSpaceAvailable) == 0x0000C2, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C3, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsVendor_ReturnValue_3) == 0x0000C4, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsVendor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsVendor_ReturnValue_4) == 0x0000C5, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsVendor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_BooleanAND_ReturnValue) == 0x0000C6, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000C8, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, Temp_int_Variable_1) == 0x0000D0, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000D8, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetListOfContainers_Containers) == 0x0000F0, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_FindJSIContainer_JSIRef) == 0x000108, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_FindJSIContainer_JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_FindJSIContainer_Found) == 0x000110, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_FindJSIContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetEquippedItemRef_Found_) == 0x000111, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetEquippedItemRef_ItemRef) == 0x000118, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetEquippedItemRef_IsPending) == 0x000120, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsEquipTo__ReturnValue) == 0x000121, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000128, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000131, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_AddNewInventoryItem_Added) == 0x000132, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_AddNewInventoryItem_SlotIndex) == 0x000134, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_AddNewInventoryItem_ItemInfo) == 0x000138, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x000140, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_AddNewInventoryItem_Stacked_) == 0x000148, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_IsValid_ReturnValue) == 0x000149, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetEquippedItemRef_Found__1) == 0x00014A, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000150, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000158, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000159, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_GetCount_Count) == 0x00015C, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_SetUniqueID_UniqueID) == 0x000160, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_UpdateCount_Count) == 0x000170, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000174, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000180, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000181, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BuildDataToContainer, CallFunc_BooleanAND_ReturnValue_3) == 0x000182, "Member 'BP_JigMultiplayer_C_BuildDataToContainer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.BulkUpdateStats
// 0x0100 (0x0100 - 0x0000)
struct BP_JigMultiplayer_C_BulkUpdateStats final
{
public:
	struct FGameplayTag                           StatTag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  UID;                                               // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGuid, double>                    ClientUpdate;                                      // 0x0028(0x0050)(Edit, BlueprintVisible)
	double                                        NewValue;                                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0090(0x0010)(ReferenceParm)
	TArray<struct FGuid>                          CallFunc_Map_Keys_Keys;                            // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_BulkUpdateStats) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_BulkUpdateStats");
static_assert(sizeof(BP_JigMultiplayer_C_BulkUpdateStats) == 0x000100, "Wrong size on BP_JigMultiplayer_C_BulkUpdateStats");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, StatTag) == 0x000000, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::StatTag' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Value) == 0x000008, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Value' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Override_) == 0x000010, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Override_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, UID) == 0x000014, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, ClientUpdate) == 0x000028, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::ClientUpdate' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, NewValue) == 0x000078, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::NewValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Temp_bool_Variable) == 0x000080, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Temp_bool_Variable_1) == 0x000081, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x000083, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Temp_int_Variable) == 0x000084, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Temp_bool_Variable_2) == 0x00008C, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008D, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Map_Values_Values) == 0x000090, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Map_Keys_Keys) == 0x0000A0, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Temp_int_Variable_1) == 0x0000B4, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, Temp_int_Variable_2) == 0x0000BC, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Array_LastIndex_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_BooleanAND_ReturnValue) == 0x0000C5, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000C8, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_SelectFloat_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0000EC, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000F0, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F4, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_BulkUpdateStats, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F8, "Member 'BP_JigMultiplayer_C_BulkUpdateStats::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CanAddItem
// 0x0170 (0x0170 - 0x0000)
struct BP_JigMultiplayer_C_CanAddItem final
{
public:
	struct FContainerPickupsInfo                  Info;                                              // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x00EC(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00ED(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToMain_;                                           // 0x00EE(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Vect;                                              // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddToContainerIgnoreIndexes_Proceed;   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CanAddItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CanAddItem");
static_assert(sizeof(BP_JigMultiplayer_C_CanAddItem) == 0x000170, "Wrong size on BP_JigMultiplayer_C_CanAddItem");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Info) == 0x000000, "Member 'BP_JigMultiplayer_C_CanAddItem::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, ToContainerUID) == 0x0000D8, "Member 'BP_JigMultiplayer_C_CanAddItem::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Index_0) == 0x0000E8, "Member 'BP_JigMultiplayer_C_CanAddItem::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, FinalRotation) == 0x0000EC, "Member 'BP_JigMultiplayer_C_CanAddItem::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Result) == 0x0000ED, "Member 'BP_JigMultiplayer_C_CanAddItem::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, ToMain_) == 0x0000EE, "Member 'BP_JigMultiplayer_C_CanAddItem::ToMain_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Vect) == 0x0000F0, "Member 'BP_JigMultiplayer_C_CanAddItem::Vect' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Temp_bool_Variable) == 0x000100, "Member 'BP_JigMultiplayer_C_CanAddItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_BreakVector2D_X) == 0x000108, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_BreakVector2D_Y) == 0x000110, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_MakeVector2D_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Temp_bool_Variable_1) == 0x000130, "Member 'BP_JigMultiplayer_C_CanAddItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, Temp_int_Variable) == 0x000134, "Member 'BP_JigMultiplayer_C_CanAddItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, K2Node_Select_Default) == 0x000138, "Member 'BP_JigMultiplayer_C_CanAddItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_JigMultiplayer_C_CanAddItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_Array_Contains_ReturnValue) == 0x000160, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_Array_LastIndex_ReturnValue) == 0x000164, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_CanAddToContainerIgnoreIndexes_Proceed) == 0x000168, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_CanAddToContainerIgnoreIndexes_Proceed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000169, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_BooleanAND_ReturnValue) == 0x00016A, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddItem, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00016B, "Member 'BP_JigMultiplayer_C_CanAddItem::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CanAddToContainerIgnoreIndexes
// 0x00D8 (0x00D8 - 0x0000)
struct BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes final
{
public:
	struct FS_ReplicatedContainerInfo             RepContainer;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Vec;                                               // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Ignore;                                            // 0x0068(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Proceed;                                           // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerSlots                      CallFunc_Array_Get_Item;                           // 0x007C(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UIDNotValid_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UIDNotValid_ReturnValue_1;                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes");
static_assert(sizeof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes) == 0x0000D8, "Wrong size on BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, RepContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::RepContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, ToIndex) == 0x000050, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, Vec) == 0x000058, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::Vec' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, Ignore) == 0x000068, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::Ignore' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, Proceed) == 0x000078, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::Proceed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, Temp_bool_Variable) == 0x000079, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Array_Get_Item) == 0x00007C, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Not_PreBool_ReturnValue) == 0x00009C, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_UIDNotValid_ReturnValue) == 0x00009D, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_UIDNotValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Array_Contains_ReturnValue) == 0x00009E, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_BooleanOR_ReturnValue) == 0x00009F, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_SelectInt_ReturnValue) == 0x0000A4, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_GetHostingSlots_Indexes) == 0x0000A8, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Array_LastIndex_ReturnValue) == 0x0000BC, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, Temp_int_Variable) == 0x0000C4, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Less_IntInt_ReturnValue) == 0x0000C9, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_UIDNotValid_ReturnValue_1) == 0x0000CA, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_UIDNotValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D1, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_Array_Contains_ReturnValue_1) == 0x0000D2, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D3, "Member 'BP_JigMultiplayer_C_CanAddToContainerIgnoreIndexes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CanLootPickup?
// 0x000C (0x000C - 0x0000)
struct BP_JigMultiplayer_C_CanLootPickup_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CanLootPickup_) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CanLootPickup_");
static_assert(sizeof(BP_JigMultiplayer_C_CanLootPickup_) == 0x00000C, "Wrong size on BP_JigMultiplayer_C_CanLootPickup_");
static_assert(offsetof(BP_JigMultiplayer_C_CanLootPickup_, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_CanLootPickup_::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanLootPickup_, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_JigMultiplayer_C_CanLootPickup_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanLootPickup_, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_CanLootPickup_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanLootPickup_, CallFunc_IsValidClass_ReturnValue) == 0x000009, "Member 'BP_JigMultiplayer_C_CanLootPickup_::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanLootPickup_, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_JigMultiplayer_C_CanLootPickup_::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CanLootPickup_, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'BP_JigMultiplayer_C_CanLootPickup_::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckCanClearContainer
// 0x0001 (0x0001 - 0x0000)
struct BP_JigMultiplayer_C_CheckCanClearContainer final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckCanClearContainer) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_CheckCanClearContainer");
static_assert(sizeof(BP_JigMultiplayer_C_CheckCanClearContainer) == 0x000001, "Wrong size on BP_JigMultiplayer_C_CheckCanClearContainer");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCanClearContainer, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckCanClearContainer::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckCapacityContainer
// 0x0100 (0x0100 - 0x0000)
struct BP_JigMultiplayer_C_CheckCapacityContainer final
{
public:
	struct FRepItemInfo                           ContainerInfo;                                     // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FreeSpace;                                         // 0x008C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJigsawItem_DataAsset_C*>        AvailableIDs;                                      // 0x0090(0x0010)(Parm, OutParm)
	int32                                         Index_0;                                           // 0x00A0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJigsawItem_DataAsset_C*>        AvIDs;                                             // 0x00A8(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentC;                                          // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UJigsawItem_DataAsset_C*          Temp_object_Variable;                              // 0x00C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckCapacityContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CheckCapacityContainer");
static_assert(sizeof(BP_JigMultiplayer_C_CheckCapacityContainer) == 0x000100, "Wrong size on BP_JigMultiplayer_C_CheckCapacityContainer");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, ContainerInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::ContainerInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, ToContainerUID) == 0x000078, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, FreeSpace) == 0x00008C, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, AvailableIDs) == 0x000090, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::AvailableIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, Index_0) == 0x0000A0, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CurrentIndex) == 0x0000A4, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, AvIDs) == 0x0000A8, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::AvIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CurrentC) == 0x0000B8, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CurrentC' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, Temp_bool_Variable) == 0x0000BC, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BD, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Not_PreBool_ReturnValue) == 0x0000BE, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_BooleanAND_ReturnValue) == 0x0000BF, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, Temp_bool_Variable_1) == 0x0000C0, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C1, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, Temp_int_Variable) == 0x0000C4, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, Temp_object_Variable) == 0x0000C8, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, Temp_int_Variable_1) == 0x0000D4, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Array_Add_ReturnValue) == 0x0000DC, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E1, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x0000ED, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000EE, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000EF, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_BooleanOR_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000F4, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCapacityContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x0000FD, "Member 'BP_JigMultiplayer_C_CheckCapacityContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckContainerRefill
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_CheckContainerRefill final
{
public:
	bool                                          BeginPlay_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckContainerRefill) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CheckContainerRefill");
static_assert(sizeof(BP_JigMultiplayer_C_CheckContainerRefill) == 0x000040, "Wrong size on BP_JigMultiplayer_C_CheckContainerRefill");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, BeginPlay_) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::BeginPlay_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_GetFloatCVar_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000020, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x00002C, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckContainerRefill, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x000038, "Member 'BP_JigMultiplayer_C_CheckContainerRefill::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckCraftingIngredients
// 0x0188 (0x0188 - 0x0000)
struct BP_JigMultiplayer_C_CheckCraftingIngredients final
{
public:
	struct FRepItemInfo                           RequiredItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<struct FGuid>                          Exclude;                                           // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UJSI_Slot_C*>                    ItemFound_Element;                                 // 0x0088(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UJSI_Slot_C*>                    TempFound;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         RequiredCount;                                     // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCount;                                        // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    Found;                                             // 0x00B0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UUserWidget*                            WidgetRef;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UJSI_Slot_C*>                    CallFunc_FindCraftingIngredient_OutputPin;         // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_FindCraftingIngredient_Result;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckCraftingIngredients) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CheckCraftingIngredients");
static_assert(sizeof(BP_JigMultiplayer_C_CheckCraftingIngredients) == 0x000188, "Wrong size on BP_JigMultiplayer_C_CheckCraftingIngredients");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, RequiredItem) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::RequiredItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, Exclude) == 0x000078, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::Exclude' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, ItemFound_Element) == 0x000088, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::ItemFound_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, TempFound) == 0x000098, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::TempFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, RequiredCount) == 0x0000A8, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::RequiredCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, TotalCount) == 0x0000AC, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::TotalCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, Found) == 0x0000B0, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, WidgetRef) == 0x0000C0, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::WidgetRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, Temp_int_Array_Index_Variable_1) == 0x0000D4, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GetCount_Count) == 0x0000F0, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_FindCraftingIngredient_OutputPin) == 0x000108, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_FindCraftingIngredient_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_FindCraftingIngredient_Result) == 0x000118, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_FindCraftingIngredient_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000119, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000120, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, Temp_int_Loop_Counter_Variable_1) == 0x000134, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GetListOfNonAddContainers_Containers) == 0x000138, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Add_IntInt_ReturnValue_2) == 0x00014C, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Less_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Array_Contains_ReturnValue) == 0x000161, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_IsEquipTo__ReturnValue) == 0x000162, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_Not_PreBool_ReturnValue) == 0x000163, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GetEquippedItemRef_Found_) == 0x000164, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GetEquippedItemRef_ItemRef) == 0x000168, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GetEquippedItemRef_IsPending) == 0x000170, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_GetContainerOneRef_ContainerRef) == 0x000178, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckCraftingIngredients, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_JigMultiplayer_C_CheckCraftingIngredients::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckIfCapacityContainer
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_CheckIfCapacityContainer final
{
public:
	struct FGuid                                  ItemMotherUID;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCapacity;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckIfCapacityContainer) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CheckIfCapacityContainer");
static_assert(sizeof(BP_JigMultiplayer_C_CheckIfCapacityContainer) == 0x000038, "Wrong size on BP_JigMultiplayer_C_CheckIfCapacityContainer");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, ItemMotherUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::ItemMotherUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, IsCapacity) == 0x000010, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::IsCapacity' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, Temp_bool_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, Temp_bool_Variable_1) == 0x00001E, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001F, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, Temp_int_Variable_1) == 0x000020, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00002E, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x00002F, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000035, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfCapacityContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000036, "Member 'BP_JigMultiplayer_C_CheckIfCapacityContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckIfHasEnoughMoney
// 0x0048 (0x0048 - 0x0000)
struct BP_JigMultiplayer_C_CheckIfHasEnoughMoney final
{
public:
	int32                                         Price;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                Currency;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentMoney;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CheckIfHasEnoughMoney");
static_assert(sizeof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney) == 0x000048, "Wrong size on BP_JigMultiplayer_C_CheckIfHasEnoughMoney");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, Price) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::Price' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, Currency) == 0x000008, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::Currency' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CurrentMoney) == 0x000014, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CurrentMoney' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, Temp_bool_Variable_1) == 0x000022, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000040, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfHasEnoughMoney, CallFunc_BooleanAND_ReturnValue_1) == 0x000045, "Member 'BP_JigMultiplayer_C_CheckIfHasEnoughMoney::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CheckIfItemsExist
// 0x0088 (0x0088 - 0x0000)
struct BP_JigMultiplayer_C_CheckIfItemsExist final
{
public:
	TArray<class UJigsawItem_DataAsset_C*>        Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetSearchableContainers_Result;           // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByID_Found_;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByID_ItemsFound;         // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CheckIfItemsExist) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CheckIfItemsExist");
static_assert(sizeof(BP_JigMultiplayer_C_CheckIfItemsExist) == 0x000088, "Wrong size on BP_JigMultiplayer_C_CheckIfItemsExist");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Items) == 0x000000, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Items' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Result) == 0x000010, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Found_) == 0x000011, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Temp_bool_True_if_break_was_hit_Variable) == 0x000012, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_GetSearchableContainers_Result) == 0x000048, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_GetSearchableContainers_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_GetInventoryItemsByID_Found_) == 0x000069, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_GetInventoryItemsByID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_GetInventoryItemsByID_ItemsFound) == 0x000070, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_GetInventoryItemsByID_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CheckIfItemsExist, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_JigMultiplayer_C_CheckIfItemsExist::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClearContainer
// 0x0001 (0x0001 - 0x0000)
struct BP_JigMultiplayer_C_ClearContainer final
{
public:
	bool                                          ResetInit_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClearContainer) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_ClearContainer");
static_assert(sizeof(BP_JigMultiplayer_C_ClearContainer) == 0x000001, "Wrong size on BP_JigMultiplayer_C_ClearContainer");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainer, ResetInit_) == 0x000000, "Member 'BP_JigMultiplayer_C_ClearContainer::ResetInit_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClearContainerWidgets
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_ClearContainerWidgets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClearContainerWidgets) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClearContainerWidgets");
static_assert(sizeof(BP_JigMultiplayer_C_ClearContainerWidgets) == 0x000020, "Wrong size on BP_JigMultiplayer_C_ClearContainerWidgets");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, CallFunc_IsVisible_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearContainerWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_JigMultiplayer_C_ClearContainerWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClearJSIItems
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_ClearJSIItems final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClearJSIItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClearJSIItems");
static_assert(sizeof(BP_JigMultiplayer_C_ClearJSIItems) == 0x000028, "Wrong size on BP_JigMultiplayer_C_ClearJSIItems");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, Temp_bool_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_ClearJSIItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, Temp_int_Variable) == 0x000004, "Member 'BP_JigMultiplayer_C_ClearJSIItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_UnequipItem_Unequipped) == 0x000015, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_UnequipItem_Unequipped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_UnequipItem_SlotRef) == 0x000018, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_UnequipItem_SlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClearJSIItems, CallFunc_IsEquipTo__ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_ClearJSIItems::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_AddActorToContainerSUCCESS
// 0x0110 (0x0110 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemAdded;                                         // 0x0008(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerContent;                                  // 0x00E0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  TempUID;                                           // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 UpdateCounts;                                      // 0x0100(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS) == 0x000110, "Wrong size on BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS, ItemAdded) == 0x000008, "Member 'BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS, ContainerContent) == 0x0000E0, "Member 'BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS::ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS, TempUID) == 0x0000F0, "Member 'BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS, UpdateCounts) == 0x000100, "Member 'BP_JigMultiplayer_C_CLIENT_AddActorToContainerSUCCESS::UpdateCounts' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_AddNewItem
// 0x0100 (0x0100 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_AddNewItem final
{
public:
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Content;                                           // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_JigMultiplayer_C*                   Comp;                                              // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  PendingUID;                                        // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_AddNewItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_AddNewItem");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_AddNewItem) == 0x000100, "Wrong size on BP_JigMultiplayer_C_CLIENT_AddNewItem");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddNewItem, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_AddNewItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddNewItem, Content) == 0x0000D8, "Member 'BP_JigMultiplayer_C_CLIENT_AddNewItem::Content' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddNewItem, Comp) == 0x0000E8, "Member 'BP_JigMultiplayer_C_CLIENT_AddNewItem::Comp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddNewItem, PendingUID) == 0x0000F0, "Member 'BP_JigMultiplayer_C_CLIENT_AddNewItem::PendingUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_AddStackActorResponse
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_AddStackActorResponse final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ItemUID;                                           // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_AddStackActorResponse) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_AddStackActorResponse");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_AddStackActorResponse) == 0x000020, "Wrong size on BP_JigMultiplayer_C_CLIENT_AddStackActorResponse");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddStackActorResponse, Success) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_AddStackActorResponse::Success' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddStackActorResponse, ItemUID) == 0x000004, "Member 'BP_JigMultiplayer_C_CLIENT_AddStackActorResponse::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddStackActorResponse, NewCount) == 0x000014, "Member 'BP_JigMultiplayer_C_CLIENT_AddStackActorResponse::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_AddStackActorResponse, ActorRef) == 0x000018, "Member 'BP_JigMultiplayer_C_CLIENT_AddStackActorResponse::ActorRef' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_ContainerDataResponse
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_ContainerDataResponse final
{
public:
	TArray<struct FGuid>                          MainContainersUIDs;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FContainerPickupsInfo>          ContainerItems;                                    // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_JigMultiplayer_C*                   JigMPCompRef;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_ContainerDataResponse) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_ContainerDataResponse");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_ContainerDataResponse) == 0x000038, "Wrong size on BP_JigMultiplayer_C_CLIENT_ContainerDataResponse");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ContainerDataResponse, MainContainersUIDs) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_ContainerDataResponse::MainContainersUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ContainerDataResponse, ContainerItems) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_ContainerDataResponse::ContainerItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ContainerDataResponse, JigMPCompRef) == 0x000020, "Member 'BP_JigMultiplayer_C_CLIENT_ContainerDataResponse::JigMPCompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ContainerDataResponse, ActionbarUIDs) == 0x000028, "Member 'BP_JigMultiplayer_C_CLIENT_ContainerDataResponse::ActionbarUIDs' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_DropRequestFailed
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_DropRequestFailed final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_DropRequestFailed) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_DropRequestFailed");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_DropRequestFailed) == 0x000010, "Wrong size on BP_JigMultiplayer_C_CLIENT_DropRequestFailed");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_DropRequestFailed, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_DropRequestFailed::ItemUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_EquipActorSuccess
// 0x00F0 (0x00F0 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_EquipActorSuccess final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemAdded;                                         // 0x0008(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerContent;                                  // 0x00E0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_EquipActorSuccess) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_EquipActorSuccess");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_EquipActorSuccess) == 0x0000F0, "Wrong size on BP_JigMultiplayer_C_CLIENT_EquipActorSuccess");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_EquipActorSuccess, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_EquipActorSuccess::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_EquipActorSuccess, ItemAdded) == 0x000008, "Member 'BP_JigMultiplayer_C_CLIENT_EquipActorSuccess::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_EquipActorSuccess, ContainerContent) == 0x0000E0, "Member 'BP_JigMultiplayer_C_CLIENT_EquipActorSuccess::ContainerContent' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_ExpandContainer
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_ExpandContainer final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedColumn;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddedRow;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_ExpandContainer) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_ExpandContainer");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_ExpandContainer) == 0x000018, "Wrong size on BP_JigMultiplayer_C_CLIENT_ExpandContainer");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ExpandContainer, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_ExpandContainer::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ExpandContainer, AddedColumn) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_ExpandContainer::AddedColumn' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ExpandContainer, AddedRow) == 0x000014, "Member 'BP_JigMultiplayer_C_CLIENT_ExpandContainer::AddedRow' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_ItemCraftedResponse
// 0x01F0 (0x01F0 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse final
{
public:
	struct FGuid                                  TempUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemAdded;                                         // 0x0010(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          UpdateUIDs;                                        // 0x00F0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 WithCounts;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsCraftingStation_;                                // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemInside;                                        // 0x0118(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse) == 0x0001F0, "Wrong size on BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, TempUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, ItemAdded) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, Success_) == 0x0000E8, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::Success_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, UpdateUIDs) == 0x0000F0, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::UpdateUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, WithCounts) == 0x000100, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::WithCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, IsCraftingStation_) == 0x000110, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::IsCraftingStation_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse, ItemInside) == 0x000118, "Member 'BP_JigMultiplayer_C_CLIENT_ItemCraftedResponse::ItemInside' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_ItemRemoved
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_ItemRemoved final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   Comp;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipPendingRequests_;                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_ItemRemoved) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_ItemRemoved");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_ItemRemoved) == 0x000020, "Wrong size on BP_JigMultiplayer_C_CLIENT_ItemRemoved");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemRemoved, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_ItemRemoved::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemRemoved, Comp) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_ItemRemoved::Comp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ItemRemoved, SkipPendingRequests_) == 0x000018, "Member 'BP_JigMultiplayer_C_CLIENT_ItemRemoved::SkipPendingRequests_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_MoveItemToIndex
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_MoveItemToIndex final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_MoveItemToIndex) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_MoveItemToIndex");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_MoveItemToIndex) == 0x000028, "Wrong size on BP_JigMultiplayer_C_CLIENT_MoveItemToIndex");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_MoveItemToIndex, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_MoveItemToIndex::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_MoveItemToIndex, ToContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_MoveItemToIndex::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_MoveItemToIndex, ToIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_CLIENT_MoveItemToIndex::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_MoveItemToIndex, FinalRotation) == 0x000024, "Member 'BP_JigMultiplayer_C_CLIENT_MoveItemToIndex::FinalRotation' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_MoveToIndexFailed
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed final
{
public:
	TArray<struct FGuid>                          ItemUID;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_JigMultiplayer_C*                   JijgCompTarget;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed) == 0x000018, "Wrong size on BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed, JijgCompTarget) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_MoveToIndexFailed::JijgCompTarget' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_NewItemAdded
// 0x00D8 (0x00D8 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_NewItemAdded final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x009C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UpdateCount                         UpdateCount;                                       // 0x00A0(0x0014)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RemovePending;                                     // 0x00B4(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SubContainerInfo>            SubContainers;                                     // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_NewItemAdded) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_NewItemAdded");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_NewItemAdded) == 0x0000D8, "Wrong size on BP_JigMultiplayer_C_CLIENT_NewItemAdded");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, UID) == 0x000078, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, ToContainerUID) == 0x000088, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, ToIndex) == 0x000098, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, FinalRotation) == 0x00009C, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, UpdateCount) == 0x0000A0, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, RemovePending) == 0x0000B4, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::RemovePending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_NewItemAdded, SubContainers) == 0x0000C8, "Member 'BP_JigMultiplayer_C_CLIENT_NewItemAdded::SubContainers' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_OnStatsUpdated
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_OnStatsUpdated final
{
public:
	TArray<struct FGuid>                          UID;                                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           STAT_NAME;                                         // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Values;                                            // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_OnStatsUpdated) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_OnStatsUpdated");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_OnStatsUpdated) == 0x000028, "Wrong size on BP_JigMultiplayer_C_CLIENT_OnStatsUpdated");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_OnStatsUpdated, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_OnStatsUpdated::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_OnStatsUpdated, STAT_NAME) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_OnStatsUpdated::STAT_NAME' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_OnStatsUpdated, Values) == 0x000018, "Member 'BP_JigMultiplayer_C_CLIENT_OnStatsUpdated::Values' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_OnStatUpdated
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_OnStatUpdated final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           STAT_TAG;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_OnStatUpdated) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_OnStatUpdated");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_OnStatUpdated) == 0x000020, "Wrong size on BP_JigMultiplayer_C_CLIENT_OnStatUpdated");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_OnStatUpdated, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_OnStatUpdated::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_OnStatUpdated, STAT_TAG) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_OnStatUpdated::STAT_TAG' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_OnStatUpdated, NewValue) == 0x000018, "Member 'BP_JigMultiplayer_C_CLIENT_OnStatUpdated::NewValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_ReloadResponse
// 0x004C (0x004C - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_ReloadResponse final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  UnloadUID;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UnloadToContainerUID;                              // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ReloadUID;                                         // 0x002C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReloadToContainerUID;                              // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_ReloadResponse) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_ReloadResponse");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_ReloadResponse) == 0x00004C, "Wrong size on BP_JigMultiplayer_C_CLIENT_ReloadResponse");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, Success_) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::Success_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, UnloadUID) == 0x000004, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::UnloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, UnloadToContainerUID) == 0x000014, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::UnloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, ToIndex) == 0x000024, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, FinalRot) == 0x000028, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, ReloadUID) == 0x00002C, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::ReloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_ReloadResponse, ReloadToContainerUID) == 0x00003C, "Member 'BP_JigMultiplayer_C_CLIENT_ReloadResponse::ReloadToContainerUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_RequestAddActorToContainerFAILED
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  TempUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED) == 0x000018, "Wrong size on BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED, TempUID) == 0x000008, "Member 'BP_JigMultiplayer_C_CLIENT_RequestAddActorToContainerFAILED::TempUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_RequestEquipResponseFailed
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed final
{
public:
	struct FGuid                                  MainContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed) == 0x000018, "Wrong size on BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed, MainContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed::MainContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed, ActorRef) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_RequestEquipResponseFailed::ActorRef' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Client_SameCompUpdateSplitRequest
// 0x00B8 (0x00B8 - 0x0000)
struct BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest final
{
public:
	struct FGuid                                  SourceUID;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SourceNewCount;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           NewItem;                                           // 0x0018(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  NewItemUID;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlot;                                            // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x00B4(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest");
static_assert(sizeof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest) == 0x0000B8, "Wrong size on BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, SourceUID) == 0x000000, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::SourceUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, SourceNewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::SourceNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, NewItem) == 0x000018, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, NewItemUID) == 0x000090, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::NewItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, ToContainerUID) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, ToSlot) == 0x0000B0, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::ToSlot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest, Rotated) == 0x0000B4, "Member 'BP_JigMultiplayer_C_Client_SameCompUpdateSplitRequest::Rotated' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_SwapContainersResponse
// 0x0024 (0x0024 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_SwapContainersResponse final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  SecondContainerUID;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_SwapContainersResponse) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_SwapContainersResponse");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_SwapContainersResponse) == 0x000024, "Wrong size on BP_JigMultiplayer_C_CLIENT_SwapContainersResponse");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_SwapContainersResponse, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_SwapContainersResponse::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_SwapContainersResponse, SecondContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_SwapContainersResponse::SecondContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_SwapContainersResponse, Success) == 0x000020, "Member 'BP_JigMultiplayer_C_CLIENT_SwapContainersResponse::Success' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_UpdateChamberBulletUID
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID) == 0x000010, "Wrong size on BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID, NewUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateChamberBulletUID::NewUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_UpdateCount
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_UpdateCount final
{
public:
	class UBP_JigMultiplayer_C*                   TargetComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RemovedPending;                                    // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_UpdateCount) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_UpdateCount");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_UpdateCount) == 0x000030, "Wrong size on BP_JigMultiplayer_C_CLIENT_UpdateCount");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCount, TargetComp) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCount::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCount, ItemUID) == 0x000008, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCount::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCount, NewCount) == 0x000018, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCount, RemovedPending) == 0x00001C, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCount::RemovedPending' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_UpdateCounts
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_UpdateCounts final
{
public:
	TArray<struct FS_UpdateCount>                 Counts;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGuid                                  TempUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_UpdateCounts) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_UpdateCounts");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_UpdateCounts) == 0x000020, "Wrong size on BP_JigMultiplayer_C_CLIENT_UpdateCounts");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCounts, Counts) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCounts::Counts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCounts, TempUID) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCounts::TempUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_UpdateCustomValues
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_UpdateCustomValues final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Keys;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Values;                                            // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_UpdateCustomValues) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_UpdateCustomValues");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_UpdateCustomValues) == 0x000030, "Wrong size on BP_JigMultiplayer_C_CLIENT_UpdateCustomValues");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCustomValues, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCustomValues::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCustomValues, Keys) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCustomValues::Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateCustomValues, Values) == 0x000020, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateCustomValues::Values' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_UpdateDurability
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_UpdateDurability final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewDurab;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_UpdateDurability) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_UpdateDurability");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_UpdateDurability) == 0x000020, "Wrong size on BP_JigMultiplayer_C_CLIENT_UpdateDurability");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateDurability, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateDurability::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateDurability, NewDurab) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateDurability::NewDurab' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.CLIENT_UpdateStack
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_CLIENT_UpdateStack final
{
public:
	struct FGuid                                  DroppedUID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropNewCount;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RecUID;                                            // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecNewCount;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_CLIENT_UpdateStack) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_CLIENT_UpdateStack");
static_assert(sizeof(BP_JigMultiplayer_C_CLIENT_UpdateStack) == 0x000028, "Wrong size on BP_JigMultiplayer_C_CLIENT_UpdateStack");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateStack, DroppedUID) == 0x000000, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateStack::DroppedUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateStack, DropNewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateStack::DropNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateStack, RecUID) == 0x000014, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateStack::RecUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_CLIENT_UpdateStack, RecNewCount) == 0x000024, "Member 'BP_JigMultiplayer_C_CLIENT_UpdateStack::RecNewCount' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFunc_CheckIfCanStackAddActor
// 0x02D8 (0x02D8 - 0x0000)
struct BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TestOnlly;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Handled;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  WithUID;                                           // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          PartialStacks;                                     // 0x0020(0x0010)(Parm, OutParm)
	TArray<class UJSI_Slot_C*>                    DeepItems;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSI_Slot_C*>                    TempItems;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FGuid>                          PStacks;                                           // 0x0050(0x0010)(Edit, BlueprintVisible)
	class UJSI_Slot_C*                            WithItem;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x00A8(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x00C0(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ISCapacityContainer_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemsByStackAbility_Sucess;            // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetItemsByStackAbility_Items;             // 0x01C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_4;                         // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStackSingleSlot__Sucess;               // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_CanStackSingleSlot__ItemRef;              // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0238(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_5;                         // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x0270(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_2;         // 0x02B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CB[0x1];                                      // 0x02CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor) == 0x0002D8, "Wrong size on BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, TestOnlly) == 0x000008, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::TestOnlly' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Handled) == 0x000009, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Handled' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, WithUID) == 0x00000C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::WithUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, PartialStacks) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::PartialStacks' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, DeepItems) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::DeepItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, TempItems) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::TempItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, PStacks) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::PStacks' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, WithItem) == 0x000060, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::WithItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Containers) == 0x000068, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000080, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetItemInfo_Info) == 0x000098, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetItemInfo_Count) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetItemInfo_RandomStatsConfig) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetItemInfo_CustomData) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Array_Index_Variable_1) == 0x000120, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Array_Index_Variable_2) == 0x000128, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Loop_Counter_Variable_2) == 0x00012C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Add_IntInt_ReturnValue_2) == 0x000138, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Array_Index_Variable_3) == 0x00013C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Loop_Counter_Variable_3) == 0x000140, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetUniqueID_UniqueServerID) == 0x000144, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Add_IntInt_ReturnValue_3) == 0x000154, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Loop_Counter_Variable_4) == 0x00015C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Add_IntInt_ReturnValue_4) == 0x000160, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Array_Index_Variable_4) == 0x000164, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Loop_Counter_Variable_5) == 0x000168, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Add_IntInt_ReturnValue_5) == 0x000170, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Length_ReturnValue_1) == 0x000174, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000178, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetUniqueID_UniqueServerID_1) == 0x00018C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Less_IntInt_ReturnValue_2) == 0x00019C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Add_ReturnValue) == 0x0001A0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, Temp_int_Array_Index_Variable_5) == 0x0001A4, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Get_Item_2) == 0x0001A8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Get_Item_3) == 0x0001B0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_ISCapacityContainer_ReturnValue) == 0x0001B8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_ISCapacityContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_IsEquipTo__ReturnValue) == 0x0001B9, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetItemsByStackAbility_Sucess) == 0x0001BA, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetItemsByStackAbility_Sucess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetItemsByStackAbility_Items) == 0x0001C0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetItemsByStackAbility_Items' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetContainerOneRef_ContainerRef) == 0x0001D0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0001D8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_IsValid_ReturnValue_1) == 0x0001E9, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetListOfContainers_Containers) == 0x0001F0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Length_ReturnValue_3) == 0x000200, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Less_IntInt_ReturnValue_3) == 0x000204, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Contains_ReturnValue) == 0x000205, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Not_PreBool_ReturnValue) == 0x000206, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Add_ReturnValue_1) == 0x000208, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Get_Item_4) == 0x000210, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000218, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_bSuccess_2) == 0x000228, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_CanStackSingleSlot__Sucess) == 0x000229, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_CanStackSingleSlot__Sucess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_CanStackSingleSlot__ItemRef) == 0x000230, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_CanStackSingleSlot__ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetListOfNonAddContainers_Containers) == 0x000238, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Length_ReturnValue_4) == 0x000248, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Less_IntInt_ReturnValue_4) == 0x00024C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Get_Item_5) == 0x000250, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x000258, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_bSuccess_3) == 0x000268, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Add_ReturnValue_2) == 0x00026C, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetListOfContainers_Containers_1) == 0x000270, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetEquippedItemRef_Found_) == 0x000280, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetEquippedItemRef_ItemRef) == 0x000288, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetEquippedItemRef_IsPending) == 0x000290, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000298, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3) == 0x0002A0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, K2Node_DynamicCast_bSuccess_4) == 0x0002B0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_IsValid_ReturnValue_2) == 0x0002B1, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_GetListOfContainers_Containers_2) == 0x0002B8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_GetListOfContainers_Containers_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_IsEquipTo__ReturnValue_1) == 0x0002C8, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Contains_ReturnValue_1) == 0x0002C9, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002CA, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Array_Length_ReturnValue_5) == 0x0002CC, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor, CallFunc_Less_IntInt_ReturnValue_5) == 0x0002D0, "Member 'BP_JigMultiplayer_C_ClientFunc_CheckIfCanStackAddActor::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFunc_GetDesiredMoneyLocation
// 0x0148 (0x0148 - 0x0000)
struct BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation final
{
public:
	class UBP_JigMultiplayer_C*                   VendorCom;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedItem;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ToContainerID;                                     // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MightStack;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                NonAdd;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_SlotIndex;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByID_Found_;             // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByID_ItemsFound;         // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CanAddItemToSlot_Result;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItemToSlot_RotatedVector_;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation) == 0x000148, "Wrong size on BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, VendorCom) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::VendorCom' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, DroppedItem) == 0x000008, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::DroppedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Found) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, ToContainerID) == 0x000014, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::ToContainerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, ToIndex) == 0x000024, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, MightStack) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::MightStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Index_0) == 0x00002C, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Containers) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, NonAdd) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::NonAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000064, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Array_Contains_ReturnValue) == 0x00007C, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Less_IntInt_ReturnValue) == 0x00007D, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007E, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetEquippedItemRef_Found_) == 0x000091, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetEquippedItemRef_ItemRef) == 0x000098, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetEquippedItemRef_IsPending) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_IsItemPending__IsPending) == 0x0000A1, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000B0, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000B8, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetListOfContainers_Containers) == 0x0000D0, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_IsEquipTo__ReturnValue) == 0x0000E1, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_IsSupportedByThis_Supported_) == 0x0000F5, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetEmptySlot_SlotIndex) == 0x0000F8, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetEmptySlot_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetEmptySlot_Found_) == 0x0000FC, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetEmptySlot_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetInventoryItemsByID_Found_) == 0x0000FD, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetInventoryItemsByID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetInventoryItemsByID_ItemsFound) == 0x000100, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetInventoryItemsByID_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_IsEquipTo__ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000111, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_Not_PreBool_ReturnValue_3) == 0x000112, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000113, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000118, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_GetListOfNonAddContainers_Containers) == 0x000130, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_CanAddItemToSlot_Result) == 0x000140, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_CanAddItemToSlot_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation, CallFunc_CanAddItemToSlot_RotatedVector_) == 0x000141, "Member 'BP_JigMultiplayer_C_ClientFunc_GetDesiredMoneyLocation::CallFunc_CanAddItemToSlot_RotatedVector_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFunc_HandleActorAddedToContainer
// 0x01E0 (0x01E0 - 0x0000)
struct BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemAdded;                                         // 0x0008(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerContent;                                  // 0x00E0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  TempUID;                                           // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 UpdateCounts;                                      // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SubContainerInfo                    CallFunc_Array_Get_Item;                           // 0x0144(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateCount_Count;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x01B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7[0x1];                                      // 0x01C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer) == 0x0001E0, "Wrong size on BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, ItemAdded) == 0x000008, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, ContainerContent) == 0x0000E0, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, TempUID) == 0x0000F0, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, UpdateCounts) == 0x000100, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::UpdateCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, Temp_int_Variable) == 0x000110, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000120, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_IsValid_ReturnValue) == 0x000131, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, Temp_int_Variable_1) == 0x000134, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000138, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, Temp_bool_Variable) == 0x00013C, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, Temp_bool_Variable_1) == 0x00013D, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00013E, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00013F, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, Temp_int_Variable_2) == 0x000140, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Array_Get_Item) == 0x000144, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000168, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00016C, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_BooleanAND_ReturnValue) == 0x00016D, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, Temp_bool_Variable_2) == 0x00016E, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x00016F, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000170, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000174, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000175, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_UpdateCount_Count) == 0x000178, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x000180, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_SetUniqueID_UniqueID) == 0x000188, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000198, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, K2Node_DynamicCast_bSuccess_1) == 0x0001A8, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_IsValid_ReturnValue_1) == 0x0001A9, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_GetListOfContainers_Containers) == 0x0001B0, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0001C0, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0001C4, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x0001C5, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001C6, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_GetUniqueID_UniqueServerID) == 0x0001C8, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0001D8, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0001D9, "Member 'BP_JigMultiplayer_C_ClientFunc_HandleActorAddedToContainer::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFunc_UpdateCustomData
// 0x0060 (0x0060 - 0x0000)
struct BP_JigMultiplayer_C_ClientFunc_UpdateCustomData final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Keys;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Values;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemInContainer_Found;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFunc_UpdateCustomData");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData) == 0x000060, "Wrong size on BP_JigMultiplayer_C_ClientFunc_UpdateCustomData");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, Keys) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, Values) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::Values' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, CallFunc_FindItemInContainer_Found) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::CallFunc_FindItemInContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateCustomData, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateCustomData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFunc_UpdateDurability
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_ClientFunc_UpdateDurability final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewDurab;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemInContainer_Found;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFunc_UpdateDurability");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability) == 0x000050, "Wrong size on BP_JigMultiplayer_C_ClientFunc_UpdateDurability");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, NewDurab) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::NewDurab' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, CallFunc_FindItemInContainer_Found) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::CallFunc_FindItemInContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateDurability, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFunc_UpdateStatByUID
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           STAT_TAG;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_FindItemByUID_Found;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStatByName_Found;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemStat                            CallFunc_SetStatByName_Stat;                       // 0x0030(0x0028)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID) == 0x000058, "Wrong size on BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, STAT_TAG) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::STAT_TAG' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, NewValue) == 0x000018, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::NewValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, CallFunc_FindItemByUID_Found) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::CallFunc_FindItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, CallFunc_SetStatByName_Found) == 0x000029, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::CallFunc_SetStatByName_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID, CallFunc_SetStatByName_Stat) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientFunc_UpdateStatByUID::CallFunc_SetStatByName_Stat' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFuncHandleReloadResponse
// 0x00A0 (0x00A0 - 0x0000)
struct BP_JigMultiplayer_C_ClientFuncHandleReloadResponse final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  UnloadUID;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UnloadToContainerUID;                              // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ReloadUID;                                         // 0x002C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReloadToContainerUID;                              // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_MainDeepSearchContainer_Array_Element;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_MainDeepSearchContainer_Array_Element_1;  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed_1;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_1;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_DeepSearchForItem_ItemFound;              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_DeepSearchForItem_ItemFound_1;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItemFromJigRef_Added;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_EquipItemFromJigRef_EquippedItemRef;      // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemFromJigRef_Added;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_AddItemFromJigRef_AddedItemRef;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFuncHandleReloadResponse");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse) == 0x0000A0, "Wrong size on BP_JigMultiplayer_C_ClientFuncHandleReloadResponse");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, Success_) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::Success_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, UnloadUID) == 0x000004, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::UnloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, UnloadToContainerUID) == 0x000014, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::UnloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, ToIndex) == 0x000024, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, FinalRot) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, ReloadUID) == 0x00002C, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::ReloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, ReloadToContainerUID) == 0x00003C, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::ReloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_RemoveRequestByUID_Removed) == 0x00004C, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_MainDeepSearchContainer_Array_Element) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_MainDeepSearchContainer_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_IsValid_Guid_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_MainDeepSearchContainer_Array_Element_1) == 0x000060, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_MainDeepSearchContainer_Array_Element_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_RemoveRequestByUID_Removed_1) == 0x000068, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_RemoveRequestByUID_Removed_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_IsValid_Guid_ReturnValue_1) == 0x000069, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_IsValid_Guid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_DeepSearchForItem_ItemFound) == 0x000070, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_DeepSearchForItem_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_DeepSearchForItem_ItemFound_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_DeepSearchForItem_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_EquipItemFromJigRef_Added) == 0x000080, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_EquipItemFromJigRef_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_EquipItemFromJigRef_EquippedItemRef) == 0x000088, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_EquipItemFromJigRef_EquippedItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_AddItemFromJigRef_Added) == 0x000090, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_AddItemFromJigRef_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncHandleReloadResponse, CallFunc_AddItemFromJigRef_AddedItemRef) == 0x000098, "Member 'BP_JigMultiplayer_C_ClientFuncHandleReloadResponse::CallFunc_AddItemFromJigRef_AddedItemRef' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientFuncItemCrafted
// 0x02D0 (0x02D0 - 0x0000)
struct BP_JigMultiplayer_C_ClientFuncItemCrafted final
{
public:
	struct FGuid                                  TempUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemAdded;                                         // 0x0010(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          UpdateUIDs;                                        // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 WithCounts;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsCraftingStation_;                                // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemInside;                                        // 0x0118(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22E[0x2];                                      // 0x022E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x0264(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed;              // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientFuncItemCrafted) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientFuncItemCrafted");
static_assert(sizeof(BP_JigMultiplayer_C_ClientFuncItemCrafted) == 0x0002D0, "Wrong size on BP_JigMultiplayer_C_ClientFuncItemCrafted");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, TempUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, ItemAdded) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Success_) == 0x0000E8, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Success_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, UpdateUIDs) == 0x0000F0, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::UpdateUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, WithCounts) == 0x000100, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::WithCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, IsCraftingStation_) == 0x000110, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::IsCraftingStation_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, ItemInside) == 0x000118, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::ItemInside' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Not_PreBool_ReturnValue) == 0x0001F0, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_bool_Variable) == 0x0001F1, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001F2, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_int_Loop_Counter_Variable) == 0x0001F4, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Add_IntInt_ReturnValue) == 0x0001F8, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_int_Array_Index_Variable) == 0x0001FC, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_int_Loop_Counter_Variable_1) == 0x000200, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Add_IntInt_ReturnValue_1) == 0x000204, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_int_Array_Index_Variable_1) == 0x000208, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_int_Variable) == 0x00020C, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Add_IntInt_ReturnValue_2) == 0x000210, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, K2Node_MakeArray_Array) == 0x000218, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000228, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_IsValid_Guid_ReturnValue) == 0x000229, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_BooleanAND_ReturnValue) == 0x00022A, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_RemoveRequestByUID_Removed) == 0x00022B, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_bool_Variable_1) == 0x00022C, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Not_PreBool_ReturnValue_2) == 0x00022D, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_LastIndex_ReturnValue) == 0x000230, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_Get_Item) == 0x000234, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000238, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00023C, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, Temp_int_Variable_1) == 0x000240, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_BooleanAND_ReturnValue_1) == 0x000244, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_Get_Item_1) == 0x000248, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Add_IntInt_ReturnValue_3) == 0x00024C, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000250, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_BooleanAND_ReturnValue_2) == 0x000251, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_Length_ReturnValue) == 0x000254, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_Get_Item_2) == 0x000258, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Less_IntInt_ReturnValue) == 0x000260, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_SetUniqueID_UniqueID) == 0x000264, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_GetContainerOneRef_ContainerRef) == 0x000278, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000280, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_IsValid_ReturnValue) == 0x000291, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_GetListOfContainers_Containers) == 0x000298, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_Get_Item_3) == 0x0002A8, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Array_Length_ReturnValue_1) == 0x0002B0, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_RemoveFromJSIParent_Removed) == 0x0002B4, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_RemoveFromJSIParent_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B5, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_GetUniqueID_UniqueServerID) == 0x0002B8, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientFuncItemCrafted, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0002C8, "Member 'BP_JigMultiplayer_C_ClientFuncItemCrafted::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientHandleTwoContainersSwap
// 0x00E8 (0x00E8 - 0x0000)
struct BP_JigMultiplayer_C_ClientHandleTwoContainersSwap final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  SecondContainerUID;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            Equipped_Secondary;                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Equipped_Primary;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Secondary;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Primary;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef_1;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnContainersSwap_Result;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItemFromJigRef_Added;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_EquipItemFromJigRef_EquippedItemRef;      // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItemFromJigRef_Added_1;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_EquipItemFromJigRef_EquippedItemRef_1;    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef;                      // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped_1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef_1;                    // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientHandleTwoContainersSwap");
static_assert(sizeof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap) == 0x0000E8, "Wrong size on BP_JigMultiplayer_C_ClientHandleTwoContainersSwap");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, SecondContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::SecondContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, Success) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::Success' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, Equipped_Secondary) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::Equipped_Secondary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, Equipped_Primary) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::Equipped_Primary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, Secondary) == 0x000038, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::Secondary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, Primary) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::Primary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_FindJSIContainer_JSIRef) == 0x000048, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_FindJSIContainer_JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_FindJSIContainer_Found) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_FindJSIContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_FindJSIContainer_JSIRef_1) == 0x000058, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_FindJSIContainer_JSIRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_FindJSIContainer_Found_1) == 0x000060, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_FindJSIContainer_Found_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetEquippedItemRef_Found_) == 0x000061, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetEquippedItemRef_ItemRef) == 0x000068, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetEquippedItemRef_IsPending) == 0x000070, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetEquippedItemRef_Found__1) == 0x000071, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000080, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000090, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_JigMP_OnContainersSwap_Result) == 0x0000A1, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_JigMP_OnContainersSwap_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_EquipItemFromJigRef_Added) == 0x0000A2, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_EquipItemFromJigRef_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_EquipItemFromJigRef_EquippedItemRef) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_EquipItemFromJigRef_EquippedItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_EquipItemFromJigRef_Added_1) == 0x0000B0, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_EquipItemFromJigRef_Added_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_EquipItemFromJigRef_EquippedItemRef_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_EquipItemFromJigRef_EquippedItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_UnequipItem_Unequipped) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_UnequipItem_Unequipped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_UnequipItem_SlotRef) == 0x0000C8, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_UnequipItem_SlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_UnequipItem_Unequipped_1) == 0x0000D0, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_UnequipItem_Unequipped_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_UnequipItem_SlotRef_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_UnequipItem_SlotRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_IsValid_ReturnValue_1) == 0x0000E1, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_BooleanAND_ReturnValue) == 0x0000E2, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientHandleTwoContainersSwap, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E3, "Member 'BP_JigMultiplayer_C_ClientHandleTwoContainersSwap::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientSetupSwappingTwoContainers
// 0x0080 (0x0080 - 0x0000)
struct BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers final
{
public:
	struct FGuid                                  Container;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  SecondaryContainer;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Equipped_Secondary;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Equipped_Primary;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Secondary;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Primary;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef;                  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef_1;                // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers");
static_assert(sizeof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers) == 0x000080, "Wrong size on BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::Container' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, SecondaryContainer) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::SecondaryContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, Equipped_Secondary) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::Equipped_Secondary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, Equipped_Primary) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::Equipped_Primary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, Secondary) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::Secondary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, Primary) == 0x000038, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::Primary' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_FindJSIContainer_JSIRef) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_FindJSIContainer_JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_FindJSIContainer_Found) == 0x000048, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_FindJSIContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_FindJSIContainer_JSIRef_1) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_FindJSIContainer_JSIRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_FindJSIContainer_Found_1) == 0x000058, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_FindJSIContainer_Found_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_GetEquippedItemRef_Found_) == 0x000059, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_GetEquippedItemRef_ItemRef) == 0x000060, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_GetEquippedItemRef_IsPending) == 0x000068, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_GetEquippedItemRef_Found__1) == 0x000069, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000070, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_IsValid_ReturnValue_1) == 0x00007A, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'BP_JigMultiplayer_C_ClientSetupSwappingTwoContainers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ClientUpdateCount
// 0x0068 (0x0068 - 0x0000)
struct BP_JigMultiplayer_C_ClientUpdateCount final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveIf0;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_2;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemInContainer_Found;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateCount_Count;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ClientUpdateCount) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ClientUpdateCount");
static_assert(sizeof(BP_JigMultiplayer_C_ClientUpdateCount) == 0x000068, "Wrong size on BP_JigMultiplayer_C_ClientUpdateCount");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, NewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, RemoveIf0) == 0x000014, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::RemoveIf0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_RemoveRequestByUID_Removed) == 0x00001C, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_IsValid_Guid_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000025, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_IsVendor_ReturnValue) == 0x00002D, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_IsVendor_ReturnValue_1) == 0x00002E, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_Not_PreBool_ReturnValue) == 0x00002F, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_IsVendor_ReturnValue_2) == 0x000030, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_IsVendor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_BooleanAND_ReturnValue_1) == 0x000032, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_BooleanAND_ReturnValue_2) == 0x000033, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, Temp_bool_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_Not_PreBool_ReturnValue_1) == 0x000035, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_FindItemInContainer_Found) == 0x000040, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_FindItemInContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_BooleanAND_ReturnValue_3) == 0x000048, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_CanStack__CanStack) == 0x000058, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_CanStack__FreeSpaceAvailable) == 0x000059, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_UpdateCount_Count) == 0x00005C, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_RemoveFromJSIParent_Removed) == 0x000060, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_RemoveFromJSIParent_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ClientUpdateCount, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_JigMultiplayer_C_ClientUpdateCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Context_TryEquip
// 0x0110 (0x0110 - 0x0000)
struct BP_JigMultiplayer_C_Context_TryEquip final
{
public:
	class UJSI_Slot_C*                            EquippedItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIRootCont;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                AvoidC;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                FoundContainers;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count_1;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x007C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Context_TryEquip) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Context_TryEquip");
static_assert(sizeof(BP_JigMultiplayer_C_Context_TryEquip) == 0x000110, "Wrong size on BP_JigMultiplayer_C_Context_TryEquip");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, EquippedItem) == 0x000000, "Member 'BP_JigMultiplayer_C_Context_TryEquip::EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, JSIRootCont) == 0x000008, "Member 'BP_JigMultiplayer_C_Context_TryEquip::JSIRootCont' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, AvoidC) == 0x000010, "Member 'BP_JigMultiplayer_C_Context_TryEquip::AvoidC' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, FoundContainers) == 0x000020, "Member 'BP_JigMultiplayer_C_Context_TryEquip::FoundContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_Context_TryEquip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_Context_TryEquip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_Context_TryEquip::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_JigMultiplayer_C_Context_TryEquip::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BP_JigMultiplayer_C_Context_TryEquip::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, Temp_int_Loop_Counter_Variable_2) == 0x00004C, "Member 'BP_JigMultiplayer_C_Context_TryEquip::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetCount_Count) == 0x000050, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetCount_Count_1) == 0x000058, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetCount_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_CanStack__CanStack) == 0x00005C, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_CanStack__FreeSpaceAvailable) == 0x00005D, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetJigDA_JigDataAsset) == 0x000060, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Greater_IntInt_ReturnValue) == 0x000075, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000076, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_BooleanAND_ReturnValue) == 0x000077, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_BooleanAND_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetType_Type) == 0x00007C, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_IsSupportedByThis_Supported_) == 0x000084, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_IsEquipTo__ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetEquippedItemRef_Found_) == 0x000098, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetEquippedItemRef_IsPending) == 0x0000A8, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000B0, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000C0, "Member 'BP_JigMultiplayer_C_Context_TryEquip::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_JigMultiplayer_C_Context_TryEquip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_GetListOfContainers_Containers) == 0x0000D8, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_IsEquipped__ReturnValue) == 0x0000F8, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Add_ReturnValue_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Not_PreBool_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_IsVisible_ReturnValue) == 0x000101, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_IsEquipTo__ReturnValue_1) == 0x000102, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_BooleanAND_ReturnValue_2) == 0x000103, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_BooleanAND_ReturnValue_3) == 0x000108, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryEquip, CallFunc_Less_IntInt_ReturnValue_2) == 0x000109, "Member 'BP_JigMultiplayer_C_Context_TryEquip::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Context_TryUnequip
// 0x01D0 (0x01D0 - 0x0000)
struct BP_JigMultiplayer_C_Context_TryUnequip final
{
public:
	class UJSI_Slot_C*                            EquippedItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIRootCont;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                AvoidC;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                FoundContainers;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDropItemBackGwidget_C*                 CallFunc_GetDropWidget_DropWRef;                   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWeightLimit_Result;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Found_;    // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F[0x1];                                      // 0x014F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_;  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x01C0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_JigMultiplayer_C_Context_TryUnequip) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Context_TryUnequip");
static_assert(sizeof(BP_JigMultiplayer_C_Context_TryUnequip) == 0x0001D0, "Wrong size on BP_JigMultiplayer_C_Context_TryUnequip");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, EquippedItem) == 0x000000, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, JSIRootCont) == 0x000008, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::JSIRootCont' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Containers) == 0x000010, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, AvoidC) == 0x000020, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::AvoidC' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, FoundContainers) == 0x000030, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::FoundContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetContainerOneRef_ContainerRef) == 0x000048, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000058, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetListOfContainers_Containers) == 0x000070, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Temp_int_Loop_Counter_Variable_2) == 0x000094, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, Temp_int_Array_Index_Variable_2) == 0x00009C, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetCount_Count) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000A8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetDropWidget_DropWRef) == 0x0000C0, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetDropWidget_DropWRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetDisplayName_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsEquipTo__ReturnValue) == 0x0000E9, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsVisible_ReturnValue) == 0x0000EA, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Not_PreBool_ReturnValue) == 0x0000EB, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsValid_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetJigDA_JigDataAsset) == 0x0000F0, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetType_Type) == 0x0000F8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsSupportedByThis_Supported_) == 0x000100, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x000108, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_bSuccess_2) == 0x000118, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetListOfNonAddContainers_Containers) == 0x000120, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetSlotDim_SlotDimension) == 0x000130, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_CheckWeightLimit_Result) == 0x00014C, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_CheckWeightLimit_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014D, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetEmptySlotTryRotated_NonPure_Found_) == 0x00014E, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetEmptySlotTryRotated_NonPure_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex) == 0x000150, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_) == 0x000154, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Contains_ReturnValue) == 0x000155, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Not_PreBool_ReturnValue_1) == 0x000156, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_BooleanAND_ReturnValue) == 0x000157, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_BooleanAND_ReturnValue_1) == 0x000158, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Add_ReturnValue) == 0x00015C, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_BooleanAND_ReturnValue_2) == 0x000160, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Get_Item_2) == 0x000168, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Length_ReturnValue_2) == 0x000170, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Array_Contains_ReturnValue_1) == 0x000174, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Less_IntInt_ReturnValue_2) == 0x000175, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsEquipTo__ReturnValue_1) == 0x000188, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_Not_PreBool_ReturnValue_2) == 0x000189, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetEquippedItemRef_Found_) == 0x00018A, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetEquippedItemRef_ItemRef) == 0x000190, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetEquippedItemRef_IsPending) == 0x000198, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x0001A0, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3) == 0x0001A8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, K2Node_DynamicCast_bSuccess_3) == 0x0001B8, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_IsValid_ReturnValue_2) == 0x0001B9, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnequip, CallFunc_GetListOfContainers_Containers_1) == 0x0001C0, "Member 'BP_JigMultiplayer_C_Context_TryUnequip::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Context_TryUnloadAmmo
// 0x01D0 (0x01D0 - 0x0000)
struct BP_JigMultiplayer_C_Context_TryUnloadAmmo final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        RootContainer;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            StackWith;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            MagRef;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                NonAdd;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         ToIndex;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            TopBullet;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                PotentialContainers;                               // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStackSingleSlot__Sucess;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_CanStackSingleSlot__ItemRef;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetLastItem_ItemRef;                      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ISCapacityContainer_ReturnValue;          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_1;                  // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_SlotIndex;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_;                      // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x01B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Context_TryUnloadAmmo) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Context_TryUnloadAmmo");
static_assert(sizeof(BP_JigMultiplayer_C_Context_TryUnloadAmmo) == 0x0001D0, "Wrong size on BP_JigMultiplayer_C_Context_TryUnloadAmmo");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, ItemRef) == 0x000000, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, RootContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::RootContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, StackWith) == 0x000010, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::StackWith' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, MagRef) == 0x000018, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::MagRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, NonAdd) == 0x000020, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::NonAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, ToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, TopBullet) == 0x000038, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::TopBullet' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, PotentialContainers) == 0x000040, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::PotentialContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, Temp_int_Loop_Counter_Variable_2) == 0x000068, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetJigDA_JigDataAsset) == 0x000078, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetCount_Count) == 0x00008C, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_CanStackSingleSlot__Sucess) == 0x000091, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_CanStackSingleSlot__Sucess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_CanStackSingleSlot__ItemRef) == 0x000098, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_CanStackSingleSlot__ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000A8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetLastItem_ItemRef) == 0x0000C0, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetLastItem_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetContainerByAttachmentType_JigContainer) == 0x0000C8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetContainerByAttachmentType_JigContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetContainerByAttachmentType_ContainerIndex) == 0x0000D0, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetContainerByAttachmentType_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEquippedItemRef_Found_) == 0x0000D5, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000D8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEquippedItemRef_IsPending) == 0x0000E0, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_ISCapacityContainer_ReturnValue) == 0x0000E1, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_ISCapacityContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetSlotDim_SlotDimension) == 0x0000E8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetType_Type) == 0x0000FC, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetJigDA_JigDataAsset_1) == 0x000108, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetJigDA_JigDataAsset_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsValid_ReturnValue_2) == 0x000110, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000118, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetListOfNonAddContainers_Containers) == 0x000130, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000154, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsSupportedByThis_Supported_) == 0x000155, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Contains_ReturnValue) == 0x000156, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEmptySlot_SlotIndex) == 0x000158, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEmptySlot_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEmptySlot_Found_) == 0x00015C, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEmptySlot_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Not_PreBool_ReturnValue) == 0x00015D, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsVisible_ReturnValue) == 0x00015E, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsEquipTo__ReturnValue) == 0x00015F, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Not_PreBool_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Get_Item_2) == 0x000168, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_BooleanAND_ReturnValue) == 0x000170, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Add_ReturnValue) == 0x000174, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_BooleanAND_ReturnValue_1) == 0x000178, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsEquipTo__ReturnValue_1) == 0x000179, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_BooleanAND_ReturnValue_2) == 0x00017A, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEquippedItemRef_Found__1) == 0x00017B, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000180, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000188, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Array_Length_ReturnValue_2) == 0x00018C, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000190, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_Less_IntInt_ReturnValue_2) == 0x000198, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0001A0, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_GetListOfContainers_Containers) == 0x0001B8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Context_TryUnloadAmmo, CallFunc_IsValid_ReturnValue_3) == 0x0001C8, "Member 'BP_JigMultiplayer_C_Context_TryUnloadAmmo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Controller?
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_Controller_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigControllerSupport_C*             Comp;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Controller_) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Controller_");
static_assert(sizeof(BP_JigMultiplayer_C_Controller_) == 0x000010, "Wrong size on BP_JigMultiplayer_C_Controller_");
static_assert(offsetof(BP_JigMultiplayer_C_Controller_, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_Controller_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Controller_, Comp) == 0x000008, "Member 'BP_JigMultiplayer_C_Controller_::Comp' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.DeepSearchForContainer
// 0x0098 (0x0098 - 0x0000)
struct BP_JigMultiplayer_C_DeepSearchForContainer final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Array_Element;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_DeepSearchForContainer_Array_Element;     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_DeepSearchForContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_DeepSearchForContainer");
static_assert(sizeof(BP_JigMultiplayer_C_DeepSearchForContainer) == 0x000098, "Wrong size on BP_JigMultiplayer_C_DeepSearchForContainer");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, Target) == 0x000010, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::Target' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, Array_Element) == 0x000018, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, Temp_bool_Variable_1) == 0x000029, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002A, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, Temp_int_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x000030, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000040, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_GetListOfContainers_Containers) == 0x000058, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, Temp_int_Variable_1) == 0x000074, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000078, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000081, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_DeepSearchForContainer_Array_Element) == 0x000088, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_DeepSearchForContainer_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForContainer, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_JigMultiplayer_C_DeepSearchForContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.DeepSearchForItem
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_DeepSearchForItem final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ItemFound;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_FindItemInContainer_Found;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_DeepSearchForItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_DeepSearchForItem");
static_assert(sizeof(BP_JigMultiplayer_C_DeepSearchForItem) == 0x000038, "Wrong size on BP_JigMultiplayer_C_DeepSearchForItem");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, ItemFound) == 0x000010, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, Temp_bool_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_FindItemInContainer_Found) == 0x000028, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_FindItemInContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DeepSearchForItem, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_JigMultiplayer_C_DeepSearchForItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.DetectDuplicateIDs
// 0x0048 (0x0048 - 0x0000)
struct BP_JigMultiplayer_C_DetectDuplicateIDs final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          Arr;                                               // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_DetectDuplicateIDs) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_DetectDuplicateIDs");
static_assert(sizeof(BP_JigMultiplayer_C_DetectDuplicateIDs) == 0x000048, "Wrong size on BP_JigMultiplayer_C_DetectDuplicateIDs");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, Arr) == 0x000008, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::Arr' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, Temp_bool_Variable_1) == 0x000022, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Array_Contains_ReturnValue) == 0x00003D, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DetectDuplicateIDs, CallFunc_Array_Contains_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_DetectDuplicateIDs::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Drop_ItemOverItem_Event_0
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0 final
{
public:
	class UJSI_Slot_C*                            ItemReceiver;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ItemDropped;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ItemReceiverContainer;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ItemDroppedContainer;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0");
static_assert(sizeof(BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0) == 0x000020, "Wrong size on BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0");
static_assert(offsetof(BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0, ItemReceiver) == 0x000000, "Member 'BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0::ItemReceiver' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0, ItemDropped) == 0x000008, "Member 'BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0::ItemDropped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0, ItemReceiverContainer) == 0x000010, "Member 'BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0::ItemReceiverContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0, ItemDroppedContainer) == 0x000018, "Member 'BP_JigMultiplayer_C_Drop_ItemOverItem_Event_0::ItemDroppedContainer' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.DropAllItems
// 0x0060 (0x0060 - 0x0000)
struct BP_JigMultiplayer_C_DropAllItems final
{
public:
	TArray<struct FGuid>                          UIDs;                                              // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetMainContainerUIDByIndex_UID;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMainContainerUIDByIndex_ContainerIndex; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_DropAllItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_DropAllItems");
static_assert(sizeof(BP_JigMultiplayer_C_DropAllItems) == 0x000060, "Wrong size on BP_JigMultiplayer_C_DropAllItems");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, UIDs) == 0x000000, "Member 'BP_JigMultiplayer_C_DropAllItems::UIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, Temp_int_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_DropAllItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_DropAllItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, Temp_bool_Variable_1) == 0x00001A, "Member 'BP_JigMultiplayer_C_DropAllItems::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, Temp_int_Variable_1) == 0x00001C, "Member 'BP_JigMultiplayer_C_DropAllItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_GetMainContainerUIDByIndex_UID) == 0x000020, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_GetMainContainerUIDByIndex_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_GetMainContainerUIDByIndex_ContainerIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_GetMainContainerUIDByIndex_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Not_PreBool_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, Temp_int_Variable_2) == 0x00003C, "Member 'BP_JigMultiplayer_C_DropAllItems::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Array_LastIndex_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000054, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_DropAllItems, CallFunc_BooleanAND_ReturnValue_1) == 0x00005D, "Member 'BP_JigMultiplayer_C_DropAllItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.EventOnInventoryAction
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_EventOnInventoryAction final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedSlotRef;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotReceiverRef;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_EventOnInventoryAction) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_EventOnInventoryAction");
static_assert(sizeof(BP_JigMultiplayer_C_EventOnInventoryAction) == 0x000028, "Wrong size on BP_JigMultiplayer_C_EventOnInventoryAction");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnInventoryAction, FromContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_EventOnInventoryAction::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnInventoryAction, ToContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_EventOnInventoryAction::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnInventoryAction, DroppedSlotRef) == 0x000010, "Member 'BP_JigMultiplayer_C_EventOnInventoryAction::DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnInventoryAction, SlotReceiverRef) == 0x000018, "Member 'BP_JigMultiplayer_C_EventOnInventoryAction::SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnInventoryAction, ToSlotIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_EventOnInventoryAction::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnInventoryAction, Rotated_) == 0x000024, "Member 'BP_JigMultiplayer_C_EventOnInventoryAction::Rotated_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.EventOnJigItemMouseButtonDown
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            SlotRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Button;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown");
static_assert(sizeof(BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown) == 0x000028, "Wrong size on BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown::Container' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown, SlotRef) == 0x000008, "Member 'BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown::SlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown, Button) == 0x000010, "Member 'BP_JigMultiplayer_C_EventOnJigItemMouseButtonDown::Button' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ExecuteUbergraph_BP_JigMultiplayer
// 0x1A38 (0x1A38 - 0x0000)
struct BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_UID;                            // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_STAT_NAME;                      // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_NewValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigItemOverItemComp_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDropItemBackGwidget_C*                 CallFunc_GetDropWidget_DropWRef;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_JigMP_GetLootWidget_Result;               // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_GetLootWidget_Valid_;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_7;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_CustomEvent_ItemReceiver;                   // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_ItemDropped;                    // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_ItemReceiverContainer;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_ItemDroppedContainer;           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_4;                    // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp;                     // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp_1;                   // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_2;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_3;                    // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotRef;                        // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_Button;                         // 0x01D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSI_CheckIfCanAddStackItemToContainer_Result; // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB[0x5];                                      // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_JSI_CheckIfCanAddStackItemToContainer_WithItem; // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count_1;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSI_CheckIfCanAddItemToContainer_Result;  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_JSI_CheckIfCanAddItemToContainer_AddToContainer; // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_JSI_CheckIfCanAddItemToContainer_ToIndex; // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSI_CheckIfCanAddItemToContainer_FinalRotation; // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSI_CheckIfCanAddStackItemToContainer_Result_1; // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20E[0x2];                                      // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_JSI_CheckIfCanAddStackItemToContainer_WithItem_1; // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSI_CheckIfCanAddItemToContainer_Result_1; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_JSI_CheckIfCanAddItemToContainer_AddToContainer_1; // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_JSI_CheckIfCanAddItemToContainer_ToIndex_1; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSI_CheckIfCanAddItemToContainer_FinalRotation_1; // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef;         // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_2;                 // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count_2;                         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCTRLDown_CTRL_Down;                     // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSHIFTDown_CTRL_Down;                    // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsALTDown_CTRL_Down;                      // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_2;                    // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_CustomEvent_ItemRef;                        // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count_1;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container_1;                    // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDropItemBackGwidget_C*                 K2Node_CustomEvent_DropWidget;                     // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef_1;       // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_1;         // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_2;         // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_3;                   // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp_2;                   // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_DroppedItem;                    // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_ReceiverItem;                   // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp_3;                   // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxStack_MaxStack;                     // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_3;         // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_3;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x2];                                      // 0x02FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_2;             // 0x02FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability;                 // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_4;         // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_4;                   // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_3;             // 0x033C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_5;         // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability_1;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_1;            // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_6;         // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_5;                   // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_FromContainer_1;                // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_ToContainer_2;                  // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_ItemSource;                     // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlotIndex_1;                  // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TotalAmount;                    // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SplitAmount_1;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated__3;                     // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_FromContainer;                  // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        K2Node_CustomEvent_ToContainer_1;                  // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_DroppedSlotRef;                 // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            K2Node_CustomEvent_SlotReceiverRef;                // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlotIndex;                    // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated__2;                     // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x03ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x03EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EF[0x1];                                      // 0x03EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count_3;                         // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_4;             // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        K2Node_CustomEvent_Container;                      // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_7;         // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_TargetComp_3;                   // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_16;                     // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CallbackToPlayer_;              // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_15;                     // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NewDurab_1;                     // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_Select_Default;                             // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_CompRef_1;                      // 0x0478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CraftIndex_1;                   // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_CustomEvent_ConsumeUIDs_1;                  // 0x0488(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_14;                     // 0x049C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_CustomEvent_Keys;                           // 0x04B0(0x0010)(ConstParm, ReferenceParm)
	TArray<class FString>                         K2Node_CustomEvent_Values_1;                       // 0x04C0(0x0010)(ConstParm, ReferenceParm)
	class UBP_JigMultiplayer_C*                   K2Node_Select_Default_1;                           // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems;               // 0x04D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FGuid>                          CallFunc_GetMainContainerUIDS_UIDs;                // 0x04E8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_)> K2Node_CreateDelegate_OutputDelegate;              // 0x0514(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLoadSavedDataRequested_Result;          // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_2;            // 0x0525(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526[0x2];                                      // 0x0526(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_CustomEvent_MainJigContainers;              // 0x0528(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FGuid>                          K2Node_CustomEvent_MainContainersIDs;              // 0x0538(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FS_InvWeight>                   K2Node_CustomEvent_InventoryWeight;                // 0x0548(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FGuid>                          K2Node_CustomEvent_ActionbarUIDs_2;                // 0x0558(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x3];                                      // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_3;            // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* ItemSource, int32 ToSlotIndex, int32 TotalAmount, int32 SplitAmount, bool Rotated_)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0590(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigCanInteract_Result;                    // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2[0x2];                                      // 0x05B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_Option;                         // 0x05D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_CustomEvent_Payload;                        // 0x05D8(0x0030)(HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1;   // 0x0608(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x061A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x061B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_Item;                           // 0x0620(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_MakeArray_Array;                            // 0x0638(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSI_Slot_C* DroppedItem, class UJSI_Slot_C* ReceiverItem)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0650(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface_1; // 0x0660(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x3];                                      // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ContainerUID_3;                 // 0x067C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AddColumns;                     // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AddRows;                        // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ContainerUID_2;                 // 0x0694(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AddedColumn;                    // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AddedRow;                       // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef;                  // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found;                   // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ContainerUID_1;                 // 0x06BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_SecondContainerUID_1;           // 0x06CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success_1;                      // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExpandContainer_Success;                  // 0x06DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DE[0x2];                                      // 0x06DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ContainerUID;                   // 0x06E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_SecondContainerUID;             // 0x06F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ChamberContainerUID_1;          // 0x0700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1; // 0x0718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x3];                                      // 0x0729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSI_Slot_C* ItemRef, int32 Count, class UJSIContainer_C* Container)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x072C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_NewUID;                         // 0x073C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnUpdateChamberUID_Result;          // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D[0x3];                                      // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ChamberContainerUID;            // 0x0750(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_MagContainerUID_1;              // 0x0760(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_BulletToChamberUID;             // 0x0770(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ChamberContainerIndex;          // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SendChamberUID_;                // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0788(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed;              // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0795(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_796[0x2];                                      // 0x0796(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_5;             // 0x0798(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_13;                     // 0x07A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_NewDurab;                       // 0x07B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x07C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef_7;                     // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_WithUID;                        // 0x07E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x3];                                      // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_12;                     // 0x07F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewCount_2;                     // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef_6;                     // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          CallFunc_GetMainContainerUIDS_UIDs_1;              // 0x0818(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_4;            // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems_1;             // 0x0830(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x0848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface_2; // 0x0850(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SaveName_1;                     // 0x0868(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UserIndex_1;                    // 0x0878(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ReplaceContainerIndex;          // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLoadSavedDataRequested_Result_1;        // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReplaceLoadJigComponentByIndex_ReturnValue; // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_882[0x6];                                      // 0x0882(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          CallFunc_ReplaceLoadJigComponentByIndex_ActionbarUIDs; // 0x0888(0x0010)(ReferenceParm)
	class FString                                 K2Node_CustomEvent_SaveName;                       // 0x0898(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_UserIndex;                      // 0x08A8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ContainerIndex;                 // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Save_One_Jig_ContainerByIndex_ReturnValue; // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UJSI_Slot_C* ItemReceiver, class UJSI_Slot_C* ItemDropped, class UJSIContainer_C* ItemReceiverContainer, class UJSIContainer_C* ItemDroppedContainer)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x08B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_MpRef;                          // 0x08C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          K2Node_CustomEvent_ActionbarUIDs_1;                // 0x08D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E2[0x6];                                      // 0x08E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_Select_Default_2;                           // 0x08E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveJigComponent_ReturnValue;             // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x08F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_JigMPCompRef_3;                 // 0x0918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadJigComponent_ReturnValue;             // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_921[0x7];                                      // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          CallFunc_LoadJigComponent_ActionbarUIDs;           // 0x0928(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface_3; // 0x0940(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLoadSavedDataRequested_Result_2;        // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_5;            // 0x0952(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_953[0x5];                                      // 0x0953(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems_2;             // 0x0958(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FGuid>                          CallFunc_GetMainContainerUIDS_UIDs_2;              // 0x0968(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x097A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97B[0x1];                                      // 0x097B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_TempUID_5;                      // 0x097C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98C[0x4];                                      // 0x098C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_CustomEvent_ItemAdded_2;                    // 0x0990(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success__1;                     // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_CustomEvent_UpdateUIDS;                     // 0x0A70(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_WithCounts;                     // 0x0A80(0x0010)(ReferenceParm)
	bool                                          K2Node_CustomEvent_IsCraftingStation_;             // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A91[0x7];                                      // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_CustomEvent_ItemInside;                     // 0x0A98(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_CompRef;                        // 0x0B70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CraftIndex;                     // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_CustomEvent_ConsumeUIDs;                    // 0x0B80(0x0010)(ConstParm, ReferenceParm)
	struct FGuid                                  K2Node_CustomEvent_AddToContainer;                 // 0x0B90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_11;                     // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation_6;                // 0x0BA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA5[0x3];                                      // 0x0BA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_TempUID_4;                      // 0x0BA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_StackWith;                      // 0x0BB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_Select_Default_3;                           // 0x0BC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x0BD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BDA[0x6];                                      // 0x0BDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_Select_Default_4;                           // 0x0BE0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_MagContainerUID;                // 0x0BE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_AmmoToAdd;                      // 0x0BF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxCap;                         // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success_;                       // 0x0C0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C0D[0x3];                                      // 0x0C0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_UnloadUID_1;                    // 0x0C10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_UnloadToContainerUID_1;         // 0x0C20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_10;                     // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRot_1;                     // 0x0C34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C35[0x3];                                      // 0x0C35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ReloadUID_1;                    // 0x0C38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ReloadToContainerUID_1;         // 0x0C48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_UnloadUID;                      // 0x0C58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_UnloadToContainerUID;           // 0x0C68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_9;                      // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRot;                       // 0x0C7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7D[0x3];                                      // 0x0C7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ReloadUID;                      // 0x0C80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ReloadToContainerUID;           // 0x0C90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_WeaponRef;                      // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_TargetComp_2;                   // 0x0CA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_11;                     // 0x0CB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC4[0x4];                                      // 0x0CC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_CustomData;                     // 0x0CC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 K2Node_CustomEvent_Counts_1;                       // 0x0CD8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE9[0x3];                                      // 0x0CE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 K2Node_CustomEvent_Counts;                         // 0x0CF0(0x0010)(ConstParm, ReferenceParm)
	struct FGuid                                  K2Node_CustomEvent_TempUID_3;                      // 0x0D00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_Select_Default_5;                           // 0x0D10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0D19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1A[0x2];                                      // 0x0D1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0D1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0D21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D22[0x2];                                      // 0x0D22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_10;                     // 0x0D24(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D34[0x4];                                      // 0x0D34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0D38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0D44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D45[0x3];                                      // 0x0D45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_6;             // 0x0D48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0D59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5A[0x2];                                      // 0x0D5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_9;                      // 0x0D5C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x0D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_CompTarget;                     // 0x0D70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_8;                      // 0x0D78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_7;               // 0x0D88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_8;                      // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation_5;                // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9D[0x3];                                      // 0x0D9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ActorRef_5;                     // 0x0DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_CustomEvent_ItemAdded_1;                    // 0x0DA8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_ContainerContent_1;             // 0x0E80(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  K2Node_CustomEvent_TempUID_2;                      // 0x0E90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 K2Node_CustomEvent_UpdateCounts;                   // 0x0EA0(0x0010)(ConstParm, ReferenceParm)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0EB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed_1;            // 0x0EBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EBD[0x3];                                      // 0x0EBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_7;             // 0x0EC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef_4;                     // 0x0ED0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_TempUID_1;                      // 0x0ED8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef_3;                     // 0x0EE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_AddtoUID;                       // 0x0EF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_TempUID;                        // 0x0F00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_7;                      // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation_4;                // 0x0F14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F15[0x3];                                      // 0x0F15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_CustomEvent_Stacks;                         // 0x0F18(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_2;        // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F29[0x7];                                      // 0x0F29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_2;   // 0x0F30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0F41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigCanInteract_Result_1;                  // 0x0F42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0F43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F44[0x4];                                      // 0x0F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ActorRef_2;                     // 0x0F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_CustomEvent_ItemAdded;                      // 0x0F50(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_ContainerContent;               // 0x1028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x1038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x103C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x103D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x103E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x103F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1041[0x3];                                     // 0x1041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x1044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_MainContainerUID;               // 0x1048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef_1;                     // 0x1058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_4;                         // 0x1060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped;                   // 0x1069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106A[0x6];                                     // 0x106A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef;                      // 0x1070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1079[0x7];                                     // 0x1079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x1080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x1088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x1089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_3;        // 0x108A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108B[0x1];                                     // 0x108B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x108C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_ActorRef;                       // 0x1090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToMainUID;                      // 0x1098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x10A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x10A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10AA[0x6];                                     // 0x10AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_3;   // 0x10B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x10C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigCanInteract_Result_2;                  // 0x10C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C3[0x5];                                     // 0x10C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_CustomEvent_ItemInfo_3;                     // 0x10C8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_Content_1;                      // 0x11A0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  K2Node_CustomEvent_DroppedUID_2;                   // 0x11B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DropNewCount_1;                 // 0x11C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_RecUID_1;                       // 0x11C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RecNewCount_1;                  // 0x11D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_DroppedUID_1;                   // 0x11D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DropNewCount;                   // 0x11E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_RecUID;                         // 0x11EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RecNewCount;                    // 0x11FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x1200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x1204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x1208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1209[0x7];                                     // 0x1209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_FromCom;                        // 0x1210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_ToComp_1;                       // 0x1218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_DroppedUID;                     // 0x1220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ReceiverUID;                    // 0x1230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxStack;                       // 0x1240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x1244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_RequestStackItem_Success;      // 0x1245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1246[0x2];                                     // 0x1246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_MakeArray_Array_1;                          // 0x1248(0x0010)(ConstParm, ReferenceParm)
	struct FRepItemInfo                           K2Node_CustomEvent_ItemInfo_2;                     // 0x1258(0x0078)(HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_UID_5;                          // 0x12D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_6;               // 0x12E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_6;                      // 0x12F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation_3;                // 0x12F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F5[0x3];                                     // 0x12F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UpdateCount                         K2Node_CustomEvent_UpdateCount_1;                  // 0x12F8(0x0014)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_RemovePending_1;                // 0x130C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131C[0x4];                                     // 0x131C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SubContainerInfo>            K2Node_CustomEvent_SubContainers_1;                // 0x1320(0x0010)(ReferenceParm)
	bool                                          CallFunc_RemoveRequestByUID_Removed_1;             // 0x1330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_1;               // 0x1331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1332[0x6];                                     // 0x1332(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_CustomEvent_ItemInfo_1;                     // 0x1338(0x0078)(HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_UID_4;                          // 0x13B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_5;               // 0x13C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_5;                      // 0x13D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation_2;                // 0x13D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D5[0x3];                                     // 0x13D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UpdateCount                         K2Node_CustomEvent_UpdateCount;                    // 0x13D8(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EC[0x4];                                     // 0x13EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SubContainerInfo>            K2Node_CustomEvent_SubContainers;                  // 0x13F0(0x0010)(ReferenceParm)
	struct FGuid                                  K2Node_CustomEvent_SourceUID_1;                    // 0x1400(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SourceNewCount_1;               // 0x1410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1414[0x4];                                     // 0x1414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_CustomEvent_NewItem_1;                      // 0x1418(0x0078)(HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_NewItemUID_1;                   // 0x1490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_4;               // 0x14A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToSlot;                         // 0x14B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_1;                      // 0x14B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B5[0x3];                                     // 0x14B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_TargetComp_1;                   // 0x14B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_7;                      // 0x14C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewCount_1;                     // 0x14D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_RemovedPending;                 // 0x14D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed_2;             // 0x14E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_2;               // 0x14E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E6[0x2];                                     // 0x14E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_6;                      // 0x14E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewCount;                       // 0x14F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_RemovePending;                  // 0x14FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed_3;             // 0x150C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_150D[0x3];                                     // 0x150D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_SourceUID;                      // 0x1510(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SourceNewCount;                 // 0x1520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1524[0x4];                                     // 0x1524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_CustomEvent_NewItem;                        // 0x1528(0x0078)(HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_NewItemUID;                     // 0x15A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_3;               // 0x15B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_4;                      // 0x15C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated;                        // 0x15C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C5[0x3];                                     // 0x15C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_FromComp;                       // 0x15C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_ToComp;                         // 0x15D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_5;                      // 0x15D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_2;               // 0x15E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_3;                      // 0x15F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SplitAmount;                    // 0x15FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated__1;                     // 0x1600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1601[0x7];                                     // 0x1601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp_4;                   // 0x1608(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_CustomEvent_ItemInfo;                       // 0x1610(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_Content;                        // 0x16E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_Comp_1;                         // 0x16F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_PendingUID;                     // 0x1700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed_4;             // 0x1711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x1712(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1713[0x1];                                     // 0x1713(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_UID_3;                          // 0x1714(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1724[0x4];                                     // 0x1724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_Comp;                           // 0x1728(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SkipPendingRequests_;           // 0x1730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1731[0x7];                                     // 0x1731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemByUID_Found;                      // 0x1738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_5;                         // 0x1740(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed_2;            // 0x1748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed_3;            // 0x1749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174A[0x2];                                     // 0x174A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_8;             // 0x174C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x175C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_4;        // 0x175D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175E[0x2];                                     // 0x175E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x1760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x1764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x1765(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x1766(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1767[0x1];                                     // 0x1767(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_ItemUID_4;                      // 0x1768(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_From;                           // 0x1778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_To;                             // 0x1780(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_3;                      // 0x1788(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation_1;                // 0x1798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1799[0x3];                                     // 0x1799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ToIndex_2;                      // 0x179C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainer;                    // 0x17A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VendorAmount;                   // 0x17B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_VendorMoneyToUID;               // 0x17B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_VendorMoneyToIndex;             // 0x17C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_DeepSearchForItem_ItemFound;              // 0x17C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x17D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x17D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed_4;            // 0x17D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D3[0x5];                                     // 0x17D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_TargetComp;                     // 0x17D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID_2;                      // 0x17E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID_1;               // 0x17F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex_1;                      // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FinalRotation;                  // 0x1804(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1805[0x3];                                     // 0x1805(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_CustomEvent_ItemUID_1;                      // 0x1808(0x0010)(ConstParm, ReferenceParm)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_JijgCompTarget;                 // 0x1818(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_JigMPCompRef_2;                 // 0x1820(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ItemUID;                        // 0x1828(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_CustomEvent_ToContainerUID;                 // 0x1838(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ToIndex;                        // 0x1848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_;                       // 0x184C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184D[0x3];                                     // 0x184D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_InContainerIndex;               // 0x1850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1854[0x4];                                     // 0x1854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_6;                         // 0x1858(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x1860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_9;             // 0x1864(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x1874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x1878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1879[0x3];                                     // 0x1879(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x187C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          K2Node_CustomEvent_MainContainersUIDs;             // 0x1880(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FContainerPickupsInfo>          K2Node_CustomEvent_ContainerItems;                 // 0x1890(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_JigMPCompRef_1;                 // 0x18A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          K2Node_CustomEvent_ActionbarUIDs;                  // 0x18A8(0x0010)(ConstParm, ReferenceParm)
	class UBP_JigMultiplayer_C*                   K2Node_CustomEvent_JigMPCompRef;                   // 0x18B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnClientDataRequested_Result;             // 0x18C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C1[0x7];                                     // 0x18C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          CallFunc_GetMainContainerUIDS_UIDs_3;              // 0x18C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_6;            // 0x18D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D9[0x7];                                     // 0x18D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_9;                   // 0x18E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_4;   // 0x18E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x18F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18F9[0x7];                                     // 0x18F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_10;                  // 0x1900(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_5;   // 0x1908(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x1918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_7;            // 0x1919(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigCanInteract_Result_3;                  // 0x191A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x191B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191C[0x4];                                     // 0x191C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems_3;             // 0x1920(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x1930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1931[0x7];                                     // 0x1931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_7;                         // 0x1938(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x1940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x1944(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1945[0x3];                                     // 0x1945(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Array_Get_Item_8;                         // 0x1948(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue;              // 0x1958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x1959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanClearContainer_Result;            // 0x195A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ClearContainer_;                // 0x195B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195C[0x4];                                     // 0x195C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x1960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue_1;            // 0x1968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x1969(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocal_ReturnValue;                      // 0x196A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickupComponent_ReturnValue;            // 0x196B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_8;            // 0x196C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x196D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Reset_;                         // 0x196E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196F[0x1];                                     // 0x196F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x1970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x1974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_DeepSearchForItem_ItemFound_1;            // 0x1978(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x1980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x1981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x1982(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1983[0x5];                                     // 0x1983(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_9;                         // 0x1988(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_SetupInventoryWidget_InventoryWidgetRef;  // 0x1990(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x1998(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x19A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A9[0x7];                                     // 0x19A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDropItemBackGwidget_C*                 CallFunc_GetDropWidget_DropWRef_1;                 // 0x19B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x19B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x19B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19BA[0x2];                                     // 0x19BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x19BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x19C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x19C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x19C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x19C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x19C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C5[0x3];                                     // 0x19C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_11;                  // 0x19C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x19D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D1[0x7];                                     // 0x19D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_CustomEvent_UID_2;                          // 0x19D8(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTag                           K2Node_CustomEvent_STAT_NAME_1;                    // 0x19E8(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_CustomEvent_Values;                         // 0x19F0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Array_Get_Item_10;                        // 0x1A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x1A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x1A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A0D[0x3];                                     // 0x1A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_CustomEvent_UID_1;                          // 0x1A10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_STAT_TAG;                       // 0x1A20(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_NewValue_1;                     // 0x1A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x1A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A31[0x3];                                     // 0x1A31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer");
static_assert(sizeof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer) == 0x001A38, "Wrong size on BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, EntryPoint) == 0x000000, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UID) == 0x000004, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_STAT_NAME) == 0x000014, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_STAT_NAME' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewValue) == 0x000020, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_1) == 0x000029, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_True_if_break_was_hit_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_2) == 0x00003D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_3) == 0x00004C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_IsClosed_Variable) == 0x00004D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Has_Been_Initd_Variable) == 0x00004E, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_4) == 0x000058, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_5) == 0x000059, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000060, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000068, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_6) == 0x000080, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000088, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_3) == 0x000099, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetDropWidget_DropWRef) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetDropWidget_DropWRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_IsClosed_Variable_1) == 0x0000A9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000AA, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsCraftingStation_ReturnValue) == 0x0000AB, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_K2_SetTimer_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000B9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_IsClosed_Variable_2) == 0x0000BA, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x0000C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigMP_GetLootWidget_Result) == 0x0000E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigMP_GetLootWidget_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigMP_GetLootWidget_Valid_) == 0x0000E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigMP_GetLootWidget_Valid_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetListOfContainers_Containers) == 0x000108, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_7) == 0x000118, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000128, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable_2) == 0x000134, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsVendor_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemReceiver) == 0x000140, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemReceiver' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemDropped) == 0x000148, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemDropped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemReceiverContainer) == 0x000150, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemReceiverContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemDroppedContainer) == 0x000158, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemDroppedContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Container_4) == 0x000160, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Container_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Contains_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_5) == 0x000169, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsEquipTo__ReturnValue) == 0x00016A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue) == 0x00016B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsEquipTo__ReturnValue_1) == 0x00016C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanOR_ReturnValue) == 0x00016D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetCount_Count) == 0x000170, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_6) == 0x000174, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetJigDA_JigDataAsset) == 0x000178, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetType_Type) == 0x000180, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsVendor_ReturnValue_1) == 0x000188, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsSupportedByThis_Supported_) == 0x000189, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_7) == 0x00018A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable_2) == 0x00018C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue) == 0x000190, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000194, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000198, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_1) == 0x000199, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Has_Been_Initd_Variable_2) == 0x00019A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_8) == 0x00019B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetLocalComp_JigComp) == 0x0001A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetLocalComp_JigComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetLocalComp_JigComp_1) == 0x0001A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetLocalComp_JigComp_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsVendor_ReturnValue_2) == 0x0001B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsVendor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Variable_1) == 0x0001B4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_9) == 0x0001B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001BC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Container_3) == 0x0001C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Container_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SlotRef) == 0x0001C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Button) == 0x0001D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0001E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0001E9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddStackItemToContainer_Result) == 0x0001EA, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddStackItemToContainer_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddStackItemToContainer_WithItem) == 0x0001F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddStackItemToContainer_WithItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetCount_Count_1) == 0x0001F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetCount_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_Result) == 0x0001FC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_AddToContainer) == 0x000200, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_AddToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_ToIndex) == 0x000208, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_FinalRotation) == 0x00020C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddStackItemToContainer_Result_1) == 0x00020D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddStackItemToContainer_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddStackItemToContainer_WithItem_1) == 0x000210, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddStackItemToContainer_WithItem_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_Result_1) == 0x000218, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_AddToContainer_1) == 0x000220, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_AddToContainer_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_ToIndex_1) == 0x000228, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_ToIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JSI_CheckIfCanAddItemToContainer_FinalRotation_1) == 0x00022C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JSI_CheckIfCanAddItemToContainer_FinalRotation_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetRootContainerRef_ContainerRef) == 0x000230, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetRootContainerRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsEquipTo__ReturnValue_2) == 0x000238, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsEquipTo__ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetCount_Count_2) == 0x00023C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetCount_Count_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_1) == 0x000240, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsCTRLDown_CTRL_Down) == 0x000241, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsCTRLDown_CTRL_Down' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsSHIFTDown_CTRL_Down) == 0x000242, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsSHIFTDown_CTRL_Down' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsALTDown_CTRL_Down) == 0x000243, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsALTDown_CTRL_Down' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Container_2) == 0x000248, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Container_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable_3) == 0x000250, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000254, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_10) == 0x000255, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemRef) == 0x000258, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Count_1) == 0x000260, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Container_1) == 0x000268, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Container_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DropWidget) == 0x000270, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DropWidget' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID) == 0x000278, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000288, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Add_ReturnValue) == 0x000298, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetRootContainerRef_ContainerRef_1) == 0x0002A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetRootContainerRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_1) == 0x0002A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_4) == 0x0002B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_2) == 0x0002B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_5) == 0x0002C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsVendor_ReturnValue_3) == 0x0002C1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsVendor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_11) == 0x0002C2, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetLocalComp_JigComp_2) == 0x0002C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetLocalComp_JigComp_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DroppedItem) == 0x0002D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DroppedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReceiverItem) == 0x0002D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReceiverItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetLocalComp_JigComp_3) == 0x0002E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetLocalComp_JigComp_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetMaxStack_MaxStack) == 0x0002E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetMaxStack_MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Greater_IntInt_ReturnValue) == 0x0002EC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_3) == 0x0002F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_6) == 0x0002F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsEquipTo__ReturnValue_3) == 0x0002F9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsEquipTo__ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_2) == 0x0002FC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_2) == 0x00030C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Add_ReturnValue_1) == 0x000310, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_SelectInt_ReturnValue) == 0x000314, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetDurability_Durability) == 0x000318, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetDurability_MaxDurability) == 0x000320, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_FTrunc_ReturnValue) == 0x000328, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Add_ReturnValue_2) == 0x00032C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_4) == 0x000330, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_7) == 0x000338, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsVendor_ReturnValue_4) == 0x000339, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsVendor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_3) == 0x00033C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_5) == 0x000350, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_8) == 0x000358, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetDurability_Durability_1) == 0x000360, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetDurability_Durability_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetDurability_MaxDurability_1) == 0x000368, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetDurability_MaxDurability_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_FTrunc_ReturnValue_1) == 0x000370, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000374, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable_3) == 0x000378, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_6) == 0x000380, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_9) == 0x000388, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsVendor_ReturnValue_5) == 0x000389, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsVendor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_4) == 0x00038C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanOR_ReturnValue_1) == 0x000390, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_12) == 0x000391, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_3) == 0x000392, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_1) == 0x000393, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable_4) == 0x000394, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_5) == 0x000398, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FromContainer_1) == 0x0003A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FromContainer_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainer_2) == 0x0003A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainer_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemSource) == 0x0003B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemSource' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToSlotIndex_1) == 0x0003B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToSlotIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TotalAmount) == 0x0003BC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SplitAmount_1) == 0x0003C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SplitAmount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Rotated__3) == 0x0003C4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Rotated__3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FromContainer) == 0x0003C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainer_1) == 0x0003D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainer_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DroppedSlotRef) == 0x0003D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DroppedSlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SlotReceiverRef) == 0x0003E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SlotReceiverRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToSlotIndex) == 0x0003E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Rotated__2) == 0x0003EC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Rotated__2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_CanStack__CanStack) == 0x0003ED, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_CanStack__FreeSpaceAvailable) == 0x0003EE, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetCount_Count_3) == 0x0003F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetCount_Count_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_SelectInt_ReturnValue_1) == 0x0003F4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_4) == 0x0003F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Add_ReturnValue_3) == 0x000408, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Container) == 0x000410, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Multiplayer_7) == 0x000418, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Multiplayer_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_10) == 0x000420, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_8) == 0x000421, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TargetComp_3) == 0x000428, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TargetComp_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_16) == 0x000430, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_16' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Amount_1) == 0x000440, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CallbackToPlayer_) == 0x000444, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_15) == 0x000448, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_15' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewDurab_1) == 0x000458, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewDurab_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_2) == 0x000468, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_Select_Default) == 0x000470, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CompRef_1) == 0x000478, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CompRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CraftIndex_1) == 0x000480, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CraftIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ConsumeUIDs_1) == 0x000488, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ConsumeUIDs_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_3) == 0x000498, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_14) == 0x00049C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_14' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Keys) == 0x0004B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Values_1) == 0x0004C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Values_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_Select_Default_1) == 0x0004D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetContainerItems_AllItems) == 0x0004D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetContainerItems_AllItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetMainContainerUIDS_UIDs) == 0x0004E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetMainContainerUIDS_UIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_1) == 0x0004F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x000500, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_11) == 0x000510, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CreateDelegate_OutputDelegate) == 0x000514, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_OnLoadSavedDataRequested_Result) == 0x000524, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_OnLoadSavedDataRequested_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_2) == 0x000525, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MainJigContainers) == 0x000528, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MainJigContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MainContainersIDs) == 0x000538, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MainContainersIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_InventoryWeight) == 0x000548, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_InventoryWeight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActionbarUIDs_2) == 0x000558, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActionbarUIDs_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsDedicatedServer_ReturnValue) == 0x000568, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable_4) == 0x00056C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Variable_2) == 0x000570, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_6) == 0x000574, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_2) == 0x000578, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_3) == 0x000580, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_3) == 0x000588, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000590, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x0005A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_12) == 0x0005B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigCanInteract_Result) == 0x0005B1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigCanInteract_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable_5) == 0x0005B4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_4) == 0x0005B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_9) == 0x0005C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Actor) == 0x0005C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Option) == 0x0005D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Option' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Payload) == 0x0005D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1) == 0x000608, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_13) == 0x000618, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_4) == 0x000619, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_13) == 0x00061A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_True_if_break_was_hit_Variable_2) == 0x00061B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_14) == 0x00061C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Item) == 0x000620, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_LastIndex_ReturnValue) == 0x000630, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_MakeArray_Array) == 0x000638, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_5) == 0x000648, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000650, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Character_Interface_1) == 0x000660, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_14) == 0x000670, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable_5) == 0x000674, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_7) == 0x000678, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerUID_3) == 0x00067C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerUID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AddColumns) == 0x00068C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AddColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AddRows) == 0x000690, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AddRows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerUID_2) == 0x000694, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerUID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AddedColumn) == 0x0006A4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AddedColumn' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AddedRow) == 0x0006A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AddedRow' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_FindJSIContainer_JSIRef) == 0x0006B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_FindJSIContainer_JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_FindJSIContainer_Found) == 0x0006B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_FindJSIContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerUID_1) == 0x0006BC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SecondContainerUID_1) == 0x0006CC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SecondContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Success_1) == 0x0006DC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Success_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_ExpandContainer_Success) == 0x0006DD, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_ExpandContainer_Success' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerUID) == 0x0006E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SecondContainerUID) == 0x0006F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SecondContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ChamberContainerUID_1) == 0x000700, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ChamberContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_6) == 0x000710, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1) == 0x000718, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_15) == 0x000728, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x00072C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewUID) == 0x00073C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigMP_OnUpdateChamberUID_Result) == 0x00074C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigMP_OnUpdateChamberUID_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ChamberContainerUID) == 0x000750, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ChamberContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MagContainerUID_1) == 0x000760, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MagContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_BulletToChamberUID) == 0x000770, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_BulletToChamberUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ChamberContainerIndex) == 0x000780, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ChamberContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SendChamberUID_) == 0x000784, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SendChamberUID_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_1) == 0x000788, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue) == 0x000790, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveFromJSIParent_Removed) == 0x000794, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveFromJSIParent_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Less_IntInt_ReturnValue) == 0x000795, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_5) == 0x000798, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_13) == 0x0007A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_13' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewDurab) == 0x0007B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewDurab' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x0007C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_7) == 0x0007D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_WithUID) == 0x0007E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_WithUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Success) == 0x0007F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_12) == 0x0007F4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_12' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewCount_2) == 0x000804, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewCount_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_6) == 0x000808, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000810, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetMainContainerUIDS_UIDs_1) == 0x000818, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetMainContainerUIDS_UIDs_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_4) == 0x000828, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetContainerItems_AllItems_1) == 0x000830, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetContainerItems_AllItems_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Array_Index_Variable_6) == 0x000840, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_7) == 0x000848, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Character_Interface_2) == 0x000850, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Character_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_16) == 0x000860, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SaveName_1) == 0x000868, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SaveName_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UserIndex_1) == 0x000878, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UserIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReplaceContainerIndex) == 0x00087C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReplaceContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_OnLoadSavedDataRequested_Result_1) == 0x000880, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_OnLoadSavedDataRequested_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_ReplaceLoadJigComponentByIndex_ReturnValue) == 0x000881, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_ReplaceLoadJigComponentByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_ReplaceLoadJigComponentByIndex_ActionbarUIDs) == 0x000888, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_ReplaceLoadJigComponentByIndex_ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SaveName) == 0x000898, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SaveName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UserIndex) == 0x0008A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UserIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerIndex) == 0x0008AC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Save_One_Jig_ContainerByIndex_ReturnValue) == 0x0008B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Save_One_Jig_ContainerByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x0008B4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MpRef) == 0x0008C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MpRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActionbarUIDs_1) == 0x0008D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActionbarUIDs_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_5) == 0x0008E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0008E1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_Select_Default_2) == 0x0008E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_SaveJigComponent_ReturnValue) == 0x0008F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_SaveJigComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_15) == 0x0008F1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Conv_BoolToString_ReturnValue) == 0x0008F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Concat_StrStr_ReturnValue) == 0x000908, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_JigMPCompRef_3) == 0x000918, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_JigMPCompRef_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LoadJigComponent_ReturnValue) == 0x000920, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LoadJigComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LoadJigComponent_ActionbarUIDs) == 0x000928, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LoadJigComponent_ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_8) == 0x000938, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Jig_Character_Interface_3) == 0x000940, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Jig_Character_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_17) == 0x000950, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_OnLoadSavedDataRequested_Result_2) == 0x000951, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_OnLoadSavedDataRequested_Result_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_5) == 0x000952, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetContainerItems_AllItems_2) == 0x000958, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetContainerItems_AllItems_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetMainContainerUIDS_UIDs_2) == 0x000968, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetMainContainerUIDS_UIDs_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000978, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_4) == 0x000979, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanOR_ReturnValue_2) == 0x00097A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TempUID_5) == 0x00097C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TempUID_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemAdded_2) == 0x000990, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemAdded_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Success__1) == 0x000A68, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Success__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UpdateUIDS) == 0x000A70, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UpdateUIDS' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_WithCounts) == 0x000A80, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_WithCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_IsCraftingStation_) == 0x000A90, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_IsCraftingStation_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemInside) == 0x000A98, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemInside' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CompRef) == 0x000B70, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CraftIndex) == 0x000B78, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CraftIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ConsumeUIDs) == 0x000B80, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ConsumeUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AddToContainer) == 0x000B90, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AddToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_11) == 0x000BA0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation_6) == 0x000BA4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TempUID_4) == 0x000BA8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TempUID_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_StackWith) == 0x000BB8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_StackWith' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_Select_Default_3) == 0x000BC8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_6) == 0x000BD8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveRequestByUID_Removed) == 0x000BD9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_Select_Default_4) == 0x000BE0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MagContainerUID) == 0x000BE8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AmmoToAdd) == 0x000BF8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AmmoToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MaxCap) == 0x000C08, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MaxCap' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Success_) == 0x000C0C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Success_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UnloadUID_1) == 0x000C10, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UnloadUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UnloadToContainerUID_1) == 0x000C20, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UnloadToContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_10) == 0x000C30, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRot_1) == 0x000C34, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRot_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReloadUID_1) == 0x000C38, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReloadUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReloadToContainerUID_1) == 0x000C48, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReloadToContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UnloadUID) == 0x000C58, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UnloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UnloadToContainerUID) == 0x000C68, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UnloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_9) == 0x000C78, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRot) == 0x000C7C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReloadUID) == 0x000C80, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReloadToContainerUID) == 0x000C90, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_WeaponRef) == 0x000CA0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_WeaponRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TargetComp_2) == 0x000CA8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TargetComp_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_11) == 0x000CB0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Amount) == 0x000CC0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CustomData) == 0x000CC8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Counts_1) == 0x000CD8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Counts_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_7) == 0x000CE8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000CEC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Counts) == 0x000CF0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Counts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TempUID_3) == 0x000D00, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TempUID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_Select_Default_5) == 0x000D10, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000D18, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_Guid_ReturnValue) == 0x000D19, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000D1C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000D20, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_5) == 0x000D21, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_10) == 0x000D24, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_2) == 0x000D38, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue_1) == 0x000D40, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000D44, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_6) == 0x000D48, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_6) == 0x000D58, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000D59, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_9) == 0x000D5C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Count) == 0x000D6C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_CompTarget) == 0x000D70, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_CompTarget' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_8) == 0x000D78, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_7) == 0x000D88, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_8) == 0x000D98, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation_5) == 0x000D9C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_5) == 0x000DA0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemAdded_1) == 0x000DA8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemAdded_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerContent_1) == 0x000E80, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerContent_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TempUID_2) == 0x000E90, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TempUID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UpdateCounts) == 0x000EA0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UpdateCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_3) == 0x000EB0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue_2) == 0x000EB8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveFromJSIParent_Removed_1) == 0x000EBC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveFromJSIParent_Removed_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_7) == 0x000EC0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_4) == 0x000ED0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TempUID_1) == 0x000ED8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TempUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_3) == 0x000EE8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_AddtoUID) == 0x000EF0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_AddtoUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TempUID) == 0x000F00, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_7) == 0x000F10, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation_4) == 0x000F14, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Stacks) == 0x000F18, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Stacks' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_GuidGuid_ReturnValue_2) == 0x000F28, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_GuidGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_2) == 0x000F30, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_18) == 0x000F40, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_8) == 0x000F41, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigCanInteract_Result_1) == 0x000F42, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigCanInteract_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000F43, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_2) == 0x000F48, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemAdded) == 0x000F50, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerContent) == 0x001028, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Loop_Counter_Variable_6) == 0x001038, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_True_if_break_was_hit_Variable_4) == 0x00103C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_16) == 0x00103D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_7) == 0x00103E, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Less_IntInt_ReturnValue_2) == 0x00103F, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_8) == 0x001040, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_8) == 0x001044, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MainContainerUID) == 0x001048, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MainContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef_1) == 0x001058, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_4) == 0x001060, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x001068, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_UnequipItem_Unequipped) == 0x001069, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_UnequipItem_Unequipped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_UnequipItem_SlotRef) == 0x001070, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_UnequipItem_SlotRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetEquippedItemRef_Found_) == 0x001078, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetEquippedItemRef_ItemRef) == 0x001080, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetEquippedItemRef_IsPending) == 0x001088, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsItemPending__IsPending) == 0x001089, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_GuidGuid_ReturnValue_3) == 0x00108A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_GuidGuid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue_3) == 0x00108C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActorRef) == 0x001090, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToMainUID) == 0x001098, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToMainUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Less_IntInt_ReturnValue_3) == 0x0010A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_9) == 0x0010A9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_3) == 0x0010B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_19) == 0x0010C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_9) == 0x0010C1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigCanInteract_Result_2) == 0x0010C2, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigCanInteract_Result_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemInfo_3) == 0x0010C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemInfo_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Content_1) == 0x0011A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Content_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DroppedUID_2) == 0x0011B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DroppedUID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DropNewCount_1) == 0x0011C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DropNewCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RecUID_1) == 0x0011C4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RecUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RecNewCount_1) == 0x0011D4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RecNewCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DroppedUID_1) == 0x0011D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DroppedUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DropNewCount) == 0x0011E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DropNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RecUID) == 0x0011EC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RecUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RecNewCount) == 0x0011FC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RecNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Variable_3) == 0x001200, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_9) == 0x001204, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x001208, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FromCom) == 0x001210, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FromCom' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToComp_1) == 0x001218, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToComp_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_DroppedUID) == 0x001220, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_DroppedUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ReceiverUID) == 0x001230, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ReceiverUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MaxStack) == 0x001240, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_10) == 0x001244, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_ServerFunc_RequestStackItem_Success) == 0x001245, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_ServerFunc_RequestStackItem_Success' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_MakeArray_Array_1) == 0x001248, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemInfo_2) == 0x001258, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemInfo_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UID_5) == 0x0012D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UID_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_6) == 0x0012E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_6) == 0x0012F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation_3) == 0x0012F4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UpdateCount_1) == 0x0012F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UpdateCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RemovePending_1) == 0x00130C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RemovePending_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SubContainers_1) == 0x001320, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SubContainers_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveRequestByUID_Removed_1) == 0x001330, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveRequestByUID_Removed_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_Guid_ReturnValue_1) == 0x001331, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_Guid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemInfo_1) == 0x001338, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UID_4) == 0x0013B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UID_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_5) == 0x0013C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_5) == 0x0013D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation_2) == 0x0013D4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UpdateCount) == 0x0013D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SubContainers) == 0x0013F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SubContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SourceUID_1) == 0x001400, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SourceUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SourceNewCount_1) == 0x001410, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SourceNewCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewItem_1) == 0x001418, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewItemUID_1) == 0x001490, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewItemUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_4) == 0x0014A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToSlot) == 0x0014B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToSlot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Rotated_1) == 0x0014B4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Rotated_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TargetComp_1) == 0x0014B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TargetComp_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_7) == 0x0014C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewCount_1) == 0x0014D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RemovedPending) == 0x0014D4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RemovedPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveRequestByUID_Removed_2) == 0x0014E4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveRequestByUID_Removed_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_Guid_ReturnValue_2) == 0x0014E5, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_Guid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_6) == 0x0014E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewCount) == 0x0014F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_RemovePending) == 0x0014FC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_RemovePending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveRequestByUID_Removed_3) == 0x00150C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveRequestByUID_Removed_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SourceUID) == 0x001510, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SourceUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SourceNewCount) == 0x001520, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SourceNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewItem) == 0x001528, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewItemUID) == 0x0015A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_3) == 0x0015B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_4) == 0x0015C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Rotated) == 0x0015C4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Rotated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FromComp) == 0x0015C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FromComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToComp) == 0x0015D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_5) == 0x0015D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_2) == 0x0015E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_3) == 0x0015F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SplitAmount) == 0x0015FC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SplitAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Rotated__1) == 0x001600, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Rotated__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetLocalComp_JigComp_4) == 0x001608, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetLocalComp_JigComp_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemInfo) == 0x001610, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Content) == 0x0016E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Content' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Comp_1) == 0x0016F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Comp_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_PendingUID) == 0x001700, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_PendingUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_10) == 0x001710, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveRequestByUID_Removed_4) == 0x001711, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveRequestByUID_Removed_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_bool_Variable_10) == 0x001712, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UID_3) == 0x001714, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Comp) == 0x001728, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Comp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_SkipPendingRequests_) == 0x001730, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_SkipPendingRequests_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_FindItemByUID_Found) == 0x001738, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_FindItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_5) == 0x001740, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveFromJSIParent_Removed_2) == 0x001748, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveFromJSIParent_Removed_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveFromJSIParent_Removed_3) == 0x001749, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveFromJSIParent_Removed_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_8) == 0x00174C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_11) == 0x00175C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_EqualEqual_GuidGuid_ReturnValue_4) == 0x00175D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_EqualEqual_GuidGuid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue_4) == 0x001760, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Less_IntInt_ReturnValue_4) == 0x001764, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_17) == 0x001765, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_11) == 0x001766, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_4) == 0x001768, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_From) == 0x001778, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_From' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_To) == 0x001780, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_To' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_3) == 0x001788, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation_1) == 0x001798, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_2) == 0x00179C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainer) == 0x0017A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_VendorAmount) == 0x0017B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_VendorAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_VendorMoneyToUID) == 0x0017B4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_VendorMoneyToUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_VendorMoneyToIndex) == 0x0017C4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_VendorMoneyToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_DeepSearchForItem_ItemFound) == 0x0017C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_DeepSearchForItem_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x0017D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_12) == 0x0017D1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RemoveFromJSIParent_Removed_4) == 0x0017D2, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RemoveFromJSIParent_Removed_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_TargetComp) == 0x0017D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_2) == 0x0017E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID_1) == 0x0017F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex_1) == 0x001800, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_FinalRotation) == 0x001804, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID_1) == 0x001808, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_JijgCompTarget) == 0x001818, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_JijgCompTarget' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_JigMPCompRef_2) == 0x001820, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_JigMPCompRef_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ItemUID) == 0x001828, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToContainerUID) == 0x001838, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ToIndex) == 0x001848, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Rotated_) == 0x00184C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_InContainerIndex) == 0x001850, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_InContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_6) == 0x001858, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue_5) == 0x001860, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetUniqueID_UniqueServerID_9) == 0x001864, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetUniqueID_UniqueServerID_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x001874, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Contains_ReturnValue_1) == 0x001878, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Max_ReturnValue) == 0x00187C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_MainContainersUIDs) == 0x001880, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_MainContainersUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ContainerItems) == 0x001890, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ContainerItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_JigMPCompRef_1) == 0x0018A0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_JigMPCompRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ActionbarUIDs) == 0x0018A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_JigMPCompRef) == 0x0018B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_JigMPCompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_OnClientDataRequested_Result) == 0x0018C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_OnClientDataRequested_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetMainContainerUIDS_UIDs_3) == 0x0018C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetMainContainerUIDS_UIDs_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_6) == 0x0018D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_9) == 0x0018E0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_4) == 0x0018E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_20) == 0x0018F8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_10) == 0x001900, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_5) == 0x001908, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_21) == 0x001918, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_7) == 0x001919, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_JigCanInteract_Result_3) == 0x00191A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_JigCanInteract_Result_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_18) == 0x00191B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetContainerItems_AllItems_3) == 0x001920, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetContainerItems_AllItems_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanOR_ReturnValue_3) == 0x001930, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_7) == 0x001938, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Length_ReturnValue_6) == 0x001940, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Less_IntInt_ReturnValue_5) == 0x001944, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_8) == 0x001948, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsLootContainer_ReturnValue) == 0x001958, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsLootContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_12) == 0x001959, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_CheckCanClearContainer_Result) == 0x00195A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_CheckCanClearContainer_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_ClearContainer_) == 0x00195B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_ClearContainer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_RandomFloatInRange_ReturnValue) == 0x001960, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsLootContainer_ReturnValue_1) == 0x001968, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsLootContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_13) == 0x001969, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsLocal_ReturnValue) == 0x00196A, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsPickupComponent_ReturnValue) == 0x00196B, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsPickupComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsMainCharacter_ReturnValue_8) == 0x00196C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsMainCharacter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Not_PreBool_ReturnValue_19) == 0x00196D, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Reset_) == 0x00196E, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Reset_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, Temp_int_Variable_4) == 0x001970, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Add_IntInt_ReturnValue_10) == 0x001974, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_DeepSearchForItem_ItemFound_1) == 0x001978, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_DeepSearchForItem_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_13) == 0x001980, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x001981, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_14) == 0x001982, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_9) == 0x001988, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_SetupInventoryWidget_InventoryWidgetRef) == 0x001990, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_SetupInventoryWidget_InventoryWidgetRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x001998, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_DynamicCast_bSuccess_22) == 0x0019A8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetDropWidget_DropWRef_1) == 0x0019B0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetDropWidget_DropWRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_14) == 0x0019B8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValid_ReturnValue_15) == 0x0019B9, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_LastIndex_ReturnValue_3) == 0x0019BC, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0019C0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_IsValidClass_ReturnValue) == 0x0019C1, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_15) == 0x0019C2, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_16) == 0x0019C3, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_17) == 0x0019C4, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_GetOwner_ReturnValue_11) == 0x0019C8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_GetOwner_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_HasAuthority_ReturnValue) == 0x0019D0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UID_2) == 0x0019D8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_STAT_NAME_1) == 0x0019E8, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_STAT_NAME_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_Values) == 0x0019F0, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_Values' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_Get_Item_10) == 0x001A00, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Array_LastIndex_ReturnValue_4) == 0x001A08, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x001A0C, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_UID_1) == 0x001A10, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_UID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_STAT_TAG) == 0x001A20, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_STAT_TAG' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, K2Node_CustomEvent_NewValue_1) == 0x001A28, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::K2Node_CustomEvent_NewValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_BooleanAND_ReturnValue_18) == 0x001A30, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer, CallFunc_Delay_Duration_ImplicitCast) == 0x001A34, "Member 'BP_JigMultiplayer_C_ExecuteUbergraph_BP_JigMultiplayer::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Find Actor Ref byItemUID
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PickupRef;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID");
static_assert(sizeof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID) == 0x000040, "Wrong size on BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, PickupRef) == 0x000010, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::PickupRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, Temp_bool_Variable_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002D, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00003D, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'BP_JigMultiplayer_C_Find_Actor_Ref_byItemUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Find Pickup Ref by AttachmentMotherUID
// 0x0070 (0x0070 - 0x0000)
struct BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PickupRef;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     TempContainers;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID");
static_assert(sizeof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID) == 0x000070, "Wrong size on BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, PickupRef) == 0x000010, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::PickupRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, ItemUID) == 0x000018, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, TempContainers) == 0x000028, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::TempContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, Temp_int_Variable) == 0x000038, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, Temp_bool_Variable) == 0x000040, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, Temp_bool_Variable_1) == 0x000042, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000043, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, Temp_int_Variable_1) == 0x000044, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, Temp_bool_Variable_2) == 0x00004C, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x00004D, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000055, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, Temp_int_Variable_2) == 0x000058, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000065, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_IsValid_ReturnValue) == 0x000066, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000068, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID, CallFunc_BooleanAND_ReturnValue_2) == 0x00006D, "Member 'BP_JigMultiplayer_C_Find_Pickup_Ref_by_AttachmentMotherUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindAndConsume
// 0x0088 (0x0088 - 0x0000)
struct BP_JigMultiplayer_C_FindAndConsume final
{
public:
	class UJigsawItem_DataAsset_C*                ItemDA;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetSearchableContainers_Result;           // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByID_Found_;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByID_ItemsFound;         // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindAndConsume) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindAndConsume");
static_assert(sizeof(BP_JigMultiplayer_C_FindAndConsume) == 0x000088, "Wrong size on BP_JigMultiplayer_C_FindAndConsume");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, ItemDA) == 0x000000, "Member 'BP_JigMultiplayer_C_FindAndConsume::ItemDA' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, Count) == 0x000008, "Member 'BP_JigMultiplayer_C_FindAndConsume::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_JigMultiplayer_C_FindAndConsume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_FindAndConsume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_JigMultiplayer_C_FindAndConsume::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_JigMultiplayer_C_FindAndConsume::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_GetSearchableContainers_Result) == 0x000028, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_GetSearchableContainers_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_GetInventoryItemsByID_Found_) == 0x000049, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_GetInventoryItemsByID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_GetInventoryItemsByID_ItemsFound) == 0x000050, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_GetInventoryItemsByID_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_GetUniqueID_UniqueServerID) == 0x00006C, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_GetCount_Count) == 0x000080, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindAndConsume, CallFunc_IsEquipTo__ReturnValue) == 0x000085, "Member 'BP_JigMultiplayer_C_FindAndConsume::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindCraftingIngredient
// 0x0160 (0x0160 - 0x0000)
struct BP_JigMultiplayer_C_FindCraftingIngredient final
{
public:
	class UUserWidget*                            OneCont;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                ID;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          Exclude;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UJSI_Slot_C*>                    OutputPin;                                         // 0x0028(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Remaining;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          TempExclude;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<class UJSI_Slot_C*>                    Found;                                             // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         TempCount;                                         // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ISCapacityContainer_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLenOfItemsInContainer_Output_Get;      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count_1;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_FindCraftingIngredient_OutputPin;         // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_FindCraftingIngredient_Result;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindCraftingIngredient) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindCraftingIngredient");
static_assert(sizeof(BP_JigMultiplayer_C_FindCraftingIngredient) == 0x000160, "Wrong size on BP_JigMultiplayer_C_FindCraftingIngredient");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, OneCont) == 0x000000, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::OneCont' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, ID) == 0x000008, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::ID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Count) == 0x000010, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Exclude) == 0x000018, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Exclude' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, OutputPin) == 0x000028, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::OutputPin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Result) == 0x000038, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Remaining) == 0x00003C, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Remaining' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, ItemRef) == 0x000040, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, TempExclude) == 0x000048, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::TempExclude' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Found) == 0x000058, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, TempCount) == 0x000068, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::TempCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000070, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetListOfContainers_Containers) == 0x000088, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Temp_int_Array_Index_Variable_2) == 0x0000AC, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_IsEquipTo__ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000C8, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_ISCapacityContainer_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_ISCapacityContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetUniqueID_UniqueServerID) == 0x0000D4, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E4, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetLenOfItemsInContainer_Output_Get) == 0x0000E8, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetLenOfItemsInContainer_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Temp_int_Loop_Counter_Variable_1) == 0x0000F4, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, Temp_int_Loop_Counter_Variable_2) == 0x0000F8, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Less_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Add_IntInt_ReturnValue_2) == 0x000104, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000108, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00011C, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetCount_Count) == 0x00012C, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Add_IntInt_ReturnValue_3) == 0x000134, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_GetCount_Count_1) == 0x000138, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_GetCount_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Add_ReturnValue_1) == 0x00013C, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Subtract_IntInt_ReturnValue) == 0x000140, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Array_Contains_ReturnValue) == 0x000144, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_FindCraftingIngredient_OutputPin) == 0x000148, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_FindCraftingIngredient_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_FindCraftingIngredient_Result) == 0x000158, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_FindCraftingIngredient_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_BooleanAND_ReturnValue) == 0x00015A, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindCraftingIngredient, CallFunc_BooleanAND_ReturnValue_1) == 0x00015B, "Member 'BP_JigMultiplayer_C_FindCraftingIngredient::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindItemByMotherUID
// 0x0118 (0x0118 - 0x0000)
struct BP_JigMultiplayer_C_FindItemByMotherUID final
{
public:
	struct FGuid                                  MotherUID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  FoundItem;                                         // 0x0018(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindItemByMotherUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindItemByMotherUID");
static_assert(sizeof(BP_JigMultiplayer_C_FindItemByMotherUID) == 0x000118, "Wrong size on BP_JigMultiplayer_C_FindItemByMotherUID");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, MotherUID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::MotherUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, Found_) == 0x000010, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, FoundItem) == 0x000018, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::FoundItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, Temp_int_Variable) == 0x0000F0, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, Temp_bool_Variable) == 0x0000F8, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_Not_PreBool_ReturnValue) == 0x0000F9, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, Temp_bool_Variable_1) == 0x0000FA, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FB, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, Temp_int_Variable_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00010C, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000111, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByMotherUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000112, "Member 'BP_JigMultiplayer_C_FindItemByMotherUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindItemBySubContainerUID
// 0x005C (0x005C - 0x0000)
struct BP_JigMultiplayer_C_FindItemBySubContainerUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ItemUID;                                           // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindItemBySubContainerUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_FindItemBySubContainerUID");
static_assert(sizeof(BP_JigMultiplayer_C_FindItemBySubContainerUID) == 0x00005C, "Wrong size on BP_JigMultiplayer_C_FindItemBySubContainerUID");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Found) == 0x000010, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, ItemUID) == 0x000014, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Temp_bool_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Temp_bool_Variable_1) == 0x000025, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000027, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Temp_int_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Temp_bool_Variable_2) == 0x000030, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x000031, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Temp_int_Variable_1) == 0x000034, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, Temp_int_Variable_2) == 0x00003C, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000048, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00004D, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_BooleanAND_ReturnValue_1) == 0x00004E, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000050, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemBySubContainerUID, CallFunc_BooleanAND_ReturnValue_2) == 0x000059, "Member 'BP_JigMultiplayer_C_FindItemBySubContainerUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindItemByUID
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_FindItemByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Found;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemInContainer_Found;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindItemByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindItemByUID");
static_assert(sizeof(BP_JigMultiplayer_C_FindItemByUID) == 0x000040, "Wrong size on BP_JigMultiplayer_C_FindItemByUID");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindItemByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, Found) == 0x000010, "Member 'BP_JigMultiplayer_C_FindItemByUID::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_FindItemByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, Temp_int_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_FindItemByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_FindItemInContainer_Found) == 0x000030, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_FindItemInContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemByUID, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_FindItemByUID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindItemInContainer
// 0x0098 (0x0098 - 0x0000)
struct BP_JigMultiplayer_C_FindItemInContainer final
{
public:
	class UJSIContainer_C*                        InContainer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Found;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemInContainer_Found;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindItemInContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindItemInContainer");
static_assert(sizeof(BP_JigMultiplayer_C_FindItemInContainer) == 0x000098, "Wrong size on BP_JigMultiplayer_C_FindItemInContainer");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, InContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_FindItemInContainer::InContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, UID) == 0x000008, "Member 'BP_JigMultiplayer_C_FindItemInContainer::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, Found) == 0x000018, "Member 'BP_JigMultiplayer_C_FindItemInContainer::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_FindItemInContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, Temp_bool_Variable_1) == 0x000029, "Member 'BP_JigMultiplayer_C_FindItemInContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002A, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, Temp_int_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindItemInContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x000030, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000038, "Member 'BP_JigMultiplayer_C_FindItemInContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_JigMultiplayer_C_FindItemInContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_GetListOfContainers_Containers) == 0x000050, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_GetUniqueID_UniqueServerID) == 0x000064, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000078, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000079, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, Temp_int_Variable_1) == 0x00007C, "Member 'BP_JigMultiplayer_C_FindItemInContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000081, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_FindItemInContainer_Found) == 0x000088, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_FindItemInContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindItemInContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_JigMultiplayer_C_FindItemInContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindJigContainerByUID
// 0x0080 (0x0080 - 0x0000)
struct BP_JigMultiplayer_C_FindJigContainerByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ReplicatedContainerInfo             Output;                                            // 0x0010(0x0050)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindJigContainerByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindJigContainerByUID");
static_assert(sizeof(BP_JigMultiplayer_C_FindJigContainerByUID) == 0x000080, "Wrong size on BP_JigMultiplayer_C_FindJigContainerByUID");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, Output) == 0x000010, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::Output' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, Index_0) == 0x000060, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, Temp_bool_Variable) == 0x000064, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, Temp_int_Variable) == 0x000068, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigContainerByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00007A, "Member 'BP_JigMultiplayer_C_FindJigContainerByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindJigItemByDA
// 0x0198 (0x0198 - 0x0000)
struct BP_JigMultiplayer_C_FindJigItemByDA final
{
public:
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  SearchOnlyInSlots;                                 // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          DeepSearch_;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SearchInEquipTo_;                                  // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequiredAmount;                                    // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            Found;                                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    Temp;                                              // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UJSIContainer_C*                        Current;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByID_Found_;             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByID_ItemsFound;         // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByID_Found__1;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByID_ItemsFound_1;       // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_3;                         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count_1;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_4;                         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_5;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count_2;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Deep_Search_for_Item_by_ID_ItemRef;       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Deep_Search_for_Item_by_ID_Found_;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_6;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindJigItemByDA) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindJigItemByDA");
static_assert(sizeof(BP_JigMultiplayer_C_FindJigItemByDA) == 0x000198, "Wrong size on BP_JigMultiplayer_C_FindJigItemByDA");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, DA) == 0x000000, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::DA' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, SearchOnlyInSlots) == 0x000008, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::SearchOnlyInSlots' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, DeepSearch_) == 0x000028, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::DeepSearch_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, SearchInEquipTo_) == 0x000029, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::SearchInEquipTo_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, RequiredAmount) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::RequiredAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Result) == 0x000030, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Found) == 0x000038, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp) == 0x000040, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Current) == 0x000050, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Current' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Loop_Counter_Variable_3) == 0x000084, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Array_Index_Variable_3) == 0x00008C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Loop_Counter_Variable_4) == 0x000090, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Add_IntInt_ReturnValue_4) == 0x000094, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, Temp_int_Array_Index_Variable_4) == 0x000098, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Greater_IntInt_ReturnValue) == 0x00009C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00009D, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_IsValid_ReturnValue) == 0x00009E, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00009F, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetEquippedItemRef_Found_) == 0x0000A0, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000A8, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetEquippedItemRef_IsPending) == 0x0000B0, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetInventoryItemsByID_Found_) == 0x0000B1, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetInventoryItemsByID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetInventoryItemsByID_ItemsFound) == 0x0000B8, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetInventoryItemsByID_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000C8, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetListOfContainers_Containers) == 0x0000E8, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetInventoryItemsByID_Found__1) == 0x000100, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetInventoryItemsByID_Found__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetInventoryItemsByID_ItemsFound_1) == 0x000108, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetInventoryItemsByID_ItemsFound_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetCount_Count) == 0x00012C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item_3) == 0x000130, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetCount_Count_1) == 0x000144, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetCount_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item_4) == 0x000150, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Length_ReturnValue_2) == 0x000158, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Less_IntInt_ReturnValue_2) == 0x00015C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item_5) == 0x000160, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GetCount_Count_2) == 0x000168, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GetCount_Count_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Length_ReturnValue_3) == 0x00016C, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000170, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Less_IntInt_ReturnValue_3) == 0x000171, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Deep_Search_for_Item_by_ID_ItemRef) == 0x000178, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Deep_Search_for_Item_by_ID_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Deep_Search_for_Item_by_ID_Found_) == 0x000180, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Deep_Search_for_Item_by_ID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Length_ReturnValue_4) == 0x000184, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Array_Get_Item_6) == 0x000188, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_Less_IntInt_ReturnValue_4) == 0x000190, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_HasTag_ReturnValue) == 0x000191, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJigItemByDA, CallFunc_BooleanOR_ReturnValue) == 0x000192, "Member 'BP_JigMultiplayer_C_FindJigItemByDA::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindJSIContainer
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_FindJSIContainer final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIRef;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_DeepSearchForContainer_Array_Element;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindJSIContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FindJSIContainer");
static_assert(sizeof(BP_JigMultiplayer_C_FindJSIContainer) == 0x000058, "Wrong size on BP_JigMultiplayer_C_FindJSIContainer");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindJSIContainer::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, JSIRef) == 0x000010, "Member 'BP_JigMultiplayer_C_FindJSIContainer::JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, Found) == 0x000018, "Member 'BP_JigMultiplayer_C_FindJSIContainer::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, Temp_bool_Variable) == 0x000019, "Member 'BP_JigMultiplayer_C_FindJSIContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, Temp_int_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_FindJSIContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, Temp_bool_Variable_1) == 0x000025, "Member 'BP_JigMultiplayer_C_FindJSIContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, Temp_int_Variable_1) == 0x000028, "Member 'BP_JigMultiplayer_C_FindJSIContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00003A, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000041, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_DeepSearchForContainer_Array_Element) == 0x000048, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_DeepSearchForContainer_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindJSIContainer, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_FindJSIContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindRootContainer
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_FindRootContainer final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RootCUID;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_RootCUID;               // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindRootContainer) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_FindRootContainer");
static_assert(sizeof(BP_JigMultiplayer_C_FindRootContainer) == 0x000058, "Wrong size on BP_JigMultiplayer_C_FindRootContainer");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindRootContainer::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, RootCUID) == 0x000010, "Member 'BP_JigMultiplayer_C_FindRootContainer::RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_FindRootContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, Temp_bool_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_FindRootContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, Temp_bool_Variable_1) == 0x00002A, "Member 'BP_JigMultiplayer_C_FindRootContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, Temp_int_Variable_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindRootContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_FindRootContainer_RootCUID) == 0x000044, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_FindRootContainer_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_Array_Contains_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000055, "Member 'BP_JigMultiplayer_C_FindRootContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FindRootContainer_Pure
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_FindRootContainer_Pure final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RootCUID;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_RootCUID;               // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FindRootContainer_Pure) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_FindRootContainer_Pure");
static_assert(sizeof(BP_JigMultiplayer_C_FindRootContainer_Pure) == 0x000058, "Wrong size on BP_JigMultiplayer_C_FindRootContainer_Pure");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, RootCUID) == 0x000010, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, Temp_bool_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, Temp_bool_Variable_1) == 0x00002A, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, Temp_int_Variable_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_FindRootContainer_RootCUID) == 0x000044, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_FindRootContainer_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_Array_Contains_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FindRootContainer_Pure, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000055, "Member 'BP_JigMultiplayer_C_FindRootContainer_Pure::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FireArmChamberWeapon
// 0x0398 (0x0398 - 0x0000)
struct BP_JigMultiplayer_C_FireArmChamberWeapon final
{
public:
	struct FGuid                                  ChamberContainerUID;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  MagContainerUID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  BulletToChamberUID;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChamberContainerIndex;                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SendChamberUID_;                                   // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           InsideOf;                                          // 0x0038(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          BulletInChamber;                                   // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberCFound;                                     // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MagBulletFound;                                    // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index1;                                            // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletIndex;                                       // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  TopBullet;                                         // 0x00C0(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ChamberIndex;                                      // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x01E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x0248(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item_2;                         // 0x0288(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_2;                // 0x0360(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemConsumed_Result;              // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FireArmChamberWeapon) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FireArmChamberWeapon");
static_assert(sizeof(BP_JigMultiplayer_C_FireArmChamberWeapon) == 0x000398, "Wrong size on BP_JigMultiplayer_C_FireArmChamberWeapon");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, ChamberContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::ChamberContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, MagContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, BulletToChamberUID) == 0x000020, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::BulletToChamberUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, ChamberContainerIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::ChamberContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, SendChamberUID_) == 0x000034, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::SendChamberUID_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, InsideOf) == 0x000038, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::InsideOf' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, BulletInChamber) == 0x0000B0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::BulletInChamber' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, ChamberCFound) == 0x0000B1, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::ChamberCFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, MagBulletFound) == 0x0000B2, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::MagBulletFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Index1) == 0x0000B4, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Index1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, BulletIndex) == 0x0000B8, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::BulletIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, TopBullet) == 0x0000C0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::TopBullet' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, ChamberIndex) == 0x000198, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::ChamberIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Array_Index_Variable) == 0x00019C, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Variable) == 0x0001A0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_bool_Variable) == 0x0001A4, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Loop_Counter_Variable) == 0x0001AC, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Array_Index_Variable_1) == 0x0001B4, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_bool_Variable_1) == 0x0001B8, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x0001B9, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Loop_Counter_Variable_1) == 0x0001BC, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Array_Index_Variable_2) == 0x0001C4, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_IsValid_Guid_ReturnValue) == 0x0001C8, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Loop_Counter_Variable_2) == 0x0001CC, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001D0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Variable_1) == 0x0001D4, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001D8, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_bool_Variable_2) == 0x0001D9, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_GetHostingSlots_Indexes) == 0x0001E0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x0001F8, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001F9, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Greater_IntInt_ReturnValue) == 0x0001FA, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, Temp_int_Variable_2) == 0x0001FC, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Add_IntInt_ReturnValue_4) == 0x000200, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_BreakVector2D_X) == 0x000208, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_BreakVector2D_Y) == 0x000210, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_MakeVector2D_ReturnValue) == 0x000218, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, K2Node_Select_Default) == 0x000228, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_GetUniqueID_UID) == 0x000238, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_GetHostingSlots_Indexes_1) == 0x000248, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Get_Item_1) == 0x000258, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x00025C, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000260, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000264, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_GetOwner_ReturnValue) == 0x000268, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000270, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Get_Item_2) == 0x000288, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_GetHostingSlots_Indexes_2) == 0x000360, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_GetHostingSlots_Indexes_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Get_Item_3) == 0x000370, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000374, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Length_ReturnValue_2) == 0x000378, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_LastIndex_ReturnValue) == 0x00037C, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Less_IntInt_ReturnValue_2) == 0x000380, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000381, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_BooleanAND_ReturnValue) == 0x000382, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000383, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_JigMP_OnItemConsumed_Result) == 0x000384, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_JigMP_OnItemConsumed_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_Add_ReturnValue) == 0x000388, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00038C, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000390, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000394, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmChamberWeapon, CallFunc_BooleanAND_ReturnValue_1) == 0x000395, "Member 'BP_JigMultiplayer_C_FireArmChamberWeapon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FireArmGetChamberUID
// 0x0108 (0x0108 - 0x0000)
struct BP_JigMultiplayer_C_FireArmGetChamberUID final
{
public:
	struct FGuid                                  ChamberContainerUID;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0028(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FireArmGetChamberUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FireArmGetChamberUID");
static_assert(sizeof(BP_JigMultiplayer_C_FireArmGetChamberUID) == 0x000108, "Wrong size on BP_JigMultiplayer_C_FireArmGetChamberUID");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, ChamberContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::ChamberContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FireArmGetChamberUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000101, "Member 'BP_JigMultiplayer_C_FireArmGetChamberUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FixUpReferences
// 0x0140 (0x0140 - 0x0000)
struct BP_JigMultiplayer_C_FixUpReferences final
{
public:
	TArray<struct FGuid>                          RemoveItems;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0030(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_127[0x1];                                      // 0x0127(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FixUpReferences) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FixUpReferences");
static_assert(sizeof(BP_JigMultiplayer_C_FixUpReferences) == 0x000140, "Wrong size on BP_JigMultiplayer_C_FixUpReferences");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, RemoveItems) == 0x000000, "Member 'BP_JigMultiplayer_C_FixUpReferences::RemoveItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_FixUpReferences::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, Temp_bool_Variable_1) == 0x000011, "Member 'BP_JigMultiplayer_C_FixUpReferences::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Not_PreBool_ReturnValue_1) == 0x000013, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_FixUpReferences::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, Temp_bool_Variable_2) == 0x00001C, "Member 'BP_JigMultiplayer_C_FixUpReferences::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001D, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, Temp_int_Variable_1) == 0x000020, "Member 'BP_JigMultiplayer_C_FixUpReferences::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, Temp_int_Variable_2) == 0x00002C, "Member 'BP_JigMultiplayer_C_FixUpReferences::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_RemoveGetInfo_ItemInfo) == 0x000030, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_RemoveGetInfo_RepContainers) == 0x000108, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000118, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_RemoveGetInfo_CountRemoved_) == 0x00011C, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000120, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000124, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_BooleanAND_ReturnValue) == 0x000125, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000126, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00012C, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000130, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_Add_IntInt_ReturnValue_2) == 0x000134, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_BooleanAND_ReturnValue_1) == 0x000138, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000139, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FixUpReferences, CallFunc_BooleanAND_ReturnValue_2) == 0x00013A, "Member 'BP_JigMultiplayer_C_FixUpReferences::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FuncHandleCraftingTimers
// 0x0078 (0x0078 - 0x0000)
struct BP_JigMultiplayer_C_FuncHandleCraftingTimers final
{
public:
	TArray<struct FContainerPickupsInfo>          DoneItems;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FuncHandleCraftingTimers) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FuncHandleCraftingTimers");
static_assert(sizeof(BP_JigMultiplayer_C_FuncHandleCraftingTimers) == 0x000078, "Wrong size on BP_JigMultiplayer_C_FuncHandleCraftingTimers");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, DoneItems) == 0x000000, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::DoneItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Index_0) == 0x000010, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Temp_bool_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Temp_bool_Variable_1) == 0x000021, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000029, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Temp_real_Variable) == 0x000040, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000051, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, Temp_int_Variable_2) == 0x000054, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00005C, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_BooleanAND_ReturnValue_1) == 0x000065, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000066, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000068, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleCraftingTimers, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_FuncHandleCraftingTimers::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.FuncHandleStackResponse
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_FuncHandleStackResponse final
{
public:
	struct FGuid                                  DroppedUID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropNewCount;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RecUID;                                            // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecNewCount;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_FindItemByUID_Found;                      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_FindItemByUID_Found_1;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateCount_Count;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromJSIParent_Removed;              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed_1;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateCount_Count_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_FuncHandleStackResponse) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_FuncHandleStackResponse");
static_assert(sizeof(BP_JigMultiplayer_C_FuncHandleStackResponse) == 0x000050, "Wrong size on BP_JigMultiplayer_C_FuncHandleStackResponse");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, DroppedUID) == 0x000000, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::DroppedUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, DropNewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::DropNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, RecUID) == 0x000014, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::RecUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, RecNewCount) == 0x000024, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::RecNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_FindItemByUID_Found) == 0x000028, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_FindItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_FindItemByUID_Found_1) == 0x000030, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_FindItemByUID_Found_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_UpdateCount_Count) == 0x000038, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_RemoveFromJSIParent_Removed) == 0x00003D, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_RemoveFromJSIParent_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_IsValid_ReturnValue_1) == 0x00003E, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_RemoveRequestByUID_Removed) == 0x00003F, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_RemoveRequestByUID_Removed_1) == 0x000040, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_RemoveRequestByUID_Removed_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_UpdateCount_Count_1) == 0x000044, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_UpdateCount_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_FuncHandleStackResponse, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_FuncHandleStackResponse::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Generate_AddNewItemToContainer
// 0x0328 (0x0328 - 0x0000)
struct BP_JigMultiplayer_C_Generate_AddNewItemToContainer final
{
public:
	struct FGuid                                  ToContainerUID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  AddedItemInfo;                                     // 0x0020(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Added_;                                            // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  NewItem;                                           // 0x0100(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomContainerItem                   K2Node_MakeStruct_RandomContainerItem;             // 0x01E8(0x0058)(HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_TryAddNewItem_AddedItemInfo;              // 0x0240(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Added_;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Stacked_;                   // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31B[0x1];                                      // 0x031B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Generate_AddNewItemToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer) == 0x000328, "Wrong size on BP_JigMultiplayer_C_Generate_AddNewItemToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, ToContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, ItemId) == 0x000010, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::ItemId' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, Count) == 0x000018, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, AddedItemInfo) == 0x000020, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, Added_) == 0x0000F8, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, NewItem) == 0x000100, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, Temp_bool_Variable) == 0x0001D8, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, Temp_int_Variable) == 0x0001DC, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x0001E4, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, K2Node_MakeStruct_RandomContainerItem) == 0x0001E8, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::K2Node_MakeStruct_RandomContainerItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_TryAddNewItem_AddedItemInfo) == 0x000240, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_TryAddNewItem_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_TryAddNewItem_Added_) == 0x000318, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_TryAddNewItem_Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_TryAddNewItem_Stacked_) == 0x000319, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_TryAddNewItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00031A, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x00031C, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000320, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Generate_AddNewItemToContainer, CallFunc_BooleanAND_ReturnValue) == 0x000321, "Member 'BP_JigMultiplayer_C_Generate_AddNewItemToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GenerateRandomStats
// 0x0158 (0x0158 - 0x0000)
struct BP_JigMultiplayer_C_GenerateRandomStats final
{
public:
	struct FS_RandomStatsConfig                   RandomConfig;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<struct FS_ItemStat>                    DTStats;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_ItemStat>                    Stats;                                             // 0x0028(0x0010)(Parm, OutParm)
	double                                        RollMax;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RollMin;                                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemStat>                    NewStats;                                          // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemStat                            K2Node_MakeStruct_S_ItemStat;                      // 0x0070(0x0028)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemStat                            Temp_struct_Variable;                              // 0x00E0(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemStat                            K2Node_MakeStruct_S_ItemStat_1;                    // 0x0120(0x0028)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GenerateRandomStats) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GenerateRandomStats");
static_assert(sizeof(BP_JigMultiplayer_C_GenerateRandomStats) == 0x000158, "Wrong size on BP_JigMultiplayer_C_GenerateRandomStats");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, RandomConfig) == 0x000000, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::RandomConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, DTStats) == 0x000018, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::DTStats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, Stats) == 0x000028, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, RollMax) == 0x000038, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::RollMax' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, RollMin) == 0x000040, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::RollMin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, NewStats) == 0x000048, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::NewStats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00005C, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000060, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, Temp_int_Variable) == 0x000064, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, K2Node_MakeStruct_S_ItemStat) == 0x000070, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::K2Node_MakeStruct_S_ItemStat' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_RandomFloatInRange_ReturnValue) == 0x000098, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000A0, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, Temp_bool_Variable) == 0x0000A9, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_FTrunc_ReturnValue) == 0x0000AC, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, Temp_bool_Variable_1) == 0x0000C1, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_FTrunc_ReturnValue_1) == 0x0000C4, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, Temp_int_Variable_1) == 0x0000D4, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_BooleanAND_ReturnValue_1) == 0x0000DD, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, Temp_struct_Variable) == 0x0000E0, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_Add_ReturnValue_1) == 0x000108, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_SelectFloat_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, K2Node_MakeStruct_S_ItemStat_1) == 0x000120, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::K2Node_MakeStruct_S_ItemStat_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000148, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_Array_Add_ReturnValue_2) == 0x000150, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GenerateRandomStats, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000154, "Member 'BP_JigMultiplayer_C_GenerateRandomStats::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Get Index From CraftingArr
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_Get_Index_From_CraftingArr final
{
public:
	TArray<struct FRepItemInfo>                   Arr;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UJigsawItem_DataAsset_C*                ID;                                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Get_Index_From_CraftingArr");
static_assert(sizeof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr) == 0x000038, "Wrong size on BP_JigMultiplayer_C_Get_Index_From_CraftingArr");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, Arr) == 0x000000, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::Arr' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, ID) == 0x000010, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::ID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, Array_Index) == 0x000018, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::Array_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, Temp_int_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002D, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002E, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Get_Index_From_CraftingArr, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'BP_JigMultiplayer_C_Get_Index_From_CraftingArr::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetAllContainerByItemUID
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_GetAllContainerByItemUID final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     ContainersRef;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetAllContainerByItemUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetAllContainerByItemUID");
static_assert(sizeof(BP_JigMultiplayer_C_GetAllContainerByItemUID) == 0x000040, "Wrong size on BP_JigMultiplayer_C_GetAllContainerByItemUID");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, ContainersRef) == 0x000010, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::ContainersRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, Temp_int_Variable_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000039, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00003A, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainerByItemUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetAllContainerByItemUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetAllContainersOfUID
// 0x0068 (0x0068 - 0x0000)
struct BP_JigMultiplayer_C_GetAllContainersOfUID final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          ListFound;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetAllContainersOfUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetAllContainersOfUID");
static_assert(sizeof(BP_JigMultiplayer_C_GetAllContainersOfUID) == 0x000068, "Wrong size on BP_JigMultiplayer_C_GetAllContainersOfUID");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, ListFound) == 0x000010, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::ListFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, Temp_int_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, Temp_bool_Variable_1) == 0x00002D, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002E, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, Temp_int_Variable_1) == 0x000030, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, Temp_int_Variable_2) == 0x000038, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, Temp_bool_Variable_2) == 0x000040, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x000041, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Array_LastIndex_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000052, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000054, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00005C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000061, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUID, CallFunc_BooleanAND_ReturnValue_2) == 0x000062, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetAllContainersOfUIDCustom
// 0x0078 (0x0078 - 0x0000)
struct BP_JigMultiplayer_C_GetAllContainersOfUIDCustom final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          ListFound;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_ReplicatedContainerInfo>     Containers;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetAllContainersOfUIDCustom");
static_assert(sizeof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom) == 0x000078, "Wrong size on BP_JigMultiplayer_C_GetAllContainersOfUIDCustom");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, ListFound) == 0x000010, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::ListFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Containers) == 0x000020, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Temp_bool_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Temp_int_Variable) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Temp_bool_Variable_1) == 0x000049, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004A, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Temp_int_Variable_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Temp_int_Variable_2) == 0x000058, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00005C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, Temp_bool_Variable_2) == 0x000065, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Not_PreBool_ReturnValue_2) == 0x000066, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000067, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_BooleanAND_ReturnValue_1) == 0x000068, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000070, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000074, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllContainersOfUIDCustom, CallFunc_BooleanAND_ReturnValue_2) == 0x000075, "Member 'BP_JigMultiplayer_C_GetAllContainersOfUIDCustom::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetAllItemsSellPrice
// 0x0148 (0x0148 - 0x0000)
struct BP_JigMultiplayer_C_GetAllItemsSellPrice final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x00D8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Price;                                             // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FinalPrice;                                        // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetAllItemsSellPrice) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetAllItemsSellPrice");
static_assert(sizeof(BP_JigMultiplayer_C_GetAllItemsSellPrice) == 0x000148, "Wrong size on BP_JigMultiplayer_C_GetAllItemsSellPrice");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, Amount) == 0x0000D8, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, Price) == 0x0000E0, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::Price' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, UID) == 0x0000E8, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, FinalPrice) == 0x0000F8, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::FinalPrice' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_BreakVector2D_X) == 0x000100, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_BreakVector2D_Y) == 0x000108, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000111, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_SelectInt_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_NormalizeToRange_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_FTrunc_ReturnValue) == 0x000128, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000130, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_SelectFloat_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetAllItemsSellPrice, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000140, "Member 'BP_JigMultiplayer_C_GetAllItemsSellPrice::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetCapacity
// 0x0034 (0x0034 - 0x0000)
struct BP_JigMultiplayer_C_GetCapacity final
{
public:
	int32                                         Output_Get;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetCapacity) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetCapacity");
static_assert(sizeof(BP_JigMultiplayer_C_GetCapacity) == 0x000034, "Wrong size on BP_JigMultiplayer_C_GetCapacity");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, Output_Get) == 0x000000, "Member 'BP_JigMultiplayer_C_GetCapacity::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, Num) == 0x000004, "Member 'BP_JigMultiplayer_C_GetCapacity::Num' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, Temp_bool_Variable) == 0x000008, "Member 'BP_JigMultiplayer_C_GetCapacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, Temp_int_Variable) == 0x00000C, "Member 'BP_JigMultiplayer_C_GetCapacity::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, Temp_bool_Variable_1) == 0x000014, "Member 'BP_JigMultiplayer_C_GetCapacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Not_PreBool_ReturnValue_1) == 0x000015, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, Temp_int_Variable_1) == 0x000018, "Member 'BP_JigMultiplayer_C_GetCapacity::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000024, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCapacity, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_JigMultiplayer_C_GetCapacity::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetColumnRowBySlotIndex
// 0x0024 (0x0024 - 0x0000)
struct BP_JigMultiplayer_C_GetColumnRowBySlotIndex final
{
public:
	int32                                         NumOfColumns;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempRow;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempColumn;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetColumnRowBySlotIndex");
static_assert(sizeof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex) == 0x000024, "Wrong size on BP_JigMultiplayer_C_GetColumnRowBySlotIndex");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, NumOfColumns) == 0x000000, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::NumOfColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, SlotIndex) == 0x000004, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, Column) == 0x000008, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::Column' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, Row) == 0x00000C, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::Row' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, TempRow) == 0x000010, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::TempRow' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, TempColumn) == 0x000014, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::TempColumn' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetColumnRowBySlotIndex, CallFunc_Divide_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_GetColumnRowBySlotIndex::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetContainerDimensions
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_GetContainerDimensions final
{
public:
	class UJigsawItem_DataAsset_C*                Asset;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      SpecialContainerDemensions;                        // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_JigMultiplayer_C_GetContainerDimensions) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetContainerDimensions");
static_assert(sizeof(BP_JigMultiplayer_C_GetContainerDimensions) == 0x000018, "Wrong size on BP_JigMultiplayer_C_GetContainerDimensions");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerDimensions, Asset) == 0x000000, "Member 'BP_JigMultiplayer_C_GetContainerDimensions::Asset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerDimensions, SpecialContainerDemensions) == 0x000008, "Member 'BP_JigMultiplayer_C_GetContainerDimensions::SpecialContainerDemensions' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetContainerIndex
// 0x0060 (0x0060 - 0x0000)
struct BP_JigMultiplayer_C_GetContainerIndex final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetContainerIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetContainerIndex");
static_assert(sizeof(BP_JigMultiplayer_C_GetContainerIndex) == 0x000060, "Wrong size on BP_JigMultiplayer_C_GetContainerIndex");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, ItemRef) == 0x000000, "Member 'BP_JigMultiplayer_C_GetContainerIndex::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, Index_0) == 0x000008, "Member 'BP_JigMultiplayer_C_GetContainerIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_GetContainerOneRef_ContainerRef) == 0x000010, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_GetContainerIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000020, "Member 'BP_JigMultiplayer_C_GetContainerIndex::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_JigMultiplayer_C_GetContainerIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_GetListOfContainers_Containers) == 0x000038, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, Temp_int_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_GetContainerIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerIndex, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'BP_JigMultiplayer_C_GetContainerIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetContainerItemByInContainerIndex
// 0x0118 (0x0118 - 0x0000)
struct BP_JigMultiplayer_C_GetContainerItemByInContainerIndex final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  FoundItem;                                         // 0x0018(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetContainerItemByInContainerIndex");
static_assert(sizeof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex) == 0x000118, "Wrong size on BP_JigMultiplayer_C_GetContainerItemByInContainerIndex");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, ContainerIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, Found_) == 0x000014, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, FoundItem) == 0x000018, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::FoundItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, Temp_int_Variable) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, Temp_bool_Variable) == 0x0000F8, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_Not_PreBool_ReturnValue) == 0x0000F9, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, Temp_bool_Variable_1) == 0x0000FA, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FB, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, Temp_int_Variable_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00010C, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000111, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x000112, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItemByInContainerIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000113, "Member 'BP_JigMultiplayer_C_GetContainerItemByInContainerIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetContainerItems
// 0x0080 (0x0080 - 0x0000)
struct BP_JigMultiplayer_C_GetContainerItems final
{
public:
	bool                                          RemoveExcluded_;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          AllItems;                                          // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FGuid>                          AllExcludedContainers;                             // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FContainerPickupsInfo>          Result;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetMainContainerUIDByIndex_UID;           // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMainContainerUIDByIndex_ContainerIndex; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetContainerItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetContainerItems");
static_assert(sizeof(BP_JigMultiplayer_C_GetContainerItems) == 0x000080, "Wrong size on BP_JigMultiplayer_C_GetContainerItems");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, RemoveExcluded_) == 0x000000, "Member 'BP_JigMultiplayer_C_GetContainerItems::RemoveExcluded_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, AllItems) == 0x000008, "Member 'BP_JigMultiplayer_C_GetContainerItems::AllItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, AllExcludedContainers) == 0x000018, "Member 'BP_JigMultiplayer_C_GetContainerItems::AllExcludedContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, Result) == 0x000028, "Member 'BP_JigMultiplayer_C_GetContainerItems::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, Temp_bool_Variable) == 0x000038, "Member 'BP_JigMultiplayer_C_GetContainerItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, Temp_int_Variable) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetContainerItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Array_LastIndex_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_GetMainContainerUIDByIndex_UID) == 0x00004C, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_GetMainContainerUIDByIndex_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_GetMainContainerUIDByIndex_ContainerIndex) == 0x00005C, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_GetMainContainerUIDByIndex_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_IsValid_Guid_ReturnValue) == 0x000061, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, Temp_bool_Variable_1) == 0x000062, "Member 'BP_JigMultiplayer_C_GetContainerItems::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Not_PreBool_ReturnValue_1) == 0x000063, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, Temp_int_Variable_1) == 0x000064, "Member 'BP_JigMultiplayer_C_GetContainerItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000074, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000079, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Array_Contains_ReturnValue) == 0x00007A, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerItems, CallFunc_Not_PreBool_ReturnValue_2) == 0x00007B, "Member 'BP_JigMultiplayer_C_GetContainerItems::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetContainerNameByUID
// 0x0024 (0x0024 - 0x0000)
struct BP_JigMultiplayer_C_GetContainerNameByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetContainerNameByUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetContainerNameByUID");
static_assert(sizeof(BP_JigMultiplayer_C_GetContainerNameByUID) == 0x000024, "Wrong size on BP_JigMultiplayer_C_GetContainerNameByUID");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerNameByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetContainerNameByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerNameByUID, ContainerName) == 0x000010, "Member 'BP_JigMultiplayer_C_GetContainerNameByUID::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerNameByUID, Index_0) == 0x000018, "Member 'BP_JigMultiplayer_C_GetContainerNameByUID::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerNameByUID, CallFunc_Array_Find_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetContainerNameByUID::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetContainerNameByUID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_GetContainerNameByUID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetCurrencyFromDT
// 0x0258 (0x0258 - 0x0000)
struct BP_JigMultiplayer_C_GetCurrencyFromDT final
{
public:
	double                                        Price;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                Asset;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxStack;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  Currency;                                          // 0x0018(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x0108(0x0078)(HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x0180(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetCurrencyFromDT) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetCurrencyFromDT");
static_assert(sizeof(BP_JigMultiplayer_C_GetCurrencyFromDT) == 0x000258, "Wrong size on BP_JigMultiplayer_C_GetCurrencyFromDT");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, Price) == 0x000000, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::Price' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, Asset) == 0x000008, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::Asset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, Found) == 0x000010, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, MaxStack) == 0x000014, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, Currency) == 0x000018, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::Currency' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, CallFunc_GetUniqueID_UID) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, CallFunc_FTrunc_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, CallFunc_Max_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, K2Node_MakeStruct_RepItemInfo) == 0x000108, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetCurrencyFromDT, K2Node_MakeStruct_ContainerPickupsInfo) == 0x000180, "Member 'BP_JigMultiplayer_C_GetCurrencyFromDT::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetDurability
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_GetDurability final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDur;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetDurability) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetDurability");
static_assert(sizeof(BP_JigMultiplayer_C_GetDurability) == 0x000050, "Wrong size on BP_JigMultiplayer_C_GetDurability");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetDurability::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, NewDur) == 0x000010, "Member 'BP_JigMultiplayer_C_GetDurability::NewDur' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_GetDurability::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_GetDurability::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, Temp_bool_Variable_1) == 0x000022, "Member 'BP_JigMultiplayer_C_GetDurability::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_GetDurability::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000049, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetDurability, CallFunc_BooleanAND_ReturnValue_1) == 0x00004B, "Member 'BP_JigMultiplayer_C_GetDurability::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetEmptySlot
// 0x0110 (0x0110 - 0x0000)
struct BP_JigMultiplayer_C_GetEmptySlot final
{
public:
	struct FS_ReplicatedContainerInfo             RepContainer;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector2D                              ItemVec;                                           // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRows;                                         // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfColumns;                                      // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerSlots                      FoundSlot;                                         // 0x0070(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreScan;                                        // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentIndex;                                      // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotVY;                                            // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotVX;                                            // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue;      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_1;               // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetEmptySlot) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetEmptySlot");
static_assert(sizeof(BP_JigMultiplayer_C_GetEmptySlot) == 0x000110, "Wrong size on BP_JigMultiplayer_C_GetEmptySlot");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, RepContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_GetEmptySlot::RepContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, ItemVec) == 0x000050, "Member 'BP_JigMultiplayer_C_GetEmptySlot::ItemVec' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Found) == 0x000060, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Index_0) == 0x000064, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, NumOfRows) == 0x000068, "Member 'BP_JigMultiplayer_C_GetEmptySlot::NumOfRows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, NumOfColumns) == 0x00006C, "Member 'BP_JigMultiplayer_C_GetEmptySlot::NumOfColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, FoundSlot) == 0x000070, "Member 'BP_JigMultiplayer_C_GetEmptySlot::FoundSlot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, IgnoreScan) == 0x000090, "Member 'BP_JigMultiplayer_C_GetEmptySlot::IgnoreScan' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CurrentIndex) == 0x000094, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, SlotVY) == 0x000098, "Member 'BP_JigMultiplayer_C_GetEmptySlot::SlotVY' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, SlotVX) == 0x00009C, "Member 'BP_JigMultiplayer_C_GetEmptySlot::SlotVX' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_FTrunc_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_FTrunc_ReturnValue_1) == 0x0000BC, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Temp_bool_Variable) == 0x0000C0, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Temp_int_Variable) == 0x0000C4, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Temp_int_Variable_1) == 0x0000D0, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Temp_bool_Variable_1) == 0x0000DC, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DD, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, Temp_int_Variable_2) == 0x0000E0, "Member 'BP_JigMultiplayer_C_GetEmptySlot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_GetSlotIndexByColumnRow_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_GetSlotIndexByColumnRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000FC, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_IsValid_Guid_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x000101, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000102, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_1) == 0x000103, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_5) == 0x000104, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_6) == 0x000108, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00010C, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x00010D, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlot, CallFunc_IsValid_Guid_ReturnValue_1) == 0x00010E, "Member 'BP_JigMultiplayer_C_GetEmptySlot::CallFunc_IsValid_Guid_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetEmptySlotTryRotated
// 0x00D0 (0x00D0 - 0x0000)
struct BP_JigMultiplayer_C_GetEmptySlotTryRotated final
{
public:
	struct FS_ReplicatedContainerInfo             RepContainer;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector2D                              ItemVec;                                           // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumOfColumns;                                      // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerSlots                      FoundSlot;                                         // 0x0070(0x0020)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreScan;                                        // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentIndex;                                      // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotVY;                                            // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotVX;                                            // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_Index;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_Index_1;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetEmptySlotTryRotated) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetEmptySlotTryRotated");
static_assert(sizeof(BP_JigMultiplayer_C_GetEmptySlotTryRotated) == 0x0000D0, "Wrong size on BP_JigMultiplayer_C_GetEmptySlotTryRotated");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, RepContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::RepContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, ItemVec) == 0x000050, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::ItemVec' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, Found) == 0x000060, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, Index_0) == 0x000064, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, Rotated_) == 0x000068, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, NumOfColumns) == 0x00006C, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::NumOfColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, FoundSlot) == 0x000070, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::FoundSlot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, IgnoreScan) == 0x000090, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::IgnoreScan' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CurrentIndex) == 0x000094, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, SlotVY) == 0x000098, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::SlotVY' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, SlotVX) == 0x00009C, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::SlotVX' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_GetEmptySlot_Found) == 0x0000A0, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_GetEmptySlot_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_GetEmptySlot_Index) == 0x0000A4, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_GetEmptySlot_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_BreakVector2D_X) == 0x0000A8, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_BreakVector2D_Y) == 0x0000B0, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_MakeVector2D_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_GetEmptySlot_Found_1) == 0x0000C8, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_GetEmptySlot_Found_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEmptySlotTryRotated, CallFunc_GetEmptySlot_Index_1) == 0x0000CC, "Member 'BP_JigMultiplayer_C_GetEmptySlotTryRotated::CallFunc_GetEmptySlot_Index_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetEquippedItemByContainerUID
// 0x0120 (0x0120 - 0x0000)
struct BP_JigMultiplayer_C_GetEquippedItemByContainerUID final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyItems;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipTo;                                         // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  Info;                                              // 0x0018(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetEquippedItemByContainerUID");
static_assert(sizeof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID) == 0x000120, "Wrong size on BP_JigMultiplayer_C_GetEquippedItemByContainerUID");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, OnlyItems) == 0x000010, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::OnlyItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, Found_) == 0x000011, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, IsEquipTo) == 0x000012, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::IsEquipTo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, Info) == 0x000018, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, Temp_int_Variable) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Not_PreBool_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, Temp_bool_Variable) == 0x0000FC, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, Temp_bool_Variable_1) == 0x0000FD, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FE, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000FF, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, Temp_int_Variable_1) == 0x000100, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_BooleanAND_ReturnValue) == 0x00010D, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000115, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000116, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000117, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000118, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetEquippedItemByContainerUID, CallFunc_BooleanAND_ReturnValue_2) == 0x000119, "Member 'BP_JigMultiplayer_C_GetEquippedItemByContainerUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetHostingSlots
// 0x00D0 (0x00D0 - 0x0000)
struct BP_JigMultiplayer_C_GetHostingSlots final
{
public:
	int32                                         NumOfColumns;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ItemVec;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRows;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Indexes;                                           // 0x0020(0x0010)(Parm, OutParm)
	int32                                         StartingRow;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingCol;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 HostingSlots;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Column;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetColumnRowBySlotIndex_Row;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexByColumnRow_ReturnValue;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetHostingSlots) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetHostingSlots");
static_assert(sizeof(BP_JigMultiplayer_C_GetHostingSlots) == 0x0000D0, "Wrong size on BP_JigMultiplayer_C_GetHostingSlots");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, NumOfColumns) == 0x000000, "Member 'BP_JigMultiplayer_C_GetHostingSlots::NumOfColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, SlotIndex) == 0x000004, "Member 'BP_JigMultiplayer_C_GetHostingSlots::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, ItemVec) == 0x000008, "Member 'BP_JigMultiplayer_C_GetHostingSlots::ItemVec' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, NumOfRows) == 0x000018, "Member 'BP_JigMultiplayer_C_GetHostingSlots::NumOfRows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, Indexes) == 0x000020, "Member 'BP_JigMultiplayer_C_GetHostingSlots::Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, StartingRow) == 0x000030, "Member 'BP_JigMultiplayer_C_GetHostingSlots::StartingRow' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, StartingCol) == 0x000034, "Member 'BP_JigMultiplayer_C_GetHostingSlots::StartingCol' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, Y) == 0x000038, "Member 'BP_JigMultiplayer_C_GetHostingSlots::Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, X) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetHostingSlots::X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, HostingSlots) == 0x000040, "Member 'BP_JigMultiplayer_C_GetHostingSlots::HostingSlots' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, Temp_int_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_GetHostingSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_BreakVector2D_X) == 0x000058, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_FTrunc_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_FTrunc_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_GetColumnRowBySlotIndex_Column) == 0x000074, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_GetColumnRowBySlotIndex_Column' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_GetColumnRowBySlotIndex_Row) == 0x000078, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_GetColumnRowBySlotIndex_Row' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_JigMultiplayer_C_GetHostingSlots::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, Temp_int_Variable_1) == 0x000098, "Member 'BP_JigMultiplayer_C_GetHostingSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_GetSlotIndexByColumnRow_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_GetSlotIndexByColumnRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B0, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000BC, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000C4, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000C8, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_BooleanOR_ReturnValue) == 0x0000CD, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetHostingSlots, CallFunc_Not_PreBool_ReturnValue) == 0x0000CE, "Member 'BP_JigMultiplayer_C_GetHostingSlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetInventoryWeightByMainContainerName
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weight;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName");
static_assert(sizeof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName) == 0x000028, "Wrong size on BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, Name_0) == 0x000000, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, Weight) == 0x000008, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::Weight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000026, "Member 'BP_JigMultiplayer_C_GetInventoryWeightByMainContainerName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetInventoryWidgetReference
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_GetInventoryWidgetReference final
{
public:
	class UUserWidget*                            InventoryWidgetRef_0;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible_;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vis;                                               // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetInventoryWidgetReference) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetInventoryWidgetReference");
static_assert(sizeof(BP_JigMultiplayer_C_GetInventoryWidgetReference) == 0x000010, "Wrong size on BP_JigMultiplayer_C_GetInventoryWidgetReference");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWidgetReference, InventoryWidgetRef_0) == 0x000000, "Member 'BP_JigMultiplayer_C_GetInventoryWidgetReference::InventoryWidgetRef_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWidgetReference, IsVisible_) == 0x000008, "Member 'BP_JigMultiplayer_C_GetInventoryWidgetReference::IsVisible_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWidgetReference, Vis) == 0x000009, "Member 'BP_JigMultiplayer_C_GetInventoryWidgetReference::Vis' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWidgetReference, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_JigMultiplayer_C_GetInventoryWidgetReference::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetInventoryWidgetReference, CallFunc_IsVisible_ReturnValue) == 0x00000B, "Member 'BP_JigMultiplayer_C_GetInventoryWidgetReference::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetItemByUID
// 0x0118 (0x0118 - 0x0000)
struct BP_JigMultiplayer_C_GetItemByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  Item;                                              // 0x0010(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMainContainer_;                                  // 0x00E9(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetItemByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetItemByUID");
static_assert(sizeof(BP_JigMultiplayer_C_GetItemByUID) == 0x000118, "Wrong size on BP_JigMultiplayer_C_GetItemByUID");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetItemByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, Item) == 0x000010, "Member 'BP_JigMultiplayer_C_GetItemByUID::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, Found) == 0x0000E8, "Member 'BP_JigMultiplayer_C_GetItemByUID::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, InMainContainer_) == 0x0000E9, "Member 'BP_JigMultiplayer_C_GetItemByUID::InMainContainer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, Temp_int_Variable) == 0x0000EC, "Member 'BP_JigMultiplayer_C_GetItemByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, Temp_bool_Variable) == 0x0000F4, "Member 'BP_JigMultiplayer_C_GetItemByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Not_PreBool_ReturnValue) == 0x0000F5, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, Temp_int_Variable_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_GetItemByUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, Temp_bool_Variable_1) == 0x000100, "Member 'BP_JigMultiplayer_C_GetItemByUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000101, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_IsVendor_ReturnValue) == 0x000102, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00010A, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00010B, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_BooleanAND_ReturnValue_1) == 0x00010C, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_Array_Contains_ReturnValue) == 0x000115, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetItemByUID, CallFunc_BooleanAND_ReturnValue_2) == 0x000116, "Member 'BP_JigMultiplayer_C_GetItemByUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetListOfAttachments
// 0x00C0 (0x00C0 - 0x0000)
struct BP_JigMultiplayer_C_GetListOfAttachments final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_RepAttachmentInfo>           Attachments;                                       // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FS_ReplicatedContainerInfo>     TempContainers;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_RepAttachmentInfo>           FoundAttachments;                                  // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RepAttachmentInfo                   K2Node_MakeStruct_S_RepAttachmentInfo;             // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetListOfAttachments) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetListOfAttachments");
static_assert(sizeof(BP_JigMultiplayer_C_GetListOfAttachments) == 0x0000C0, "Wrong size on BP_JigMultiplayer_C_GetListOfAttachments");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, Attachments) == 0x000010, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::Attachments' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, TempContainers) == 0x000020, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::TempContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, FoundAttachments) == 0x000030, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::FoundAttachments' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, Temp_int_Variable) == 0x000040, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, Temp_bool_Variable) == 0x000048, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, Temp_int_Variable_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, Temp_bool_Variable_1) == 0x000054, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Not_PreBool_ReturnValue_1) == 0x000055, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, K2Node_MakeStruct_S_RepAttachmentInfo) == 0x000068, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::K2Node_MakeStruct_S_RepAttachmentInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetListOfAttachments, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_GetListOfAttachments::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetLocalComp
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_GetLocalComp final
{
public:
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetLocalComp) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetLocalComp");
static_assert(sizeof(BP_JigMultiplayer_C_GetLocalComp) == 0x000058, "Wrong size on BP_JigMultiplayer_C_GetLocalComp");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, JigComp) == 0x000000, "Member 'BP_JigMultiplayer_C_GetLocalComp::JigComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetPlayerController_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000051, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetLocalComp, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'BP_JigMultiplayer_C_GetLocalComp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetMainContainerUIDByIndex
// 0x0044 (0x0044 - 0x0000)
struct BP_JigMultiplayer_C_GetMainContainerUIDByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerIndex;                                    // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetMainContainerUIDByIndex");
static_assert(sizeof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex) == 0x000044, "Wrong size on BP_JigMultiplayer_C_GetMainContainerUIDByIndex");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, Index_0) == 0x000000, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, UID) == 0x000004, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, ContainerIndex) == 0x000014, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CurrentIndex) == 0x000018, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, Temp_bool_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000042, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetMainContainerUIDByName
// 0x0048 (0x0048 - 0x0000)
struct BP_JigMultiplayer_C_GetMainContainerUIDByName final
{
public:
	class FName                                   ContainerName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipTo_;                                        // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetMainContainerUIDByIndex_UID;           // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMainContainerUIDByIndex_ContainerIndex; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetMainContainerUIDByName) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetMainContainerUIDByName");
static_assert(sizeof(BP_JigMultiplayer_C_GetMainContainerUIDByName) == 0x000048, "Wrong size on BP_JigMultiplayer_C_GetMainContainerUIDByName");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, ContainerName) == 0x000000, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, UID) == 0x000008, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, Index_0) == 0x000018, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, Found_) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, IsEquipTo_) == 0x00001D, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::IsEquipTo_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, Temp_bool_Variable) == 0x00001E, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_GetMainContainerUIDByIndex_UID) == 0x000024, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_GetMainContainerUIDByIndex_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_GetMainContainerUIDByIndex_ContainerIndex) == 0x000034, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_GetMainContainerUIDByIndex_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_Less_IntInt_ReturnValue) == 0x000046, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDByName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000047, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDByName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetMainContainerUIDS
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_GetMainContainerUIDS final
{
public:
	TArray<struct FGuid>                          UIDs;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_JigMultiplayer_C_GetMainContainerUIDS) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetMainContainerUIDS");
static_assert(sizeof(BP_JigMultiplayer_C_GetMainContainerUIDS) == 0x000020, "Wrong size on BP_JigMultiplayer_C_GetMainContainerUIDS");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDS, UIDs) == 0x000000, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDS::UIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetMainContainerUIDS, Result) == 0x000010, "Member 'BP_JigMultiplayer_C_GetMainContainerUIDS::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetParentItemByContainerUID
// 0x0128 (0x0128 - 0x0000)
struct BP_JigMultiplayer_C_GetParentItemByContainerUID final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  Array_Element;                                     // 0x0010(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117[0x1];                                      // 0x0117(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetParentItemByContainerUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetParentItemByContainerUID");
static_assert(sizeof(BP_JigMultiplayer_C_GetParentItemByContainerUID) == 0x000128, "Wrong size on BP_JigMultiplayer_C_GetParentItemByContainerUID");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Array_Element) == 0x000010, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Found) == 0x0000E8, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Temp_bool_Variable) == 0x0000E9, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Temp_bool_Variable_1) == 0x0000EA, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Not_PreBool_ReturnValue) == 0x0000EB, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Temp_int_Variable) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Temp_bool_Variable_2) == 0x0000F8, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F9, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Temp_int_Variable_1) == 0x0000FC, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, Temp_int_Variable_2) == 0x000100, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Add_IntInt_ReturnValue_2) == 0x000108, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00010C, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000114, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000115, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_BooleanAND_ReturnValue) == 0x000116, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000118, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000120, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000124, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000125, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetParentItemByContainerUID, CallFunc_BooleanAND_ReturnValue_2) == 0x000126, "Member 'BP_JigMultiplayer_C_GetParentItemByContainerUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetPickupInfoFromDT
// 0x0250 (0x0250 - 0x0000)
struct BP_JigMultiplayer_C_GetPickupInfoFromDT final
{
public:
	class UJigsawItem_DataAsset_C*                ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ContainerPickupsInfo;                              // 0x0010(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x00E8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x0100(0x0078)(HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x0178(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetPickupInfoFromDT) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetPickupInfoFromDT");
static_assert(sizeof(BP_JigMultiplayer_C_GetPickupInfoFromDT) == 0x000250, "Wrong size on BP_JigMultiplayer_C_GetPickupInfoFromDT");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, ID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::ID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, Count) == 0x000008, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, ContainerPickupsInfo) == 0x000010, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, Found) == 0x0000E8, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, CallFunc_MakeVector2D_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, K2Node_MakeStruct_RepItemInfo) == 0x000100, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetPickupInfoFromDT, K2Node_MakeStruct_ContainerPickupsInfo) == 0x000178, "Member 'BP_JigMultiplayer_C_GetPickupInfoFromDT::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetSearchableContainers
// 0x00C8 (0x00C8 - 0x0000)
struct BP_JigMultiplayer_C_GetSearchableContainers final
{
public:
	TArray<class UJSIContainer_C*>                Result;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                NonAdd;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetSearchableContainers) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetSearchableContainers");
static_assert(sizeof(BP_JigMultiplayer_C_GetSearchableContainers) == 0x0000C8, "Wrong size on BP_JigMultiplayer_C_GetSearchableContainers");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, NonAdd) == 0x000010, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::NonAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, Containers) == 0x000020, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_IsValid_ReturnValue) == 0x00004A, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_GetEquippedItemRef_Found_) == 0x00004B, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_GetEquippedItemRef_ItemRef) == 0x000050, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_GetEquippedItemRef_IsPending) == 0x000058, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_IsEquipTo__ReturnValue) == 0x000059, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_IsItemPending__IsPending) == 0x00005A, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005B, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_GetContainerOneRef_ContainerRef) == 0x000060, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000068, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_GetListOfContainers_Containers) == 0x000080, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000098, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_GetListOfNonAddContainers_Containers) == 0x0000B0, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSearchableContainers, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_GetSearchableContainers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetSlotIndexByColumnRow
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_GetSlotIndexByColumnRow final
{
public:
	int32                                         NumOfColumns;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetSlotIndexByColumnRow");
static_assert(sizeof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow) == 0x000020, "Wrong size on BP_JigMultiplayer_C_GetSlotIndexByColumnRow");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, NumOfColumns) == 0x000000, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::NumOfColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, Column) == 0x000004, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::Column' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, Row) == 0x000008, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::Row' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSlotIndexByColumnRow, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetSlotIndexByColumnRow::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetSubContainers
// 0x0090 (0x0090 - 0x0000)
struct BP_JigMultiplayer_C_GetSubContainers final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     RepContainerRef;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FGuid>                          UIDList;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 IndexList;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          SkipCapacity_;                                     // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Indexes;                                           // 0x0048(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetSubContainers) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetSubContainers");
static_assert(sizeof(BP_JigMultiplayer_C_GetSubContainers) == 0x000090, "Wrong size on BP_JigMultiplayer_C_GetSubContainers");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetSubContainers::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, RepContainerRef) == 0x000010, "Member 'BP_JigMultiplayer_C_GetSubContainers::RepContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, UIDList) == 0x000020, "Member 'BP_JigMultiplayer_C_GetSubContainers::UIDList' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, IndexList) == 0x000030, "Member 'BP_JigMultiplayer_C_GetSubContainers::IndexList' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, SkipCapacity_) == 0x000040, "Member 'BP_JigMultiplayer_C_GetSubContainers::SkipCapacity_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, Indexes) == 0x000048, "Member 'BP_JigMultiplayer_C_GetSubContainers::Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, Temp_bool_Variable) == 0x000058, "Member 'BP_JigMultiplayer_C_GetSubContainers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, Temp_int_Variable) == 0x00005C, "Member 'BP_JigMultiplayer_C_GetSubContainers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, Temp_int_Variable_1) == 0x000064, "Member 'BP_JigMultiplayer_C_GetSubContainers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, Temp_bool_Variable_1) == 0x000070, "Member 'BP_JigMultiplayer_C_GetSubContainers::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000071, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Array_LastIndex_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000080, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_BooleanAND_ReturnValue_1) == 0x000085, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Greater_IntInt_ReturnValue) == 0x000086, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_BooleanAND_ReturnValue_2) == 0x000087, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_BooleanAND_ReturnValue_3) == 0x000089, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008A, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainers, CallFunc_Array_Add_ReturnValue_2) == 0x00008C, "Member 'BP_JigMultiplayer_C_GetSubContainers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetSubContainersOnce
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_GetSubContainersOnce final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     RepContainerRef;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<int32>                                 Indexes;                                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetSubContainersOnce) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetSubContainersOnce");
static_assert(sizeof(BP_JigMultiplayer_C_GetSubContainersOnce) == 0x000050, "Wrong size on BP_JigMultiplayer_C_GetSubContainersOnce");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, RepContainerRef) == 0x000010, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::RepContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, Indexes) == 0x000020, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, Temp_bool_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, Temp_int_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetSubContainersOnce, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00004D, "Member 'BP_JigMultiplayer_C_GetSubContainersOnce::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetTotalCountOfItem
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_GetTotalCountOfItem final
{
public:
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCount;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LTotal;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetTotalCountOfItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetTotalCountOfItem");
static_assert(sizeof(BP_JigMultiplayer_C_GetTotalCountOfItem) == 0x000038, "Wrong size on BP_JigMultiplayer_C_GetTotalCountOfItem");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, DA) == 0x000000, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::DA' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, TotalCount) == 0x000008, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::TotalCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, LTotal) == 0x00000C, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::LTotal' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, Temp_int_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, Temp_bool_Variable_1) == 0x00001A, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, Temp_int_Variable_1) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000035, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalCountOfItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000036, "Member 'BP_JigMultiplayer_C_GetTotalCountOfItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetTotalInventoryWeight
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_GetTotalInventoryWeight final
{
public:
	double                                        Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempW;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetTotalInventoryWeight) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetTotalInventoryWeight");
static_assert(sizeof(BP_JigMultiplayer_C_GetTotalInventoryWeight) == 0x000038, "Wrong size on BP_JigMultiplayer_C_GetTotalInventoryWeight");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, Output_Get) == 0x000000, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, TempW) == 0x000008, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::TempW' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetTotalInventoryWeight, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_GetTotalInventoryWeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetUniqueID
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_GetUniqueID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetUniqueID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_GetUniqueID");
static_assert(sizeof(BP_JigMultiplayer_C_GetUniqueID) == 0x000020, "Wrong size on BP_JigMultiplayer_C_GetUniqueID");
static_assert(offsetof(BP_JigMultiplayer_C_GetUniqueID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_GetUniqueID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetUniqueID, CallFunc_NewGuid_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_GetUniqueID::CallFunc_NewGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.GetVectorRot
// 0x0060 (0x0060 - 0x0000)
struct BP_JigMultiplayer_C_GetVectorRot final
{
public:
	struct FVector2D                              Vect;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_GetVectorRot) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_GetVectorRot");
static_assert(sizeof(BP_JigMultiplayer_C_GetVectorRot) == 0x000060, "Wrong size on BP_JigMultiplayer_C_GetVectorRot");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, Vect) == 0x000000, "Member 'BP_JigMultiplayer_C_GetVectorRot::Vect' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, Rotated) == 0x000010, "Member 'BP_JigMultiplayer_C_GetVectorRot::Rotated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_GetVectorRot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, Temp_bool_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_GetVectorRot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_JigMultiplayer_C_GetVectorRot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'BP_JigMultiplayer_C_GetVectorRot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_GetVectorRot::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_GetVectorRot, K2Node_Select_Default) == 0x000050, "Member 'BP_JigMultiplayer_C_GetVectorRot::K2Node_Select_Default' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Handle Comp to Comp Move
// 0x0620 (0x0620 - 0x0000)
struct BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move final
{
public:
	class UBP_JigMultiplayer_C*                   From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   To;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToIndex;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainer;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VendorAmount;                                      // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  VendorMoneyToUID;                                  // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VendorMoneyToIndex;                                // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalSellValue;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountToBuy;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CountUpdated;                                      // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0060(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  FromUID;                                           // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToMain;                                            // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromMain;                                          // 0x0149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          AllItems;                                          // 0x0150(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_ServerFunc_HandleMoveToCapacityContainer_Proceed_; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_HandleMoveToCapacityContainer_Fail_; // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ConstParm, ReferenceParm)
	struct FContainerPickupsInfo                  CallFunc_GetItemByUID_Item;                        // 0x0178(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_Found;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_InMainContainer_;            // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAllItemsSellPrice_Price;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemAdded_Result;                 // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1; // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemRemoved_Result;               // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A7[0x1];                                      // 0x02A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAllItemsSellPrice_Price_1;             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrencyFromDT_Found;                  // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrencyFromDT_MaxStack;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetCurrencyFromDT_Currency;               // 0x02C0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_VendorTryStackMoney_Stacked_;             // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x039B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E[0x2];                                      // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_1;                          // 0x03A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_2;                   // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found;                       // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE[0x2];                                      // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_Index;                       // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x03D0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_3;                   // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfHasEnoughMoney_ReturnValue;        // 0x04AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_4;                   // 0x04AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TakeMoney_ReturnValue;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_UpdateCount>                 CallFunc_TakeMoney_UpdateMoneyCount;               // 0x04B8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_2; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_3; // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x0504(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName_1;    // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0518(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x05F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_2;            // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_606[0x2];                                      // 0x0606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x060D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemFromComp_VendorCountUpdate;        // 0x060E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnMainContainerItemAdded_Result;    // 0x060F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_JigMP_OnMainContainerItemAdded_ActorRef;  // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnMainContainerItemRemoved_Result;  // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x061A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_ToMain_;                       // 0x061B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move");
static_assert(sizeof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move) == 0x000620, "Wrong size on BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, From) == 0x000000, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::From' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, To) == 0x000008, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::To' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, ItemUID) == 0x000010, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, FinalRotation) == 0x000020, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, ToIndex) == 0x000024, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, ToContainer) == 0x000028, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, VendorAmount) == 0x000038, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::VendorAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, VendorMoneyToUID) == 0x00003C, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::VendorMoneyToUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, VendorMoneyToIndex) == 0x00004C, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::VendorMoneyToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, TotalSellValue) == 0x000050, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::TotalSellValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, AmountToBuy) == 0x000058, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::AmountToBuy' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CountUpdated) == 0x00005C, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CountUpdated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, ItemInfo) == 0x000060, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, FromUID) == 0x000138, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::FromUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, ToMain) == 0x000148, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::ToMain' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, FromMain) == 0x000149, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::FromMain' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, AllItems) == 0x000150, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::AllItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_ServerFunc_HandleMoveToCapacityContainer_Proceed_) == 0x000160, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_ServerFunc_HandleMoveToCapacityContainer_Proceed_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_ServerFunc_HandleMoveToCapacityContainer_Fail_) == 0x000161, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_ServerFunc_HandleMoveToCapacityContainer_Fail_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetItemByUID_Item) == 0x000178, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetItemByUID_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetItemByUID_Found) == 0x000250, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetItemByUID_InMainContainer_) == 0x000251, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetItemByUID_InMainContainer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, Temp_int_Variable) == 0x000254, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetAllItemsSellPrice_Price) == 0x000258, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetAllItemsSellPrice_Price' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_FTrunc_ReturnValue) == 0x000260, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Add_IntInt_ReturnValue) == 0x000264, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetOwner_ReturnValue) == 0x000268, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000270, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_JigMP_OnItemAdded_Result) == 0x000281, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_JigMP_OnItemAdded_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetOwner_ReturnValue_1) == 0x000288, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1) == 0x000290, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_bSuccess_1) == 0x0002A0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_JigMP_OnItemRemoved_Result) == 0x0002A1, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_JigMP_OnItemRemoved_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsMainCharacter_ReturnValue) == 0x0002A2, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsVendor_ReturnValue) == 0x0002A3, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Less_IntInt_ReturnValue) == 0x0002A4, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_BooleanAND_ReturnValue) == 0x0002A5, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_BooleanAND_ReturnValue_1) == 0x0002A6, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetAllItemsSellPrice_Price_1) == 0x0002A8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetAllItemsSellPrice_Price_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_SelectInt_ReturnValue) == 0x0002B0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetCurrencyFromDT_Found) == 0x0002B4, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetCurrencyFromDT_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetCurrencyFromDT_MaxStack) == 0x0002B8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetCurrencyFromDT_MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetCurrencyFromDT_Currency) == 0x0002C0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetCurrencyFromDT_Currency' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, Temp_bool_Variable) == 0x000398, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_VendorTryStackMoney_Stacked_) == 0x000399, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_VendorTryStackMoney_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Not_PreBool_ReturnValue) == 0x00039A, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsVendor_ReturnValue_1) == 0x00039B, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Not_PreBool_ReturnValue_1) == 0x00039C, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Greater_IntInt_ReturnValue) == 0x00039D, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_SelectInt_ReturnValue_1) == 0x0003A0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, Temp_int_Variable_1) == 0x0003A4, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_MakeArray_Array_1) == 0x0003A8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003B8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsVendor_ReturnValue_2) == 0x0003BC, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsVendor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetEmptySlot_Found) == 0x0003BD, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetEmptySlot_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetEmptySlot_Index) == 0x0003C0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetEmptySlot_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Not_PreBool_ReturnValue_2) == 0x0003C4, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Array_LastIndex_ReturnValue) == 0x0003C8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_AddNewItemToSlot_Added) == 0x0003CC, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0003D0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0004A8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0004A9, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, Temp_bool_Variable_1) == 0x0004AA, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004AB, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsVendor_ReturnValue_3) == 0x0004AC, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsVendor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_BooleanAND_ReturnValue_2) == 0x0004AD, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_CheckIfHasEnoughMoney_ReturnValue) == 0x0004AE, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_CheckIfHasEnoughMoney_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsVendor_ReturnValue_4) == 0x0004AF, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsVendor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_TakeMoney_ReturnValue) == 0x0004B0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_TakeMoney_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_TakeMoney_UpdateMoneyCount) == 0x0004B8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_TakeMoney_UpdateMoneyCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetOwner_ReturnValue_2) == 0x0004C8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_2) == 0x0004D0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_bSuccess_2) == 0x0004E0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetOwner_ReturnValue_3) == 0x0004E8, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_3) == 0x0004F0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, K2Node_DynamicCast_bSuccess_3) == 0x000500, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetContainerNameByUID_ContainerName) == 0x000504, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsMainCharacter_ReturnValue_1) == 0x00050C, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_GetContainerNameByUID_ContainerName_1) == 0x000510, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_GetContainerNameByUID_ContainerName_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_RemoveGetInfo_ItemInfo) == 0x000518, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_RemoveGetInfo_RepContainers) == 0x0005F0, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000600, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_RemoveGetInfo_CountRemoved_) == 0x000604, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsMainCharacter_ReturnValue_2) == 0x000605, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsMainCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000608, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00060C, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_BooleanAND_ReturnValue_3) == 0x00060D, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_AddItemFromComp_VendorCountUpdate) == 0x00060E, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_AddItemFromComp_VendorCountUpdate' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_JigMP_OnMainContainerItemAdded_Result) == 0x00060F, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_JigMP_OnMainContainerItemAdded_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_JigMP_OnMainContainerItemAdded_ActorRef) == 0x000610, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_JigMP_OnMainContainerItemAdded_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_IsValid_ReturnValue) == 0x000618, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_JigMP_OnMainContainerItemRemoved_Result) == 0x000619, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_JigMP_OnMainContainerItemRemoved_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_CanAddItem_Result) == 0x00061A, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move, CallFunc_CanAddItem_ToMain_) == 0x00061B, "Member 'BP_JigMultiplayer_C_Handle_Comp_to_Comp_Move::CallFunc_CanAddItem_ToMain_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleActorEquipped
// 0x01E0 (0x01E0 - 0x0000)
struct BP_JigMultiplayer_C_HandleActorEquipped final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemAdded;                                         // 0x0008(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerContent;                                  // 0x00E0(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SubContainerInfo                    CallFunc_Array_Get_Item;                           // 0x0120(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetSpecialContainerRef_SpecialContainerRef; // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x01A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleActorEquipped) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleActorEquipped");
static_assert(sizeof(BP_JigMultiplayer_C_HandleActorEquipped) == 0x0001E0, "Wrong size on BP_JigMultiplayer_C_HandleActorEquipped");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, ItemAdded) == 0x000008, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, ContainerContent) == 0x0000E0, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, Temp_bool_Variable) == 0x0000F0, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Not_PreBool_ReturnValue) == 0x0000F1, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x0000F8, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, Temp_int_Variable) == 0x00010C, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, Temp_bool_Variable_1) == 0x000114, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Not_PreBool_ReturnValue_1) == 0x000115, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, Temp_int_Variable_1) == 0x000118, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetEquippedItemRef_Found_) == 0x000144, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetEquippedItemRef_ItemRef) == 0x000148, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetEquippedItemRef_IsPending) == 0x000150, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetEquippedItemRef_Found__1) == 0x000151, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000158, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000160, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetSpecialContainerRef_SpecialContainerRef) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetSpecialContainerRef_SpecialContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetContainerOneRef_ContainerRef) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000190, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_GetListOfContainers_Containers) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_IsValid_ReturnValue_1) == 0x0001B8, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Array_LastIndex_ReturnValue) == 0x0001BC, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_BooleanAND_ReturnValue) == 0x0001C1, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_IsValid_ReturnValue_2) == 0x0001C2, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_SetUniqueID_UniqueID) == 0x0001C4, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0001D4, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0001D8, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001D9, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_BooleanAND_ReturnValue_1) == 0x0001DA, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleActorEquipped, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001DB, "Member 'BP_JigMultiplayer_C_HandleActorEquipped::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleAddNewItem
// 0x0220 (0x0220 - 0x0000)
struct BP_JigMultiplayer_C_HandleAddNewItem final
{
public:
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Content;                                           // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         ItemCount;                                         // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           Info;                                              // 0x00F0(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_MainDeepSearchContainer_Array_Element;    // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173[0x1];                                      // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x01DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SubContainerInfo                    CallFunc_Array_Get_Item;                           // 0x01F4(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleAddNewItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleAddNewItem");
static_assert(sizeof(BP_JigMultiplayer_C_HandleAddNewItem) == 0x000220, "Wrong size on BP_JigMultiplayer_C_HandleAddNewItem");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, Content) == 0x0000D8, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::Content' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, ItemCount) == 0x0000E8, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::ItemCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, Info) == 0x0000F0, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_MainDeepSearchContainer_Array_Element) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_MainDeepSearchContainer_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_IsVendor_ReturnValue) == 0x000171, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_IsVendor_ReturnValue_1) == 0x000172, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_SelectInt_ReturnValue) == 0x000174, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_AddNewInventoryItem_Added) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_AddNewInventoryItem_SlotIndex) == 0x00017C, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_AddNewInventoryItem_ItemInfo) == 0x000180, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_AddNewInventoryItem_Stacked_) == 0x000190, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000198, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_CanStack__CanStack) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_CanStack__FreeSpaceAvailable) == 0x0001A1, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_GetContainerOneRef_ContainerRef) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0001B0, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_IsValid_ReturnValue_1) == 0x0001C1, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_GetListOfContainers_Containers) == 0x0001C8, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_Array_LastIndex_ReturnValue) == 0x0001D8, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_SetUniqueID_UniqueID) == 0x0001DC, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001EC, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, Temp_int_Variable) == 0x0001F0, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_Array_Get_Item) == 0x0001F4, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_Add_IntInt_ReturnValue) == 0x000218, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00021C, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, Temp_bool_Variable) == 0x00021D, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_Not_PreBool_ReturnValue) == 0x00021E, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleAddNewItem, CallFunc_BooleanAND_ReturnValue) == 0x00021F, "Member 'BP_JigMultiplayer_C_HandleAddNewItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleClientMoveItemToIndex
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_HandleClientMoveItemToIndex final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_MainDeepSearchContainer_Array_Element;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_DeepSearchForItem_ItemFound;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemFromJigRef_Added;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_AddItemFromJigRef_AddedItemRef;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItemToIndexByItemRef_Moved_;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleClientMoveItemToIndex");
static_assert(sizeof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex) == 0x000058, "Wrong size on BP_JigMultiplayer_C_HandleClientMoveItemToIndex");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, ToContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, ToIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, FinalRotation) == 0x000024, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_MainDeepSearchContainer_Array_Element) == 0x000028, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_MainDeepSearchContainer_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_RemoveRequestByUID_Removed) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_DeepSearchForItem_ItemFound) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_DeepSearchForItem_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_isRotated__ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000041, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_AddItemFromJigRef_Added) == 0x000043, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_AddItemFromJigRef_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_AddItemFromJigRef_AddedItemRef) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_AddItemFromJigRef_AddedItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_MoveItemToIndexByItemRef_Moved_) == 0x000050, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_MoveItemToIndexByItemRef_Moved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleClientMoveItemToIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000051, "Member 'BP_JigMultiplayer_C_HandleClientMoveItemToIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleDropRequest
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_HandleDropRequest final
{
public:
	class UDropItemBackGwidget_C*                 DropWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleDropRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleDropRequest");
static_assert(sizeof(BP_JigMultiplayer_C_HandleDropRequest) == 0x000008, "Wrong size on BP_JigMultiplayer_C_HandleDropRequest");
static_assert(offsetof(BP_JigMultiplayer_C_HandleDropRequest, DropWidget) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleDropRequest::DropWidget' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleItemOverItem
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_HandleItemOverItem final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleItemOverItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleItemOverItem");
static_assert(sizeof(BP_JigMultiplayer_C_HandleItemOverItem) == 0x000008, "Wrong size on BP_JigMultiplayer_C_HandleItemOverItem");
static_assert(offsetof(BP_JigMultiplayer_C_HandleItemOverItem, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleItemOverItem::Container' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleLocalInternalReload
// 0x03A0 (0x03A0 - 0x0000)
struct BP_JigMultiplayer_C_HandleLocalInternalReload final
{
public:
	struct FGuid                                  MagContainerUID;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AmmoToAdd;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCap;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ExcludeIndexes;                                    // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentIndex;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCap;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewUID;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  BulletInfo;                                        // 0x0050(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         BulletNewCount;                                    // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  StackUID;                                          // 0x012C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpdateStack;                                       // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletIndex;                                       // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletCIndex;                                      // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                BulletID;                                          // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15F[0x1];                                      // 0x015F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19B[0x1];                                      // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount;                   // 0x01C0(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x01D8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x02C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_1;                 // 0x02FC(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_2;                 // 0x0310(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_UpdateCount>                 K2Node_MakeArray_Array_1;                          // 0x0328(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_7;                               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue_1;               // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x0350(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E[0x2];                                      // 0x037E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleLocalInternalReload) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleLocalInternalReload");
static_assert(sizeof(BP_JigMultiplayer_C_HandleLocalInternalReload) == 0x0003A0, "Wrong size on BP_JigMultiplayer_C_HandleLocalInternalReload");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, MagContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, AmmoToAdd) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::AmmoToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, MaxCap) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::MaxCap' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, ExcludeIndexes) == 0x000028, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::ExcludeIndexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CurrentIndex) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CurrentCap) == 0x00003C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CurrentCap' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, NewUID) == 0x000040, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, BulletInfo) == 0x000050, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::BulletInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, BulletNewCount) == 0x000128, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::BulletNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, StackUID) == 0x00012C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::StackUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, UpdateStack) == 0x00013C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::UpdateStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, BulletIndex) == 0x000140, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::BulletIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, BulletCIndex) == 0x000144, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::BulletCIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, BulletID) == 0x000148, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::BulletID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_bool_Variable) == 0x000150, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Not_PreBool_ReturnValue) == 0x000151, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_bool_Variable_1) == 0x000152, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Not_PreBool_ReturnValue_1) == 0x000153, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable) == 0x000154, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue) == 0x000158, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_bool_Variable_2) == 0x00015D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Not_PreBool_ReturnValue_2) == 0x00015E, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_1) == 0x000160, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_1) == 0x000164, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_BooleanAND_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Loop_Counter_Variable) == 0x00016C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_2) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Array_Index_Variable) == 0x000174, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_2) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_3) == 0x00017C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000180, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_3) == 0x000184, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_bool_Variable_3) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Not_PreBool_ReturnValue_3) == 0x000189, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_4) == 0x000190, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Array_Index_Variable_1) == 0x000194, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_bool_Variable_4) == 0x000198, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000199, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Not_PreBool_ReturnValue_4) == 0x00019A, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_4) == 0x00019C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_5) == 0x0001A4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_Contains_ReturnValue) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Not_PreBool_ReturnValue_5) == 0x0001A9, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, K2Node_MakeArray_Array) == 0x0001B0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, K2Node_MakeStruct_S_UpdateCount) == 0x0001C0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::K2Node_MakeStruct_S_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_AddNewItemToSlot_Added) == 0x0001D4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0001D8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Less_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_GetVectorRot_ReturnValue) == 0x0002B8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_GetHostingSlots_Indexes) == 0x0002C8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002D8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_Get_Item) == 0x0002DC, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_Length_ReturnValue) == 0x0002E0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_GetUniqueID_UID) == 0x0002E8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_6) == 0x0002F8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, K2Node_MakeStruct_S_UpdateCount_1) == 0x0002FC, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::K2Node_MakeStruct_S_UpdateCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, K2Node_MakeStruct_S_UpdateCount_2) == 0x000310, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::K2Node_MakeStruct_S_UpdateCount_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, K2Node_MakeArray_Array_1) == 0x000328, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, Temp_int_Variable_7) == 0x000338, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_6) == 0x00033C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_GetVectorRot_ReturnValue_1) == 0x000340, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_GetVectorRot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_GetHostingSlots_Indexes_1) == 0x000350, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000360, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_Get_Item_1) == 0x000364, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_Length_ReturnValue_1) == 0x000368, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Less_IntInt_ReturnValue_2) == 0x00036C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_7) == 0x000370, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_Add_ReturnValue) == 0x000374, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Add_IntInt_ReturnValue_8) == 0x000378, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00037C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00037D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_LastIndex_ReturnValue) == 0x000380, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000384, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000388, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000389, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_BooleanAND_ReturnValue_1) == 0x00038A, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_BooleanAND_ReturnValue_2) == 0x00038B, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x00038C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000390, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000394, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000398, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_BooleanAND_ReturnValue_3) == 0x00039C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x00039D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload, CallFunc_BooleanAND_ReturnValue_4) == 0x00039E, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleLocalInternalReload_CustomCount
// 0x0390 (0x0390 - 0x0000)
struct BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount final
{
public:
	struct FGuid                                  MagContainerUID;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AmmoToAdd;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCap;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSpace;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoToTake;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ExcludeIndexes;                                    // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentIndex;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCap;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewUID;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  BulletInfo;                                        // 0x0058(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         BulletNewCount;                                    // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  StackUID;                                          // 0x0134(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpdateStack;                                       // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletIndex;                                       // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BulletCIndex;                                      // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                BulletID;                                          // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16F[0x1];                                      // 0x016F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17F[0x1];                                      // 0x017F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount;                   // 0x01C8(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x01E8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x02C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_1;                 // 0x02F8(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_2;                 // 0x030C(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 K2Node_MakeArray_Array_1;                          // 0x0320(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x0330(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x036E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x036F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x037E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F[0x1];                                      // 0x037F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount");
static_assert(sizeof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount) == 0x000390, "Wrong size on BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, MagContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, AmmoToAdd) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::AmmoToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, MaxCap) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::MaxCap' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, FreeSpace) == 0x000024, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, AmmoToTake) == 0x000028, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::AmmoToTake' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, ExcludeIndexes) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::ExcludeIndexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CurrentIndex) == 0x000040, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CurrentCap) == 0x000044, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CurrentCap' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, NewUID) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, BulletInfo) == 0x000058, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::BulletInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, BulletNewCount) == 0x000130, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::BulletNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, StackUID) == 0x000134, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::StackUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, UpdateStack) == 0x000144, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::UpdateStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, BulletIndex) == 0x000148, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::BulletIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, BulletCIndex) == 0x00014C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::BulletCIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, BulletID) == 0x000150, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::BulletID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_bool_Variable) == 0x000158, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Variable) == 0x00015C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Variable_1) == 0x000164, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00016C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_bool_Variable_1) == 0x00016D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue_1) == 0x00016E, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Variable_2) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_2) == 0x000174, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_bool_Variable_2) == 0x000179, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00017A, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue_2) == 0x00017B, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_bool_Variable_3) == 0x00017C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue_3) == 0x00017D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_BooleanAND_ReturnValue) == 0x00017E, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_3) == 0x000184, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Array_Index_Variable) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_4) == 0x000190, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Array_Index_Variable_1) == 0x000194, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Variable_3) == 0x000198, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_5) == 0x00019C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Variable_4) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001A4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_bool_Variable_4) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001B0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_Contains_ReturnValue) == 0x0001B1, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue_5) == 0x0001B2, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_bool_Variable_5) == 0x0001B3, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Not_PreBool_ReturnValue_6) == 0x0001B4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, K2Node_MakeArray_Array) == 0x0001B8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, K2Node_MakeStruct_S_UpdateCount) == 0x0001C8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::K2Node_MakeStruct_S_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, Temp_int_Variable_5) == 0x0001DC, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_AddNewItemToSlot_Added) == 0x0001E0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0001E8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002C0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Less_IntInt_ReturnValue) == 0x0002C4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_GetHostingSlots_Indexes) == 0x0002C8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_Get_Item) == 0x0002D8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_Length_ReturnValue) == 0x0002DC, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E0, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002E4, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_GetUniqueID_UID) == 0x0002E8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, K2Node_MakeStruct_S_UpdateCount_1) == 0x0002F8, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::K2Node_MakeStruct_S_UpdateCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, K2Node_MakeStruct_S_UpdateCount_2) == 0x00030C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::K2Node_MakeStruct_S_UpdateCount_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, K2Node_MakeArray_Array_1) == 0x000320, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_GetHostingSlots_Indexes_1) == 0x000330, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_Get_Item_1) == 0x000340, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_Length_ReturnValue_1) == 0x000344, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Less_IntInt_ReturnValue_2) == 0x000348, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_8) == 0x00034C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000350, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Add_IntInt_ReturnValue_9) == 0x000354, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000358, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_SelectInt_ReturnValue) == 0x00035C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000360, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_LastIndex_ReturnValue) == 0x000364, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000368, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00036C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00036D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_BooleanAND_ReturnValue_1) == 0x00036E, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_BooleanAND_ReturnValue_2) == 0x00036F, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000370, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000374, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_Add_ReturnValue) == 0x000378, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_BooleanAND_ReturnValue_3) == 0x00037C, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00037D, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x00037E, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000380, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000384, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000388, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000389, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_BooleanAND_ReturnValue_4) == 0x00038A, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount, CallFunc_BooleanAND_ReturnValue_5) == 0x00038B, "Member 'BP_JigMultiplayer_C_HandleLocalInternalReload_CustomCount::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleLocalRequestConsumeItem
// 0x03C8 (0x03C8 - 0x0000)
struct BP_JigMultiplayer_C_HandleLocalRequestConsumeItem final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   LocalComp;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  HostUID;                                           // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HostFound;                                         // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ContainerMother;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0058(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ContInfo;                                          // 0x00D0(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FRepItemInfo                           Info;                                              // 0x01A8(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemoveAmount;                                      // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_237[0x1];                                      // 0x0237(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x0248(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickupComponent_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue;              // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemConsumed_Result;              // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetParentItemByContainerUID_Array_Element; // 0x02B8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetParentItemByContainerUID_Found;        // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x2];                                      // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x03A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B6[0x2];                                      // 0x03B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_2;            // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleLocalRequestConsumeItem");
static_assert(sizeof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem) == 0x0003C8, "Wrong size on BP_JigMultiplayer_C_HandleLocalRequestConsumeItem");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Amount) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, LocalComp) == 0x000018, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::LocalComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CustomData) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallbackToPlayer_) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, HostUID) == 0x000034, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::HostUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, HostFound) == 0x000044, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::HostFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, ContainerMother) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::ContainerMother' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, InsideOf) == 0x000058, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::InsideOf' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, ContInfo) == 0x0000D0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::ContInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Info) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, NewCount) == 0x000220, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, RemoveAmount) == 0x000224, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::RemoveAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Temp_bool_Variable) == 0x000228, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Temp_int_Variable) == 0x00022C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Add_IntInt_ReturnValue) == 0x000230, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Not_PreBool_ReturnValue) == 0x000234, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Temp_bool_Variable_1) == 0x000235, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x000236, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Temp_int_Variable_1) == 0x000238, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00023C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Temp_bool_Variable_2) == 0x000240, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x000241, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, K2Node_MakeArray_Array) == 0x000248, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_GetContainerNameByUID_ContainerName) == 0x000258, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_IsPickupComponent_ReturnValue) == 0x000260, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_IsPickupComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_IsMainCharacter_ReturnValue) == 0x000261, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_IsMainCharacter_ReturnValue_1) == 0x000262, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_GetOwner_ReturnValue) == 0x000268, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_IsLootContainer_ReturnValue) == 0x000270, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_IsLootContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000278, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, Temp_int_Variable_2) == 0x00028C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x000290, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_GetVectorRot_ReturnValue) == 0x000298, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_JigMP_OnItemConsumed_Result) == 0x0002A8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_JigMP_OnItemConsumed_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Array_LastIndex_ReturnValue) == 0x0002AC, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_BooleanAND_ReturnValue) == 0x0002B1, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_GetParentItemByContainerUID_Array_Element) == 0x0002B8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_GetParentItemByContainerUID_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_GetParentItemByContainerUID_Found) == 0x000390, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_GetParentItemByContainerUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000391, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000394, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000398, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000399, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_SelectInt_ReturnValue) == 0x00039C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_GetHostingSlots_Indexes) == 0x0003A0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0003B0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003B4, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_BooleanAND_ReturnValue_1) == 0x0003B5, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0003B8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0003BC, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_IsMainCharacter_ReturnValue_2) == 0x0003BD, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_IsMainCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_BooleanAND_ReturnValue_2) == 0x0003BE, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_BooleanOR_ReturnValue) == 0x0003BF, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestConsumeItem, CallFunc_BooleanOR_ReturnValue_1) == 0x0003C0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestConsumeItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleLocalRequestReloadWeapon
// 0x0378 (0x0378 - 0x0000)
struct BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon final
{
public:
	struct FGuid                                  UnloadUID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UnloadToContainerUID;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ReloadUID;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReloadToContainerUID;                              // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 WeaponRef;                                         // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  MagToLoadFromContainer;                            // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  MagToLoad;                                         // 0x0060(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  MagToUnload;                                       // 0x0138(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_1;               // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_2;               // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1; // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemMoved_Result;                 // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemMoved_Result_1;               // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B[0x1];                                      // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x02C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F6[0x2];                                      // 0x02F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x0308(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue_1;               // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_2;                // 0x0340(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_ToMain_;                       // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_2;        // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_3;        // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x036E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F[0x1];                                      // 0x036F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_5;            // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_4;        // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon");
static_assert(sizeof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon) == 0x000378, "Wrong size on BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, UnloadUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::UnloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, UnloadToContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::UnloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, ToIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, FinalRot) == 0x000024, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, ReloadUID) == 0x000028, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::ReloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, ReloadToContainerUID) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::ReloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, WeaponRef) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::WeaponRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, MagToLoadFromContainer) == 0x000050, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::MagToLoadFromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, MagToLoad) == 0x000060, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::MagToLoad' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, MagToUnload) == 0x000138, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::MagToUnload' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_bool_Variable) == 0x000210, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_IsValid_Guid_ReturnValue) == 0x000211, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000212, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_IsValid_Guid_ReturnValue_1) == 0x000213, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_IsValid_Guid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_bool_Variable_1) == 0x000214, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000215, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_bool_Variable_2) == 0x000216, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Not_PreBool_ReturnValue_2) == 0x000217, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Variable) == 0x000218, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x00021C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Loop_Counter_Variable) == 0x000220, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000224, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Array_Index_Variable) == 0x000228, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_bool_Variable_3) == 0x00022C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Variable_1) == 0x000230, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x000234, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Not_PreBool_ReturnValue_3) == 0x000238, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Loop_Counter_Variable_1) == 0x00023C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_3) == 0x000240, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Array_Index_Variable_1) == 0x000244, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_bool_Variable_4) == 0x000248, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Not_PreBool_ReturnValue_4) == 0x000249, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Loop_Counter_Variable_2) == 0x00024C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_4) == 0x000250, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Array_Index_Variable_2) == 0x000254, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_IsValid_Guid_ReturnValue_2) == 0x000258, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_IsValid_Guid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Variable_2) == 0x00025C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_5) == 0x000260, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_GetOwner_ReturnValue) == 0x000268, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000270, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1) == 0x000288, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000298, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_JigMP_OnItemMoved_Result) == 0x000299, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_JigMP_OnItemMoved_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_JigMP_OnItemMoved_Result_1) == 0x00029A, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_JigMP_OnItemMoved_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Variable_3) == 0x00029C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Variable_4) == 0x0002A0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_6) == 0x0002A4, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002A8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_LastIndex_ReturnValue) == 0x0002AC, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_bool_Variable_5) == 0x0002B0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Not_PreBool_ReturnValue_5) == 0x0002B1, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, Temp_int_Variable_5) == 0x0002B4, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Add_ReturnValue) == 0x0002B8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_GetHostingSlots_Indexes) == 0x0002C0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0002D0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Get_Item) == 0x0002D4, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Length_ReturnValue) == 0x0002D8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x0002DC, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Add_IntInt_ReturnValue_8) == 0x0002E0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002E4, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_BooleanAND_ReturnValue) == 0x0002E5, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0002E8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002EC, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_BooleanAND_ReturnValue_1) == 0x0002ED, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0002F0, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002F4, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_BooleanAND_ReturnValue_2) == 0x0002F5, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_GetVectorRot_ReturnValue) == 0x0002F8, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_GetHostingSlots_Indexes_1) == 0x000308, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000318, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Get_Item_1) == 0x00031C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000320, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000324, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_GetVectorRot_ReturnValue_1) == 0x000328, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_GetVectorRot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Add_ReturnValue_1) == 0x000338, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_GetHostingSlots_Indexes_2) == 0x000340, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_GetHostingSlots_Indexes_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Get_Item_2) == 0x000350, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_Length_ReturnValue_2) == 0x000354, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Less_IntInt_ReturnValue_2) == 0x000358, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_LastIndex_ReturnValue_3) == 0x00035C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000360, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_BooleanAND_ReturnValue_3) == 0x000361, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_CanAddItem_Result) == 0x000362, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_CanAddItem_ToMain_) == 0x000363, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_CanAddItem_ToMain_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue_2) == 0x000364, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000368, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x00036C, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue_3) == 0x00036D, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_BooleanAND_ReturnValue_4) == 0x00036E, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_Array_LastIndex_ReturnValue_5) == 0x000370, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_Array_LastIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000374, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_EqualEqual_GuidGuid_ReturnValue_4) == 0x000375, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_EqualEqual_GuidGuid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon, CallFunc_BooleanAND_ReturnValue_5) == 0x000376, "Member 'BP_JigMultiplayer_C_HandleLocalRequestReloadWeapon::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleMainPlayerRequestedData
// 0x0060 (0x0060 - 0x0000)
struct BP_JigMultiplayer_C_HandleMainPlayerRequestedData final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnMainContainerItemAdded_Result;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnMainContainerItemAdded_ActorRef;  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleMainPlayerRequestedData");
static_assert(sizeof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData) == 0x000060, "Wrong size on BP_JigMultiplayer_C_HandleMainPlayerRequestedData");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, Temp_bool_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, Temp_int_Variable) == 0x000004, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, Temp_bool_Variable_1) == 0x00000D, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000E, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, Temp_int_Variable_1) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_GetContainerNameByUID_ContainerName) == 0x000040, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_JigMP_OnMainContainerItemAdded_Result) == 0x000049, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_JigMP_OnMainContainerItemAdded_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_JigMP_OnMainContainerItemAdded_ActorRef) == 0x000050, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_JigMP_OnMainContainerItemAdded_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_BooleanAND_ReturnValue_1) == 0x000058, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMainPlayerRequestedData, CallFunc_Array_Contains_ReturnValue) == 0x000059, "Member 'BP_JigMultiplayer_C_HandleMainPlayerRequestedData::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleMouseButtonDown
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_HandleMouseButtonDown final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleMouseButtonDown) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleMouseButtonDown");
static_assert(sizeof(BP_JigMultiplayer_C_HandleMouseButtonDown) == 0x000008, "Wrong size on BP_JigMultiplayer_C_HandleMouseButtonDown");
static_assert(offsetof(BP_JigMultiplayer_C_HandleMouseButtonDown, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleMouseButtonDown::Container' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleNewItemAdded
// 0x0130 (0x0130 - 0x0000)
struct BP_JigMultiplayer_C_HandleNewItemAdded final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x009C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SubContainerInfo>            SubContainers;                                     // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef;                  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleNewItemAdded) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleNewItemAdded");
static_assert(sizeof(BP_JigMultiplayer_C_HandleNewItemAdded) == 0x000130, "Wrong size on BP_JigMultiplayer_C_HandleNewItemAdded");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, UID) == 0x000078, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, ToContainerUID) == 0x000088, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, ToIndex) == 0x000098, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, FinalRotation) == 0x00009C, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, SubContainers) == 0x0000A0, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::SubContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, Temp_bool_Variable) == 0x0000B0, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_FindJSIContainer_JSIRef) == 0x0000B8, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_FindJSIContainer_JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_FindJSIContainer_Found) == 0x0000C0, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_FindJSIContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_Not_PreBool_ReturnValue) == 0x0000C2, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_AddNewInventoryItem_Added) == 0x0000C3, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_AddNewInventoryItem_SlotIndex) == 0x0000C4, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_AddNewInventoryItem_ItemInfo) == 0x0000C8, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x0000D0, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_AddNewInventoryItem_Stacked_) == 0x0000D8, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, Temp_int_Variable) == 0x0000DC, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000E0, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000E8, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_GetListOfContainers_Containers) == 0x000100, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_Array_LastIndex_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_BooleanAND_ReturnValue) == 0x000119, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleNewItemAdded, CallFunc_SetUniqueID_UniqueID) == 0x000120, "Member 'BP_JigMultiplayer_C_HandleNewItemAdded::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleSameCompSplitResult
// 0x0100 (0x0100 - 0x0000)
struct BP_JigMultiplayer_C_HandleSameCompSplitResult final
{
public:
	struct FGuid                                  SourceUID;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SourceNewCount;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           NewItem;                                           // 0x0018(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  NewItemUID;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlot;                                            // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x00B4(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_FindJSIContainer_JSIRef;                  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJSIContainer_Found;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRequestByUID_Removed;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindItemByUID_Found;                      // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UpdateCount_Count;                        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleSameCompSplitResult) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleSameCompSplitResult");
static_assert(sizeof(BP_JigMultiplayer_C_HandleSameCompSplitResult) == 0x000100, "Wrong size on BP_JigMultiplayer_C_HandleSameCompSplitResult");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, SourceUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::SourceUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, SourceNewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::SourceNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, NewItem) == 0x000018, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, NewItemUID) == 0x000090, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::NewItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, ToContainerUID) == 0x0000A0, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, ToSlot) == 0x0000B0, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::ToSlot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, Rotated) == 0x0000B4, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::Rotated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_FindJSIContainer_JSIRef) == 0x0000B8, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_FindJSIContainer_JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_FindJSIContainer_Found) == 0x0000C0, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_FindJSIContainer_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_AddNewInventoryItem_Added) == 0x0000C2, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_AddNewInventoryItem_SlotIndex) == 0x0000C4, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_AddNewInventoryItem_ItemInfo) == 0x0000C8, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x0000D0, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_AddNewInventoryItem_Stacked_) == 0x0000D8, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_SetUniqueID_UniqueID) == 0x0000DC, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_RemoveRequestByUID_Removed) == 0x0000EC, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_RemoveRequestByUID_Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_FindItemByUID_Found) == 0x0000F0, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_FindItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameCompSplitResult, CallFunc_UpdateCount_Count) == 0x0000FC, "Member 'BP_JigMultiplayer_C_HandleSameCompSplitResult::CallFunc_UpdateCount_Count' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleSameContainerMoveToIndex
// 0x0628 (0x0628 - 0x0000)
struct BP_JigMultiplayer_C_HandleSameContainerMoveToIndex final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   LocalComp;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         InContainerIndex;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     TempContent;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         NumRows;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FromMain;                                          // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToMain;                                            // 0x0054(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemFound;                                         // 0x0060(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToMainIndex;                                       // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromMainItemIndex;                                 // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromMainIndex;                                     // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Vect;                                              // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Ignore;                                            // 0x0158(0x0010)(Edit, BlueprintVisible)
	struct FGuid                                  FromContainer;                                     // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfColm;                                         // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameContainer;                                     // 0x017C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName_1;    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemMoved_Result;                 // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F7[0x1];                                      // 0x01F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_2;          // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1; // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnMainContainerItemAdded_Result;    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnMainContainerItemAdded_ActorRef;  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_HandleMoveToCapacityContainer_Proceed_; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_HandleMoveToCapacityContainer_Fail_; // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_2; // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_3; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnMainContainerItemRemoved_Result;  // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnMainContainerItemAdded_Result_1;  // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnMainContainerItemAdded_ActorRef_1; // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x02E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x02F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x02F8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x03D0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_1;                // 0x04C0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_7;                              // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_MakeArray_Array_1;                          // 0x04E0(0x0010)(ConstParm, ReferenceParm)
	struct FContainerPickupsInfo                  CallFunc_GetItemByUID_Item;                        // 0x04F0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_Found;                       // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_InMainContainer_;            // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CB[0x5];                                      // 0x05CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x05D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes_2;                // 0x05E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_CanAddToContainerIgnoreIndexes_Proceed;   // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x3];                                      // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0603(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_606[0x2];                                      // 0x0606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName_2;    // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_2;        // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_3;        // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_612[0x2];                                      // 0x0612(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_5;            // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleSameContainerMoveToIndex");
static_assert(sizeof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex) == 0x000628, "Wrong size on BP_JigMultiplayer_C_HandleSameContainerMoveToIndex");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, ToContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, ToIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Rotated_) == 0x000024, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, LocalComp) == 0x000028, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::LocalComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, InContainerIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::InContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, TempContent) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::TempContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, NumRows) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::NumRows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, FromMain) == 0x00004C, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::FromMain' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, ToMain) == 0x000054, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::ToMain' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, ItemFound) == 0x000060, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, FinalRotation) == 0x000138, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, ToMainIndex) == 0x00013C, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::ToMainIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, FromMainItemIndex) == 0x000140, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::FromMainItemIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, FromMainIndex) == 0x000144, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::FromMainIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Vect) == 0x000148, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Vect' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Ignore) == 0x000158, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Ignore' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, FromContainer) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, NumOfColm) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::NumOfColm' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, SameContainer) == 0x00017C, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::SameContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable) == 0x00017D, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_int_Variable) == 0x000180, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_1) == 0x000189, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_2) == 0x00018A, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x00018B, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_2) == 0x00018C, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_int_Variable_1) == 0x000190, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_3) == 0x000198, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_3) == 0x000199, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_int_Variable_2) == 0x00019C, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_4) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001A1, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001A4, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_int_Variable_3) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001AC, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetContainerNameByUID_ContainerName) == 0x0001B0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetContainerNameByUID_ContainerName_1) == 0x0001B8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetContainerNameByUID_ContainerName_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_MakeArray_Array) == 0x0001C0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetOwner_ReturnValue) == 0x0001D0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x0001D8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_JigMP_OnItemMoved_Result) == 0x0001E9, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_JigMP_OnItemMoved_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_int_Variable_4) == 0x0001EC, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001F0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001F4, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0001F5, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_IsMainCharacter_ReturnValue) == 0x0001F6, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_int_Variable_5) == 0x0001F8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BreakVector2D_X) == 0x000200, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BreakVector2D_Y) == 0x000208, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BreakVector2D_X_1) == 0x000210, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BreakVector2D_Y_1) == 0x000218, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_MakeVector2D_ReturnValue) == 0x000220, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_MakeVector2D_ReturnValue_1) == 0x000230, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Add_IntInt_ReturnValue_5) == 0x000240, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_NotEqual_NameName_ReturnValue_2) == 0x000244, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_NotEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetOwner_ReturnValue_1) == 0x000248, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1) == 0x000250, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_bSuccess_1) == 0x000260, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_JigMP_OnMainContainerItemAdded_Result) == 0x000261, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_JigMP_OnMainContainerItemAdded_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_JigMP_OnMainContainerItemAdded_ActorRef) == 0x000268, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_JigMP_OnMainContainerItemAdded_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_ServerFunc_HandleMoveToCapacityContainer_Proceed_) == 0x000270, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_ServerFunc_HandleMoveToCapacityContainer_Proceed_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_ServerFunc_HandleMoveToCapacityContainer_Fail_) == 0x000271, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_ServerFunc_HandleMoveToCapacityContainer_Fail_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_5) == 0x000272, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_5) == 0x000273, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_6) == 0x000274, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetOwner_ReturnValue_2) == 0x000278, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_2) == 0x000280, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_bSuccess_2) == 0x000290, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_3) == 0x000298, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_DynamicCast_bSuccess_3) == 0x0002A8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_JigMP_OnMainContainerItemRemoved_Result) == 0x0002A9, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_JigMP_OnMainContainerItemRemoved_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_JigMP_OnMainContainerItemAdded_Result_1) == 0x0002AA, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_JigMP_OnMainContainerItemAdded_Result_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_JigMP_OnMainContainerItemAdded_ActorRef_1) == 0x0002B0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_JigMP_OnMainContainerItemAdded_ActorRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_IsValid_ReturnValue) == 0x0002B8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x0002BC, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002C0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetVectorRot_ReturnValue) == 0x0002C8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BooleanAND_ReturnValue) == 0x0002D8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetHostingSlots_Indexes) == 0x0002E0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0002F0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002F4, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F5, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0002F6, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_IsMainCharacter_ReturnValue_1) == 0x0002F7, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_Get_Item) == 0x0002F8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_SetFieldsInStruct_StructOut) == 0x0003D0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_Add_ReturnValue) == 0x0004A8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_6) == 0x0004AC, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_Select_Default) == 0x0004B0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetHostingSlots_Indexes_1) == 0x0004C0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetHostingSlots_Indexes_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_7) == 0x0004D0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0004D4, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0004D8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BooleanAND_ReturnValue_2) == 0x0004D9, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_MakeArray_Array_1) == 0x0004E0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetItemByUID_Item) == 0x0004F0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetItemByUID_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetItemByUID_Found) == 0x0005C8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetItemByUID_InMainContainer_) == 0x0005C9, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetItemByUID_InMainContainer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, Temp_bool_Variable_8) == 0x0005CA, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_Select_Default_1) == 0x0005D0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_7) == 0x0005E0, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetHostingSlots_Indexes_2) == 0x0005E8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetHostingSlots_Indexes_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_CanAddToContainerIgnoreIndexes_Proceed) == 0x0005F8, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_CanAddToContainerIgnoreIndexes_Proceed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_LastIndex_ReturnValue_3) == 0x0005FC, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000600, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BooleanAND_ReturnValue_3) == 0x000601, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Not_PreBool_ReturnValue_8) == 0x000602, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000603, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000604, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, K2Node_Select_Default_2) == 0x000605, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_GetContainerNameByUID_ContainerName_2) == 0x000608, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_GetContainerNameByUID_ContainerName_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue_2) == 0x000610, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_EqualEqual_GuidGuid_ReturnValue_3) == 0x000611, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_EqualEqual_GuidGuid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000614, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000618, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_Array_LastIndex_ReturnValue_5) == 0x00061C, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_Array_LastIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BooleanAND_ReturnValue_4) == 0x000620, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000621, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleSameContainerMoveToIndex, CallFunc_BooleanAND_ReturnValue_5) == 0x000622, "Member 'BP_JigMultiplayer_C_HandleSameContainerMoveToIndex::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleServerDropRequest
// 0x02F0 (0x02F0 - 0x0000)
struct BP_JigMultiplayer_C_HandleServerDropRequest final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   LocalComp;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainer;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMainContainer;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  DroppedInfo;                                       // 0x0038(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index2;                                            // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainer;                                       // 0x011C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpawnedActor;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemDropped_Result;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_1;                          // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x01B8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0290(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1; // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x2];                                      // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB[0x5];                                      // 0x02DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnRequestDropItem_ActorRef;         // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleServerDropRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleServerDropRequest");
static_assert(sizeof(BP_JigMultiplayer_C_HandleServerDropRequest) == 0x0002F0, "Wrong size on BP_JigMultiplayer_C_HandleServerDropRequest");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Count) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, LocalComp) == 0x000018, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::LocalComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, FromContainer) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, IsMainContainer) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::IsMainContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, DroppedInfo) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::DroppedInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, NewCount) == 0x000110, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Index2) == 0x000114, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Index2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Index1) == 0x000118, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Index1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, IsContainer) == 0x00011C, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::IsContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, SpawnedActor) == 0x000120, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, ContainerName) == 0x000128, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Temp_bool_Variable) == 0x000130, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Temp_bool_Variable_1) == 0x000131, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Not_PreBool_ReturnValue) == 0x000132, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Not_PreBool_ReturnValue_1) == 0x000133, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_IsValid_ReturnValue) == 0x000134, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_GetComponentByClass_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_NewGuid_ReturnValue) == 0x000140, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_GetOwner_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_JigMP_OnItemDropped_Result) == 0x000181, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_JigMP_OnItemDropped_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_IsMainCharacter_ReturnValue) == 0x000182, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_IsMainCharacter_ReturnValue_1) == 0x000183, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Temp_int_Variable) == 0x000184, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, K2Node_MakeArray_Array_1) == 0x000190, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_IsValid_ReturnValue_1) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, Temp_int_Variable_1) == 0x0001B0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B4, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_RemoveGetInfo_ItemInfo) == 0x0001B8, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_RemoveGetInfo_RepContainers) == 0x000290, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_RemoveGetInfo_VendorNewCount) == 0x0002A0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_RemoveGetInfo_CountRemoved_) == 0x0002A4, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_GetOwner_ReturnValue_1) == 0x0002A8, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1) == 0x0002B0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, K2Node_DynamicCast_bSuccess_1) == 0x0002C0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Array_LastIndex_ReturnValue) == 0x0002C4, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002C8, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_BooleanAND_ReturnValue) == 0x0002C9, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0002CC, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_GetContainerNameByUID_ContainerName) == 0x0002D0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002D8, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_BooleanAND_ReturnValue_1) == 0x0002D9, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Array_Contains_ReturnValue) == 0x0002DA, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_JigMP_OnRequestDropItem_ActorRef) == 0x0002E0, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_JigMP_OnRequestDropItem_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002E8, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002EC, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_BooleanOR_ReturnValue) == 0x0002ED, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerDropRequest, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0002EE, "Member 'BP_JigMultiplayer_C_HandleServerDropRequest::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleServerFuncRequestCraft
// 0x0788 (0x0788 - 0x0000)
struct BP_JigMultiplayer_C_HandleServerFuncRequestCraft final
{
public:
	class UBP_JigMultiplayer_C*                   CompRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CraftIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ConsumeUIDs;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGuid                                  AddToContainer;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  TempUID;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  StackWith;                                         // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  OutItemAdded;                                      // 0x0058(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FCraftingItem                          ItemInside;                                        // 0x0130(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipRep_;                                          // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CraftArrIndex;                                     // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempCount;                                         // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRepItemInfo>                   TempCraftArr;                                      // 0x0150(0x0010)(Edit, BlueprintVisible)
	double                                        Pending;                                           // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   TargetComp;                                        // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          UpdateUIDs;                                        // 0x0178(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 NewCounts;                                         // 0x0188(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentIndex;                                      // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7[0x1];                                      // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue_1;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsCraftingStation_ReturnValue_2;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          K2Node_MakeArray_Array_1;                          // 0x0200(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo; // 0x0228(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetPickupInfoFromDT_Found;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x0308(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ItemStat>                    CallFunc_GenerateRandomStats_Stats;                // 0x03E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_SetFieldsInStruct_StructOut_1;              // 0x03F8(0x0078)(HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x0470(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable_3;                              // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482[0x6];                                      // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0488(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0560(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_576[0x2];                                      // 0x0576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582[0x2];                                      // 0x0582(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x058D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x058E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F[0x1];                                      // 0x058F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Index_From_CraftingArr_Array_Index;   // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA[0x6];                                      // 0x05AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_3;                          // 0x05B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x05C8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A5[0x3];                                      // 0x06A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Generate_AddNewItemToContainer_AddedItemInfo; // 0x06A8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Generate_AddNewItemToContainer_Added_;    // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleServerFuncRequestCraft");
static_assert(sizeof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft) == 0x000788, "Wrong size on BP_JigMultiplayer_C_HandleServerFuncRequestCraft");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CraftIndex) == 0x000008, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CraftIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, ConsumeUIDs) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::ConsumeUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, AddToContainer) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::AddToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, ToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, FinalRotation) == 0x000034, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, TempUID) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, StackWith) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::StackWith' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, OutItemAdded) == 0x000058, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::OutItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, ItemInside) == 0x000130, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::ItemInside' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, SkipRep_) == 0x000140, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::SkipRep_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CraftArrIndex) == 0x000144, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CraftArrIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, TempCount) == 0x000148, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::TempCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, TempCraftArr) == 0x000150, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::TempCraftArr' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Pending) == 0x000160, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Pending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, TargetComp) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, NewCount) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, UpdateUIDs) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::UpdateUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, NewCounts) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::NewCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CurrentIndex) == 0x000198, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_int_Loop_Counter_Variable) == 0x00019C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Add_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_int_Array_Index_Variable) == 0x0001A4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_int_Variable) == 0x0001A8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001AC, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Max_ReturnValue) == 0x0001B0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_IsValid_ReturnValue) == 0x0001B4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_IsCraftingStation_ReturnValue) == 0x0001B5, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Not_PreBool_ReturnValue) == 0x0001B6, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_int_Variable_1) == 0x0001B8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_LastIndex_ReturnValue) == 0x0001BC, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0001C4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_IsValid_Guid_ReturnValue) == 0x0001CC, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001CD, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_IsCraftingStation_ReturnValue_1) == 0x0001D4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_IsCraftingStation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001DC, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, K2Node_MakeArray_Array) == 0x0001E0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_IsCraftingStation_ReturnValue_2) == 0x0001F0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_IsCraftingStation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_bool_Variable) == 0x0001F1, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001F2, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_bool_Variable_1) == 0x0001F3, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001F4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_int_Variable_2) == 0x0001F8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, K2Node_MakeArray_Array_1) == 0x000200, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Add_IntInt_ReturnValue_3) == 0x000210, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000214, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000215, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_BooleanAND_ReturnValue) == 0x000216, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_bool_Variable_2) == 0x000217, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Not_PreBool_ReturnValue_4) == 0x000218, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_int_Variable_3) == 0x00021C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Add_IntInt_ReturnValue_4) == 0x000220, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Length_ReturnValue) == 0x000224, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo) == 0x000228, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_GetPickupInfoFromDT_Found) == 0x000300, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_GetPickupInfoFromDT_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, K2Node_SetFieldsInStruct_StructOut) == 0x000308, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_GenerateRandomStats_Stats) == 0x0003E0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_GenerateRandomStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Add_IntInt_ReturnValue_5) == 0x0003F0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, K2Node_SetFieldsInStruct_StructOut_1) == 0x0003F8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, K2Node_MakeArray_Array_2) == 0x000470, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, Temp_bool_Variable_3) == 0x000480, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Not_PreBool_ReturnValue_5) == 0x000481, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_RemoveGetInfo_ItemInfo) == 0x000488, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_RemoveGetInfo_RepContainers) == 0x000560, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000570, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_RemoveGetInfo_CountRemoved_) == 0x000574, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_BooleanAND_ReturnValue_1) == 0x000575, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Get_Item) == 0x000578, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Length_ReturnValue_1) == 0x00057C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000580, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Less_IntInt_ReturnValue) == 0x000581, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Add_ReturnValue_1) == 0x000584, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000588, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00058C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_BooleanAND_ReturnValue_2) == 0x00058D, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00058E, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000590, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Get_Index_From_CraftingArr_Array_Index) == 0x000594, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Get_Index_From_CraftingArr_Array_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_SelectInt_ReturnValue) == 0x000598, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Add_ReturnValue_2) == 0x00059C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Contains_ReturnValue) == 0x0005A0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_LastIndex_ReturnValue_3) == 0x0005A4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0005A8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_BooleanAND_ReturnValue_3) == 0x0005A9, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, K2Node_MakeArray_Array_3) == 0x0005B0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_AddNewItemToSlot_Added) == 0x0005C0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0005C8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_Add_ReturnValue_3) == 0x0006A0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0006A4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Generate_AddNewItemToContainer_AddedItemInfo) == 0x0006A8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Generate_AddNewItemToContainer_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraft, CallFunc_Generate_AddNewItemToContainer_Added_) == 0x000780, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraft::CallFunc_Generate_AddNewItemToContainer_Added_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleServerFuncRequestCraftDrop
// 0x0560 (0x0560 - 0x0000)
struct BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop final
{
public:
	class UBP_JigMultiplayer_C*                   CompRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CraftIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ConsumeUIDs;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FContainerPickupsInfo                  OutItemAdded;                                      // 0x0020(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FCraftingItem                          ItemInside;                                        // 0x00F8(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipRep_;                                          // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CraftArrIndex;                                     // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempCount;                                         // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRepItemInfo>                   TempCraftArr;                                      // 0x0118(0x0010)(Edit, BlueprintVisible)
	double                                        Pending;                                           // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   TargetComp;                                        // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          UpdateUIDs;                                        // 0x0140(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 NewCounts;                                         // 0x0150(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentIndex;                                      // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0188(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0260(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnRequestDropItem_ActorRef;         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPickupCount_Result;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo; // 0x02F8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetPickupInfoFromDT_Found;                // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x03D8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ItemStat>                    CallFunc_GenerateRandomStats_Stats;                // 0x04B0(0x0010)(ReferenceParm)
	struct FRepItemInfo                           K2Node_SetFieldsInStruct_StructOut_1;              // 0x04C0(0x0078)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x053D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x053E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F[0x1];                                      // 0x053F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Index_From_CraftingArr_Array_Index;   // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop");
static_assert(sizeof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop) == 0x000560, "Wrong size on BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CraftIndex) == 0x000008, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CraftIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, ConsumeUIDs) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::ConsumeUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, OutItemAdded) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::OutItemAdded' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, ItemInside) == 0x0000F8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::ItemInside' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, SkipRep_) == 0x000108, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::SkipRep_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CraftArrIndex) == 0x00010C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CraftArrIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, TempCount) == 0x000110, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::TempCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, TempCraftArr) == 0x000118, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::TempCraftArr' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Pending) == 0x000128, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Pending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, TargetComp) == 0x000130, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, NewCount) == 0x000138, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, UpdateUIDs) == 0x000140, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::UpdateUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, NewCounts) == 0x000150, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::NewCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CurrentIndex) == 0x000160, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_int_Variable) == 0x000164, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_IsCraftingStation_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_bool_Variable) == 0x000170, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_bool_Variable_1) == 0x000171, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Not_PreBool_ReturnValue) == 0x000172, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Not_PreBool_ReturnValue_1) == 0x000173, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_int_Loop_Counter_Variable) == 0x000174, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Add_IntInt_ReturnValue_1) == 0x000178, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Get_Item) == 0x000180, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_RemoveGetInfo_ItemInfo) == 0x000188, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_RemoveGetInfo_RepContainers) == 0x000260, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000270, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_RemoveGetInfo_CountRemoved_) == 0x000274, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000275, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Length_ReturnValue) == 0x000278, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Less_IntInt_ReturnValue) == 0x00027C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_int_Variable_1) == 0x000280, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Add_IntInt_ReturnValue_2) == 0x000284, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Subtract_IntInt_ReturnValue) == 0x000288, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_bool_Variable_2) == 0x00028C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Not_PreBool_ReturnValue_2) == 0x00028D, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_LastIndex_ReturnValue) == 0x000290, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Get_Item_1) == 0x000294, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_GetPlayerPawn_ReturnValue) == 0x000298, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x0002A0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0002B4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Add_ReturnValue) == 0x0002BC, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_BooleanAND_ReturnValue) == 0x0002C0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, Temp_int_Variable_2) == 0x0002C4, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_SelectFloat_ReturnValue) == 0x0002C8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_JigMP_OnRequestDropItem_ActorRef) == 0x0002D8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_JigMP_OnRequestDropItem_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x0002E0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_SetPickupCount_Result) == 0x0002F1, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_SetPickupCount_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo) == 0x0002F8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_GetPickupInfoFromDT_Found) == 0x0003D0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_GetPickupInfoFromDT_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, K2Node_SetFieldsInStruct_StructOut) == 0x0003D8, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_GenerateRandomStats_Stats) == 0x0004B0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_GenerateRandomStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, K2Node_SetFieldsInStruct_StructOut_1) == 0x0004C0, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000538, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00053C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_BooleanAND_ReturnValue_1) == 0x00053D, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00053E, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000540, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Get_Index_From_CraftingArr_Array_Index) == 0x000544, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Get_Index_From_CraftingArr_Array_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_SelectInt_ReturnValue) == 0x000548, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Add_ReturnValue_1) == 0x00054C, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Array_Contains_ReturnValue) == 0x000550, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_Add_IntInt_ReturnValue_3) == 0x000554, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000558, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop, CallFunc_BooleanAND_ReturnValue_2) == 0x000559, "Member 'BP_JigMultiplayer_C_HandleServerFuncRequestCraftDrop::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HandleTwoContainerSwap
// 0x00B8 (0x00B8 - 0x0000)
struct BP_JigMultiplayer_C_HandleTwoContainerSwap final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  SecondContainerUID;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index2;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Items2;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Items1;                                            // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          OneFound;                                          // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName_1;    // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnTwoContainersSwap_Result;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HandleTwoContainerSwap) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_HandleTwoContainerSwap");
static_assert(sizeof(BP_JigMultiplayer_C_HandleTwoContainerSwap) == 0x0000B8, "Wrong size on BP_JigMultiplayer_C_HandleTwoContainerSwap");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, SecondContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::SecondContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Index2) == 0x000020, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Index2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Index1) == 0x000024, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Index1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Items2) == 0x000028, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Items2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Items1) == 0x000038, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Items1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, OneFound) == 0x000048, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::OneFound' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Temp_bool_Variable) == 0x000049, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Temp_bool_Variable_1) == 0x00004A, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Temp_int_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Temp_bool_Variable_2) == 0x000058, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Not_PreBool_ReturnValue_2) == 0x000059, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Temp_int_Variable_1) == 0x00005C, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, Temp_int_Variable_2) == 0x000060, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_GetContainerNameByUID_ContainerName) == 0x00006C, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_GetContainerNameByUID_ContainerName_1) == 0x000074, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_GetContainerNameByUID_ContainerName_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000088, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_JigMP_OnTwoContainersSwap_Result) == 0x000099, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_JigMP_OnTwoContainersSwap_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Array_LastIndex_ReturnValue) == 0x00009C, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000A4, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A9, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0000AC, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000B0, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B1, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000B2, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HandleTwoContainerSwap, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x0000B3, "Member 'BP_JigMultiplayer_C_HandleTwoContainerSwap::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.HasValidWidgetClass?
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_HasValidWidgetClass_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_HasValidWidgetClass_) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_HasValidWidgetClass_");
static_assert(sizeof(BP_JigMultiplayer_C_HasValidWidgetClass_) == 0x000002, "Wrong size on BP_JigMultiplayer_C_HasValidWidgetClass_");
static_assert(offsetof(BP_JigMultiplayer_C_HasValidWidgetClass_, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_HasValidWidgetClass_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_HasValidWidgetClass_, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_HasValidWidgetClass_::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.InitialzieInventoryWeight
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_InitialzieInventoryWeight final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvWeight                           K2Node_MakeStruct_S_InvWeight;                     // 0x0018(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_InitialzieInventoryWeight) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_InitialzieInventoryWeight");
static_assert(sizeof(BP_JigMultiplayer_C_InitialzieInventoryWeight) == 0x000040, "Wrong size on BP_JigMultiplayer_C_InitialzieInventoryWeight");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, Temp_bool_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, Temp_int_Variable) == 0x000004, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, K2Node_MakeStruct_S_InvWeight) == 0x000018, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::K2Node_MakeStruct_S_InvWeight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitialzieInventoryWeight, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_InitialzieInventoryWeight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.InitInventoryData
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_InitInventoryData final
{
public:
	TArray<int32>                                 RepUIDs;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickupComponent_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Process_Main_Jig_Containers_ContUID;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_InitInventoryData) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_InitInventoryData");
static_assert(sizeof(BP_JigMultiplayer_C_InitInventoryData) == 0x000038, "Wrong size on BP_JigMultiplayer_C_InitInventoryData");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, RepUIDs) == 0x000000, "Member 'BP_JigMultiplayer_C_InitInventoryData::RepUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_InitInventoryData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_InitInventoryData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_IsPickupComponent_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_IsPickupComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitInventoryData, CallFunc_Process_Main_Jig_Containers_ContUID) == 0x000028, "Member 'BP_JigMultiplayer_C_InitInventoryData::CallFunc_Process_Main_Jig_Containers_ContUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.InitNoStartingItems
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_InitNoStartingItems final
{
public:
	TArray<struct FS_JigCompContentSettings>      TempSettings;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_InitNoStartingItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_InitNoStartingItems");
static_assert(sizeof(BP_JigMultiplayer_C_InitNoStartingItems) == 0x000028, "Wrong size on BP_JigMultiplayer_C_InitNoStartingItems");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, TempSettings) == 0x000000, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::TempSettings' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_InitNoStartingItems, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_JigMultiplayer_C_InitNoStartingItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsCraftingStation
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_IsCraftingStation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsCraftingStation) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_IsCraftingStation");
static_assert(sizeof(BP_JigMultiplayer_C_IsCraftingStation) == 0x000002, "Wrong size on BP_JigMultiplayer_C_IsCraftingStation");
static_assert(offsetof(BP_JigMultiplayer_C_IsCraftingStation, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsCraftingStation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsCraftingStation, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_IsCraftingStation::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsEmpty?
// 0x0014 (0x0014 - 0x0000)
struct BP_JigMultiplayer_C_IsEmpty_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsEmpty_) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_IsEmpty_");
static_assert(sizeof(BP_JigMultiplayer_C_IsEmpty_) == 0x000014, "Wrong size on BP_JigMultiplayer_C_IsEmpty_");
static_assert(offsetof(BP_JigMultiplayer_C_IsEmpty_, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsEmpty_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsEmpty_, Temp_int_Variable) == 0x000004, "Member 'BP_JigMultiplayer_C_IsEmpty_::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsEmpty_, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_IsEmpty_::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsEmpty_, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_JigMultiplayer_C_IsEmpty_::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsEmpty_, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000D, "Member 'BP_JigMultiplayer_C_IsEmpty_::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsEmpty_, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_IsEmpty_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsInventoryVisible?
// 0x0003 (0x0003 - 0x0000)
struct BP_JigMultiplayer_C_IsInventoryVisible_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsInventoryVisible_) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_IsInventoryVisible_");
static_assert(sizeof(BP_JigMultiplayer_C_IsInventoryVisible_) == 0x000003, "Wrong size on BP_JigMultiplayer_C_IsInventoryVisible_");
static_assert(offsetof(BP_JigMultiplayer_C_IsInventoryVisible_, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_IsInventoryVisible_::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsInventoryVisible_, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_IsInventoryVisible_::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsInventoryVisible_, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_JigMultiplayer_C_IsInventoryVisible_::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsLocal
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMultiplayer_C_IsLocal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsLocal) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_IsLocal");
static_assert(sizeof(BP_JigMultiplayer_C_IsLocal) == 0x000030, "Wrong size on BP_JigMultiplayer_C_IsLocal");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsLocal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_IsLocal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'BP_JigMultiplayer_C_IsLocal::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_JigMultiplayer_C_IsLocal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'BP_JigMultiplayer_C_IsLocal::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, CallFunc_GetAIController_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_IsLocal::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_IsLocal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_JigMultiplayer_C_IsLocal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocal, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_JigMultiplayer_C_IsLocal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsLocalPlayer
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_IsLocalPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsLocalPlayer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_IsLocalPlayer");
static_assert(sizeof(BP_JigMultiplayer_C_IsLocalPlayer) == 0x000018, "Wrong size on BP_JigMultiplayer_C_IsLocalPlayer");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocalPlayer, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsLocalPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocalPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_IsLocalPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocalPlayer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_IsLocalPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLocalPlayer, CallFunc_IsLocalController_ReturnValue) == 0x000011, "Member 'BP_JigMultiplayer_C_IsLocalPlayer::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsLootContainer
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_IsLootContainer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsLootContainer) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_IsLootContainer");
static_assert(sizeof(BP_JigMultiplayer_C_IsLootContainer) == 0x000002, "Wrong size on BP_JigMultiplayer_C_IsLootContainer");
static_assert(offsetof(BP_JigMultiplayer_C_IsLootContainer, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsLootContainer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsLootContainer, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_IsLootContainer::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsMainCharacter
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_IsMainCharacter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsMainCharacter) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_IsMainCharacter");
static_assert(sizeof(BP_JigMultiplayer_C_IsMainCharacter) == 0x000002, "Wrong size on BP_JigMultiplayer_C_IsMainCharacter");
static_assert(offsetof(BP_JigMultiplayer_C_IsMainCharacter, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsMainCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsMainCharacter, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_IsMainCharacter::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsPickupComponent
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_IsPickupComponent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsPickupComponent) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_IsPickupComponent");
static_assert(sizeof(BP_JigMultiplayer_C_IsPickupComponent) == 0x000002, "Wrong size on BP_JigMultiplayer_C_IsPickupComponent");
static_assert(offsetof(BP_JigMultiplayer_C_IsPickupComponent, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsPickupComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsPickupComponent, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_IsPickupComponent::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsSCSupportedItem
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_IsSCSupportedItem final
{
public:
	class UBP_MainSpecialContainer_C*             Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsSCSupportedItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_IsSCSupportedItem");
static_assert(sizeof(BP_JigMultiplayer_C_IsSCSupportedItem) == 0x000050, "Wrong size on BP_JigMultiplayer_C_IsSCSupportedItem");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::Container' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, Item) == 0x000008, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000018, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, CallFunc_GetListOfContainers_Containers) == 0x000030, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, CallFunc_Array_LastIndex_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, Temp_bool_Variable) == 0x000048, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSCSupportedItem, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_JigMultiplayer_C_IsSCSupportedItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsSupportedItem
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_IsSupportedItem final
{
public:
	class UJigsawItem_DataAsset_C*                Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsSupportedItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_IsSupportedItem");
static_assert(sizeof(BP_JigMultiplayer_C_IsSupportedItem) == 0x000020, "Wrong size on BP_JigMultiplayer_C_IsSupportedItem");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_IsSupportedItem::Container' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, Item) == 0x000008, "Member 'BP_JigMultiplayer_C_IsSupportedItem::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_IsSupportedItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_HasTag_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_Array_Contains_ReturnValue) == 0x00001B, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_Array_IsEmpty_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_BooleanOR_ReturnValue_1) == 0x00001D, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsSupportedItem, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'BP_JigMultiplayer_C_IsSupportedItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsValidPickup
// 0x00E8 (0x00E8 - 0x0000)
struct BP_JigMultiplayer_C_IsValidPickup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  PickupInfo_0;                                      // 0x0008(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsValidPickup) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_IsValidPickup");
static_assert(sizeof(BP_JigMultiplayer_C_IsValidPickup) == 0x0000E8, "Wrong size on BP_JigMultiplayer_C_IsValidPickup");
static_assert(offsetof(BP_JigMultiplayer_C_IsValidPickup, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsValidPickup::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsValidPickup, PickupInfo_0) == 0x000008, "Member 'BP_JigMultiplayer_C_IsValidPickup::PickupInfo_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsValidPickup, CallFunc_IsValid_Guid_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_IsValidPickup::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.IsVendor
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_IsVendor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_IsVendor) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_IsVendor");
static_assert(sizeof(BP_JigMultiplayer_C_IsVendor) == 0x000002, "Wrong size on BP_JigMultiplayer_C_IsVendor");
static_assert(offsetof(BP_JigMultiplayer_C_IsVendor, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_IsVendor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_IsVendor, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_IsVendor::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ItemDropRequest_Event_0
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_ItemDropRequest_Event_0 final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        Container;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ItemDropRequest_Event_0) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ItemDropRequest_Event_0");
static_assert(sizeof(BP_JigMultiplayer_C_ItemDropRequest_Event_0) == 0x000018, "Wrong size on BP_JigMultiplayer_C_ItemDropRequest_Event_0");
static_assert(offsetof(BP_JigMultiplayer_C_ItemDropRequest_Event_0, ItemRef) == 0x000000, "Member 'BP_JigMultiplayer_C_ItemDropRequest_Event_0::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ItemDropRequest_Event_0, Count) == 0x000008, "Member 'BP_JigMultiplayer_C_ItemDropRequest_Event_0::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ItemDropRequest_Event_0, Container) == 0x000010, "Member 'BP_JigMultiplayer_C_ItemDropRequest_Event_0::Container' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Jig_UnhandledEvent
// 0x0198 (0x0198 - 0x0000)
struct BP_JigMultiplayer_C_Jig_UnhandledEvent final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            DroppedItem;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   LocalComp;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         MoneyToIndex;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  MoneyToContainer;                                  // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddToIndex;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSIFindEmptySpot_Found;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_JSIFindEmptySpot_Index;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JSIFindEmptySpot_FinalRotation;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLength_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Found_;    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_;  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp;                     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClientFunc_GetDesiredMoneyLocation_Found; // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_ClientFunc_GetDesiredMoneyLocation_ToContainerID; // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ClientFunc_GetDesiredMoneyLocation_ToIndex; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDropItemBackGwidget_C*                 CallFunc_GetDropWidget_DropWRef;                   // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef;         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef_1;       // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_2;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_3;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_1;         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_4;                   // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerIndex_Index;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetLocalComp_JigComp_1;                   // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Jig_UnhandledEvent) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Jig_UnhandledEvent");
static_assert(sizeof(BP_JigMultiplayer_C_Jig_UnhandledEvent) == 0x000198, "Wrong size on BP_JigMultiplayer_C_Jig_UnhandledEvent");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, FromContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, ToContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, ToIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, DroppedItem) == 0x000018, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::DroppedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, Rotated) == 0x000020, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::Rotated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, Amount) == 0x000024, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, LocalComp) == 0x000028, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::LocalComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, MoneyToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::MoneyToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, MoneyToContainer) == 0x000034, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::MoneyToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, AddToIndex) == 0x000044, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::AddToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, FinalRot) == 0x000048, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_JSIFindEmptySpot_Found) == 0x000049, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_JSIFindEmptySpot_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_JSIFindEmptySpot_Index) == 0x00004C, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_JSIFindEmptySpot_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_JSIFindEmptySpot_FinalRotation) == 0x000050, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_JSIFindEmptySpot_FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_isRotated__ReturnValue) == 0x000051, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetType_Type) == 0x000054, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00005C, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetContainerOneRef_ContainerRef) == 0x000060, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000068, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetListOfContainers_Containers) == 0x000080, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Array_LastIndex_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, Temp_int_Variable) == 0x000094, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetLength_ReturnValue) == 0x000098, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetSlotDim_SlotDimension) == 0x0000A8, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_isRotated__ReturnValue_1) == 0x0000B8, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_isRotated__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetEmptySlotTryRotated_NonPure_Found_) == 0x0000B9, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetEmptySlotTryRotated_NonPure_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex) == 0x0000BC, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_) == 0x0000C0, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C1, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_IsVendor_ReturnValue) == 0x0000C2, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C3, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetLocalComp_JigComp) == 0x0000C8, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetLocalComp_JigComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, Temp_bool_Variable) == 0x0000D0, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_Select_Default) == 0x0000D1, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_ClientFunc_GetDesiredMoneyLocation_Found) == 0x0000D2, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_ClientFunc_GetDesiredMoneyLocation_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_ClientFunc_GetDesiredMoneyLocation_ToContainerID) == 0x0000D4, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_ClientFunc_GetDesiredMoneyLocation_ToContainerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_ClientFunc_GetDesiredMoneyLocation_ToIndex) == 0x0000E4, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_ClientFunc_GetDesiredMoneyLocation_ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_IsVendor_ReturnValue_1) == 0x0000E8, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000F0, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_CanStack__CanStack) == 0x000101, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_CanStack__FreeSpaceAvailable) == 0x000102, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetDropWidget_DropWRef) == 0x000108, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetDropWidget_DropWRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetCount_Count) == 0x000110, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_BooleanAND_ReturnValue) == 0x000115, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetRootContainerRef_ContainerRef) == 0x000118, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetRootContainerRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000120, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetRootContainerRef_ContainerRef_1) == 0x000130, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetRootContainerRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_IsVendor_ReturnValue_2) == 0x000138, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_IsVendor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_IsVendor_ReturnValue_3) == 0x000139, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_IsVendor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_AsBP_Jig_Multiplayer_1) == 0x000140, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_AsBP_Jig_Multiplayer_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_DynamicCast_bSuccess_3) == 0x000148, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_BooleanAND_ReturnValue_1) == 0x000149, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00014A, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_IsVendor_ReturnValue_4) == 0x00014B, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_IsVendor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_BooleanAND_ReturnValue_2) == 0x00014C, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetUniqueID_UniqueServerID) == 0x000150, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000160, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetContainerIndex_Index) == 0x000170, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetContainerIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Array_Add_ReturnValue) == 0x000174, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, Temp_bool_Variable_1) == 0x000178, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_GetLocalComp_JigComp_1) == 0x000180, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_GetLocalComp_JigComp_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, K2Node_Select_Default_1) == 0x000188, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Array_Add_ReturnValue_1) == 0x00018C, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000190, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, Temp_bool_Variable_2) == 0x000191, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Array_Contains_ReturnValue) == 0x000192, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Array_Contains_ReturnValue_1) == 0x000193, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_Not_PreBool_ReturnValue_3) == 0x000194, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_BooleanAND_ReturnValue_3) == 0x000195, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Jig_UnhandledEvent, CallFunc_BooleanAND_ReturnValue_4) == 0x000196, "Member 'BP_JigMultiplayer_C_Jig_UnhandledEvent::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigCom_GetType
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_JigCom_GetType final
{
public:
	struct FGameplayTag                           Type;                                              // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigCom_GetType) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_JigCom_GetType");
static_assert(sizeof(BP_JigMultiplayer_C_JigCom_GetType) == 0x000008, "Wrong size on BP_JigMultiplayer_C_JigCom_GetType");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_GetType, Type) == 0x000000, "Member 'BP_JigMultiplayer_C_JigCom_GetType::Type' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigCom_IsLootContainer
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_JigCom_IsLootContainer final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigCom_IsLootContainer) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_JigCom_IsLootContainer");
static_assert(sizeof(BP_JigMultiplayer_C_JigCom_IsLootContainer) == 0x000002, "Wrong size on BP_JigMultiplayer_C_JigCom_IsLootContainer");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsLootContainer, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_JigCom_IsLootContainer::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsLootContainer, CallFunc_IsLootContainer_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_JigCom_IsLootContainer::CallFunc_IsLootContainer_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigCom_IsMainCharacter
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_JigCom_IsMainCharacter final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigCom_IsMainCharacter) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_JigCom_IsMainCharacter");
static_assert(sizeof(BP_JigMultiplayer_C_JigCom_IsMainCharacter) == 0x000002, "Wrong size on BP_JigMultiplayer_C_JigCom_IsMainCharacter");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsMainCharacter, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_JigCom_IsMainCharacter::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsMainCharacter, CallFunc_IsMainCharacter_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_JigCom_IsMainCharacter::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigCom_IsPickup
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_JigCom_IsPickup final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickupComponent_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigCom_IsPickup) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_JigCom_IsPickup");
static_assert(sizeof(BP_JigMultiplayer_C_JigCom_IsPickup) == 0x000002, "Wrong size on BP_JigMultiplayer_C_JigCom_IsPickup");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsPickup, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_JigCom_IsPickup::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsPickup, CallFunc_IsPickupComponent_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_JigCom_IsPickup::CallFunc_IsPickupComponent_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigCom_IsVendor
// 0x0002 (0x0002 - 0x0000)
struct BP_JigMultiplayer_C_JigCom_IsVendor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigCom_IsVendor) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_JigCom_IsVendor");
static_assert(sizeof(BP_JigMultiplayer_C_JigCom_IsVendor) == 0x000002, "Wrong size on BP_JigMultiplayer_C_JigCom_IsVendor");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsVendor, Result) == 0x000000, "Member 'BP_JigMultiplayer_C_JigCom_IsVendor::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigCom_IsVendor, CallFunc_IsVendor_ReturnValue) == 0x000001, "Member 'BP_JigMultiplayer_C_JigCom_IsVendor::CallFunc_IsVendor_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_AddNewPendingRequest
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_AddNewPendingRequest final
{
public:
	class UJSI_Slot_C*                            NewItem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_AddNewPendingRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_AddNewPendingRequest");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_AddNewPendingRequest) == 0x000010, "Wrong size on BP_JigMultiplayer_C_JigComp_AddNewPendingRequest");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_AddNewPendingRequest, NewItem) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_AddNewPendingRequest::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_AddNewPendingRequest, Result) == 0x000008, "Member 'BP_JigMultiplayer_C_JigComp_AddNewPendingRequest::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_CallRequestChamberUID
// 0x0014 (0x0014 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_CallRequestChamberUID final
{
public:
	struct FGuid                                  ChamberContainerUID;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_CallRequestChamberUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_JigComp_CallRequestChamberUID");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_CallRequestChamberUID) == 0x000014, "Wrong size on BP_JigMultiplayer_C_JigComp_CallRequestChamberUID");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestChamberUID, ChamberContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestChamberUID::ChamberContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestChamberUID, Result) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestChamberUID::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_CallRequestReload
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_CallRequestReload final
{
public:
	struct FGuid                                  UnloadUID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UnloadToContainerUID;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ReloadUID;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReloadToContainerUID;                              // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 WeaponRef;                                         // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_CallRequestReload) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_CallRequestReload");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_CallRequestReload) == 0x000058, "Wrong size on BP_JigMultiplayer_C_JigComp_CallRequestReload");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, UnloadUID) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::UnloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, UnloadToContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::UnloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, ToIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, FinalRot) == 0x000024, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, ReloadUID) == 0x000028, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::ReloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, ReloadToContainerUID) == 0x000038, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::ReloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, WeaponRef) == 0x000048, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::WeaponRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReload, Result) == 0x000050, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReload::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_CallRequestReloadInternal
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal final
{
public:
	struct FGuid                                  MagContainerUID;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AmmoToAdd;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCap;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal) == 0x000028, "Wrong size on BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal, MagContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal, AmmoToAdd) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal::AmmoToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal, MaxCap) == 0x000020, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal::MaxCap' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal, Result) == 0x000024, "Member 'BP_JigMultiplayer_C_JigComp_CallRequestReloadInternal::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_CallServerChamberWeapon
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon final
{
public:
	struct FGuid                                  ChamberContainerUID;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  MagContainerUID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  BulletToChamberUID;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChamberContainerIndex;                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SendChamberUID_;                                   // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0035(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon) == 0x000038, "Wrong size on BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon, ChamberContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon::ChamberContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon, MagContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon, BulletToChamberUID) == 0x000020, "Member 'BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon::BulletToChamberUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon, ChamberContainerIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon::ChamberContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon, SendChamberUID_) == 0x000034, "Member 'BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon::SendChamberUID_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon, Result) == 0x000035, "Member 'BP_JigMultiplayer_C_JigComp_CallServerChamberWeapon::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_CallServerConsumeRequest
// 0x0048 (0x0048 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest final
{
public:
	class UActorComponent*                        TargetComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomData;                                        // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest) == 0x000048, "Wrong size on BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, TargetComp) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, ItemUID) == 0x000008, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, Amount) == 0x000018, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, CustomData) == 0x000020, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, Result) == 0x000030, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000038, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_JigMultiplayer_C_JigComp_CallServerConsumeRequest::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_ContextTryEquip
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_ContextTryEquip final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        RootContainer;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_ContextTryEquip) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_ContextTryEquip");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_ContextTryEquip) == 0x000018, "Wrong size on BP_JigMultiplayer_C_JigComp_ContextTryEquip");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryEquip, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryEquip::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryEquip, RootContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryEquip::RootContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryEquip, Result) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryEquip::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_ContextTryUnequip
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_ContextTryUnequip final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        RootContainer;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_ContextTryUnequip) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_ContextTryUnequip");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_ContextTryUnequip) == 0x000018, "Wrong size on BP_JigMultiplayer_C_JigComp_ContextTryUnequip");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryUnequip, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryUnequip::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryUnequip, RootContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryUnequip::RootContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryUnequip, Result) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryUnequip::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_ContextTryUnloadAmmo
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo final
{
public:
	class UJSI_Slot_C*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        RootContainer;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo) == 0x000018, "Wrong size on BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo, RootContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo::RootContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo, Result) == 0x000010, "Member 'BP_JigMultiplayer_C_JigComp_ContextTryUnloadAmmo::Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigComp_GetInventoryWidgetRef
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef");
static_assert(sizeof(BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef) == 0x000008, "Wrong size on BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef");
static_assert(offsetof(BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef, UserWidget) == 0x000000, "Member 'BP_JigMultiplayer_C_JigComp_GetInventoryWidgetRef::UserWidget' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigTryAddGetPendingRef
// 0x01A8 (0x01A8 - 0x0000)
struct BP_JigMultiplayer_C_JigTryAddGetPendingRef final
{
public:
	struct FRepItemInfo                           Info;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CheckStacking;                                     // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            OutputPin;                                         // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Stack_;                                            // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StackRun;                                          // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            SatckWith;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0098(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStackSingleSlot__Sucess;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_CanStackSingleSlot__ItemRef;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0198(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_JigMultiplayer_C_JigTryAddGetPendingRef) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigTryAddGetPendingRef");
static_assert(sizeof(BP_JigMultiplayer_C_JigTryAddGetPendingRef) == 0x0001A8, "Wrong size on BP_JigMultiplayer_C_JigTryAddGetPendingRef");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Info) == 0x000000, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CheckStacking) == 0x000078, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CheckStacking' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, OutputPin) == 0x000080, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::OutputPin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Stack_) == 0x000088, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Stack_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, StackRun) == 0x000089, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::StackRun' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, SatckWith) == 0x000090, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::SatckWith' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Containers) == 0x000098, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_CanStackSingleSlot__Sucess) == 0x0000C8, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_CanStackSingleSlot__Sucess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_CanStackSingleSlot__ItemRef) == 0x0000D0, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_CanStackSingleSlot__ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_AddNewInventoryItem_Added) == 0x0000D8, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_AddNewInventoryItem_SlotIndex) == 0x0000DC, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_AddNewInventoryItem_ItemInfo) == 0x0000E0, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x0000E8, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_AddNewInventoryItem_Stacked_) == 0x0000F0, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_IsEquipTo__ReturnValue) == 0x0000F1, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000F8, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_IsValid_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetListOfNonAddContainers_Containers) == 0x000110, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, Temp_int_Loop_Counter_Variable_1) == 0x000120, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Add_ReturnValue) == 0x000124, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetUniqueID_UID) == 0x000130, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_SetUniqueID_UniqueID) == 0x000140, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Length_ReturnValue_1) == 0x000158, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Add_ReturnValue_1) == 0x00015C, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Less_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Array_Contains_ReturnValue) == 0x000161, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_IsEquipTo__ReturnValue_1) == 0x000162, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetEquippedItemRef_Found_) == 0x000163, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetEquippedItemRef_ItemRef) == 0x000168, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetEquippedItemRef_IsPending) == 0x000170, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_Not_PreBool_ReturnValue) == 0x000171, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetContainerOneRef_ContainerRef) == 0x000178, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000180, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_IsValid_ReturnValue_1) == 0x000191, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddGetPendingRef, CallFunc_GetListOfContainers_Containers) == 0x000198, "Member 'BP_JigMultiplayer_C_JigTryAddGetPendingRef::CallFunc_GetListOfContainers_Containers' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JigTryAddItemSomewhere
// 0x05F0 (0x05F0 - 0x0000)
struct BP_JigMultiplayer_C_JigTryAddItemSomewhere final
{
public:
	class UBP_JigMultiplayer_C*                   LocalComp;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Added_;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  UID;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempCount;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 NewCounts;                                         // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGuid>                          UpdateUIDs;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	struct FRepItemInfo                           TempInfo;                                          // 0x0050(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x00D0(0x0078)(HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_JigTryAddGetPendingRef_OutputPin;         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigTryAddGetPendingRef_Stack_;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo; // 0x0158(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetPickupInfoFromDT_Found;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0234(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x0248(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ItemStat>                    CallFunc_GenerateRandomStats_Stats;                // 0x0338(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x035E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x035F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376[0x2];                                      // 0x0376(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnRequestDropItem_ActorRef;         // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPickupCount_Result;                    // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x03D8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x04B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6[0x2];                                      // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x04DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DF[0x1];                                      // 0x04DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x04E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable_3;                               // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x04F8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D5[0x3];                                      // 0x05D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JigTryAddItemSomewhere) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JigTryAddItemSomewhere");
static_assert(sizeof(BP_JigMultiplayer_C_JigTryAddItemSomewhere) == 0x0005F0, "Wrong size on BP_JigMultiplayer_C_JigTryAddItemSomewhere");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, LocalComp) == 0x000000, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::LocalComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, ItemId) == 0x000008, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::ItemId' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Count) == 0x000010, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Added_) == 0x000014, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, UID) == 0x000018, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, TempCount) == 0x000028, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::TempCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, NewCount) == 0x00002C, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, NewCounts) == 0x000030, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::NewCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, UpdateUIDs) == 0x000040, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::UpdateUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, TempInfo) == 0x000050, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::TempInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_int_Variable) == 0x0000C8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_MakeStruct_RepItemInfo) == 0x0000D0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_JigTryAddGetPendingRef_OutputPin) == 0x000148, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_JigTryAddGetPendingRef_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_JigTryAddGetPendingRef_Stack_) == 0x000150, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_JigTryAddGetPendingRef_Stack_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo) == 0x000158, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GetPickupInfoFromDT_Found) == 0x000230, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GetPickupInfoFromDT_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GetUniqueID_UniqueServerID) == 0x000234, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_isRotated__ReturnValue) == 0x000244, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_IsValid_ReturnValue) == 0x000245, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_SetFieldsInStruct_StructOut) == 0x000248, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000320, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Add_IntInt_ReturnValue) == 0x000330, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GenerateRandomStats_Stats) == 0x000338, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GenerateRandomStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_LastIndex_ReturnValue) == 0x000348, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00034C, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000350, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_bool_Variable) == 0x000351, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_int_Variable_1) == 0x000354, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Add_IntInt_ReturnValue_1) == 0x000358, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Not_PreBool_ReturnValue) == 0x00035C, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_BooleanAND_ReturnValue) == 0x00035D, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_bool_Variable_1) == 0x00035E, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Not_PreBool_ReturnValue_1) == 0x00035F, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_bool_Variable_2) == 0x000360, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_int_Loop_Counter_Variable) == 0x000364, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Add_IntInt_ReturnValue_2) == 0x000368, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Not_PreBool_ReturnValue_2) == 0x00036C, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_int_Array_Index_Variable) == 0x000370, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_bool_Variable_3) == 0x000374, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Not_PreBool_ReturnValue_3) == 0x000375, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000378, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00037C, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000380, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_BooleanAND_ReturnValue_1) == 0x000384, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_Add_ReturnValue) == 0x000388, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GetPlayerPawn_ReturnValue) == 0x000390, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Subtract_IntInt_ReturnValue) == 0x000398, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x0003A0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_DynamicCast_bSuccess) == 0x0003B0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_JigMP_OnRequestDropItem_ActorRef) == 0x0003B8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_JigMP_OnRequestDropItem_ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x0003C0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_DynamicCast_bSuccess_1) == 0x0003D0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_SetPickupCount_Result) == 0x0003D1, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_SetPickupCount_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_Get_Item) == 0x0003D4, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_RemoveGetInfo_ItemInfo) == 0x0003D8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_RemoveGetInfo_RepContainers) == 0x0004B0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_RemoveGetInfo_VendorNewCount) == 0x0004C0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_RemoveGetInfo_CountRemoved_) == 0x0004C4, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004C5, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_Length_ReturnValue) == 0x0004C8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Less_IntInt_ReturnValue) == 0x0004CC, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_int_Variable_2) == 0x0004D0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Add_IntInt_ReturnValue_3) == 0x0004D4, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Add_IntInt_ReturnValue_4) == 0x0004D8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0004DC, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0004DD, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_BooleanAND_ReturnValue_2) == 0x0004DE, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, K2Node_MakeArray_Array) == 0x0004E0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, Temp_int_Variable_3) == 0x0004F0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_AddNewItemToSlot_Added) == 0x0004F4, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0004F8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Add_IntInt_ReturnValue_5) == 0x0005D0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0005D4, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0005D8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x0005DC, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_SelectInt_ReturnValue) == 0x0005E0, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_Array_Add_ReturnValue_1) == 0x0005E4, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0005E8, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JigTryAddItemSomewhere, CallFunc_BooleanAND_ReturnValue_3) == 0x0005E9, "Member 'BP_JigMultiplayer_C_JigTryAddItemSomewhere::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JSI_CheckIfCanAddActorToContainer
// 0x0290 (0x0290 - 0x0000)
struct BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TestOnly_;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        ToSpecificContainer;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  AddtoUID;                                          // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  TempItemUID;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            JigItemRef;                                        // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                NonAdd;                                            // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0060(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x00A0(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x00B8(0x0050)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1;   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigCanInteract_Result;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Found_;    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_;  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A7[0x1];                                      // 0x01A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x01E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x0258(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array_1;                          // 0x0278(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer) == 0x000290, "Wrong size on BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, TestOnly_) == 0x000008, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::TestOnly_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, ToSpecificContainer) == 0x000010, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::ToSpecificContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Index_0) == 0x000018, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Rotated) == 0x00001C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Rotated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Result) == 0x00001D, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, AddtoUID) == 0x000020, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::AddtoUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, TempItemUID) == 0x000030, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::TempItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, ToIndex) == 0x000040, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, FinalRotation) == 0x000044, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, JigItemRef) == 0x000048, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::JigItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, NonAdd) == 0x000050, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::NonAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Containers) == 0x000060, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Temp_int_Variable) == 0x000070, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000078, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetItemInfo_Info) == 0x000090, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetItemInfo_Count) == 0x000098, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetItemInfo_RandomStatsConfig) == 0x0000A0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetItemInfo_CustomData) == 0x0000B8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1) == 0x000110, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_JigCanInteract_Result) == 0x000121, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_JigCanInteract_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Temp_bool_Variable) == 0x000122, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000123, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Temp_int_Variable_1) == 0x000124, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Temp_bool_Variable_1) == 0x000128, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000129, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000130, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetEmptySlotTryRotated_NonPure_Found_) == 0x000134, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetEmptySlotTryRotated_NonPure_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex) == 0x000138, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_) == 0x00013C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00013D, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsEquipTo__ReturnValue) == 0x00013E, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x00013F, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_AddNewInventoryItem_Added) == 0x000140, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_AddNewInventoryItem_SlotIndex) == 0x000144, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_AddNewInventoryItem_ItemInfo) == 0x000148, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x000150, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_AddNewInventoryItem_Stacked_) == 0x000158, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_isRotated__ReturnValue) == 0x000159, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetUniqueID_UniqueServerID) == 0x00015C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x000170, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000178, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_bSuccess_2) == 0x000188, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsValid_ReturnValue) == 0x000189, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetListOfContainers_Containers) == 0x000190, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0001A0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Temp_bool_Variable_2) == 0x0001A4, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001A5, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_BooleanAND_ReturnValue) == 0x0001A6, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, Temp_int_Variable_2) == 0x0001A8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0001B0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_bSuccess_3) == 0x0001C0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetListOfNonAddContainers_Containers) == 0x0001C8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001D8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001DC, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x0001DD, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Array_Add_ReturnValue) == 0x0001E0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetUniqueID_UID) == 0x0001E4, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Array_Add_ReturnValue_1) == 0x0001F4, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_SetUniqueID_UniqueID) == 0x0001F8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsValid_ReturnValue_1) == 0x000208, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Array_Contains_ReturnValue) == 0x000209, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_MakeArray_Array) == 0x000210, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_4) == 0x000220, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetEquippedItemRef_Found_) == 0x000221, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetEquippedItemRef_ItemRef) == 0x000228, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetEquippedItemRef_IsPending) == 0x000230, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsValid_ReturnValue_2) == 0x000231, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsItemPending__IsPending) == 0x000232, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_5) == 0x000233, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000238, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x000240, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_DynamicCast_bSuccess_4) == 0x000250, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsValid_ReturnValue_3) == 0x000251, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_GetListOfContainers_Containers_1) == 0x000258, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_IsEquipTo__ReturnValue_1) == 0x000268, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00026C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000270, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, K2Node_MakeArray_Array_1) == 0x000278, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000288, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddActorToContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JSI_CheckIfCanAddItemToContainer
// 0x0140 (0x0140 - 0x0000)
struct BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        AddToContainer;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                NonAdd;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWeightLimit_Result;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Found_;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_;  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer) == 0x000140, "Wrong size on BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, ItemRef) == 0x000000, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, Result) == 0x000008, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, AddToContainer) == 0x000010, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::AddToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, ToIndex) == 0x000018, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, FinalRotation) == 0x00001C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, NonAdd) == 0x000020, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::NonAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, Containers) == 0x000030, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsCraftingStation_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetJigDA_JigDataAsset) == 0x000050, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetType_Type) == 0x000058, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetSlotDim_SlotDimension) == 0x000070, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_CheckWeightLimit_Result) == 0x000080, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_CheckWeightLimit_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetEmptySlotTryRotated_NonPure_Found_) == 0x000081, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetEmptySlotTryRotated_NonPure_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex) == 0x000084, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_) == 0x000088, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsSupportedByThis_Supported_) == 0x000089, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsEquipTo__ReturnValue) == 0x00008A, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000098, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetListOfNonAddContainers_Containers) == 0x0000B0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Array_Contains_ReturnValue) == 0x0000D9, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DA, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetEquippedItemRef_Found_) == 0x0000F0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000F8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetEquippedItemRef_IsPending) == 0x000100, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsItemPending__IsPending) == 0x000102, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000103, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x000108, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000110, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsValid_ReturnValue_1) == 0x000121, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_GetListOfContainers_Containers) == 0x000128, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer, CallFunc_IsEquipTo__ReturnValue_1) == 0x000138, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddItemToContainer::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JSI_CheckIfCanAddStackItemToContainer
// 0x01C8 (0x01C8 - 0x0000)
struct BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            WithItem;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    DeepItems;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSI_Slot_C*>                    ItemsToCheck;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ISCapacityContainer_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_1;                  // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack_1;                     // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable_1;           // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count;                           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x01A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_4;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_2;                 // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer) == 0x0001C8, "Wrong size on BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, ItemRef) == 0x000000, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Result) == 0x000008, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, WithItem) == 0x000010, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::WithItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, DeepItems) == 0x000018, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::DeepItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, ItemsToCheck) == 0x000028, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::ItemsToCheck' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, ItemId) == 0x000038, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::ItemId' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, ItemCount) == 0x000040, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::ItemCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Containers) == 0x000048, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Loop_Counter_Variable_2) == 0x000074, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Loop_Counter_Variable_3) == 0x00007C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Array_Index_Variable_3) == 0x000084, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsCraftingStation_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Loop_Counter_Variable_4) == 0x00008C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Add_IntInt_ReturnValue_4) == 0x000090, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_ISCapacityContainer_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_ISCapacityContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000A8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000B0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetListOfContainers_Containers) == 0x0000C8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E1, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000E8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetListOfNonAddContainers_Containers) == 0x000108, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetJigDA_JigDataAsset) == 0x000118, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsItemPending__IsPending) == 0x000120, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_CanStack__CanStack) == 0x000121, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_CanStack__FreeSpaceAvailable) == 0x000122, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000123, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_BooleanAND_ReturnValue) == 0x000124, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, Temp_int_Array_Index_Variable_4) == 0x00012C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Get_Item_2) == 0x000138, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsEquipTo__ReturnValue) == 0x000140, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000141, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000142, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetJigDA_JigDataAsset_1) == 0x000148, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetJigDA_JigDataAsset_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000150, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_CanStack__CanStack_1) == 0x000151, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_CanStack__CanStack_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_CanStack__FreeSpaceAvailable_1) == 0x000152, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_CanStack__FreeSpaceAvailable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetCount_Count) == 0x000154, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Length_ReturnValue_3) == 0x000158, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Get_Item_3) == 0x000160, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Less_IntInt_ReturnValue_3) == 0x000168, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Contains_ReturnValue) == 0x000169, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00016A, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetEquippedItemRef_Found_) == 0x00016B, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetEquippedItemRef_ItemRef) == 0x000170, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetEquippedItemRef_IsPending) == 0x000178, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000180, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x000188, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsValid_ReturnValue_1) == 0x000199, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_GetListOfContainers_Containers_1) == 0x0001A0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Get_Item_4) == 0x0001B0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsEquipTo__ReturnValue_1) == 0x0001B8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Array_Length_ReturnValue_4) == 0x0001BC, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001C0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer, CallFunc_IsEquipTo__ReturnValue_2) == 0x0001C1, "Member 'BP_JigMultiplayer_C_JSI_CheckIfCanAddStackItemToContainer::CallFunc_IsEquipTo__ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JSI_CheckIfEnoughSpaceToPickupActor
// 0x01A8 (0x01A8 - 0x0000)
struct BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                NonAdd;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x0060(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x0078(0x0050)()
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1;   // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigCanInteract_Result;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Found_;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfNonAddContainers_Containers;     // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor");
static_assert(sizeof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor) == 0x0001A8, "Wrong size on BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, Result) == 0x000008, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, NonAdd) == 0x000010, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::NonAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, Containers) == 0x000020, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000038, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetItemInfo_Info) == 0x000050, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetItemInfo_Count) == 0x000058, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetItemInfo_RandomStatsConfig) == 0x000060, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetItemInfo_CustomData) == 0x000078, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1) == 0x0000C8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_JigCanInteract_Result) == 0x0000D9, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_JigCanInteract_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, Temp_int_Loop_Counter_Variable) == 0x0000DC, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, Temp_int_Array_Index_Variable_1) == 0x0000E4, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000F0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetEmptySlotTryRotated_Found_) == 0x000101, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetEmptySlotTryRotated_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetListOfNonAddContainers_Containers) == 0x000108, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetListOfNonAddContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_IsSupportedByThis_Supported_) == 0x000118, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_BooleanAND_ReturnValue) == 0x000119, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_IsEquipTo__ReturnValue) == 0x00011A, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, Temp_int_Loop_Counter_Variable_1) == 0x000124, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Array_Contains_ReturnValue) == 0x000141, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Not_PreBool_ReturnValue_1) == 0x000142, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_MakeArray_Array) == 0x000148, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetEquippedItemRef_Found_) == 0x000158, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetEquippedItemRef_ItemRef) == 0x000160, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetEquippedItemRef_IsPending) == 0x000168, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_IsValid_ReturnValue) == 0x000169, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_IsItemPending__IsPending) == 0x00016A, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_Not_PreBool_ReturnValue_2) == 0x00016B, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetContainerOneRef_ContainerRef) == 0x000170, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000178, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_IsValid_ReturnValue_1) == 0x000189, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_GetListOfContainers_Containers) == 0x000190, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor, CallFunc_IsEquipTo__ReturnValue_1) == 0x0001A0, "Member 'BP_JigMultiplayer_C_JSI_CheckIfEnoughSpaceToPickupActor::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JSI_TryEquipToMain
// 0x0148 (0x0148 - 0x0000)
struct BP_JigMultiplayer_C_JSI_TryEquipToMain final
{
public:
	class AActor*                                 PickupRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        TargetContainer;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyTest_;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        EquipTo;                                           // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Current;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x0060(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x0078(0x0050)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_Equipped;                       // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_EquipItem_SlotItemRef;                    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0137(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E[0x2];                                      // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JSI_TryEquipToMain) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JSI_TryEquipToMain");
static_assert(sizeof(BP_JigMultiplayer_C_JSI_TryEquipToMain) == 0x000148, "Wrong size on BP_JigMultiplayer_C_JSI_TryEquipToMain");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, PickupRef) == 0x000000, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::PickupRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, TargetContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::TargetContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, OnlyTest_) == 0x000010, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::OnlyTest_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, EquipTo) == 0x000018, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::EquipTo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, Current) == 0x000020, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::Current' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000028, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetItemInfo_Info) == 0x000050, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetItemInfo_Count) == 0x000058, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetItemInfo_RandomStatsConfig) == 0x000060, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetItemInfo_CustomData) == 0x000078, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_IsValid_ReturnValue_1) == 0x0000D9, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, Temp_bool_Variable) == 0x0000DA, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, Temp_bool_Variable_1) == 0x0000DB, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Not_PreBool_ReturnValue) == 0x0000DC, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DD, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, Temp_int_Variable) == 0x0000E0, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, Temp_int_Variable_1) == 0x0000E4, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_IsSupportedByThis_Supported_) == 0x0000F0, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_EquipItem_Equipped) == 0x0000F1, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_EquipItem_Equipped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_EquipItem_SlotItemRef) == 0x0000F8, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_EquipItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetContainerOneRef_ContainerRef) == 0x000100, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000108, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_IsValid_ReturnValue_2) == 0x000119, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_GetListOfContainers_Containers) == 0x000120, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Array_LastIndex_ReturnValue) == 0x000130, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000134, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_BooleanAND_ReturnValue) == 0x000135, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_IsEquipTo__ReturnValue) == 0x000136, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_IsValid_ReturnValue_3) == 0x000137, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Array_Add_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Array_Contains_ReturnValue) == 0x00013C, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Not_PreBool_ReturnValue_2) == 0x00013D, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000140, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSI_TryEquipToMain, CallFunc_BooleanAND_ReturnValue_1) == 0x000145, "Member 'BP_JigMultiplayer_C_JSI_TryEquipToMain::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.JSIFindEmptySpot
// 0x0060 (0x0060 - 0x0000)
struct BP_JigMultiplayer_C_JSIFindEmptySpot final
{
public:
	class UJSIContainer_C*                        Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddToIndex;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_FlipSlotDim_Flipped;                      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEmptySlot_SlotIndex;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found_;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue_1;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlot_SlotIndex_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_Found__1;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_JSIFindEmptySpot) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_JSIFindEmptySpot");
static_assert(sizeof(BP_JigMultiplayer_C_JSIFindEmptySpot) == 0x000060, "Wrong size on BP_JigMultiplayer_C_JSIFindEmptySpot");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, Container) == 0x000000, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::Container' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, Item) == 0x000008, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, Found) == 0x000010, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, Index_0) == 0x000014, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, FinalRotation) == 0x000018, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, AddToIndex) == 0x00001C, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::AddToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GetSlotDim_SlotDimension) == 0x000020, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_FlipSlotDim_Flipped) == 0x000038, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_FlipSlotDim_Flipped' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GetEmptySlot_SlotIndex) == 0x000048, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GetEmptySlot_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GetEmptySlot_Found_) == 0x00004C, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GetEmptySlot_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_IsEquipped__ReturnValue) == 0x00004D, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_IsEquipTo__ReturnValue) == 0x00004F, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000050, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_isRotated__ReturnValue) == 0x000052, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_isRotated__ReturnValue_1) == 0x000053, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_isRotated__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_Not_PreBool_ReturnValue_2) == 0x000054, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GetEmptySlot_SlotIndex_1) == 0x000058, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GetEmptySlot_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_JSIFindEmptySpot, CallFunc_GetEmptySlot_Found__1) == 0x00005C, "Member 'BP_JigMultiplayer_C_JSIFindEmptySpot::CallFunc_GetEmptySlot_Found__1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.LoadJigComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_LoadJigComponent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0008(0x0010)(Parm, OutParm)
	class USave_Player_C*                         CallFunc_GetCustomSave_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_LoadJigComponent) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_LoadJigComponent");
static_assert(sizeof(BP_JigMultiplayer_C_LoadJigComponent) == 0x000028, "Wrong size on BP_JigMultiplayer_C_LoadJigComponent");
static_assert(offsetof(BP_JigMultiplayer_C_LoadJigComponent, ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_LoadJigComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LoadJigComponent, ActionbarUIDs) == 0x000008, "Member 'BP_JigMultiplayer_C_LoadJigComponent::ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LoadJigComponent, CallFunc_GetCustomSave_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_LoadJigComponent::CallFunc_GetCustomSave_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LoadJigComponent, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_LoadJigComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LoadJigComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_LoadJigComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.LogData
// 0x01C8 (0x01C8 - 0x0000)
struct BP_JigMultiplayer_C_LogData final
{
public:
	class FString                                 Containers;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00F0(0x0018)()
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_LogData) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_LogData");
static_assert(sizeof(BP_JigMultiplayer_C_LogData) == 0x0001C8, "Wrong size on BP_JigMultiplayer_C_LogData");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, Containers) == 0x000000, "Member 'BP_JigMultiplayer_C_LogData::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_LogData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, Temp_bool_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_LogData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_IsMainCharacter_ReturnValue) == 0x00002A, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, Temp_int_Variable_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_LogData::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, Temp_bool_Variable_1) == 0x000034, "Member 'BP_JigMultiplayer_C_LogData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Not_PreBool_ReturnValue_1) == 0x000035, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_JigMultiplayer_C_LogData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000098, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_JigMultiplayer_C_LogData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Conv_NameToText_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000108, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'BP_JigMultiplayer_C_LogData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_JigMultiplayer_C_LogData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_BooleanAND_ReturnValue_1) == 0x000178, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Conv_TextToString_ReturnValue) == 0x000198, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001A8, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_LogData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001B8, "Member 'BP_JigMultiplayer_C_LogData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MainDeepSearchContainer
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_MainDeepSearchContainer final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Array_Element;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_DeepSearchForContainer_Array_Element;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MainDeepSearchContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MainDeepSearchContainer");
static_assert(sizeof(BP_JigMultiplayer_C_MainDeepSearchContainer) == 0x000040, "Wrong size on BP_JigMultiplayer_C_MainDeepSearchContainer");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, Array_Element) == 0x000010, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, Temp_int_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_DeepSearchForContainer_Array_Element) == 0x000030, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_DeepSearchForContainer_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MainDeepSearchContainer, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_MainDeepSearchContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_AddNewItem
// 0x00E8 (0x00E8 - 0x0000)
struct BP_JigMultiplayer_C_MC_AddNewItem final
{
public:
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          Content;                                           // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_AddNewItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_AddNewItem");
static_assert(sizeof(BP_JigMultiplayer_C_MC_AddNewItem) == 0x0000E8, "Wrong size on BP_JigMultiplayer_C_MC_AddNewItem");
static_assert(offsetof(BP_JigMultiplayer_C_MC_AddNewItem, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_AddNewItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_AddNewItem, Content) == 0x0000D8, "Member 'BP_JigMultiplayer_C_MC_AddNewItem::Content' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_ItemRemoved
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_MC_ItemRemoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_ItemRemoved) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_MC_ItemRemoved");
static_assert(sizeof(BP_JigMultiplayer_C_MC_ItemRemoved) == 0x000010, "Wrong size on BP_JigMultiplayer_C_MC_ItemRemoved");
static_assert(offsetof(BP_JigMultiplayer_C_MC_ItemRemoved, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_ItemRemoved::ItemUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_MoveItemToIndex
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMultiplayer_C_MC_MoveItemToIndex final
{
public:
	class UBP_JigMultiplayer_C*                   TargetComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_MoveItemToIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_MoveItemToIndex");
static_assert(sizeof(BP_JigMultiplayer_C_MC_MoveItemToIndex) == 0x000030, "Wrong size on BP_JigMultiplayer_C_MC_MoveItemToIndex");
static_assert(offsetof(BP_JigMultiplayer_C_MC_MoveItemToIndex, TargetComp) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_MoveItemToIndex::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_MoveItemToIndex, ItemUID) == 0x000008, "Member 'BP_JigMultiplayer_C_MC_MoveItemToIndex::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_MoveItemToIndex, ToContainerUID) == 0x000018, "Member 'BP_JigMultiplayer_C_MC_MoveItemToIndex::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_MoveItemToIndex, ToIndex) == 0x000028, "Member 'BP_JigMultiplayer_C_MC_MoveItemToIndex::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_MoveItemToIndex, FinalRotation) == 0x00002C, "Member 'BP_JigMultiplayer_C_MC_MoveItemToIndex::FinalRotation' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_NewItemAdded
// 0x00C8 (0x00C8 - 0x0000)
struct BP_JigMultiplayer_C_MC_NewItemAdded final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0098(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x009C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UpdateCount                         UpdateCount;                                       // 0x00A0(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SubContainerInfo>            SubContainers;                                     // 0x00B8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_NewItemAdded) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_NewItemAdded");
static_assert(sizeof(BP_JigMultiplayer_C_MC_NewItemAdded) == 0x0000C8, "Wrong size on BP_JigMultiplayer_C_MC_NewItemAdded");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, ItemInfo) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, UID) == 0x000078, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, ToContainerUID) == 0x000088, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, ToIndex) == 0x000098, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, FinalRotation) == 0x00009C, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, UpdateCount) == 0x0000A0, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_NewItemAdded, SubContainers) == 0x0000B8, "Member 'BP_JigMultiplayer_C_MC_NewItemAdded::SubContainers' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_OnPendingDone
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_MC_OnPendingDone final
{
public:
	TArray<struct FContainerPickupsInfo>          Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_OnPendingDone) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_OnPendingDone");
static_assert(sizeof(BP_JigMultiplayer_C_MC_OnPendingDone) == 0x000010, "Wrong size on BP_JigMultiplayer_C_MC_OnPendingDone");
static_assert(offsetof(BP_JigMultiplayer_C_MC_OnPendingDone, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_OnPendingDone::Item' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_SameCompUpdateSplitRequest
// 0x00B8 (0x00B8 - 0x0000)
struct BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest final
{
public:
	struct FGuid                                  SourceUID;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SourceNewCount;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           NewItem;                                           // 0x0018(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  NewItemUID;                                        // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x00A0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x00B0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x00B4(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest");
static_assert(sizeof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest) == 0x0000B8, "Wrong size on BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, SourceUID) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::SourceUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, SourceNewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::SourceNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, NewItem) == 0x000018, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, NewItemUID) == 0x000090, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::NewItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, ToContainerUID) == 0x0000A0, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, ToIndex) == 0x0000B0, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest, Rotated) == 0x0000B4, "Member 'BP_JigMultiplayer_C_MC_SameCompUpdateSplitRequest::Rotated' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_UpdateCount
// 0x0024 (0x0024 - 0x0000)
struct BP_JigMultiplayer_C_MC_UpdateCount final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RemovePending;                                     // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_UpdateCount) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_MC_UpdateCount");
static_assert(sizeof(BP_JigMultiplayer_C_MC_UpdateCount) == 0x000024, "Wrong size on BP_JigMultiplayer_C_MC_UpdateCount");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateCount, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_UpdateCount::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateCount, NewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_MC_UpdateCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateCount, RemovePending) == 0x000014, "Member 'BP_JigMultiplayer_C_MC_UpdateCount::RemovePending' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_UpdateCounts
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_MC_UpdateCounts final
{
public:
	TArray<struct FS_UpdateCount>                 Counts;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_UpdateCounts) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_UpdateCounts");
static_assert(sizeof(BP_JigMultiplayer_C_MC_UpdateCounts) == 0x000010, "Wrong size on BP_JigMultiplayer_C_MC_UpdateCounts");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateCounts, Counts) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_UpdateCounts::Counts' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_UpdateDurability
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_MC_UpdateDurability final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewDurab;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_UpdateDurability) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MC_UpdateDurability");
static_assert(sizeof(BP_JigMultiplayer_C_MC_UpdateDurability) == 0x000020, "Wrong size on BP_JigMultiplayer_C_MC_UpdateDurability");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateDurability, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_UpdateDurability::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateDurability, NewDurab) == 0x000010, "Member 'BP_JigMultiplayer_C_MC_UpdateDurability::NewDurab' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MC_UpdateStack
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_MC_UpdateStack final
{
public:
	struct FGuid                                  DroppedUID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropNewCount;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  RecUID;                                            // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecNewCount;                                       // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MC_UpdateStack) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_MC_UpdateStack");
static_assert(sizeof(BP_JigMultiplayer_C_MC_UpdateStack) == 0x000028, "Wrong size on BP_JigMultiplayer_C_MC_UpdateStack");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateStack, DroppedUID) == 0x000000, "Member 'BP_JigMultiplayer_C_MC_UpdateStack::DroppedUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateStack, DropNewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_MC_UpdateStack::DropNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateStack, RecUID) == 0x000014, "Member 'BP_JigMultiplayer_C_MC_UpdateStack::RecUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MC_UpdateStack, RecNewCount) == 0x000024, "Member 'BP_JigMultiplayer_C_MC_UpdateStack::RecNewCount' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.MonitorContainerItems
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_MonitorContainerItems final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_MonitorContainerItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_MonitorContainerItems");
static_assert(sizeof(BP_JigMultiplayer_C_MonitorContainerItems) == 0x000040, "Wrong size on BP_JigMultiplayer_C_MonitorContainerItems");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, Temp_int_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, Temp_bool_Variable) == 0x000008, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, Temp_int_Variable_1) == 0x00000C, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, Temp_bool_Variable_1) == 0x000014, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Not_PreBool_ReturnValue_1) == 0x000015, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_IsValid_Guid_ReturnValue) == 0x000016, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Conv_GuidToString_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_MonitorContainerItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'BP_JigMultiplayer_C_MonitorContainerItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.OnItemAddedUpdateWeight
// 0x0168 (0x0168 - 0x0000)
struct BP_JigMultiplayer_C_OnItemAddedUpdateWeight final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     Content;                                           // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  OverrideInUID;                                     // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverrideCount;                                     // 0x00F8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  K2Node_Select_Default;                             // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_FindRootContainer_RootCUID;               // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue_1;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_OnItemAddedUpdateWeight");
static_assert(sizeof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight) == 0x000168, "Wrong size on BP_JigMultiplayer_C_OnItemAddedUpdateWeight");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Content) == 0x0000D8, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Content' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, OverrideInUID) == 0x0000E8, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::OverrideInUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, OverrideCount) == 0x0000F8, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::OverrideCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Temp_int_Variable) == 0x0000FC, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Array_LastIndex_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_IsValid_Guid_ReturnValue) == 0x00010C, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_SelectInt_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Temp_bool_Variable) == 0x00011C, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Temp_bool_Variable_1) == 0x000129, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_BooleanAND_ReturnValue) == 0x00012A, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, K2Node_Select_Default) == 0x00012C, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_FindRootContainer_RootCUID) == 0x00013C, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_FindRootContainer_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Temp_int_Variable_1) == 0x00014C, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_IsValid_Guid_ReturnValue_1) == 0x000150, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_IsValid_Guid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Add_IntInt_ReturnValue_1) == 0x000154, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000158, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, Temp_bool_Variable_2) == 0x000161, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_IsMainCharacter_ReturnValue) == 0x000162, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_Not_PreBool_ReturnValue_1) == 0x000163, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemAddedUpdateWeight, CallFunc_BooleanAND_ReturnValue_1) == 0x000164, "Member 'BP_JigMultiplayer_C_OnItemAddedUpdateWeight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.OnItemRemovedUpdateWeight
// 0x0168 (0x0168 - 0x0000)
struct BP_JigMultiplayer_C_OnItemRemovedUpdateWeight final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     Content;                                           // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         OverrideCount;                                     // 0x00E8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_RootCUID;               // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x1];                                      // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_OnItemRemovedUpdateWeight");
static_assert(sizeof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight) == 0x000168, "Wrong size on BP_JigMultiplayer_C_OnItemRemovedUpdateWeight");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, Item) == 0x000000, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, Content) == 0x0000D8, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::Content' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, OverrideCount) == 0x0000E8, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::OverrideCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, Temp_bool_Variable) == 0x0000F4, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_FindRootContainer_RootCUID) == 0x0000F8, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_FindRootContainer_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_IsValid_Guid_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Not_PreBool_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, Temp_bool_Variable_1) == 0x00010A, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_SelectInt_ReturnValue) == 0x00010C, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Not_PreBool_ReturnValue_1) == 0x000118, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, Temp_int_Variable) == 0x000128, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, Temp_int_Variable_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000134, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000140, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_BooleanAND_ReturnValue) == 0x000148, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_Add_IntInt_ReturnValue_1) == 0x00015C, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_BooleanAND_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemRemovedUpdateWeight, CallFunc_IsMainCharacter_ReturnValue) == 0x000161, "Member 'BP_JigMultiplayer_C_OnItemRemovedUpdateWeight::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.OnItemSplitRequest_Event
// 0x0028 (0x0028 - 0x0000)
struct BP_JigMultiplayer_C_OnItemSplitRequest_Event final
{
public:
	class UJSIContainer_C*                        FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ItemSource;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ToSlotIndex;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalAmount;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitAmount;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_OnItemSplitRequest_Event) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_OnItemSplitRequest_Event");
static_assert(sizeof(BP_JigMultiplayer_C_OnItemSplitRequest_Event) == 0x000028, "Wrong size on BP_JigMultiplayer_C_OnItemSplitRequest_Event");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, FromContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, ToContainer) == 0x000008, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, ItemSource) == 0x000010, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::ItemSource' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, ToSlotIndex) == 0x000018, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, TotalAmount) == 0x00001C, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, SplitAmount) == 0x000020, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::SplitAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemSplitRequest_Event, Rotated_) == 0x000024, "Member 'BP_JigMultiplayer_C_OnItemSplitRequest_Event::Rotated_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.OnItemStackRequest_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_OnItemStackRequest_Event final
{
public:
	class UJSI_Slot_C*                            DroppedItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ReceiverItem;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_OnItemStackRequest_Event) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_OnItemStackRequest_Event");
static_assert(sizeof(BP_JigMultiplayer_C_OnItemStackRequest_Event) == 0x000010, "Wrong size on BP_JigMultiplayer_C_OnItemStackRequest_Event");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemStackRequest_Event, DroppedItem) == 0x000000, "Member 'BP_JigMultiplayer_C_OnItemStackRequest_Event::DroppedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_OnItemStackRequest_Event, ReceiverItem) == 0x000008, "Member 'BP_JigMultiplayer_C_OnItemStackRequest_Event::ReceiverItem' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Process Main Jig Containers
// 0x0898 (0x0898 - 0x0000)
struct BP_JigMultiplayer_C_Process_Main_Jig_Containers final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipTo;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumOfColumns;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumOfRows;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRandomContainerItem>           DefaultContainerItems;                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGuid                                  ContUID;                                           // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentJigIndex;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrIndex;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipTo_;                                        // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentIndex;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewUID;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLootContainer_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickupComponent_ReturnValue;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_4;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_2;                          // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_3;                          // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvWeight                           K2Node_MakeStruct_S_InvWeight;                     // 0x0198(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_4;                          // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_TryAddNewItem_AddedItemInfo;              // 0x01F8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Added_;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Stacked_;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LootTypeMultiplier_Multiplier;            // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo; // 0x02F0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetPickupInfoFromDT_Found;                // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Found;             // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB[0x1];                                      // 0x03CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_Index;             // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Rotated_;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_5;            // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut;                // 0x03D8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x04B8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593[0x1];                                      // 0x0593(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo_1; // 0x0598(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetPickupInfoFromDT_Found_1;              // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Found_1;           // 0x0673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEmptySlotTryRotated_Index_1;           // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Rotated__1;        // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_679[0x7];                                      // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_SetFieldsInStruct_StructOut_1;              // 0x0680(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added_1;                 // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo_1;         // 0x0760(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83A[0x6];                                      // 0x083A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ReplicatedContainerInfo             K2Node_MakeStruct_S_ReplicatedContainerInfo;       // 0x0840(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Process_Main_Jig_Containers) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Process_Main_Jig_Containers");
static_assert(sizeof(BP_JigMultiplayer_C_Process_Main_Jig_Containers) == 0x000898, "Wrong size on BP_JigMultiplayer_C_Process_Main_Jig_Containers");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Name_0) == 0x000000, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Name_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, IsEquipTo) == 0x000008, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::IsEquipTo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, NumOfColumns) == 0x00000C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::NumOfColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, NumOfRows) == 0x000010, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::NumOfRows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, DefaultContainerItems) == 0x000018, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::DefaultContainerItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, ContUID) == 0x000028, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::ContUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CurrentJigIndex) == 0x000038, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CurrentJigIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, ArrIndex) == 0x00003C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::ArrIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, IsEquipTo_) == 0x000040, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::IsEquipTo_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CurrentIndex) == 0x000044, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, NewUID) == 0x000048, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, NewIndex) == 0x000058, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::NewIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_bool_Variable) == 0x00005C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable) == 0x000060, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable_1) == 0x000068, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable_2) == 0x000070, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable_3) == 0x000074, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_bool_Variable_1) == 0x000078, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000079, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007A, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_IsLootContainer_ReturnValue) == 0x000080, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_IsLootContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_RandomFloatInRange_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_IsVendor_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000098, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_bool_Variable_2) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_IsPickupComponent_ReturnValue) == 0x0000A1, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_IsPickupComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_BooleanOR_ReturnValue) == 0x0000A2, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A3, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0000A8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0000B0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_bool_Variable_3) == 0x0000B8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetDisplayName_ReturnValue) == 0x0000C8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000E8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_BooleanAND_ReturnValue) == 0x0000E9, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetOwner_ReturnValue_1) == 0x0000F0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable_4) == 0x000108, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeArray_Array_1) == 0x000138, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_bool_Variable_4) == 0x000148, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_LastIndex_ReturnValue) == 0x00014C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Not_PreBool_ReturnValue_4) == 0x000150, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable_5) == 0x000154, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000158, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00015C, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Add_IntInt_ReturnValue_3) == 0x000164, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000168, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_BooleanAND_ReturnValue_1) == 0x000169, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeArray_Array_2) == 0x000170, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeArray_Array_3) == 0x000188, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeStruct_S_InvWeight) == 0x000198, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeStruct_S_InvWeight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, Temp_int_Variable_6) == 0x0001B8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_Add_ReturnValue_1) == 0x0001BC, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001C0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeArray_Array_4) == 0x0001C8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0001D8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0001DC, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetUniqueID_UID) == 0x0001E0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_LastIndex_ReturnValue_3) == 0x0001F0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_TryAddNewItem_AddedItemInfo) == 0x0001F8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_TryAddNewItem_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_TryAddNewItem_Added_) == 0x0002D0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_TryAddNewItem_Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_TryAddNewItem_Stacked_) == 0x0002D1, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_TryAddNewItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0002D2, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_BooleanAND_ReturnValue_2) == 0x0002D3, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LootTypeMultiplier_Multiplier) == 0x0002D8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LootTypeMultiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_LastIndex_ReturnValue_4) == 0x0002E4, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x0002E8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_BooleanAND_ReturnValue_3) == 0x0002E9, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0002EC, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo) == 0x0002F0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetPickupInfoFromDT_Found) == 0x0003C8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetPickupInfoFromDT_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0003C9, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetEmptySlotTryRotated_Found) == 0x0003CA, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetEmptySlotTryRotated_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetEmptySlotTryRotated_Index) == 0x0003CC, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetEmptySlotTryRotated_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetEmptySlotTryRotated_Rotated_) == 0x0003D0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetEmptySlotTryRotated_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_LastIndex_ReturnValue_5) == 0x0003D4, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_LastIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_SetFieldsInStruct_StructOut) == 0x0003D8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x0004B0, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_AddNewItemToSlot_Added) == 0x0004B1, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0004B8, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_BooleanAND_ReturnValue_4) == 0x000590, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000591, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000592, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000594, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo_1) == 0x000598, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetPickupInfoFromDT_Found_1) == 0x000670, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetPickupInfoFromDT_Found_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000671, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000672, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetEmptySlotTryRotated_Found_1) == 0x000673, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetEmptySlotTryRotated_Found_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetEmptySlotTryRotated_Index_1) == 0x000674, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetEmptySlotTryRotated_Index_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_GetEmptySlotTryRotated_Rotated__1) == 0x000678, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_GetEmptySlotTryRotated_Rotated__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_SetFieldsInStruct_StructOut_1) == 0x000680, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_AddNewItemToSlot_Added_1) == 0x000758, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_AddNewItemToSlot_Added_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_AddNewItemToSlot_AddedItemInfo_1) == 0x000760, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_AddNewItemToSlot_AddedItemInfo_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000838, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000839, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, K2Node_MakeStruct_S_ReplicatedContainerInfo) == 0x000840, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::K2Node_MakeStruct_S_ReplicatedContainerInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Main_Jig_Containers, CallFunc_Array_Add_ReturnValue_2) == 0x000890, "Member 'BP_JigMultiplayer_C_Process_Main_Jig_Containers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Process Multiple
// 0x0078 (0x0078 - 0x0000)
struct BP_JigMultiplayer_C_Process_Multiple final
{
public:
	TArray<struct FVector2D>                      ContainerColRow;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FGuid>                          ContainerUIDs;                                     // 0x0010(0x0010)(Parm, OutParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRandomContainerItem>           K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	struct FGuid                                  CallFunc_Process_Main_Jig_Containers_ContUID;      // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Process_Multiple) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Process_Multiple");
static_assert(sizeof(BP_JigMultiplayer_C_Process_Multiple) == 0x000078, "Wrong size on BP_JigMultiplayer_C_Process_Multiple");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, ContainerColRow) == 0x000000, "Member 'BP_JigMultiplayer_C_Process_Multiple::ContainerColRow' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, ContainerUIDs) == 0x000010, "Member 'BP_JigMultiplayer_C_Process_Multiple::ContainerUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, Temp_bool_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_Process_Multiple::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, Temp_int_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_Process_Multiple::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_FTrunc_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_FTrunc_ReturnValue_1) == 0x000048, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_JigMultiplayer_C_Process_Multiple::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_Process_Main_Jig_Containers_ContUID) == 0x000060, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_Process_Main_Jig_Containers_ContUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Process_Multiple, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_Process_Multiple::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ProcessRefillContainer
// 0x0048 (0x0048 - 0x0000)
struct BP_JigMultiplayer_C_ProcessRefillContainer final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryVisible__Result;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ProcessRefillContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ProcessRefillContainer");
static_assert(sizeof(BP_JigMultiplayer_C_ProcessRefillContainer) == 0x000048, "Wrong size on BP_JigMultiplayer_C_ProcessRefillContainer");
static_assert(offsetof(BP_JigMultiplayer_C_ProcessRefillContainer, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_ProcessRefillContainer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ProcessRefillContainer, CallFunc_GetObjectName_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_ProcessRefillContainer::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ProcessRefillContainer, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_ProcessRefillContainer::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ProcessRefillContainer, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_ProcessRefillContainer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ProcessRefillContainer, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_ProcessRefillContainer::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ProcessRefillContainer, CallFunc_IsInventoryVisible__Result) == 0x000040, "Member 'BP_JigMultiplayer_C_ProcessRefillContainer::CallFunc_IsInventoryVisible__Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.RefFillCapacityContainer
// 0x0198 (0x0198 - 0x0000)
struct BP_JigMultiplayer_C_RefFillCapacityContainer final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                WithItem;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDefaultAttachments>            K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	struct FRandomContainerItem                   K2Node_MakeStruct_RandomContainerItem;             // 0x0048(0x0058)(HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_TryAddNewItem_AddedItemInfo;              // 0x00A0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Added_;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddNewItem_Stacked_;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_RefFillCapacityContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_RefFillCapacityContainer");
static_assert(sizeof(BP_JigMultiplayer_C_RefFillCapacityContainer) == 0x000198, "Wrong size on BP_JigMultiplayer_C_RefFillCapacityContainer");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, WithItem) == 0x000010, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::WithItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, Temp_bool_Variable_1) == 0x000019, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, Temp_int_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, Temp_bool_Variable_2) == 0x000024, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000025, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, Temp_int_Variable_1) == 0x000028, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, Temp_int_Variable_2) == 0x00002C, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, K2Node_MakeStruct_RandomContainerItem) == 0x000048, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::K2Node_MakeStruct_RandomContainerItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_TryAddNewItem_AddedItemInfo) == 0x0000A0, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_TryAddNewItem_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_TryAddNewItem_Added_) == 0x000178, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_TryAddNewItem_Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_TryAddNewItem_Stacked_) == 0x000179, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_TryAddNewItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x00017C, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000180, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_BooleanAND_ReturnValue) == 0x000181, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000182, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000184, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000188, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000189, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x00018A, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00018C, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000190, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RefFillCapacityContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000191, "Member 'BP_JigMultiplayer_C_RefFillCapacityContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.RemoveGetInfo
// 0x03B8 (0x03B8 - 0x0000)
struct BP_JigMultiplayer_C_RemoveGetInfo final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemoveCount;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0018(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     RepContainers;                                     // 0x00F0(0x0010)(Parm, OutParm, ContainsInstancedReference)
	int32                                         VendorNewCount;                                    // 0x0100(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CountRemoved_;                                     // 0x0104(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     AttachmentsContainers;                             // 0x0108(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         OldItemContainerUID;                               // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  OldItemUID;                                        // 0x011C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  OldUID;                                            // 0x012C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewContainerUID;                                   // 0x013C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewUID;                                            // 0x014C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  TempItem;                                          // 0x0160(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FGuid>                          CUIDs;                                             // 0x0238(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_ReplicatedContainerInfo>     Containers;                                        // 0x0248(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Items;                                             // 0x0258(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x2];                                      // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x02B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CB[0x5];                                      // 0x02CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x02D0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_3;                              // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x02E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UID_1;                        // 0x0304(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UID_2;                        // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UID_3;                        // 0x0344(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID_4;                        // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0377(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x037D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x037E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F[0x1];                                      // 0x037F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0380(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0395(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0396(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397[0x1];                                      // 0x0397(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E[0x2];                                      // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_5;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x03A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7[0x1];                                      // 0x03A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_RemoveGetInfo) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_RemoveGetInfo");
static_assert(sizeof(BP_JigMultiplayer_C_RemoveGetInfo) == 0x0003B8, "Wrong size on BP_JigMultiplayer_C_RemoveGetInfo");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, RemoveCount) == 0x000010, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::RemoveCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, ItemInfo) == 0x000018, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, RepContainers) == 0x0000F0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, VendorNewCount) == 0x000100, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CountRemoved_) == 0x000104, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, AttachmentsContainers) == 0x000108, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::AttachmentsContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, OldItemContainerUID) == 0x000118, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::OldItemContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, OldItemUID) == 0x00011C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::OldItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, OldUID) == 0x00012C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::OldUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, NewContainerUID) == 0x00013C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::NewContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, NewUID) == 0x00014C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, TempItem) == 0x000160, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::TempItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CUIDs) == 0x000238, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Containers) == 0x000248, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Items) == 0x000258, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Items' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_bool_Variable) == 0x000268, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000269, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable) == 0x00026C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_1) == 0x000270, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000274, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_2) == 0x000278, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x00027C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_3) == 0x000280, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000284, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_bool_Variable_1) == 0x000288, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Not_PreBool_ReturnValue_1) == 0x000289, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_4) == 0x00028C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_3) == 0x000290, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_5) == 0x000294, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_4) == 0x000298, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetVectorRot_ReturnValue) == 0x0002A0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_6) == 0x0002B0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_5) == 0x0002B4, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, K2Node_MakeArray_Array) == 0x0002B8, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x0002C8, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_bool_Variable_2) == 0x0002C9, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002CA, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, K2Node_MakeArray_Array_1) == 0x0002D0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_bool_Variable_3) == 0x0002E0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002E1, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetUniqueID_UID) == 0x0002E4, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_7) == 0x0002F4, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002F8, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_6) == 0x0002FC, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000300, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_BooleanAND_ReturnValue) == 0x000301, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetUniqueID_UID_1) == 0x000304, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetUniqueID_UID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_LastIndex_ReturnValue) == 0x000314, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000318, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_Length_ReturnValue) == 0x00031C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000320, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000324, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetUniqueID_UID_2) == 0x000328, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetUniqueID_UID_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_Length_ReturnValue_1) == 0x000338, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00033C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000340, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetUniqueID_UID_3) == 0x000344, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetUniqueID_UID_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_int_Variable_8) == 0x000354, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Add_IntInt_ReturnValue_7) == 0x000358, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00035C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetUniqueID_UID_4) == 0x000360, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetUniqueID_UID_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000370, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000374, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000375, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_BooleanAND_ReturnValue_1) == 0x000376, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_IsVendor_ReturnValue) == 0x000377, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000378, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_Contains_ReturnValue) == 0x00037C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, Temp_bool_Variable_4) == 0x00037D, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Not_PreBool_ReturnValue_4) == 0x00037E, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GetHostingSlots_Indexes) == 0x000380, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000390, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000394, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_BooleanAND_ReturnValue_2) == 0x000395, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000396, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000398, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x00039C, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_BooleanAND_ReturnValue_3) == 0x00039D, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Array_LastIndex_ReturnValue_5) == 0x0003A0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Array_LastIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x0003A4, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003A5, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_BooleanAND_ReturnValue_4) == 0x0003A6, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_SelectInt_ReturnValue) == 0x0003A8, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0003AC, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveGetInfo, CallFunc_SelectInt_ReturnValue_1) == 0x0003B0, "Member 'BP_JigMultiplayer_C_RemoveGetInfo::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.RemoveRequestByUID
// 0x003C (0x003C - 0x0000)
struct BP_JigMultiplayer_C_RemoveRequestByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Removed;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_RemoveRequestByUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_RemoveRequestByUID");
static_assert(sizeof(BP_JigMultiplayer_C_RemoveRequestByUID) == 0x00003C, "Wrong size on BP_JigMultiplayer_C_RemoveRequestByUID");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, Removed) == 0x000010, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::Removed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, Temp_bool_Variable) == 0x000011, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, Temp_int_Variable) == 0x000014, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_GetUniqueID_UniqueServerID) == 0x000028, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_RemoveRequestByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_RemoveRequestByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ReplaceLoadJigComponentByIndex
// 0x00C8 (0x00C8 - 0x0000)
struct BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReplaceContainerIndex;                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0020(0x0010)(Parm, OutParm)
	struct FGuid                                  UIDToAdd;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          AllUDs;                                            // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMPComponentSave_C*               K2Node_DynamicCast_AsBP_Jig_MPComponent_Save;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetMainContainerUIDByIndex_UID;           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMainContainerUIDByIndex_ContainerIndex; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex");
static_assert(sizeof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex) == 0x0000C8, "Wrong size on BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, SaveName) == 0x000000, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::SaveName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, UserIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, ReplaceContainerIndex) == 0x000014, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::ReplaceContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, ActionbarUIDs) == 0x000020, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, UIDToAdd) == 0x000030, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::UIDToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, AllUDs) == 0x000040, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::AllUDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, Temp_bool_Variable) == 0x000050, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, K2Node_DynamicCast_AsBP_Jig_MPComponent_Save) == 0x000060, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::K2Node_DynamicCast_AsBP_Jig_MPComponent_Save' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x00006C, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, Temp_int_Variable) == 0x000070, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, Temp_bool_Variable_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x000079, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00007C, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_Contains_ReturnValue) == 0x000081, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, Temp_int_Variable_1) == 0x000084, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x00008D, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_GetMainContainerUIDByIndex_UID) == 0x000090, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_GetMainContainerUIDByIndex_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_GetMainContainerUIDByIndex_ContainerIndex) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_GetMainContainerUIDByIndex_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A4, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_Contains_ReturnValue_1) == 0x0000AC, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex, CallFunc_Array_Add_ReturnValue_1) == 0x0000C4, "Member 'BP_JigMultiplayer_C_ReplaceLoadJigComponentByIndex::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.Save One Jig ContainerByIndex
// 0x0108 (0x0108 - 0x0000)
struct BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldClear;                                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ReplicatedContainerInfo             Temp;                                              // 0x0020(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  TargetUID;                                         // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     SavedContainers;                                   // 0x0088(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMPComponentSave_C*               CallFunc_CreateSaveGameObject_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex");
static_assert(sizeof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex) == 0x000108, "Wrong size on BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, SaveName) == 0x000000, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::SaveName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, UserIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, ContainerIndex) == 0x000014, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, ShouldClear) == 0x000019, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::ShouldClear' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Found) == 0x00001A, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp) == 0x000020, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, TargetUID) == 0x000070, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::TargetUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CurrentIndex) == 0x000080, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, SavedContainers) == 0x000088, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::SavedContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_bool_Variable) == 0x000098, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_bool_Variable_1) == 0x000099, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009B, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_int_Variable) == 0x00009C, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_bool_Variable_2) == 0x0000A0, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A1, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_int_Variable_1) == 0x0000A4, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_BooleanAND_ReturnValue) == 0x0000C5, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000C6, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C7, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C8, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000CC, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0000D8, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_int_Variable_2) == 0x0000DC, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, Temp_int_Variable_3) == 0x0000E0, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Array_Contains_ReturnValue) == 0x0000E4, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E8, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_BooleanAND_ReturnValue_2) == 0x0000ED, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000F0, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000F4, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_BooleanAND_ReturnValue_3) == 0x0000F5, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0000F8, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex, CallFunc_SaveGameToSlot_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_Save_One_Jig_ContainerByIndex::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SaveJigComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_SaveJigComponent final
{
public:
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_Player_C*                         CallFunc_GetCustomSave_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SaveJigComponent) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SaveJigComponent");
static_assert(sizeof(BP_JigMultiplayer_C_SaveJigComponent) == 0x000020, "Wrong size on BP_JigMultiplayer_C_SaveJigComponent");
static_assert(offsetof(BP_JigMultiplayer_C_SaveJigComponent, ActionbarUIDs) == 0x000000, "Member 'BP_JigMultiplayer_C_SaveJigComponent::ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveJigComponent, ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_SaveJigComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveJigComponent, CallFunc_GetCustomSave_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_SaveJigComponent::CallFunc_GetCustomSave_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SaveMultipleJigContainersByIndexes
// 0x0118 (0x0118 - 0x0000)
struct BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ContainerIndex;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldClear;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ReplicatedContainerInfo             Temp;                                              // 0x0030(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  TargetUID;                                         // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     SavedContainers;                                   // 0x0098(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMPComponentSave_C*               CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes");
static_assert(sizeof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes) == 0x000118, "Wrong size on BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, SaveName) == 0x000000, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::SaveName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, UserIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, ContainerIndex) == 0x000018, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, ShouldClear) == 0x000029, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::ShouldClear' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Found) == 0x00002A, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp) == 0x000030, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, TargetUID) == 0x000080, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::TargetUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CurrentIndex) == 0x000090, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, SavedContainers) == 0x000098, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::SavedContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_bool_Variable) == 0x0000A8, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_bool_Variable_1) == 0x0000A9, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AB, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_int_Variable) == 0x0000AC, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_bool_Variable_2) == 0x0000B0, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000B1, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_int_Variable_1) == 0x0000B4, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Array_LastIndex_ReturnValue) == 0x0000D0, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_BooleanAND_ReturnValue) == 0x0000D5, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Array_Contains_ReturnValue) == 0x0000D6, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0000E4, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_int_Variable_2) == 0x0000E8, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, Temp_int_Variable_3) == 0x0000EC, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Array_Contains_ReturnValue_1) == 0x0000F0, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F4, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F9, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000100, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_BooleanAND_ReturnValue_2) == 0x000101, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes, CallFunc_SaveGameToSlot_ReturnValue) == 0x000110, "Member 'BP_JigMultiplayer_C_SaveMultipleJigContainersByIndexes::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_FireArmChamberWeapon
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon final
{
public:
	struct FGuid                                  ChamberContainerUID;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  MagContainerUID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  BulletToChamberUID;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChamberContainerIndex;                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SendChamberUID_;                                   // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon) == 0x000038, "Wrong size on BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon, ChamberContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon::ChamberContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon, MagContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon, BulletToChamberUID) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon::BulletToChamberUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon, ChamberContainerIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon::ChamberContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon, SendChamberUID_) == 0x000034, "Member 'BP_JigMultiplayer_C_SERVER_FireArmChamberWeapon::SendChamberUID_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_ForwardInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_ForwardInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_ForwardInteract) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_ForwardInteract");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_ForwardInteract) == 0x000040, "Wrong size on BP_JigMultiplayer_C_SERVER_ForwardInteract");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_ForwardInteract, Actor) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_ForwardInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_ForwardInteract, Option) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_ForwardInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_ForwardInteract, Payload) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_ForwardInteract::Payload' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_LoadSaveDataFromClientSide
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide final
{
public:
	TArray<struct FS_ReplicatedContainerInfo>     MainJigContainers_0;                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FGuid>                          MainContainersIDs_0;                               // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_InvWeight>                   InventoryWeight_0;                                 // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide) == 0x000040, "Wrong size on BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide, MainJigContainers_0) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide::MainJigContainers_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide, MainContainersIDs_0) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide::MainContainersIDs_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide, InventoryWeight_0) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide::InventoryWeight_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide, ActionbarUIDs) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_LoadSaveDataFromClientSide::ActionbarUIDs' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestActorAddStackItem
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  WithUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem) == 0x000018, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem, WithUID) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestActorAddStackItem::WithUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestAddActorToContainer
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AddtoUID;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  TempUID;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          Stacks;                                            // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer) == 0x000040, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer, AddtoUID) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer::AddtoUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer, TempUID) == 0x000018, "Member 'BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer, ToIndex) == 0x000028, "Member 'BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer, FinalRotation) == 0x00002C, "Member 'BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer, Stacks) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_RequestAddActorToContainer::Stacks' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestChamberUID
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestChamberUID final
{
public:
	struct FGuid                                  ChamberContainerUID;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestChamberUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestChamberUID");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestChamberUID) == 0x000010, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestChamberUID");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestChamberUID, ChamberContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestChamberUID::ChamberContainerUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestConsumeItem
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestConsumeItem final
{
public:
	class UBP_JigMultiplayer_C*                   TargetComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomData;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestConsumeItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestConsumeItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestConsumeItem) == 0x000030, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestConsumeItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestConsumeItem, TargetComp) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestConsumeItem::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestConsumeItem, ItemUID) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestConsumeItem::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestConsumeItem, Amount) == 0x000018, "Member 'BP_JigMultiplayer_C_SERVER_RequestConsumeItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestConsumeItem, CustomData) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestConsumeItem::CustomData' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestCraftItem
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestCraftItem final
{
public:
	class UBP_JigMultiplayer_C*                   CompRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CraftIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ConsumeUIDs;                                       // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGuid                                  AddToContainer;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  TempUID;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  StackWith;                                         // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestCraftItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestCraftItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestCraftItem) == 0x000058, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestCraftItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, CompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::CompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, CraftIndex) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::CraftIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, ConsumeUIDs) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::ConsumeUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, AddToContainer) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::AddToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, ToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, FinalRotation) == 0x000034, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, TempUID) == 0x000038, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItem, StackWith) == 0x000048, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItem::StackWith' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestCraftItemDrop
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop final
{
public:
	class UBP_JigMultiplayer_C*                   CompRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CraftIndex;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ConsumeUIDs;                                       // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop) == 0x000020, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop, CompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop::CompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop, CraftIndex) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop::CraftIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop, ConsumeUIDs) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestCraftItemDrop::ConsumeUIDs' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestData
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestData final
{
public:
	class UBP_JigMultiplayer_C*                   JigMPCompRef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestData) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestData");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestData) == 0x000008, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestData");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestData, JigMPCompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestData::JigMPCompRef' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestDataFromSave
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestDataFromSave final
{
public:
	class UBP_JigMultiplayer_C*                   JigMPCompRef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestDataFromSave) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestDataFromSave");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestDataFromSave) == 0x000008, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestDataFromSave");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestDataFromSave, JigMPCompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestDataFromSave::JigMPCompRef' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestDropItem
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestDropItem final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CompTarget;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestDropItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestDropItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestDropItem) == 0x000020, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestDropItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestDropItem, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestDropItem::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestDropItem, Count) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestDropItem::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestDropItem, CompTarget) == 0x000018, "Member 'BP_JigMultiplayer_C_SERVER_RequestDropItem::CompTarget' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestEquipActorToContainer
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToMainUID;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer) == 0x000018, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer, ToMainUID) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestEquipActorToContainer::ToMainUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestExpandContainer
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestExpandContainer final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddColumns;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddRows;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestExpandContainer) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestExpandContainer");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestExpandContainer) == 0x000018, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestExpandContainer");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestExpandContainer, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestExpandContainer::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestExpandContainer, AddColumns) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestExpandContainer::AddColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestExpandContainer, AddRows) == 0x000014, "Member 'BP_JigMultiplayer_C_SERVER_RequestExpandContainer::AddRows' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestLoadReplaceOneContainerByIndex
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReplaceContainerIndex;                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex) == 0x000018, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex, SaveName) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex::SaveName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex, UserIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex, ReplaceContainerIndex) == 0x000014, "Member 'BP_JigMultiplayer_C_SERVER_RequestLoadReplaceOneContainerByIndex::ReplaceContainerIndex' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestMoveItemToAnotherComp
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp final
{
public:
	class UBP_JigMultiplayer_C*                   From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   To;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToIndex;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainer;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VendorAmount;                                      // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  VendorMoneyToUID;                                  // 0x003C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VendorMoneyToIndex;                                // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp) == 0x000050, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, From) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::From' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, To) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::To' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, ItemUID) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, FinalRotation) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, ToIndex) == 0x000024, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, ToContainer) == 0x000028, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, VendorAmount) == 0x000038, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::VendorAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, VendorMoneyToUID) == 0x00003C, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::VendorMoneyToUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp, VendorMoneyToIndex) == 0x00004C, "Member 'BP_JigMultiplayer_C_SERVER_RequestMoveItemToAnotherComp::VendorMoneyToIndex' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestReload
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestReload final
{
public:
	struct FGuid                                  UnloadUID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UnloadToContainerUID;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRot;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ReloadUID;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReloadToContainerUID;                              // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 WeaponRef;                                         // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestReload) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestReload");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestReload) == 0x000050, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestReload");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, UnloadUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::UnloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, UnloadToContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::UnloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, ToIndex) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, FinalRot) == 0x000024, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::FinalRot' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, ReloadUID) == 0x000028, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::ReloadUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, ReloadToContainerUID) == 0x000038, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::ReloadToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReload, WeaponRef) == 0x000048, "Member 'BP_JigMultiplayer_C_SERVER_RequestReload::WeaponRef' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestReloadInternal
// 0x0024 (0x0024 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestReloadInternal final
{
public:
	struct FGuid                                  MagContainerUID;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AmmoToAdd;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCap;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestReloadInternal) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestReloadInternal");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestReloadInternal) == 0x000024, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestReloadInternal");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReloadInternal, MagContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestReloadInternal::MagContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReloadInternal, AmmoToAdd) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestReloadInternal::AmmoToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestReloadInternal, MaxCap) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestReloadInternal::MaxCap' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestRemoveItem
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestRemoveItem final
{
public:
	class UBP_JigMultiplayer_C*                   TargetComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestRemoveItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestRemoveItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestRemoveItem) == 0x000020, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestRemoveItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestRemoveItem, TargetComp) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestRemoveItem::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestRemoveItem, ItemUID) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestRemoveItem::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestRemoveItem, Amount) == 0x000018, "Member 'BP_JigMultiplayer_C_SERVER_RequestRemoveItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestRemoveItem, CallbackToPlayer_) == 0x00001C, "Member 'BP_JigMultiplayer_C_SERVER_RequestRemoveItem::CallbackToPlayer_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestSaveGame
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestSaveGame final
{
public:
	class UBP_JigMultiplayer_C*                   MpRef;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestSaveGame) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestSaveGame");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestSaveGame) == 0x000018, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestSaveGame");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSaveGame, MpRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestSaveGame::MpRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSaveGame, ActionbarUIDs) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestSaveGame::ActionbarUIDs' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestSaveOneJigContainerByIndex
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex) == 0x000018, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex, SaveName) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex::SaveName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex, UserIndex) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex::UserIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex, ContainerIndex) == 0x000014, "Member 'BP_JigMultiplayer_C_SERVER_RequestSaveOneJigContainerByIndex::ContainerIndex' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestSplitItem
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestSplitItem final
{
public:
	class UBP_JigMultiplayer_C*                   FromComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   ToComp;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitAmount;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestSplitItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestSplitItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestSplitItem) == 0x000040, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestSplitItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, FromComp) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::FromComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, ToComp) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::ToComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, ItemUID) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, ToContainerUID) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, ToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, SplitAmount) == 0x000034, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::SplitAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSplitItem, Rotated_) == 0x000038, "Member 'BP_JigMultiplayer_C_SERVER_RequestSplitItem::Rotated_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestStackItem
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestStackItem final
{
public:
	class UBP_JigMultiplayer_C*                   FromCom;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   ToComp;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  DroppedUID;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReceiverUID;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStack;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestStackItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestStackItem");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestStackItem) == 0x000038, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestStackItem");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestStackItem, FromCom) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestStackItem::FromCom' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestStackItem, ToComp) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_RequestStackItem::ToComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestStackItem, DroppedUID) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestStackItem::DroppedUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestStackItem, ReceiverUID) == 0x000020, "Member 'BP_JigMultiplayer_C_SERVER_RequestStackItem::ReceiverUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestStackItem, MaxStack) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_RequestStackItem::MaxStack' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_RequestSwapContainers
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_RequestSwapContainers final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  SecondContainerUID;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_RequestSwapContainers) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_SERVER_RequestSwapContainers");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_RequestSwapContainers) == 0x000020, "Wrong size on BP_JigMultiplayer_C_SERVER_RequestSwapContainers");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSwapContainers, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_RequestSwapContainers::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_RequestSwapContainers, SecondContainerUID) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_RequestSwapContainers::SecondContainerUID' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_SameContainer_MoveToIndex
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex final
{
public:
	class UBP_JigMultiplayer_C*                   JigMPCompRef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InContainerIndex;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex) == 0x000038, "Wrong size on BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex, JigMPCompRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex::JigMPCompRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex, ItemUID) == 0x000008, "Member 'BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex, ToContainerUID) == 0x000018, "Member 'BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex, ToIndex) == 0x000028, "Member 'BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex, Rotated_) == 0x00002C, "Member 'BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex::Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex, InContainerIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_SERVER_SameContainer_MoveToIndex::InContainerIndex' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SERVER_UpdateStatByUID
// 0x0020 (0x0020 - 0x0000)
struct BP_JigMultiplayer_C_SERVER_UpdateStatByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           STAT_NAME;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SERVER_UpdateStatByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SERVER_UpdateStatByUID");
static_assert(sizeof(BP_JigMultiplayer_C_SERVER_UpdateStatByUID) == 0x000020, "Wrong size on BP_JigMultiplayer_C_SERVER_UpdateStatByUID");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_UpdateStatByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_SERVER_UpdateStatByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_UpdateStatByUID, STAT_NAME) == 0x000010, "Member 'BP_JigMultiplayer_C_SERVER_UpdateStatByUID::STAT_NAME' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SERVER_UpdateStatByUID, NewValue) == 0x000018, "Member 'BP_JigMultiplayer_C_SERVER_UpdateStatByUID::NewValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFindThenConsumeByItemID
// 0x0038 (0x0038 - 0x0000)
struct BP_JigMultiplayer_C_ServerFindThenConsumeByItemID final
{
public:
	class UJigsawItem_DataAsset_C*                ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFindThenConsumeByItemID");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID) == 0x000038, "Wrong size on BP_JigMultiplayer_C_ServerFindThenConsumeByItemID");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, ItemId) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::ItemId' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, Count) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, Result) == 0x00000C, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, Temp_int_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, Temp_bool_Variable_1) == 0x00001A, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001B, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, Temp_int_Variable_1) == 0x00001C, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_Array_LastIndex_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_BooleanAND_ReturnValue_1) == 0x000032, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000033, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFindThenConsumeByItemID, CallFunc_BooleanAND_ReturnValue_2) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerFindThenConsumeByItemID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFunc_HandleMoveToCapacityContainer
// 0x04A8 (0x04A8 - 0x0000)
struct BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer final
{
public:
	class UBP_JigMultiplayer_C*                   FromComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   ToComp;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Proceed_;                                          // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fail_;                                             // 0x0035(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StackWithIndex;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         UpdateCRequest;                                    // 0x003C(0x0014)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameComp;                                          // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  StackWithUID;                                      // 0x0054(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StackWithCount;                                    // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemInfo;                                          // 0x0068(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSpace;                                         // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SubContainerInfo>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_1;                          // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable_4;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable_5;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_3;                          // 0x01C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_4;                          // 0x01D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable_5;                              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x01F0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x02C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_2;            // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_3;            // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x2];                                      // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount;                   // 0x02EC(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_1;                 // 0x0300(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_2;                 // 0x0318(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_UpdateCount>                 K2Node_MakeArray_Array_5;                          // 0x0330(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x034E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F[0x1];                                      // 0x034F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x035E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35F[0x1];                                      // 0x035F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0367(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_6;                          // 0x0378(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x0390(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x046E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46F[0x1];                                      // 0x046F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCapacityContainer_ReturnValue;       // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_477[0x1];                                      // 0x0477(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckCapacityContainer_FreeSpace;         // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJigsawItem_DataAsset_C*>        CallFunc_CheckCapacityContainer_AvailableIDs;      // 0x0480(0x0010)(ReferenceParm)
	int32                                         CallFunc_CheckCapacityContainer_Index;             // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_5;            // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x049B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_6;            // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_2;        // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_3;        // 0x04A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer) == 0x0004A8, "Wrong size on BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, FromComp) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::FromComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, ToComp) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::ToComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, ItemUID) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, ToContainerUID) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, ToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Proceed_) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Proceed_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Fail_) == 0x000035, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Fail_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, StackWithIndex) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::StackWithIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, UpdateCRequest) == 0x00003C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::UpdateCRequest' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, SameComp) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::SameComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, StackWithUID) == 0x000054, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::StackWithUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, StackWithCount) == 0x000064, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::StackWithCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, ItemInfo) == 0x000068, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, NewCount) == 0x000140, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, FreeSpace) == 0x000144, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000148, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_IsVendor_ReturnValue) == 0x000149, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00014A, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable) == 0x00014B, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00014C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable) == 0x000150, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000154, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable_1) == 0x000158, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable_2) == 0x000159, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x00015A, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_3) == 0x00015B, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable_1) == 0x00015C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable_3) == 0x000164, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_4) == 0x000165, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable_2) == 0x000168, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x00016C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable_4) == 0x000170, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_5) == 0x000171, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable_3) == 0x000174, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000178, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array_1) == 0x000190, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable_4) == 0x0001A0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001A4, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable_5) == 0x0001B8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array_3) == 0x0001C0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001D0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array_4) == 0x0001D8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable_5) == 0x0001E8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_RemoveGetInfo_ItemInfo) == 0x0001F0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_RemoveGetInfo_RepContainers) == 0x0002C8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_RemoveGetInfo_VendorNewCount) == 0x0002D8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_RemoveGetInfo_CountRemoved_) == 0x0002DC, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_6) == 0x0002DD, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_IsMainCharacter_ReturnValue) == 0x0002DE, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_IsMainCharacter_ReturnValue_1) == 0x0002DF, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_IsMainCharacter_ReturnValue_2) == 0x0002E0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_IsMainCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x0002E4, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_IsMainCharacter_ReturnValue_3) == 0x0002E8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_IsMainCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002E9, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeStruct_S_UpdateCount) == 0x0002EC, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeStruct_S_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeStruct_S_UpdateCount_1) == 0x000300, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeStruct_S_UpdateCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_int_Variable_6) == 0x000314, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeStruct_S_UpdateCount_2) == 0x000318, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeStruct_S_UpdateCount_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array_5) == 0x000330, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000340, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000344, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_6) == 0x000348, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00034C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00034D, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue) == 0x00034E, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000350, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000354, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000358, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00035C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x00035D, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00035E, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000360, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000364, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000365, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000366, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000367, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_3) == 0x000368, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_4) == 0x000369, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_7) == 0x00036C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Add_IntInt_ReturnValue_8) == 0x000370, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, K2Node_MakeArray_Array_6) == 0x000378, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_AddNewItemToSlot_Added) == 0x000388, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x000390, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000468, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x00046C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, Temp_bool_Variable_6) == 0x00046D, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Not_PreBool_ReturnValue_7) == 0x00046E, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000470, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x000474, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_5) == 0x000475, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_CheckCapacityContainer_ReturnValue) == 0x000476, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_CheckCapacityContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_CheckCapacityContainer_FreeSpace) == 0x000478, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_CheckCapacityContainer_FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_CheckCapacityContainer_AvailableIDs) == 0x000480, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_CheckCapacityContainer_AvailableIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_CheckCapacityContainer_Index) == 0x000490, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_CheckCapacityContainer_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_5) == 0x000494, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x000498, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_Contains_ReturnValue) == 0x000499, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_6) == 0x00049A, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00049B, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_Array_LastIndex_ReturnValue_6) == 0x00049C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_Array_LastIndex_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x0004A0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue_2) == 0x0004A1, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_7) == 0x0004A2, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue_3) == 0x0004A3, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer, CallFunc_BooleanAND_ReturnValue_8) == 0x0004A4, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleMoveToCapacityContainer::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFunc_HandleRequestAddActorToContainer
// 0x0798 (0x0798 - 0x0000)
struct BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  AddtoUID;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  TempUID;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalRotation;                                     // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          Stacks;                                            // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         OldCount;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_UpdateCount>                 NewCounts;                                         // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Index2;                                            // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSpace;                                         // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStack;                                          // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRemCount;                                   // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          ContainerContent;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_ReplicatedContainerInfo>     PickupContent;                                     // 0x0080(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FContainerPickupsInfo                  NewItem;                                           // 0x0090(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  ItemToAdd;                                         // 0x0168(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x0270(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x0288(0x0050)()
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPickup_ReturnValue;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_IsValidPickup_PickupInfo;                 // 0x02E8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Values_Values;                        // 0x03C0(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x03D0(0x0010)(ReferenceParm)
	TArray<struct FS_ItemStat>                    CallFunc_GenerateRandomStats_Stats;                // 0x03E0(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x0400(0x0078)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486[0x2];                                      // 0x0486(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D[0x3];                                      // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_Pure_RootCUID;          // 0x049C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1;   // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info_1;                       // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count_1;                      // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig_1;          // 0x04E0(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData_1;                 // 0x04F8(0x0050)()
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x054D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E[0x2];                                      // 0x054E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x055D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E[0x2];                                      // 0x055E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_566[0x2];                                      // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_Pure_RootCUID_1;        // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount;                   // 0x0584(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x05A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C2[0x2];                                      // 0x05C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x05C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x05D8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1[0x7];                                      // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x06B8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnPickupAdded_Result;               // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer) == 0x000798, "Wrong size on BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, AddtoUID) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::AddtoUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, TempUID) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::TempUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, ToIndex) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, FinalRotation) == 0x00002C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::FinalRotation' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Stacks) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Stacks' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, OldCount) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::OldCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, NewCount) == 0x000044, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, NewCounts) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::NewCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Index2) == 0x000058, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Index2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Index1) == 0x00005C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Index1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, FreeSpace) == 0x000060, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, MaxStack) == 0x000064, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CurrentRemCount) == 0x000068, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CurrentRemCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, ContainerContent) == 0x000070, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, PickupContent) == 0x000080, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::PickupContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, NewItem) == 0x000090, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, ItemToAdd) == 0x000168, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::ItemToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Temp_int_Variable) == 0x000240, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000244, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000248, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_Info) == 0x000260, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_Count) == 0x000268, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_RandomStatsConfig) == 0x000270, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_CustomData) == 0x000288, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetComponentByClass_ReturnValue) == 0x0002D8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_IsValidPickup_ReturnValue) == 0x0002E0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_IsValidPickup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_IsValidPickup_PickupInfo) == 0x0002E8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_IsValidPickup_PickupInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Map_Values_Values) == 0x0003C0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Map_Keys_Keys) == 0x0003D0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GenerateRandomStats_Stats) == 0x0003E0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GenerateRandomStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_MakeVector2D_ReturnValue) == 0x0003F0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_MakeStruct_RepItemInfo) == 0x000400, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Temp_bool_Variable) == 0x000478, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Temp_bool_Variable_1) == 0x000479, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00047A, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00047B, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Temp_int_Variable_1) == 0x00047C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000480, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Temp_bool_Variable_2) == 0x000484, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000485, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, Temp_int_Variable_2) == 0x000488, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00048C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000490, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000494, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000498, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_FindRootContainer_Pure_RootCUID) == 0x00049C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_FindRootContainer_Pure_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0004B0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1) == 0x0004B8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_DynamicCast_AsBP_Mp_Interact_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_DynamicCast_bSuccess_1) == 0x0004C8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_Info_1) == 0x0004D0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_Info_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_Count_1) == 0x0004D8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_Count_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_RandomStatsConfig_1) == 0x0004E0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_RandomStatsConfig_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetItemInfo_CustomData_1) == 0x0004F8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetItemInfo_CustomData_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000548, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00054C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_BooleanAND_ReturnValue) == 0x00054D, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000550, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Add_IntInt_ReturnValue_4) == 0x000554, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000558, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x00055C, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Array_Contains_ReturnValue) == 0x00055D, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000560, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000564, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000565, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_FindRootContainer_Pure_RootCUID_1) == 0x000568, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_FindRootContainer_Pure_RootCUID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetContainerNameByUID_ContainerName) == 0x000578, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000580, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_MakeStruct_S_UpdateCount) == 0x000584, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_MakeStruct_S_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Array_Add_ReturnValue) == 0x000598, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetOwner_ReturnValue) == 0x0005A0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x0005A8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_DynamicCast_bSuccess_2) == 0x0005B8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0005BC, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0005C0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x0005C1, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_GetUniqueID_UID) == 0x0005C4, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, K2Node_MakeStruct_ContainerPickupsInfo) == 0x0005D8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_AddNewItemToSlot_Added) == 0x0006B0, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x0006B8, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer, CallFunc_JigMP_OnPickupAdded_Result) == 0x000790, "Member 'BP_JigMultiplayer_C_ServerFunc_HandleRequestAddActorToContainer::CallFunc_JigMP_OnPickupAdded_Result' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFunc_ProcessRequestStackAddActor
// 0x00F8 (0x00F8 - 0x0000)
struct BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  WithUID;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x0050(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x0068(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_Pure_RootCUID;          // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor) == 0x0000F8, "Wrong size on BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, WithUID) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::WithUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, NewCount) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, ItemCount) == 0x00001C, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::ItemCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_GetItemInfo_Info) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_GetItemInfo_Count) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_GetItemInfo_RandomStatsConfig) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_GetItemInfo_CustomData) == 0x000068, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, Temp_bool_Variable) == 0x0000B9, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Not_PreBool_ReturnValue) == 0x0000BA, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, Temp_int_Variable_1) == 0x0000BC, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, Temp_bool_Variable_1) == 0x0000C4, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C5, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_FindRootContainer_Pure_RootCUID) == 0x0000C8, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_FindRootContainer_Pure_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000E4, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Array_LastIndex_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000F0, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000F5, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F6, "Member 'BP_JigMultiplayer_C_ServerFunc_ProcessRequestStackAddActor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFunc_RequestStackItem
// 0x0118 (0x0118 - 0x0000)
struct BP_JigMultiplayer_C_ServerFunc_RequestStackItem final
{
public:
	class UBP_JigMultiplayer_C*                   FromCom;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   ToComp;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  DroppedUID;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ReceiverUID;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStack;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToUpdateWeight;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromUpdateWeight;                                  // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecIndex;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DroppedIndex;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecNewCount;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DroppedNewCount;                                   // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSpace;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVectorRot_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue_1;        // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFunc_RequestStackItem");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem) == 0x000118, "Wrong size on BP_JigMultiplayer_C_ServerFunc_RequestStackItem");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, FromCom) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::FromCom' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, ToComp) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::ToComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, DroppedUID) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::DroppedUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, ReceiverUID) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::ReceiverUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, MaxStack) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Success) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Success' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, ToUpdateWeight) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::ToUpdateWeight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, FromUpdateWeight) == 0x00003C, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::FromUpdateWeight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, RecIndex) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::RecIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, DroppedIndex) == 0x000044, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::DroppedIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, RecNewCount) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::RecNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, DroppedNewCount) == 0x00004C, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::DroppedNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, FreeSpace) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::FreeSpace' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_bool_Variable) == 0x000054, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Array_LastIndex_ReturnValue) == 0x000058, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_int_Variable) == 0x000060, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_bool_Variable_1) == 0x000068, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_int_Variable_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000074, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000079, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_GetVectorRot_ReturnValue) == 0x000080, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_GetVectorRot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x000090, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_GetHostingSlots_Indexes) == 0x000098, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_BooleanAND_ReturnValue) == 0x0000AC, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_bool_Variable_2) == 0x0000AD, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_bool_Variable_3) == 0x0000AE, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000AF, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000B0, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B1, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_int_Variable_2) == 0x0000B4, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_bool_Variable_4) == 0x0000BC, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000BD, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_int_Variable_3) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C8, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_BooleanAND_ReturnValue_2) == 0x0000CD, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_IsMainCharacter_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E1, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, Temp_int_Variable_4) == 0x0000E8, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F0, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000F5, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Array_LastIndex_ReturnValue_3) == 0x0000F8, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_BooleanAND_ReturnValue_3) == 0x0000FD, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Add_IntInt_ReturnValue_5) == 0x000100, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000104, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_EqualEqual_GuidGuid_ReturnValue_1) == 0x000109, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_EqualEqual_GuidGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Array_LastIndex_ReturnValue_4) == 0x00010C, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000110, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_BooleanAND_ReturnValue_4) == 0x000111, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_RequestStackItem, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000114, "Member 'BP_JigMultiplayer_C_ServerFunc_RequestStackItem::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFunc_UpdateCustomDataByUID
// 0x00B0 (0x00B0 - 0x0000)
struct BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Keys;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         Values;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Updated;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID) == 0x0000B0, "Wrong size on BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Keys) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Values) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Values' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Updated) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Updated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_bool_Variable) == 0x000031, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_int_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_bool_Variable_1) == 0x00003D, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_int_Variable_1) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_int_Variable_2) == 0x00004C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_bool_Variable_2) == 0x000054, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x000055, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_bool_Variable_3) == 0x000056, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Not_PreBool_ReturnValue_3) == 0x000057, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00006C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, Temp_int_Variable_3) == 0x000070, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Add_IntInt_ReturnValue_3) == 0x00008C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000091, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_IsMainCharacter_ReturnValue) == 0x000092, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000093, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_Add_ReturnValue_1) == 0x00009C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0000A4, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_Array_LastIndex_ReturnValue_3) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000AC, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000AD, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_BooleanAND_ReturnValue_2) == 0x0000AE, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID, CallFunc_BooleanAND_ReturnValue_3) == 0x0000AF, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateCustomDataByUID::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFunc_UpdateDurabilityByUID
// 0x0050 (0x0050 - 0x0000)
struct BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewDurability;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Updated;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID) == 0x000050, "Wrong size on BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, NewDurability) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::NewDurability' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, Updated) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::Updated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, Temp_int_Variable) == 0x000024, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, Temp_bool_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, Temp_bool_Variable_1) == 0x00002E, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002F, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, Temp_int_Variable_1) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_IsMainCharacter_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000044, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000049, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'BP_JigMultiplayer_C_ServerFunc_UpdateDurabilityByUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFuncExpandContainer
// 0x00D0 (0x00D0 - 0x0000)
struct BP_JigMultiplayer_C_ServerFuncExpandContainer final
{
public:
	struct FGuid                                  ContainerUID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddColumns;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddRows;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFuncExpandContainer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFuncExpandContainer");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFuncExpandContainer) == 0x0000D0, "Wrong size on BP_JigMultiplayer_C_ServerFuncExpandContainer");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, ContainerUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::ContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, AddColumns) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::AddColumns' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, AddRows) == 0x000014, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::AddRows' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001A, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00001B, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_int_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000024, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_bool_Variable) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_int_Variable_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_int_Variable_2) == 0x000044, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_bool_Variable_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, Temp_bool_Variable_2) == 0x00004E, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004F, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Array_LastIndex_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x000055, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BreakVector2D_X) == 0x000058, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, K2Node_Select_Default) == 0x000078, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue_4) == 0x000088, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue_5) == 0x000098, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Add_IntInt_ReturnValue_6) == 0x00009C, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_GetHostingSlots_Indexes) == 0x0000A8, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000C4, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C8, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncExpandContainer, CallFunc_BooleanAND_ReturnValue_3) == 0x0000C9, "Member 'BP_JigMultiplayer_C_ServerFuncExpandContainer::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFuncHandleEquipActor
// 0x0580 (0x0580 - 0x0000)
struct BP_JigMultiplayer_C_ServerFuncHandleEquipActor final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToMainUID;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerContent;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_ReplicatedContainerInfo>     PickupContent;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Index_0;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  NewItem;                                           // 0x0040(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigMPComponentInterface_C> K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface; // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetItemInfo_Info;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemInfo_Count;                        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   CallFunc_GetItemInfo_RandomStatsConfig;            // 0x0180(0x0018)(HasGetValueTypeHash)
	TMap<class FString, class FString>            CallFunc_GetItemInfo_CustomData;                   // 0x0198(0x0050)()
	TArray<class FString>                         CallFunc_Map_Values_Values;                        // 0x01E8(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x01F8(0x0010)(ReferenceParm)
	TArray<struct FS_ItemStat>                    CallFunc_GenerateRandomStats_Stats;                // 0x0208(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x0228(0x0078)(HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x02B0(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x0390(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnPickupEquipped_Result;            // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_JigMP_OnPickupEquipped_OverrideActor;     // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPickup_ReturnValue;                // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_IsValidPickup_PickupInfo;                 // 0x0490(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x056D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E[0x2];                                      // 0x056E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_576[0x2];                                      // 0x0576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFuncHandleEquipActor");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor) == 0x000580, "Wrong size on BP_JigMultiplayer_C_ServerFuncHandleEquipActor");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, ActorRef) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, ToMainUID) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::ToMainUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, ContainerContent) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::ContainerContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, PickupContent) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::PickupContent' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, Index_0) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, NewItem) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, Temp_int_Variable) == 0x000118, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, Temp_bool_Variable) == 0x000120, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, Temp_bool_Variable_1) == 0x000122, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, Temp_int_Variable_1) == 0x000124, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetContainerNameByUID_ContainerName) == 0x000130, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetOwner_ReturnValue) == 0x000138, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000140, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface) == 0x000158, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::K2Node_DynamicCast_AsBP_Jig_MPComponent_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetItemInfo_Info) == 0x000170, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetItemInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetItemInfo_Count) == 0x000178, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetItemInfo_Count' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetItemInfo_RandomStatsConfig) == 0x000180, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetItemInfo_RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetItemInfo_CustomData) == 0x000198, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetItemInfo_CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Map_Values_Values) == 0x0001E8, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Map_Keys_Keys) == 0x0001F8, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GenerateRandomStats_Stats) == 0x000208, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GenerateRandomStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_MakeVector2D_ReturnValue) == 0x000218, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, K2Node_MakeStruct_RepItemInfo) == 0x000228, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetUniqueID_UID) == 0x0002A0, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, K2Node_MakeStruct_ContainerPickupsInfo) == 0x0002B0, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_AddNewItemToSlot_Added) == 0x000388, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x000390, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_JigMP_OnPickupEquipped_Result) == 0x000468, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_JigMP_OnPickupEquipped_Result' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_JigMP_OnPickupEquipped_OverrideActor) == 0x000470, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_JigMP_OnPickupEquipped_OverrideActor' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_IsValid_ReturnValue) == 0x000478, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000480, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_IsValidPickup_ReturnValue) == 0x000488, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_IsValidPickup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_IsValidPickup_PickupInfo) == 0x000490, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_IsValidPickup_PickupInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Array_LastIndex_ReturnValue) == 0x000568, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00056C, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_BooleanAND_ReturnValue) == 0x00056D, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000570, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000574, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_BooleanAND_ReturnValue_1) == 0x000575, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_Array_Length_ReturnValue) == 0x000578, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00057C, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncHandleEquipActor, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00057D, "Member 'BP_JigMultiplayer_C_ServerFuncHandleEquipActor::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerFuncUpdateDurabilityByUID
// 0x01A0 (0x01A0 - 0x0000)
struct BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinusDur;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyItemIfZeroDur_;                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewDur;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0038(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID");
static_assert(sizeof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID) == 0x0001A0, "Wrong size on BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, MinusDur) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::MinusDur' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, DestroyItemIfZeroDur_) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::DestroyItemIfZeroDur_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, NewDur) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::NewDur' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, Temp_int_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, Temp_bool_Variable) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, Temp_bool_Variable_1) == 0x000032, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000033, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_RemoveGetInfo_ItemInfo) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_RemoveGetInfo_RepContainers) == 0x000110, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000120, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_RemoveGetInfo_CountRemoved_) == 0x000124, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, Temp_int_Variable_1) == 0x000128, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000130, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_BreakVector2D_X) == 0x000138, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_BreakVector2D_Y) == 0x000140, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000150, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_FMax_ReturnValue) == 0x000158, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000160, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_MakeVector2D_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00017C, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000180, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_BreakVector2D_X_1) == 0x000188, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_BreakVector2D_Y_1) == 0x000190, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000198, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000199, "Member 'BP_JigMultiplayer_C_ServerFuncUpdateDurabilityByUID::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerHandleSplitRequest
// 0x0328 (0x0328 - 0x0000)
struct BP_JigMultiplayer_C_ServerHandleSplitRequest final
{
public:
	class UBP_JigMultiplayer_C*                   FromComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   ToComp;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ToIndex;                                           // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitAmount;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  NewItemUID;                                        // 0x003C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  NewItem;                                           // 0x0050(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FGuid>                          K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ConstParm, ReferenceParm)
	struct FContainerPickupsInfo                  CallFunc_GetItemByUID_Item;                        // 0x0138(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_Found;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_InMainContainer_;            // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_1;                          // 0x0218(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_2;                          // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue_1;            // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E[0x2];                                      // 0x023E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x0240(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerHandleSplitRequest) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerHandleSplitRequest");
static_assert(sizeof(BP_JigMultiplayer_C_ServerHandleSplitRequest) == 0x000328, "Wrong size on BP_JigMultiplayer_C_ServerHandleSplitRequest");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, FromComp) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::FromComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, ToComp) == 0x000008, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::ToComp' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, ItemUID) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, ToContainerUID) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, ToIndex) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, SplitAmount) == 0x000034, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::SplitAmount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, Rotated_) == 0x000038, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, NewItemUID) == 0x00003C, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::NewItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, NewCount) == 0x00004C, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, NewItem) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_GetItemByUID_Item) == 0x000138, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_GetItemByUID_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_GetItemByUID_Found) == 0x000210, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_GetItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_GetItemByUID_InMainContainer_) == 0x000211, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_GetItemByUID_InMainContainer_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, K2Node_MakeArray_Array_1) == 0x000218, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, K2Node_MakeArray_Array_2) == 0x000228, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_Not_PreBool_ReturnValue) == 0x000238, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_IsMainCharacter_ReturnValue) == 0x000239, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_IsMainCharacter_ReturnValue_1) == 0x00023A, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_IsMainCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00023B, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, Temp_bool_Variable) == 0x00023C, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_AddNewItemToSlot_Added) == 0x00023D, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x000240, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, K2Node_Select_Default) == 0x000318, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_Subtract_IntInt_ReturnValue) == 0x00031C, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerHandleSplitRequest, CallFunc_Greater_IntInt_ReturnValue) == 0x000320, "Member 'BP_JigMultiplayer_C_ServerHandleSplitRequest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ServerUpdateCountByUID
// 0x0058 (0x0058 - 0x0000)
struct BP_JigMultiplayer_C_ServerUpdateCountByUID final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldCount;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ServerUpdateCountByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ServerUpdateCountByUID");
static_assert(sizeof(BP_JigMultiplayer_C_ServerUpdateCountByUID) == 0x000058, "Wrong size on BP_JigMultiplayer_C_ServerUpdateCountByUID");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, ItemUID) == 0x000000, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, NewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, OldCount) == 0x000014, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::OldCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, Temp_bool_Variable_1) == 0x000022, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000040, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000044, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00004C, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ServerUpdateCountByUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'BP_JigMultiplayer_C_ServerUpdateCountByUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetActorRefByItemUID
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_SetActorRefByItemUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetActorRefByItemUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetActorRefByItemUID");
static_assert(sizeof(BP_JigMultiplayer_C_SetActorRefByItemUID) == 0x000040, "Wrong size on BP_JigMultiplayer_C_SetActorRefByItemUID");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, ActorRef) == 0x000010, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, Temp_bool_Variable_1) == 0x00002C, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002D, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000034, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetActorRefByItemUID, CallFunc_BooleanAND_ReturnValue_1) == 0x00003D, "Member 'BP_JigMultiplayer_C_SetActorRefByItemUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetContainerSettingsFromWidget
// 0x0178 (0x0178 - 0x0000)
struct BP_JigMultiplayer_C_SetContainerSettingsFromWidget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRandomContainerItem>           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0070(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_JigCompContentSettings              K2Node_MakeStruct_S_JigCompContentSettings;        // 0x0140(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetContainerSettingsFromWidget");
static_assert(sizeof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget) == 0x000178, "Wrong size on BP_JigMultiplayer_C_SetContainerSettingsFromWidget");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, Temp_bool_Variable) == 0x000000, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_MakeArray_Array_1) == 0x000070, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000B8, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000D0, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_GetListOfContainers_Containers) == 0x0000E8, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_IsEquipTo__ReturnValue) == 0x000101, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_SelectInt_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_Select_Default) == 0x000108, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Conv_TextToString_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_SelectInt_ReturnValue_1) == 0x000130, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Conv_StringToName_ReturnValue) == 0x000134, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, K2Node_MakeStruct_S_JigCompContentSettings) == 0x000140, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::K2Node_MakeStruct_S_JigCompContentSettings' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetContainerSettingsFromWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'BP_JigMultiplayer_C_SetContainerSettingsFromWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetPermissions
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMultiplayer_C_SetPermissions final
{
public:
	class UJSIContainer_C*                        JSITarget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue_1;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCraftingStation_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_MakeStruct_Key;                             // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetPermissions) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetPermissions");
static_assert(sizeof(BP_JigMultiplayer_C_SetPermissions) == 0x000030, "Wrong size on BP_JigMultiplayer_C_SetPermissions");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, JSITarget) == 0x000000, "Member 'BP_JigMultiplayer_C_SetPermissions::JSITarget' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, Temp_bool_Variable) == 0x000008, "Member 'BP_JigMultiplayer_C_SetPermissions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_IsVendor_ReturnValue) == 0x000009, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_IsVendor_ReturnValue_1) == 0x00000A, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_IsVendor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_IsCraftingStation_ReturnValue) == 0x00000B, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_IsCraftingStation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_JigMultiplayer_C_SetPermissions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, K2Node_MakeStruct_Key) == 0x000010, "Member 'BP_JigMultiplayer_C_SetPermissions::K2Node_MakeStruct_Key' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, K2Node_Select_Default) == 0x000028, "Member 'BP_JigMultiplayer_C_SetPermissions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, Temp_bool_Variable_2) == 0x000029, "Member 'BP_JigMultiplayer_C_SetPermissions::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, Temp_bool_Variable_3) == 0x00002A, "Member 'BP_JigMultiplayer_C_SetPermissions::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, K2Node_Select_Default_1) == 0x00002B, "Member 'BP_JigMultiplayer_C_SetPermissions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPermissions, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002F, "Member 'BP_JigMultiplayer_C_SetPermissions::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetPickupContainerData
// 0x0110 (0x0110 - 0x0000)
struct BP_JigMultiplayer_C_SetPickupContainerData final
{
public:
	struct FContainerPickupsInfo                  PickupInfo_0;                                      // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     MainReplicatedContainers;                          // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetPickupContainerData) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetPickupContainerData");
static_assert(sizeof(BP_JigMultiplayer_C_SetPickupContainerData) == 0x000110, "Wrong size on BP_JigMultiplayer_C_SetPickupContainerData");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, PickupInfo_0) == 0x000000, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::PickupInfo_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, MainReplicatedContainers) == 0x0000D8, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::MainReplicatedContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, Temp_int_Variable) == 0x0000E8, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_Array_LastIndex_ReturnValue) == 0x0000EC, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000F1, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_GetOwner_ReturnValue) == 0x0000F8, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, Temp_bool_Variable) == 0x000100, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_Not_PreBool_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetPickupContainerData, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_JigMultiplayer_C_SetPickupContainerData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetupInventoryWidget
// 0x00F0 (0x00F0 - 0x0000)
struct BP_JigMultiplayer_C_SetupInventoryWidget final
{
public:
	bool                                          ClearInv_;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReInitWidget_;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceInitSP_;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            InventoryWidgetRef_0;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainCharacter_ReturnValue;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetupInventoryWidget) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetupInventoryWidget");
static_assert(sizeof(BP_JigMultiplayer_C_SetupInventoryWidget) == 0x0000F0, "Wrong size on BP_JigMultiplayer_C_SetupInventoryWidget");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, ClearInv_) == 0x000000, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::ClearInv_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, ReInitWidget_) == 0x000001, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::ReInitWidget_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, ForceInitSP_) == 0x000002, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::ForceInitSP_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, InventoryWidgetRef_0) == 0x000008, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::InventoryWidgetRef_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, Temp_bool_Variable) == 0x000010, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Not_PreBool_ReturnValue_1) == 0x000012, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, Temp_bool_Variable_1) == 0x000013, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000018, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Not_PreBool_ReturnValue_2) == 0x000029, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000030, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x000048, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_GetListOfContainers_Containers) == 0x000060, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, Temp_bool_IsClosed_Variable) == 0x000070, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Array_LastIndex_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, Temp_bool_Has_Been_Initd_Variable) == 0x00007C, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_IsMainCharacter_ReturnValue) == 0x00007D, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_IsMainCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, Temp_int_Variable) == 0x000080, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_IsEquipTo__ReturnValue) == 0x000084, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Not_PreBool_ReturnValue_3) == 0x000085, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00008C, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_BooleanAND_ReturnValue) == 0x00008D, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_GetDisplayName_ReturnValue) == 0x000098, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, Temp_int_Variable_1) == 0x0000A8, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D5, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D6, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D7, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_BooleanOR_ReturnValue) == 0x0000D9, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_Create_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E8, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupInventoryWidget, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'BP_JigMultiplayer_C_SetupInventoryWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetupNewAddedItem
// 0x0140 (0x0140 - 0x0000)
struct BP_JigMultiplayer_C_SetupNewAddedItem final
{
public:
	class UJSIContainer_C*                        JSIRef;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          AllItems;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FRepItemInfo                           Info;                                              // 0x0018(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SubContainerInfo                    CallFunc_Array_Get_Item;                           // 0x00B4(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_SetUniqueID_UniqueID;                     // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetupNewAddedItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetupNewAddedItem");
static_assert(sizeof(BP_JigMultiplayer_C_SetupNewAddedItem) == 0x000140, "Wrong size on BP_JigMultiplayer_C_SetupNewAddedItem");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, JSIRef) == 0x000000, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::JSIRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, AllItems) == 0x000008, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::AllItems' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, Info) == 0x000018, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Array_LastIndex_ReturnValue) == 0x000090, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000098, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, Temp_bool_Variable) == 0x0000A1, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Not_PreBool_ReturnValue) == 0x0000A2, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, Temp_int_Variable) == 0x0000A4, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, Temp_int_Variable_1) == 0x0000AC, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, Temp_bool_Variable_1) == 0x0000B0, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000D8, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D9, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_AddNewInventoryItem_Added) == 0x0000DA, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_AddNewInventoryItem_SlotIndex) == 0x0000DC, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_AddNewInventoryItem_ItemInfo) == 0x0000E0, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x0000E8, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_AddNewInventoryItem_Stacked_) == 0x0000F0, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_SetUniqueID_UniqueID) == 0x0000F4, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_SetUniqueID_UniqueID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_GetContainerOneRef_ContainerRef) == 0x000108, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000110, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000124, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_GetListOfContainers_Containers) == 0x000128, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000138, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00013C, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_BooleanAND_ReturnValue) == 0x00013D, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00013E, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetupNewAddedItem, CallFunc_BooleanAND_ReturnValue_1) == 0x00013F, "Member 'BP_JigMultiplayer_C_SetupNewAddedItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetupWidgetCleanupTimer
// 0x0008 (0x0008 - 0x0000)
struct BP_JigMultiplayer_C_SetupWidgetCleanupTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetupWidgetCleanupTimer) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetupWidgetCleanupTimer");
static_assert(sizeof(BP_JigMultiplayer_C_SetupWidgetCleanupTimer) == 0x000008, "Wrong size on BP_JigMultiplayer_C_SetupWidgetCleanupTimer");
static_assert(offsetof(BP_JigMultiplayer_C_SetupWidgetCleanupTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_JigMultiplayer_C_SetupWidgetCleanupTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SetVendorPriceOfSoldItem
// 0x0128 (0x0128 - 0x0000)
struct BP_JigMultiplayer_C_SetVendorPriceOfSoldItem final
{
public:
	struct FContainerPickupsInfo                  Info;                                              // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     Containers;                                        // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	double                                        BasePrice;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SetVendorPriceOfSoldItem");
static_assert(sizeof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem) == 0x000128, "Wrong size on BP_JigMultiplayer_C_SetVendorPriceOfSoldItem");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, Info) == 0x000000, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, Containers) == 0x0000D8, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::Containers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, BasePrice) == 0x0000E8, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::BasePrice' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F0, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, Temp_int_Variable) == 0x0000F4, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000F8, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, Temp_bool_Variable) == 0x000101, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, Temp_bool_Variable_1) == 0x000102, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Not_PreBool_ReturnValue) == 0x000103, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x000104, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_BooleanAND_ReturnValue) == 0x000105, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, Temp_int_Variable_1) == 0x000108, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000111, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_IsVendor_ReturnValue) == 0x000120, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_IsVendor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SetVendorPriceOfSoldItem, CallFunc_BooleanAND_ReturnValue_2) == 0x000121, "Member 'BP_JigMultiplayer_C_SetVendorPriceOfSoldItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.StartRefillTimer
// 0x0001 (0x0001 - 0x0000)
struct BP_JigMultiplayer_C_StartRefillTimer final
{
public:
	bool                                          ClearContainer_;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_StartRefillTimer) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_StartRefillTimer");
static_assert(sizeof(BP_JigMultiplayer_C_StartRefillTimer) == 0x000001, "Wrong size on BP_JigMultiplayer_C_StartRefillTimer");
static_assert(offsetof(BP_JigMultiplayer_C_StartRefillTimer, ClearContainer_) == 0x000000, "Member 'BP_JigMultiplayer_C_StartRefillTimer::ClearContainer_' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.SwapTwoItems
// 0x03C0 (0x03C0 - 0x0000)
struct BP_JigMultiplayer_C_SwapTwoItems final
{
public:
	struct FGuid                                  Item1;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  Item2;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemoveCount;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0028(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo_1;                 // 0x0118(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers_1;            // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount_1;           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved__1;            // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x0208(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added_1;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo_1;         // 0x02E8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_SwapTwoItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_SwapTwoItems");
static_assert(sizeof(BP_JigMultiplayer_C_SwapTwoItems) == 0x0003C0, "Wrong size on BP_JigMultiplayer_C_SwapTwoItems");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, Item1) == 0x000000, "Member 'BP_JigMultiplayer_C_SwapTwoItems::Item1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, Item2) == 0x000010, "Member 'BP_JigMultiplayer_C_SwapTwoItems::Item2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, RemoveCount) == 0x000020, "Member 'BP_JigMultiplayer_C_SwapTwoItems::RemoveCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_ItemInfo) == 0x000028, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_RepContainers) == 0x000100, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000110, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_CountRemoved_) == 0x000114, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_ItemInfo_1) == 0x000118, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_RepContainers_1) == 0x0001F0, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_RepContainers_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_VendorNewCount_1) == 0x000200, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_VendorNewCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_RemoveGetInfo_CountRemoved__1) == 0x000204, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_RemoveGetInfo_CountRemoved__1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_AddNewItemToSlot_Added) == 0x000205, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x000208, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_AddNewItemToSlot_Added_1) == 0x0002E0, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_AddNewItemToSlot_Added_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_SwapTwoItems, CallFunc_AddNewItemToSlot_AddedItemInfo_1) == 0x0002E8, "Member 'BP_JigMultiplayer_C_SwapTwoItems::CallFunc_AddNewItemToSlot_AddedItemInfo_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.TakeMoney
// 0x01B8 (0x01B8 - 0x0000)
struct BP_JigMultiplayer_C_TakeMoney final
{
public:
	int32                                         Price;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                Currency;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_UpdateCount>                 UpdateMoneyCount;                                  // 0x0018(0x0010)(Parm, OutParm)
	int32                                         NewCount;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index2;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_UpdateCount>                 UpdateCounts;                                      // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentMoney;                                      // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_RemoveGetInfo_ItemInfo;                   // 0x0078(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     CallFunc_RemoveGetInfo_RepContainers;              // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_RemoveGetInfo_VendorNewCount;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGetInfo_CountRemoved_;              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount;                   // 0x017C(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_UpdateCount                         K2Node_MakeStruct_S_UpdateCount_1;                 // 0x0190(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_TakeMoney) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_TakeMoney");
static_assert(sizeof(BP_JigMultiplayer_C_TakeMoney) == 0x0001B8, "Wrong size on BP_JigMultiplayer_C_TakeMoney");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Price) == 0x000000, "Member 'BP_JigMultiplayer_C_TakeMoney::Price' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Currency) == 0x000008, "Member 'BP_JigMultiplayer_C_TakeMoney::Currency' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_TakeMoney::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, UpdateMoneyCount) == 0x000018, "Member 'BP_JigMultiplayer_C_TakeMoney::UpdateMoneyCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, NewCount) == 0x000028, "Member 'BP_JigMultiplayer_C_TakeMoney::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Index2) == 0x00002C, "Member 'BP_JigMultiplayer_C_TakeMoney::Index2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Index1) == 0x000030, "Member 'BP_JigMultiplayer_C_TakeMoney::Index1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, UpdateCounts) == 0x000038, "Member 'BP_JigMultiplayer_C_TakeMoney::UpdateCounts' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CurrentMoney) == 0x000048, "Member 'BP_JigMultiplayer_C_TakeMoney::CurrentMoney' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Temp_int_Variable) == 0x00004C, "Member 'BP_JigMultiplayer_C_TakeMoney::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Temp_bool_Variable) == 0x000054, "Member 'BP_JigMultiplayer_C_TakeMoney::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Not_PreBool_ReturnValue) == 0x000055, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Temp_bool_Variable_1) == 0x000056, "Member 'BP_JigMultiplayer_C_TakeMoney::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Not_PreBool_ReturnValue_1) == 0x000057, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Temp_int_Variable_1) == 0x000058, "Member 'BP_JigMultiplayer_C_TakeMoney::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Temp_bool_Variable_2) == 0x000060, "Member 'BP_JigMultiplayer_C_TakeMoney::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Not_PreBool_ReturnValue_2) == 0x000061, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, Temp_int_Variable_2) == 0x000064, "Member 'BP_JigMultiplayer_C_TakeMoney::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Array_LastIndex_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000075, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_RemoveGetInfo_ItemInfo) == 0x000078, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_RemoveGetInfo_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_RemoveGetInfo_RepContainers) == 0x000150, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_RemoveGetInfo_RepContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_RemoveGetInfo_VendorNewCount) == 0x000160, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_RemoveGetInfo_VendorNewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_RemoveGetInfo_CountRemoved_) == 0x000164, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_RemoveGetInfo_CountRemoved_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000168, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00016C, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_BooleanAND_ReturnValue_1) == 0x00016D, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Subtract_IntInt_ReturnValue) == 0x000170, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000174, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000178, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000179, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, K2Node_MakeStruct_S_UpdateCount) == 0x00017C, "Member 'BP_JigMultiplayer_C_TakeMoney::K2Node_MakeStruct_S_UpdateCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, K2Node_MakeStruct_S_UpdateCount_1) == 0x000190, "Member 'BP_JigMultiplayer_C_TakeMoney::K2Node_MakeStruct_S_UpdateCount_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Array_Add_ReturnValue) == 0x0001A4, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Array_Add_ReturnValue_1) == 0x0001A8, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0001AC, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0001B0, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TakeMoney, CallFunc_BooleanAND_ReturnValue_2) == 0x0001B1, "Member 'BP_JigMultiplayer_C_TakeMoney::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.ToggleInventory
// 0x0080 (0x0080 - 0x0000)
struct BP_JigMultiplayer_C_ToggleInventory final
{
public:
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Ingame_C*                           CallFunc_GetInGameUI_UI;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USwimmingComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_1;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Ingame_C*                           CallFunc_GetInGameUI_UI_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USwimmingComponent_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_ToggleInventory) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_ToggleInventory");
static_assert(sizeof(BP_JigMultiplayer_C_ToggleInventory) == 0x000080, "Wrong size on BP_JigMultiplayer_C_ToggleInventory");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetGameHUD_HUD) == 0x000000, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, K2Node_DynamicCast_AsBPI_Player) == 0x000010, "Member 'BP_JigMultiplayer_C_ToggleInventory::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_JigMultiplayer_C_ToggleInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetInGameUI_UI) == 0x000028, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetInGameUI_UI' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, K2Node_DynamicCast_AsBPI_Player_1) == 0x000040, "Member 'BP_JigMultiplayer_C_ToggleInventory::K2Node_DynamicCast_AsBPI_Player_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_JigMultiplayer_C_ToggleInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000051, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetInGameUI_UI_1) == 0x000058, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetInGameUI_UI_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetBoolCVar_ReturnValue) == 0x000068, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000069, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_ToggleInventory, CallFunc_IsVisible_ReturnValue) == 0x000079, "Member 'BP_JigMultiplayer_C_ToggleInventory::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.TryAddNewItem
// 0x07F8 (0x07F8 - 0x0000)
struct BP_JigMultiplayer_C_TryAddNewItem final
{
public:
	struct FS_ReplicatedContainerInfo             RepContainer;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FRandomContainerItem                   ItemToAdd;                                         // 0x0050(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CheckWeight_;                                      // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TryStacking_;                                      // 0x00A9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CustomMaxStack;                                    // 0x00AC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  AddedItemInfo;                                     // 0x00B0(0x00D8)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Added_;                                            // 0x0188(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stacked_;                                          // 0x0189(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ToIndex;                                           // 0x019C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomInt;                                         // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  NewItem;                                           // 0x01A8(0x00D8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     AppendNewContainers;                               // 0x0280(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_SubContainerInfo>            NewSubCo;                                          // 0x0290(0x0010)(Edit, BlueprintVisible)
	int32                                         Index_0;                                           // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  SubContainerUID;                                   // 0x02A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  NewItemUID;                                        // 0x02B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C6[0x2];                                      // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CF[0x1];                                      // 0x02CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_FindRootContainer_RootCUID;               // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContainerNameByUID_ContainerName;      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInventoryWeightByMainContainerName_Weight; // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemByContainerUID_Found_;     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemByContainerUID_IsEquipTo;  // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x6];                                      // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetEquippedItemByContainerUID_Info;       // 0x0318(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x2];                                      // 0x0402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_416[0x2];                                      // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x041F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemStat>                    CallFunc_GenerateRandomStats_Stats;                // 0x0460(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0488(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Found;             // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x3];                                      // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_Index;             // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Rotated_;          // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x04C8(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x05A0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_3;                              // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetHostingSlots_Indexes;                  // 0x05C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E2[0x6];                                      // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           K2Node_MakeStruct_RepItemInfo;                     // 0x05E8(0x0078)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0668(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddToContainerIgnoreIndexes_Proceed;   // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_679[0x3];                                      // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SubContainerInfo                    K2Node_MakeStruct_S_SubContainerInfo;              // 0x067C(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ReplicatedContainerInfo             K2Node_MakeStruct_S_ReplicatedContainerInfo;       // 0x06A8(0x0050)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID;                          // 0x06F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UID_1;                        // 0x070C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71C[0x4];                                      // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo_1;          // 0x0720(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_TryAddNewItem) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_TryAddNewItem");
static_assert(sizeof(BP_JigMultiplayer_C_TryAddNewItem) == 0x0007F8, "Wrong size on BP_JigMultiplayer_C_TryAddNewItem");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, RepContainer) == 0x000000, "Member 'BP_JigMultiplayer_C_TryAddNewItem::RepContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, ItemToAdd) == 0x000050, "Member 'BP_JigMultiplayer_C_TryAddNewItem::ItemToAdd' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CheckWeight_) == 0x0000A8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CheckWeight_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, TryStacking_) == 0x0000A9, "Member 'BP_JigMultiplayer_C_TryAddNewItem::TryStacking_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CustomMaxStack) == 0x0000AC, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CustomMaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, AddedItemInfo) == 0x0000B0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::AddedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Added_) == 0x000188, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Added_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Stacked_) == 0x000189, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, DA) == 0x000190, "Member 'BP_JigMultiplayer_C_TryAddNewItem::DA' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Rotated) == 0x000198, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Rotated' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, ToIndex) == 0x00019C, "Member 'BP_JigMultiplayer_C_TryAddNewItem::ToIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, RandomInt) == 0x0001A0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::RandomInt' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, NewItem) == 0x0001A8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::NewItem' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, AppendNewContainers) == 0x000280, "Member 'BP_JigMultiplayer_C_TryAddNewItem::AppendNewContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, NewSubCo) == 0x000290, "Member 'BP_JigMultiplayer_C_TryAddNewItem::NewSubCo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Index_0) == 0x0002A0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Index_0' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, SubContainerUID) == 0x0002A4, "Member 'BP_JigMultiplayer_C_TryAddNewItem::SubContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, NewItemUID) == 0x0002B4, "Member 'BP_JigMultiplayer_C_TryAddNewItem::NewItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002C4, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002C5, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0002C8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_bool_Variable) == 0x0002CC, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Not_PreBool_ReturnValue) == 0x0002CD, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0002CE, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_int_Variable) == 0x0002D0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002D4, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Add_IntInt_ReturnValue) == 0x0002D8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_bool_Variable_1) == 0x0002DC, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002DD, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_bool_Variable_2) == 0x0002DE, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002DF, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Array_LastIndex_ReturnValue) == 0x0002E0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_SelectInt_ReturnValue) == 0x0002E4, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_FindRootContainer_RootCUID) == 0x0002E8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_FindRootContainer_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetContainerNameByUID_ContainerName) == 0x0002F8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetContainerNameByUID_ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetInventoryWeightByMainContainerName_Weight) == 0x000300, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetInventoryWeightByMainContainerName_Weight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000308, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetEquippedItemByContainerUID_Found_) == 0x000310, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetEquippedItemByContainerUID_Found_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetEquippedItemByContainerUID_IsEquipTo) == 0x000311, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetEquippedItemByContainerUID_IsEquipTo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetEquippedItemByContainerUID_Info) == 0x000318, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetEquippedItemByContainerUID_Info' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000400, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000401, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_int_Variable_1) == 0x000404, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_int_Variable_2) == 0x000408, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00040C, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000410, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000414, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000415, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x000418, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BooleanAND_ReturnValue) == 0x00041C, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BooleanAND_ReturnValue_1) == 0x00041D, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00041E, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BooleanAND_ReturnValue_2) == 0x00041F, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BooleanAND_ReturnValue_3) == 0x000420, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Add_IntInt_ReturnValue_3) == 0x000424, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000428, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BreakVector2D_X) == 0x000430, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BreakVector2D_Y) == 0x000438, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000440, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_FTrunc_ReturnValue) == 0x000444, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BooleanAND_ReturnValue_4) == 0x000448, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_FTrunc_ReturnValue_1) == 0x00044C, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BreakVector2D_X_1) == 0x000450, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BreakVector2D_Y_1) == 0x000458, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GenerateRandomStats_Stats) == 0x000460, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GenerateRandomStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_MakeVector2D_ReturnValue) == 0x000470, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_SelectFloat_ReturnValue) == 0x000480, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_MakeVector2D_ReturnValue_1) == 0x000488, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BreakVector2D_X_2) == 0x000498, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BreakVector2D_Y_2) == 0x0004A0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetEmptySlotTryRotated_Found) == 0x0004A8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetEmptySlotTryRotated_Found' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetEmptySlotTryRotated_Index) == 0x0004AC, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetEmptySlotTryRotated_Index' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetEmptySlotTryRotated_Rotated_) == 0x0004B0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetEmptySlotTryRotated_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_MakeVector2D_ReturnValue_2) == 0x0004B8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_MakeStruct_ContainerPickupsInfo) == 0x0004C8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_MakeArray_Array) == 0x0005A0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_bool_Variable_3) == 0x0005B0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_Select_Default) == 0x0005B8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetHostingSlots_Indexes) == 0x0005C8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetHostingSlots_Indexes' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Array_Add_ReturnValue) == 0x0005D8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Array_LastIndex_ReturnValue_2) == 0x0005DC, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0005E0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_BooleanAND_ReturnValue_5) == 0x0005E1, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_MakeStruct_RepItemInfo) == 0x0005E8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_MakeStruct_RepItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, Temp_bool_Variable_4) == 0x000660, "Member 'BP_JigMultiplayer_C_TryAddNewItem::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_Select_Default_1) == 0x000668, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_CanAddToContainerIgnoreIndexes_Proceed) == 0x000678, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_CanAddToContainerIgnoreIndexes_Proceed' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_MakeStruct_S_SubContainerInfo) == 0x00067C, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_MakeStruct_S_SubContainerInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Array_Add_ReturnValue_1) == 0x0006A0, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_MakeStruct_S_ReplicatedContainerInfo) == 0x0006A8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_MakeStruct_S_ReplicatedContainerInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetUniqueID_UID) == 0x0006F8, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetUniqueID_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_Array_Add_ReturnValue_2) == 0x000708, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, CallFunc_GetUniqueID_UID_1) == 0x00070C, "Member 'BP_JigMultiplayer_C_TryAddNewItem::CallFunc_GetUniqueID_UID_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_TryAddNewItem, K2Node_MakeStruct_ContainerPickupsInfo_1) == 0x000720, "Member 'BP_JigMultiplayer_C_TryAddNewItem::K2Node_MakeStruct_ContainerPickupsInfo_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.UIDNotValid
// 0x0014 (0x0014 - 0x0000)
struct BP_JigMultiplayer_C_UIDNotValid final
{
public:
	struct FGuid                                  InGuid;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_UIDNotValid) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_UIDNotValid");
static_assert(sizeof(BP_JigMultiplayer_C_UIDNotValid) == 0x000014, "Wrong size on BP_JigMultiplayer_C_UIDNotValid");
static_assert(offsetof(BP_JigMultiplayer_C_UIDNotValid, InGuid) == 0x000000, "Member 'BP_JigMultiplayer_C_UIDNotValid::InGuid' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UIDNotValid, ReturnValue) == 0x000010, "Member 'BP_JigMultiplayer_C_UIDNotValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UIDNotValid, CallFunc_IsValid_Guid_ReturnValue) == 0x000011, "Member 'BP_JigMultiplayer_C_UIDNotValid::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UIDNotValid, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_JigMultiplayer_C_UIDNotValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.UpdateCountByByMotherUID
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_UpdateCountByByMotherUID final
{
public:
	struct FGuid                                  MotherUID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Updated_;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_UpdateCountByByMotherUID) == 0x000004, "Wrong alignment on BP_JigMultiplayer_C_UpdateCountByByMotherUID");
static_assert(sizeof(BP_JigMultiplayer_C_UpdateCountByByMotherUID) == 0x000040, "Wrong size on BP_JigMultiplayer_C_UpdateCountByByMotherUID");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, MotherUID) == 0x000000, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::MotherUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, NewCount) == 0x000010, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, Updated_) == 0x000014, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::Updated_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, Temp_int_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, Temp_bool_Variable) == 0x000020, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, Temp_bool_Variable_1) == 0x000022, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, Temp_int_Variable_1) == 0x000024, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000038, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x00003C, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00003D, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateCountByByMotherUID, CallFunc_BooleanAND_ReturnValue_1) == 0x00003E, "Member 'BP_JigMultiplayer_C_UpdateCountByByMotherUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.UpdatePickupInfo
// 0x00D8 (0x00D8 - 0x0000)
struct BP_JigMultiplayer_C_UpdatePickupInfo final
{
public:
	struct FContainerPickupsInfo                  PickupInfo_0;                                      // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_UpdatePickupInfo) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_UpdatePickupInfo");
static_assert(sizeof(BP_JigMultiplayer_C_UpdatePickupInfo) == 0x0000D8, "Wrong size on BP_JigMultiplayer_C_UpdatePickupInfo");
static_assert(offsetof(BP_JigMultiplayer_C_UpdatePickupInfo, PickupInfo_0) == 0x000000, "Member 'BP_JigMultiplayer_C_UpdatePickupInfo::PickupInfo_0' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.UpdateStatByUID
// 0x0068 (0x0068 - 0x0000)
struct BP_JigMultiplayer_C_UpdateStatByUID final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           STAT_TAG;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index2;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_UpdateStatByUID) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_UpdateStatByUID");
static_assert(sizeof(BP_JigMultiplayer_C_UpdateStatByUID) == 0x000068, "Wrong size on BP_JigMultiplayer_C_UpdateStatByUID");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, UID) == 0x000000, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, STAT_TAG) == 0x000010, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::STAT_TAG' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, NewValue) == 0x000018, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::NewValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Index2) == 0x000020, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Index2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Index1) == 0x000024, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Index1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Temp_bool_Variable) == 0x000028, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Temp_bool_Variable_1) == 0x000029, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Temp_int_Variable) == 0x00002C, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Temp_bool_Variable_2) == 0x000034, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Not_PreBool_ReturnValue_2) == 0x000035, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Temp_int_Variable_1) == 0x000038, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, Temp_int_Variable_2) == 0x000040, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000048, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Array_LastIndex_ReturnValue) == 0x00004C, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000050, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000051, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000054, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_Array_LastIndex_ReturnValue_2) == 0x00005C, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_BooleanAND_ReturnValue_1) == 0x000060, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000061, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateStatByUID, CallFunc_BooleanAND_ReturnValue_2) == 0x000062, "Member 'BP_JigMultiplayer_C_UpdateStatByUID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.UpdateWeight
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMultiplayer_C_UpdateWeight final
{
public:
	struct FGuid                                  ContUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weight;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_UpdateWeight) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_UpdateWeight");
static_assert(sizeof(BP_JigMultiplayer_C_UpdateWeight) == 0x000040, "Wrong size on BP_JigMultiplayer_C_UpdateWeight");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, ContUID) == 0x000000, "Member 'BP_JigMultiplayer_C_UpdateWeight::ContUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, Weight) == 0x000010, "Member 'BP_JigMultiplayer_C_UpdateWeight::Weight' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, Temp_bool_Variable) == 0x000018, "Member 'BP_JigMultiplayer_C_UpdateWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, Temp_int_Variable) == 0x00001C, "Member 'BP_JigMultiplayer_C_UpdateWeight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_UpdateWeight, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000039, "Member 'BP_JigMultiplayer_C_UpdateWeight::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.VendorCompareItems
// 0x0278 (0x0278 - 0x0000)
struct BP_JigMultiplayer_C_VendorCompareItems final
{
public:
	struct FContainerPickupsInfo                  Item1;                                             // 0x0000(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_ReplicatedContainerInfo>     Item1SubContainers;                                // 0x00D8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  Item2;                                             // 0x00E8(0x00D8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Proceed_;                                          // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FContainerPickupsInfo>          AllItem1Items;                                     // 0x01C8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FGuid>                          SubUIDs;                                           // 0x01D8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FContainerPickupsInfo>          AllItem2Items;                                     // 0x01E8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x2];                                      // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x023F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_257[0x1];                                      // 0x0257(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_267[0x1];                                      // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_4;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVendor_ReturnValue;                     // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_VendorCompareItems) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_VendorCompareItems");
static_assert(sizeof(BP_JigMultiplayer_C_VendorCompareItems) == 0x000278, "Wrong size on BP_JigMultiplayer_C_VendorCompareItems");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Item1) == 0x000000, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Item1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Item1SubContainers) == 0x0000D8, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Item1SubContainers' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Item2) == 0x0000E8, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Item2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Proceed_) == 0x0001C0, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Proceed_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, AllItem1Items) == 0x0001C8, "Member 'BP_JigMultiplayer_C_VendorCompareItems::AllItem1Items' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, SubUIDs) == 0x0001D8, "Member 'BP_JigMultiplayer_C_VendorCompareItems::SubUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, AllItem2Items) == 0x0001E8, "Member 'BP_JigMultiplayer_C_VendorCompareItems::AllItem2Items' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_bool_Variable) == 0x0001F8, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_int_Variable) == 0x0001FC, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Not_PreBool_ReturnValue) == 0x000204, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_bool_Variable_1) == 0x000205, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_int_Variable_1) == 0x000208, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x00020C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Not_PreBool_ReturnValue_1) == 0x000210, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_bool_Variable_2) == 0x000211, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_int_Variable_2) == 0x000214, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Add_IntInt_ReturnValue_2) == 0x000218, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Not_PreBool_ReturnValue_2) == 0x00021C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_int_Variable_3) == 0x000220, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Add_IntInt_ReturnValue_3) == 0x000224, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_bool_Variable_3) == 0x000228, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Not_PreBool_ReturnValue_3) == 0x000229, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_int_Variable_4) == 0x00022C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, Temp_bool_Variable_4) == 0x000230, "Member 'BP_JigMultiplayer_C_VendorCompareItems::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Not_PreBool_ReturnValue_4) == 0x000231, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Add_IntInt_ReturnValue_4) == 0x000234, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_LastIndex_ReturnValue) == 0x000238, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00023C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00023D, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00023E, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_BooleanAND_ReturnValue) == 0x00023F, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_BooleanOR_ReturnValue) == 0x000240, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_Length_ReturnValue) == 0x000244, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_Length_ReturnValue_1) == 0x000248, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00024C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000250, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000254, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000255, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x000256, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_Add_ReturnValue) == 0x000258, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_Add_ReturnValue_1) == 0x00025C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000260, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_Contains_ReturnValue) == 0x000264, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000265, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_BooleanAND_ReturnValue_2) == 0x000266, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_LastIndex_ReturnValue_3) == 0x000268, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00026C, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_BooleanAND_ReturnValue_3) == 0x00026D, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_Array_LastIndex_ReturnValue_4) == 0x000270, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_Array_LastIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000274, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_BooleanAND_ReturnValue_4) == 0x000275, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorCompareItems, CallFunc_IsVendor_ReturnValue) == 0x000276, "Member 'BP_JigMultiplayer_C_VendorCompareItems::CallFunc_IsVendor_ReturnValue' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.VendorTryStackMoney
// 0x0128 (0x0128 - 0x0000)
struct BP_JigMultiplayer_C_VendorTryStackMoney final
{
public:
	int32                                         MaxStack;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRepItemInfo                           Currency;                                          // 0x0008(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Stacked_;                                          // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  RootCBegin;                                        // 0x0084(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          ExcludeUIDs;                                       // 0x0098(0x0010)(Edit, BlueprintVisible)
	int32                                         NewCount;                                          // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_FindRootContainer_RootCUID;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetMainContainerUIDByIndex_UID;           // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMainContainerUIDByIndex_ContainerIndex; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_VendorTryStackMoney) == 0x000008, "Wrong alignment on BP_JigMultiplayer_C_VendorTryStackMoney");
static_assert(sizeof(BP_JigMultiplayer_C_VendorTryStackMoney) == 0x000128, "Wrong size on BP_JigMultiplayer_C_VendorTryStackMoney");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, MaxStack) == 0x000000, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::MaxStack' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Currency) == 0x000008, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Currency' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Stacked_) == 0x000080, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Stacked_' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, RootCBegin) == 0x000084, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::RootCBegin' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, ExcludeUIDs) == 0x000098, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::ExcludeUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, NewCount) == 0x0000A8, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::NewCount' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Temp_int_Variable) == 0x0000AC, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Temp_bool_Variable) == 0x0000B4, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Not_PreBool_ReturnValue) == 0x0000B5, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Temp_int_Variable_1) == 0x0000C4, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, Temp_bool_Variable_1) == 0x0000CC, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_FindRootContainer_RootCUID) == 0x0000D0, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_FindRootContainer_RootCUID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_Contains_ReturnValue) == 0x0000E0, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E1, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000E2, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_Get_Item) == 0x0000E4, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_GetMainContainerUIDByIndex_UID) == 0x0000EC, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_GetMainContainerUIDByIndex_UID' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_GetMainContainerUIDByIndex_ContainerIndex) == 0x0000FC, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_GetMainContainerUIDByIndex_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_LastIndex_ReturnValue) == 0x000108, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Add_IntInt_ReturnValue_3) == 0x000110, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_BooleanAND_ReturnValue) == 0x000114, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Greater_IntInt_ReturnValue) == 0x000115, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000116, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Not_PreBool_ReturnValue_3) == 0x000117, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_Contains_ReturnValue_1) == 0x000118, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_BooleanAND_ReturnValue_1) == 0x000119, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_Contains_ReturnValue_2) == 0x00011A, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_BooleanOR_ReturnValue) == 0x00011B, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Not_PreBool_ReturnValue_4) == 0x00011C, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000120, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000124, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JigMultiplayer_C_VendorTryStackMoney, CallFunc_BooleanAND_ReturnValue_2) == 0x000125, "Member 'BP_JigMultiplayer_C_VendorTryStackMoney::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_JigMultiplayer.BP_JigMultiplayer_C.WaitFullReplicationOfUIDs
// 0x0001 (0x0001 - 0x0000)
struct BP_JigMultiplayer_C_WaitFullReplicationOfUIDs final
{
public:
	bool                                          Reset_;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMultiplayer_C_WaitFullReplicationOfUIDs) == 0x000001, "Wrong alignment on BP_JigMultiplayer_C_WaitFullReplicationOfUIDs");
static_assert(sizeof(BP_JigMultiplayer_C_WaitFullReplicationOfUIDs) == 0x000001, "Wrong size on BP_JigMultiplayer_C_WaitFullReplicationOfUIDs");
static_assert(offsetof(BP_JigMultiplayer_C_WaitFullReplicationOfUIDs, Reset_) == 0x000000, "Member 'BP_JigMultiplayer_C_WaitFullReplicationOfUIDs::Reset_' has a wrong offset!");

}

