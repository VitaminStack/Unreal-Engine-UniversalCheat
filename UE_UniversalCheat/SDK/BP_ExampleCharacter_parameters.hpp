#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExampleCharacter

#include "Basic.hpp"

#include "E_BlockType_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_AIBehaviour_structs.hpp"
#include "E_HitboxTypeAI_structs.hpp"


namespace SDK::Params
{

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Actor Aim Focus
// 0x0008 (0x0008 - 0x0000)
struct BP_ExampleCharacter_C_Actor_Aim_Focus final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Actor_Aim_Focus) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Actor_Aim_Focus");
static_assert(sizeof(BP_ExampleCharacter_C_Actor_Aim_Focus) == 0x000008, "Wrong size on BP_ExampleCharacter_C_Actor_Aim_Focus");
static_assert(offsetof(BP_ExampleCharacter_C_Actor_Aim_Focus, Instigator_0) == 0x000000, "Member 'BP_ExampleCharacter_C_Actor_Aim_Focus::Instigator_0' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Actor Attack Target
// 0x0008 (0x0008 - 0x0000)
struct BP_ExampleCharacter_C_Actor_Attack_Target final
{
public:
	class AActor*                                 Attack_Target;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Actor_Attack_Target) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Actor_Attack_Target");
static_assert(sizeof(BP_ExampleCharacter_C_Actor_Attack_Target) == 0x000008, "Wrong size on BP_ExampleCharacter_C_Actor_Attack_Target");
static_assert(offsetof(BP_ExampleCharacter_C_Actor_Attack_Target, Attack_Target) == 0x000000, "Member 'BP_ExampleCharacter_C_Actor_Attack_Target::Attack_Target' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.AI Alert
// 0x0008 (0x0008 - 0x0000)
struct BP_ExampleCharacter_C_AI_Alert final
{
public:
	class AActor*                                 Alert_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_AI_Alert) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_AI_Alert");
static_assert(sizeof(BP_ExampleCharacter_C_AI_Alert) == 0x000008, "Wrong size on BP_ExampleCharacter_C_AI_Alert");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Alert, Alert_Actor) == 0x000000, "Member 'BP_ExampleCharacter_C_AI_Alert::Alert_Actor' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.AI Animation Switch
// 0x0001 (0x0001 - 0x0000)
struct BP_ExampleCharacter_C_AI_Animation_Switch final
{
public:
	E_AIBehaviour                                 Behaviour;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_AI_Animation_Switch) == 0x000001, "Wrong alignment on BP_ExampleCharacter_C_AI_Animation_Switch");
static_assert(sizeof(BP_ExampleCharacter_C_AI_Animation_Switch) == 0x000001, "Wrong size on BP_ExampleCharacter_C_AI_Animation_Switch");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Animation_Switch, Behaviour) == 0x000000, "Member 'BP_ExampleCharacter_C_AI_Animation_Switch::Behaviour' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.AI Block
// 0x0010 (0x0010 - 0x0000)
struct BP_ExampleCharacter_C_AI_Block final
{
public:
	E_BlockType                                   Block_Type;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Block_Attacker;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_AI_Block) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_AI_Block");
static_assert(sizeof(BP_ExampleCharacter_C_AI_Block) == 0x000010, "Wrong size on BP_ExampleCharacter_C_AI_Block");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Block, Block_Type) == 0x000000, "Member 'BP_ExampleCharacter_C_AI_Block::Block_Type' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Block, Block_Attacker) == 0x000008, "Member 'BP_ExampleCharacter_C_AI_Block::Block_Attacker' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.AI Camera Activate
// 0x0001 (0x0001 - 0x0000)
struct BP_ExampleCharacter_C_AI_Camera_Activate final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_AI_Camera_Activate) == 0x000001, "Wrong alignment on BP_ExampleCharacter_C_AI_Camera_Activate");
static_assert(sizeof(BP_ExampleCharacter_C_AI_Camera_Activate) == 0x000001, "Wrong size on BP_ExampleCharacter_C_AI_Camera_Activate");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Camera_Activate, Activate) == 0x000000, "Member 'BP_ExampleCharacter_C_AI_Camera_Activate::Activate' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.AI Can Interact?
// 0x0001 (0x0001 - 0x0000)
struct BP_ExampleCharacter_C_AI_Can_Interact_ final
{
public:
	bool                                          Can_Interact;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_AI_Can_Interact_) == 0x000001, "Wrong alignment on BP_ExampleCharacter_C_AI_Can_Interact_");
static_assert(sizeof(BP_ExampleCharacter_C_AI_Can_Interact_) == 0x000001, "Wrong size on BP_ExampleCharacter_C_AI_Can_Interact_");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Can_Interact_, Can_Interact) == 0x000000, "Member 'BP_ExampleCharacter_C_AI_Can_Interact_::Can_Interact' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Alert Actor Defenders
// 0x0010 (0x0010 - 0x0000)
struct BP_ExampleCharacter_C_Alert_Actor_Defenders final
{
public:
	class AActor*                                 Attacked;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attacker;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Alert_Actor_Defenders) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Alert_Actor_Defenders");
static_assert(sizeof(BP_ExampleCharacter_C_Alert_Actor_Defenders) == 0x000010, "Wrong size on BP_ExampleCharacter_C_Alert_Actor_Defenders");
static_assert(offsetof(BP_ExampleCharacter_C_Alert_Actor_Defenders, Attacked) == 0x000000, "Member 'BP_ExampleCharacter_C_Alert_Actor_Defenders::Attacked' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Alert_Actor_Defenders, Attacker) == 0x000008, "Member 'BP_ExampleCharacter_C_Alert_Actor_Defenders::Attacker' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Damage Taken
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ExampleCharacter_C_Damage_Taken final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Damage_Taken) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Damage_Taken");
static_assert(sizeof(BP_ExampleCharacter_C_Damage_Taken) == 0x0000A0, "Wrong size on BP_ExampleCharacter_C_Damage_Taken");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, Damage) == 0x000000, "Member 'BP_ExampleCharacter_C_Damage_Taken::Damage' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000008, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_GetDisplayName_ReturnValue_1) == 0x000048, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000058, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_FTrunc_ReturnValue) == 0x000088, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_FTrunc_ReturnValue_1) == 0x000090, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Damage_Taken, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000099, "Member 'BP_ExampleCharacter_C_Damage_Taken::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Debug Text
// 0x0028 (0x0028 - 0x0000)
struct BP_ExampleCharacter_C_Debug_Text final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrintString_Duration_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Debug_Text) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Debug_Text");
static_assert(sizeof(BP_ExampleCharacter_C_Debug_Text) == 0x000028, "Wrong size on BP_ExampleCharacter_C_Debug_Text");
static_assert(offsetof(BP_ExampleCharacter_C_Debug_Text, InString) == 0x000000, "Member 'BP_ExampleCharacter_C_Debug_Text::InString' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Debug_Text, TextColor) == 0x000010, "Member 'BP_ExampleCharacter_C_Debug_Text::TextColor' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Debug_Text, CallFunc_PrintString_Duration_ImplicitCast) == 0x000020, "Member 'BP_ExampleCharacter_C_Debug_Text::CallFunc_PrintString_Duration_ImplicitCast' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.ExecuteUbergraph_BP_ExampleCharacter
// 0x1320 (0x1320 - 0x0000)
struct BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0008(0x0018)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Alert_Actor;                          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 K2Node_Event_Behaviour;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Activate;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BlockType                                   K2Node_Event_Block_Type;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Block_Attacker;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Attacked;                             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Attacker;                             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x00D0(0x0018)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Instigator;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Start;                          // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_End;                            // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0188(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0xF];                                      // 0x0271(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimalViewInfo                       CallFunc_GetCameraView_DesiredView;                // 0x0280(0x07C0)()
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0A40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0A71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A72[0x2];                                      // 0x0A72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0A74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7C[0x4];                                      // 0x0A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0A80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0A98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0AB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0AC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0AF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B14[0x4];                                      // 0x0B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0B48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0B79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7A[0x2];                                      // 0x0B7A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0BD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0BF8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1C[0x4];                                      // 0x0C1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0C51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C52[0x2];                                      // 0x0C52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0C60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0C78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0C90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0CD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF4[0x4];                                      // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0CF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0D10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2C[0x4];                                      // 0x0D2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0D30(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0D38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_HitboxTypeAI                                CallFunc_Is_Hitbox__Hitbox;                        // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D49[0x7];                                      // 0x0D49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0D50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0D60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x7];                                      // 0x0D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0D78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0D80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0D90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_RespawnHUD_C*                       CallFunc_Create_ReturnValue;                       // 0x0D98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0DA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0DB0(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0DC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0DD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0DD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0DE0(0x0018)(HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0DF8(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E09[0x7];                                      // 0x0E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0E10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1C[0x4];                                      // 0x0E1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0E20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E39[0x7];                                      // 0x0E39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0E40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0E48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E59[0x7];                                      // 0x0E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0E60(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0E70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E79[0x7];                                      // 0x0E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0E80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_HUD_C*                              CallFunc_Create_ReturnValue_1;                     // 0x0E90(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0E98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0EB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC8[0x8];                                      // 0x0EC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0ED0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0F30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0F50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ExampleCharacter_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0F68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x0F70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Sound_Location;                 // 0x0F78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F91[0x7];                                      // 0x0F91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0F98(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class ABP_AICivilian_C*>               CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x1080(0x0010)(ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x1091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1092[0x2];                                     // 0x1092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x1094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x1098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109C[0x4];                                     // 0x109C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x10A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x10B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x10D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x10E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x1100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x1108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x1110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x1118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x1128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x112C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x1130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1134[0x4];                                     // 0x1134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x1138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x1150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x116C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116D[0x3];                                     // 0x116D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x1170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_AICivilian_C*>               CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x1188(0x0010)(ReferenceParm)
	bool                                          K2Node_CustomEvent_Aimed_1;                        // 0x1198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1199[0x3];                                     // 0x1199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x119C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Aimed;                          // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x11A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x11B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x11B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x11C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x11C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x11C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C6[0x2];                                     // 0x11C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x11C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x11CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterAICharacter_C*                CallFunc_Array_Get_Item_1;                         // 0x11D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x11D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x11DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DD[0x3];                                     // 0x11DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x11E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E4[0x4];                                     // 0x11E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x11E8(0x0018)(HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x1200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x1208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_120C[0x4];                                     // 0x120C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAICharacter_C*                CallFunc_Array_Get_Item_2;                         // 0x1210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x1218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x1228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x1230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x1248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HitboxTypeAI                                Temp_byte_Variable;                                // 0x1250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1251[0x7];                                     // 0x1251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x1258(0x0018)(HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x1270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x1278(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x1290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1294[0x4];                                     // 0x1294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Map_Find_Value;                           // 0x1298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x12A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A1[0x7];                                     // 0x12A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        CallFunc_Map_Find_Value_1;                         // 0x12A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x12B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x12B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B3[0x5];                                     // 0x12B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x12B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x12C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x12C8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x12E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E1[0x7];                                     // 0x12E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x12E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x12F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x12F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x12FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Damage_Taken_Damage_ImplicitCast;         // 0x1300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x1308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x1310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnDecalAttached_LifeSpan_ImplicitCast; // 0x1314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter) == 0x000010, "Wrong alignment on BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter");
static_assert(sizeof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter) == 0x001320, "Wrong size on BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, EntryPoint) == 0x000000, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputActionEvent_Key) == 0x000008, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Alert_Actor) == 0x000020, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Alert_Actor' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Behaviour) == 0x000028, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Behaviour' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Activate) == 0x000029, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Activate' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Block_Type) == 0x00002A, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Block_Type' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Block_Attacker) == 0x000030, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Block_Attacker' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputAxisEvent_AxisValue_5) == 0x000038, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x000040, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputAxisEvent_AxisValue_4) == 0x000058, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakRotator_Roll) == 0x00005C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakRotator_Pitch) == 0x000060, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakRotator_Yaw) == 0x000064, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputAxisEvent_AxisValue_3) == 0x000080, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetRightVector_ReturnValue) == 0x000088, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetForwardVector_ReturnValue) == 0x0000A0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputAxisEvent_AxisValue_2) == 0x0000B8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Attacked) == 0x0000C0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Attacked' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Attacker) == 0x0000C8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Attacker' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key_1) == 0x0000D0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Instigator) == 0x0000E8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsFalling_ReturnValue) == 0x0000F0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsCrouching_ReturnValue) == 0x0000F1, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_object_Variable) == 0x0000F8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputAxisEvent_AxisValue_1) == 0x000108, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputAxisEvent_AxisValue) == 0x00010C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000120, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000128, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000130, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000138, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key_2) == 0x000140, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_Start) == 0x000158, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_End) == 0x000170, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_End' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_SphereTraceSingle_OutHit) == 0x000188, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_SphereTraceSingle_ReturnValue) == 0x000270, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetCameraView_DesiredView) == 0x000280, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetCameraView_DesiredView' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000A40, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000A58, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x000A70, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x000A71, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Time) == 0x000A74, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Distance) == 0x000A78, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Location) == 0x000A80, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x000A98, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Normal) == 0x000AB0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x000AC8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_PhysMat) == 0x000AE0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitActor) == 0x000AE8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitComponent) == 0x000AF0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x000AF8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_BoneName) == 0x000B00, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitItem) == 0x000B08, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ElementIndex) == 0x000B0C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x000B10, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceStart) == 0x000B18, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x000B30, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000B48, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x000B60, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000B78, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000B79, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Time_1) == 0x000B7C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Distance_1) == 0x000B80, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Location_1) == 0x000B88, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000BA0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Normal_1) == 0x000BB8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000BD0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_PhysMat_1) == 0x000BE8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitActor_1) == 0x000BF0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitComponent_1) == 0x000BF8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitBoneName_1) == 0x000C00, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_BoneName_1) == 0x000C08, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitItem_1) == 0x000C10, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ElementIndex_1) == 0x000C14, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_FaceIndex_1) == 0x000C18, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceStart_1) == 0x000C20, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceEnd_1) == 0x000C38, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000C50, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000C51, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Time_2) == 0x000C54, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Distance_2) == 0x000C58, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Location_2) == 0x000C60, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000C78, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Normal_2) == 0x000C90, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000CA8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_PhysMat_2) == 0x000CC0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitActor_2) == 0x000CC8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitComponent_2) == 0x000CD0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitBoneName_2) == 0x000CD8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_BoneName_2) == 0x000CE0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitItem_2) == 0x000CE8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ElementIndex_2) == 0x000CEC, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_FaceIndex_2) == 0x000CF0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceStart_2) == 0x000CF8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceEnd_2) == 0x000D10, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_Damage) == 0x000D28, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_DamageType) == 0x000D30, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_InstigatedBy) == 0x000D38, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Event_DamageCauser) == 0x000D40, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Is_Hitbox__Hitbox) == 0x000D48, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Is_Hitbox__Hitbox' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetDisplayName_ReturnValue) == 0x000D50, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000D60, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue) == 0x000D70, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable) == 0x000D78, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x000D80, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_1) == 0x000D88, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue_1) == 0x000D90, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Create_ReturnValue) == 0x000D98, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue_2) == 0x000DA0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue_3) == 0x000DA8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key_3) == 0x000DB0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue_4) == 0x000DC8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue_5) == 0x000DD0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetPlayerController_ReturnValue_6) == 0x000DD8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key_4) == 0x000DE0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000DF8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_bool_Variable) == 0x000E08, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Array_Get_Item) == 0x000E10, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Array_Length_ReturnValue) == 0x000E18, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000E20, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Greater_IntInt_ReturnValue) == 0x000E38, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetController_ReturnValue) == 0x000E40, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetDisplayName_ReturnValue_1) == 0x000E48, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x000E58, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000E60, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetController_ReturnValue_1) == 0x000E70, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000E78, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_DynamicCast_AsPlayer_Controller) == 0x000E80, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_DynamicCast_bSuccess) == 0x000E88, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Create_ReturnValue_1) == 0x000E90, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000E98, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Select_Default) == 0x000EB0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_MakeTransform_ReturnValue) == 0x000ED0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000F30, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000F48, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000F50, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000F68, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_Sound) == 0x000F70, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_Sound_Location) == 0x000F78, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_Sound_Location' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000F90, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_Hit) == 0x000F98, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x001080, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bBlockingHit_3) == 0x001090, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x001091, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Time_3) == 0x001094, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Distance_3) == 0x001098, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Location_3) == 0x0010A0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0010B8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_Normal_3) == 0x0010D0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0010E8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_PhysMat_3) == 0x001100, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitActor_3) == 0x001108, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitComponent_3) == 0x001110, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitBoneName_3) == 0x001118, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_BoneName_3) == 0x001120, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_HitItem_3) == 0x001128, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_ElementIndex_3) == 0x00112C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_FaceIndex_3) == 0x001130, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceStart_3) == 0x001138, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_BreakHitResult_TraceEnd_3) == 0x001150, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x001168, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue_3) == 0x00116C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x001170, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x001188, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_Aimed_1) == 0x001198, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_Aimed_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Array_Length_ReturnValue_2) == 0x00119C, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_CustomEvent_Aimed) == 0x0011A0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_CustomEvent_Aimed' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_K2_SetTimer_ReturnValue) == 0x0011A8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_2) == 0x0011B0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_3) == 0x0011B8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_int_Loop_Counter_Variable) == 0x0011C0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_HasAuthority_ReturnValue) == 0x0011C4, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0011C5, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0011C8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_int_Array_Index_Variable) == 0x0011CC, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Array_Get_Item_1) == 0x0011D0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_int_Loop_Counter_Variable_1) == 0x0011D8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x0011DC, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x0011E0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key_5) == 0x0011E8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_4) == 0x001200, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_int_Array_Index_Variable_1) == 0x001208, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Array_Get_Item_2) == 0x001210, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_5) == 0x001218, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_6) == 0x001220, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_GetController_ReturnValue_2) == 0x001228, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x001230, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_real_Variable_7) == 0x001248, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_byte_Variable) == 0x001250, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key) == 0x001258, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_Select_Default_1) == 0x001270, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, Temp_struct_Variable) == 0x001278, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_ApplyDamage_ReturnValue) == 0x001290, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Map_Find_Value) == 0x001298, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Map_Find_ReturnValue) == 0x0012A0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Map_Find_Value_1) == 0x0012A8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Map_Find_ReturnValue_1) == 0x0012B0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue_4) == 0x0012B1, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue_5) == 0x0012B2, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0012B8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_SpawnDecalAttached_ReturnValue) == 0x0012C0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, K2Node_InputKeyEvent_Key_6) == 0x0012C8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_IsValid_ReturnValue_6) == 0x0012E0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0012E8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0012F0, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x0012F8, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x0012FC, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Damage_Taken_Damage_ImplicitCast) == 0x001300, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Damage_Taken_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x001308, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x001310, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter, CallFunc_SpawnDecalAttached_LifeSpan_ImplicitCast) == 0x001314, "Member 'BP_ExampleCharacter_C_ExecuteUbergraph_BP_ExampleCharacter::CallFunc_SpawnDecalAttached_LifeSpan_ImplicitCast' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_C_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_C_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_H_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_H_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_H_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_K_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_K_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_ExampleCharacter_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_268
// 0x0004 (0x0004 - 0x0000)
struct BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268) == 0x000004, "Wrong alignment on BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268");
static_assert(sizeof(BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268) == 0x000004, "Wrong size on BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268");
static_assert(offsetof(BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268, AxisValue) == 0x000000, "Member 'BP_ExampleCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_268::AxisValue' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53
// 0x0004 (0x0004 - 0x0000)
struct BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong alignment on BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(sizeof(BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong size on BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(offsetof(BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53, AxisValue) == 0x000000, "Member 'BP_ExampleCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53::AxisValue' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180
// 0x0004 (0x0004 - 0x0000)
struct BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180) == 0x000004, "Wrong alignment on BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180");
static_assert(sizeof(BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180) == 0x000004, "Wrong size on BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180");
static_assert(offsetof(BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180, AxisValue) == 0x000000, "Member 'BP_ExampleCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_180::AxisValue' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243
// 0x0004 (0x0004 - 0x0000)
struct BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243) == 0x000004, "Wrong alignment on BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243");
static_assert(sizeof(BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243) == 0x000004, "Wrong size on BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243");
static_assert(offsetof(BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243, AxisValue) == 0x000000, "Member 'BP_ExampleCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_243::AxisValue' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_256
// 0x0004 (0x0004 - 0x0000)
struct BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256) == 0x000004, "Wrong alignment on BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256");
static_assert(sizeof(BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256) == 0x000004, "Wrong size on BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256");
static_assert(offsetof(BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256, AxisValue) == 0x000000, "Member 'BP_ExampleCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_256::AxisValue' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38
// 0x0004 (0x0004 - 0x0000)
struct BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong alignment on BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(sizeof(BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong size on BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(offsetof(BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38, AxisValue) == 0x000000, "Member 'BP_ExampleCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38::AxisValue' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Multicast Aimed
// 0x0001 (0x0001 - 0x0000)
struct BP_ExampleCharacter_C_Multicast_Aimed final
{
public:
	bool                                          Aimed_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Multicast_Aimed) == 0x000001, "Wrong alignment on BP_ExampleCharacter_C_Multicast_Aimed");
static_assert(sizeof(BP_ExampleCharacter_C_Multicast_Aimed) == 0x000001, "Wrong size on BP_ExampleCharacter_C_Multicast_Aimed");
static_assert(offsetof(BP_ExampleCharacter_C_Multicast_Aimed, Aimed_0) == 0x000000, "Member 'BP_ExampleCharacter_C_Multicast_Aimed::Aimed_0' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Multicast Range Effect
// 0x00E8 (0x00E8 - 0x0000)
struct BP_ExampleCharacter_C_Multicast_Range_Effect final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ExampleCharacter_C_Multicast_Range_Effect) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Multicast_Range_Effect");
static_assert(sizeof(BP_ExampleCharacter_C_Multicast_Range_Effect) == 0x0000E8, "Wrong size on BP_ExampleCharacter_C_Multicast_Range_Effect");
static_assert(offsetof(BP_ExampleCharacter_C_Multicast_Range_Effect, Hit) == 0x000000, "Member 'BP_ExampleCharacter_C_Multicast_Range_Effect::Hit' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Multicast Sound
// 0x0020 (0x0020 - 0x0000)
struct BP_ExampleCharacter_C_Multicast_Sound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Sound_Location;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Multicast_Sound) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Multicast_Sound");
static_assert(sizeof(BP_ExampleCharacter_C_Multicast_Sound) == 0x000020, "Wrong size on BP_ExampleCharacter_C_Multicast_Sound");
static_assert(offsetof(BP_ExampleCharacter_C_Multicast_Sound, Sound) == 0x000000, "Member 'BP_ExampleCharacter_C_Multicast_Sound::Sound' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Multicast_Sound, Sound_Location) == 0x000008, "Member 'BP_ExampleCharacter_C_Multicast_Sound::Sound_Location' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_ExampleCharacter_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_ReceiveAnyDamage");
static_assert(sizeof(BP_ExampleCharacter_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_ExampleCharacter_C_ReceiveAnyDamage");
static_assert(offsetof(BP_ExampleCharacter_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_ExampleCharacter_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_ExampleCharacter_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_ExampleCharacter_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_ExampleCharacter_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Server Aimed
// 0x0001 (0x0001 - 0x0000)
struct BP_ExampleCharacter_C_Server_Aimed final
{
public:
	bool                                          Aimed_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Server_Aimed) == 0x000001, "Wrong alignment on BP_ExampleCharacter_C_Server_Aimed");
static_assert(sizeof(BP_ExampleCharacter_C_Server_Aimed) == 0x000001, "Wrong size on BP_ExampleCharacter_C_Server_Aimed");
static_assert(offsetof(BP_ExampleCharacter_C_Server_Aimed, Aimed_0) == 0x000000, "Member 'BP_ExampleCharacter_C_Server_Aimed::Aimed_0' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Server Left Mouse Button
// 0x0030 (0x0030 - 0x0000)
struct BP_ExampleCharacter_C_Server_Left_Mouse_Button final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Server_Left_Mouse_Button) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Server_Left_Mouse_Button");
static_assert(sizeof(BP_ExampleCharacter_C_Server_Left_Mouse_Button) == 0x000030, "Wrong size on BP_ExampleCharacter_C_Server_Left_Mouse_Button");
static_assert(offsetof(BP_ExampleCharacter_C_Server_Left_Mouse_Button, Start) == 0x000000, "Member 'BP_ExampleCharacter_C_Server_Left_Mouse_Button::Start' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Server_Left_Mouse_Button, End) == 0x000018, "Member 'BP_ExampleCharacter_C_Server_Left_Mouse_Button::End' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.Set Aimed Focus
// 0x0288 (0x0288 - 0x0000)
struct BP_ExampleCharacter_C_Set_Aimed_Focus final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x00B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19B[0x1];                                      // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_AIInterface_C>     K2Node_DynamicCast_AsBP_AIInterface;               // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_Set_Aimed_Focus) == 0x000008, "Wrong alignment on BP_ExampleCharacter_C_Set_Aimed_Focus");
static_assert(sizeof(BP_ExampleCharacter_C_Set_Aimed_Focus) == 0x000288, "Wrong size on BP_ExampleCharacter_C_Set_Aimed_Focus");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, Temp_object_Variable) == 0x000000, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_GetControlRotation_ReturnValue) == 0x000020, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000038, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_SphereTraceMulti_OutHits) == 0x000098, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_SphereTraceMulti_ReturnValue) == 0x0000A8, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_bBlockingHit) == 0x000199, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_bInitialOverlap) == 0x00019A, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_Time) == 0x00019C, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_Distance) == 0x0001A0, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_Location) == 0x0001A8, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C0, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_Normal) == 0x0001D8, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F0, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_BoneName) == 0x000228, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_HitItem) == 0x000230, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_ElementIndex) == 0x000234, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_FaceIndex) == 0x000238, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_TraceStart) == 0x000240, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, CallFunc_BreakHitResult_TraceEnd) == 0x000258, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, K2Node_DynamicCast_AsBP_AIInterface) == 0x000270, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::K2Node_DynamicCast_AsBP_AIInterface' has a wrong offset!");
static_assert(offsetof(BP_ExampleCharacter_C_Set_Aimed_Focus, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BP_ExampleCharacter_C_Set_Aimed_Focus::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ExampleCharacter.BP_ExampleCharacter_C.AI Is Dead?
// 0x0001 (0x0001 - 0x0000)
struct BP_ExampleCharacter_C_AI_Is_Dead_ final
{
public:
	bool                                          Dead_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExampleCharacter_C_AI_Is_Dead_) == 0x000001, "Wrong alignment on BP_ExampleCharacter_C_AI_Is_Dead_");
static_assert(sizeof(BP_ExampleCharacter_C_AI_Is_Dead_) == 0x000001, "Wrong size on BP_ExampleCharacter_C_AI_Is_Dead_");
static_assert(offsetof(BP_ExampleCharacter_C_AI_Is_Dead_, Dead_0) == 0x000000, "Member 'BP_ExampleCharacter_C_AI_Is_Dead_::Dead_0' has a wrong offset!");

}

