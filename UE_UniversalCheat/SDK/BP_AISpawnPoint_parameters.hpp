#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawnPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_AIRespawn_structs.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK::Params
{

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.Add AI Respawn Timer
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawnPoint_C_Add_AI_Respawn_Timer final
{
public:
	class ACharacter*                             AI_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_Add_AI_Respawn_Timer) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_Add_AI_Respawn_Timer");
static_assert(sizeof(BP_AISpawnPoint_C_Add_AI_Respawn_Timer) == 0x000008, "Wrong size on BP_AISpawnPoint_C_Add_AI_Respawn_Timer");
static_assert(offsetof(BP_AISpawnPoint_C_Add_AI_Respawn_Timer, AI_Character) == 0x000000, "Member 'BP_AISpawnPoint_C_Add_AI_Respawn_Timer::AI_Character' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.AI Respawn Timer Finished
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawnPoint_C_AI_Respawn_Timer_Finished final
{
public:
	class ACharacter*                             AI_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_AI_Respawn_Timer_Finished) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_AI_Respawn_Timer_Finished");
static_assert(sizeof(BP_AISpawnPoint_C_AI_Respawn_Timer_Finished) == 0x000008, "Wrong size on BP_AISpawnPoint_C_AI_Respawn_Timer_Finished");
static_assert(offsetof(BP_AISpawnPoint_C_AI_Respawn_Timer_Finished, AI_Character) == 0x000000, "Member 'BP_AISpawnPoint_C_AI_Respawn_Timer_Finished::AI_Character' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.BndEvt__Proximity Activation Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.BndEvt__Proximity Deactivation Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AISpawnPoint_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.ExecuteUbergraph_BP_AISpawnPoint
// 0x04B0 (0x04B0 - 0x0000)
struct BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0068(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_AI_Character_1;                 // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x01C8(0x0010)(ConstParm, ReferenceParm)
	class ACharacter*                             K2Node_CustomEvent_AI_Character;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x01E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0308(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x0318(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403[0x5];                                      // 0x0403(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0408(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_413[0x1];                                      // 0x0413(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0414(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0428(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 CallFunc_Convert_To_Behaviour_Behaviour;           // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0470(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AIRespawn                           K2Node_MakeStruct_S_AIRespawn;                     // 0x0490(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast; // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint");
static_assert(sizeof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint) == 0x0004B0, "Wrong size on BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, EntryPoint) == 0x000000, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_name_Variable) == 0x000004, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_IsClosed_Variable) == 0x00000D, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_int_Variable) == 0x000010, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_object_Variable) == 0x000020, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_int_Variable_1) == 0x000030, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000048, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000050, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000058, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000060, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_bFromSweep) == 0x000064, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_SweepResult) == 0x000068, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000150, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OtherActor) == 0x000158, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OtherComp) == 0x000160, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000168, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Array_Contains_ReturnValue) == 0x00016C, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_Has_Been_Initd_Variable_1) == 0x00016D, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Less_IntInt_ReturnValue_2) == 0x000180, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_Has_Been_Initd_Variable_2) == 0x0001B8, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_CustomEvent_AI_Character_1) == 0x0001C0, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_CustomEvent_AI_Character_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_object_Variable_1) == 0x0001C8, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_CustomEvent_AI_Character) == 0x0001D8, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_CustomEvent_AI_Character' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0001E0, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0002C8, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002D0, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E8, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_IsClosed_Variable_1) == 0x000300, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_MakeArray_Array_1) == 0x000308, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x000318, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x000400, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000401, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_HasAuthority_ReturnValue) == 0x000402, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_K2_SetTimer_ReturnValue) == 0x000408, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_IsClosed_Variable_2) == 0x000410, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_Has_Been_Initd_Variable_3) == 0x000411, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_HasAuthority_ReturnValue_1) == 0x000412, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_CreateDelegate_OutputDelegate) == 0x000414, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_HasAuthority_ReturnValue_2) == 0x000424, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_name_Variable_1) == 0x000428, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_CustomEvent_Pawn) == 0x000430, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Array_Contains_ReturnValue_1) == 0x000438, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_GetComponentByClass_ReturnValue) == 0x000440, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Convert_To_Behaviour_Behaviour) == 0x000448, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Convert_To_Behaviour_Behaviour' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000450, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, Temp_bool_IsClosed_Variable_3) == 0x000458, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x000460, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000468, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000470, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000478, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000480, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000488, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_MakeStruct_S_AIRespawn) == 0x000490, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_MakeStruct_S_AIRespawn' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_Array_AddUnique_ReturnValue) == 0x0004A0, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0004A4, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint, K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast) == 0x0004A8, "Member 'BP_AISpawnPoint_C_ExecuteUbergraph_BP_AISpawnPoint::K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.PlayerInAreaCheck
// 0x0050 (0x0050 - 0x0000)
struct BP_AISpawnPoint_C_PlayerInAreaCheck final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0018(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_PlayerInAreaCheck) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_PlayerInAreaCheck");
static_assert(sizeof(BP_AISpawnPoint_C_PlayerInAreaCheck) == 0x000050, "Wrong size on BP_AISpawnPoint_C_PlayerInAreaCheck");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000018, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x00003D, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, Temp_name_Variable) == 0x000040, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_PlayerInAreaCheck, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'BP_AISpawnPoint_C_PlayerInAreaCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.Respawn AI Actor
// 0x0220 (0x0220 - 0x0000)
struct BP_AISpawnPoint_C_Respawn_AI_Actor final
{
public:
	class ACharacter*                             AI_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_Respawn_AI_Actor) == 0x000010, "Wrong alignment on BP_AISpawnPoint_C_Respawn_AI_Actor");
static_assert(sizeof(BP_AISpawnPoint_C_Respawn_AI_Actor) == 0x000220, "Wrong size on BP_AISpawnPoint_C_Respawn_AI_Actor");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, AI_Character) == 0x000000, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::AI_Character' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, Temp_bool_Variable) == 0x000008, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_RandomRotator_ReturnValue) == 0x000040, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, K2Node_Select_Default) == 0x0000B0, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000130, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_AI_Actor, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000218, "Member 'BP_AISpawnPoint_C_Respawn_AI_Actor::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.Respawn Timer
// 0x0080 (0x0080 - 0x0000)
struct BP_AISpawnPoint_C_Respawn_Timer final
{
public:
	struct FS_AIRespawn                           Array_Element_L;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIRespawn                           CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIRespawn                           K2Node_MakeStruct_S_AIRespawn;                     // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_Respawn_Timer) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_Respawn_Timer");
static_assert(sizeof(BP_AISpawnPoint_C_Respawn_Timer) == 0x000080, "Wrong size on BP_AISpawnPoint_C_Respawn_Timer");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, Array_Element_L) == 0x000000, "Member 'BP_AISpawnPoint_C_Respawn_Timer::Array_Element_L' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_AISpawnPoint_C_Respawn_Timer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_AISpawnPoint_C_Respawn_Timer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, K2Node_MakeStruct_S_AIRespawn) == 0x000058, "Member 'BP_AISpawnPoint_C_Respawn_Timer::K2Node_MakeStruct_S_AIRespawn' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000070, "Member 'BP_AISpawnPoint_C_Respawn_Timer::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Respawn_Timer, K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast) == 0x000078, "Member 'BP_AISpawnPoint_C_Respawn_Timer::K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.RespawnAI
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawnPoint_C_RespawnAI final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_RespawnAI) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_RespawnAI");
static_assert(sizeof(BP_AISpawnPoint_C_RespawnAI) == 0x000008, "Wrong size on BP_AISpawnPoint_C_RespawnAI");
static_assert(offsetof(BP_AISpawnPoint_C_RespawnAI, Pawn) == 0x000000, "Member 'BP_AISpawnPoint_C_RespawnAI::Pawn' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.Spawn AI Actor
// 0x0118 (0x0118 - 0x0000)
struct BP_AISpawnPoint_C_Spawn_AI_Actor final
{
public:
	class APawn*                                  Spawned_AI_L;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* AI_Character)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_SpawnAIFromClass_ReturnValue;             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_Spawn_AI_Actor) == 0x000008, "Wrong alignment on BP_AISpawnPoint_C_Spawn_AI_Actor");
static_assert(sizeof(BP_AISpawnPoint_C_Spawn_AI_Actor) == 0x000118, "Wrong size on BP_AISpawnPoint_C_Spawn_AI_Actor");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, Spawned_AI_L) == 0x000000, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::Spawned_AI_L' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000010, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000018, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000020, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000028, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_IsValidClass_ReturnValue) == 0x000048, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, Temp_bool_Variable) == 0x000060, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000068, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_RandomRotator_ReturnValue) == 0x000080, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_MakeRotator_ReturnValue) == 0x0000D8, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, K2Node_Select_Default) == 0x0000F0, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_Spawn_AI_Actor, CallFunc_SpawnAIFromClass_ReturnValue) == 0x000110, "Member 'BP_AISpawnPoint_C_Spawn_AI_Actor::CallFunc_SpawnAIFromClass_ReturnValue' has a wrong offset!");

// Function BP_AISpawnPoint.BP_AISpawnPoint_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawnPoint_C_UserConstructionScript final
{
public:
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawnPoint_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_AISpawnPoint_C_UserConstructionScript");
static_assert(sizeof(BP_AISpawnPoint_C_UserConstructionScript) == 0x000008, "Wrong size on BP_AISpawnPoint_C_UserConstructionScript");
static_assert(offsetof(BP_AISpawnPoint_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000000, "Member 'BP_AISpawnPoint_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AISpawnPoint_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1) == 0x000004, "Member 'BP_AISpawnPoint_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1' has a wrong offset!");

}

