#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonSlider

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function CommonSlider.CommonSlider_C.BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'CommonSlider_C_BndEvt__Slider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.ChangeValue
// 0x0010 (0x0010 - 0x0000)
struct CommonSlider_C_ChangeValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetFocus_;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_ChangeValue) == 0x000008, "Wrong alignment on CommonSlider_C_ChangeValue");
static_assert(sizeof(CommonSlider_C_ChangeValue) == 0x000010, "Wrong size on CommonSlider_C_ChangeValue");
static_assert(offsetof(CommonSlider_C_ChangeValue, Value) == 0x000000, "Member 'CommonSlider_C_ChangeValue::Value' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ChangeValue, SetFocus_) == 0x000008, "Member 'CommonSlider_C_ChangeValue::SetFocus_' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.EnableDisableWidget
// 0x0001 (0x0001 - 0x0000)
struct CommonSlider_C_EnableDisableWidget final
{
public:
	bool                                          Enable_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_EnableDisableWidget) == 0x000001, "Wrong alignment on CommonSlider_C_EnableDisableWidget");
static_assert(sizeof(CommonSlider_C_EnableDisableWidget) == 0x000001, "Wrong size on CommonSlider_C_EnableDisableWidget");
static_assert(offsetof(CommonSlider_C_EnableDisableWidget, Enable_) == 0x000000, "Member 'CommonSlider_C_EnableDisableWidget::Enable_' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.ExecuteUbergraph_CommonSlider
// 0x02F8 (0x02F8 - 0x0000)
struct CommonSlider_C_ExecuteUbergraph_CommonSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_DefaultValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhotoModeWidget_C*                     K2Node_CustomEvent_PhotoModeWidget__Self_;         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_1;               // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Focus_;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Value;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SetFocus_;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable_;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x006C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00A8(0x0078)(ConstParm)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0128(0x0078)(ConstParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x01A8(0x0058)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo_1;                 // 0x0208(0x0058)(HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_1;          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_SliderValue_ImplicitCast;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_2;          // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_3;          // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1; // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Size_ImplicitCast;               // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Size_ImplicitCast_1;             // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_4;          // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinValue_InValue_ImplicitCast;         // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast_1; // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_ExecuteUbergraph_CommonSlider) == 0x000008, "Wrong alignment on CommonSlider_C_ExecuteUbergraph_CommonSlider");
static_assert(sizeof(CommonSlider_C_ExecuteUbergraph_CommonSlider) == 0x0002F8, "Wrong size on CommonSlider_C_ExecuteUbergraph_CommonSlider");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, EntryPoint) == 0x000000, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_byte_Variable) == 0x000004, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_bool_Variable) == 0x000007, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_IsValid_ReturnValue_2) == 0x000008, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_IsValid_ReturnValue_3) == 0x000009, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_bool_IsClosed_Variable) == 0x00000A, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_bool_Has_Been_Initd_Variable) == 0x00000B, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CustomEvent_DefaultValue) == 0x000010, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CustomEvent_DefaultValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CustomEvent_PhotoModeWidget__Self_) == 0x000018, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CustomEvent_PhotoModeWidget__Self_' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_byte_Variable_1) == 0x000020, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GetValue_ReturnValue) == 0x000024, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GetValue_ReturnValue_1) == 0x000030, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000041, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GetIsEnabled_ReturnValue) == 0x000042, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GetIsEnabled_ReturnValue_1) == 0x000043, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GetIsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GetValue_ReturnValue_2) == 0x000044, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_ComponentBoundEvent_Value) == 0x000048, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CustomEvent_Focus_) == 0x00004C, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CustomEvent_Focus_' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CustomEvent_Value) == 0x000050, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CustomEvent_SetFocus_) == 0x000058, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CustomEvent_SetFocus_' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CustomEvent_Enable_) == 0x000059, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CustomEvent_Enable_' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_byte_Variable_2) == 0x00005A, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_bool_Variable_1) == 0x000068, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_Select_Default) == 0x000069, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, Temp_byte_Variable_3) == 0x00006A, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_Event_MyGeometry) == 0x00006C, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_Event_MouseEvent_1) == 0x0000A8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_Select_Default_1) == 0x000120, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_IsValid_ReturnValue_4) == 0x000121, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_Event_MouseEvent) == 0x000128, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001A0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_MakeStruct_SlateFontInfo) == 0x0001A8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000200, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_MakeStruct_SlateFontInfo_1) == 0x000208, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_MakeStruct_SlateFontInfo_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_MakeVector2D_ReturnValue) == 0x000260, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_MakeVector2D_ReturnValue_1) == 0x000270, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000280, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000288, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetValue_InValue_ImplicitCast) == 0x000290, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000298, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0002A0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0002A8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetValue_InValue_ImplicitCast_1) == 0x0002B0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetValue_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x0002B8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_CallDelegate_SliderValue_ImplicitCast) == 0x0002C0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_CallDelegate_SliderValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetValue_InValue_ImplicitCast_2) == 0x0002C8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetValue_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetValue_InValue_ImplicitCast_3) == 0x0002CC, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetValue_InValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0002D0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1) == 0x0002D4, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_MakeStruct_Size_ImplicitCast) == 0x0002D8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_MakeStruct_Size_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, K2Node_MakeStruct_Size_ImplicitCast_1) == 0x0002DC, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::K2Node_MakeStruct_Size_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetValue_InValue_ImplicitCast_4) == 0x0002E0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetValue_InValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x0002E4, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x0002E8, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetMinValue_InValue_ImplicitCast) == 0x0002EC, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetMinValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0002F0, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_ExecuteUbergraph_CommonSlider, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast_1) == 0x0002F4, "Member 'CommonSlider_C_ExecuteUbergraph_CommonSlider::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast_1' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct CommonSlider_C_Initialize final
{
public:
	double                                        DefaultValue_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhotoModeWidget_C*                     PhotoModeWidget__Self_;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_Initialize) == 0x000008, "Wrong alignment on CommonSlider_C_Initialize");
static_assert(sizeof(CommonSlider_C_Initialize) == 0x000010, "Wrong size on CommonSlider_C_Initialize");
static_assert(offsetof(CommonSlider_C_Initialize, DefaultValue_0) == 0x000000, "Member 'CommonSlider_C_Initialize::DefaultValue_0' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Initialize, PhotoModeWidget__Self_) == 0x000008, "Member 'CommonSlider_C_Initialize::PhotoModeWidget__Self_' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.LockVisibility
// 0x0006 (0x0006 - 0x0000)
struct CommonSlider_C_LockVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_LockVisibility) == 0x000001, "Wrong alignment on CommonSlider_C_LockVisibility");
static_assert(sizeof(CommonSlider_C_LockVisibility) == 0x000006, "Wrong size on CommonSlider_C_LockVisibility");
static_assert(offsetof(CommonSlider_C_LockVisibility, ReturnValue) == 0x000000, "Member 'CommonSlider_C_LockVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_LockVisibility, Temp_bool_Variable) == 0x000001, "Member 'CommonSlider_C_LockVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_LockVisibility, Temp_byte_Variable) == 0x000002, "Member 'CommonSlider_C_LockVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_LockVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'CommonSlider_C_LockVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_LockVisibility, CallFunc_GetIsEnabled_ReturnValue) == 0x000004, "Member 'CommonSlider_C_LockVisibility::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_LockVisibility, K2Node_Select_Default) == 0x000005, "Member 'CommonSlider_C_LockVisibility::K2Node_Select_Default' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct CommonSlider_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CommonSlider_C_OnMouseEnter) == 0x000008, "Wrong alignment on CommonSlider_C_OnMouseEnter");
static_assert(sizeof(CommonSlider_C_OnMouseEnter) == 0x0000B0, "Wrong size on CommonSlider_C_OnMouseEnter");
static_assert(offsetof(CommonSlider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'CommonSlider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'CommonSlider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct CommonSlider_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CommonSlider_C_OnMouseLeave) == 0x000008, "Wrong alignment on CommonSlider_C_OnMouseLeave");
static_assert(sizeof(CommonSlider_C_OnMouseLeave) == 0x000078, "Wrong size on CommonSlider_C_OnMouseLeave");
static_assert(offsetof(CommonSlider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'CommonSlider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.OnMouseWheel
// 0x0418 (0x0418 - 0x0000)
struct CommonSlider_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0170(0x00B8)()
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            K2Node_MakeStruct_EventReply_1;                    // 0x0238(0x00B8)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply_2;                    // 0x02F8(0x00B8)()
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_1;          // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_OnMouseWheel) == 0x000008, "Wrong alignment on CommonSlider_C_OnMouseWheel");
static_assert(sizeof(CommonSlider_C_OnMouseWheel) == 0x000418, "Wrong size on CommonSlider_C_OnMouseWheel");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'CommonSlider_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'CommonSlider_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'CommonSlider_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000168, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00016C, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00016D, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, K2Node_MakeStruct_EventReply) == 0x000170, "Member 'CommonSlider_C_OnMouseWheel::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_GetValue_ReturnValue) == 0x000228, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000230, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, K2Node_MakeStruct_EventReply_1) == 0x000238, "Member 'CommonSlider_C_OnMouseWheel::K2Node_MakeStruct_EventReply_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, K2Node_MakeStruct_EventReply_2) == 0x0002F8, "Member 'CommonSlider_C_OnMouseWheel::K2Node_MakeStruct_EventReply_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_GetValue_ReturnValue_1) == 0x0003B0, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0003C0, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0003C8, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0003D0, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0003D8, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0003E0, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_SetValue_InValue_ImplicitCast) == 0x0003E8, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0003F0, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0003F8, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000400, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_SetValue_InValue_ImplicitCast_1) == 0x000408, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_SetValue_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_OnMouseWheel, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x000410, "Member 'CommonSlider_C_OnMouseWheel::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CommonSlider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_PreConstruct) == 0x000001, "Wrong alignment on CommonSlider_C_PreConstruct");
static_assert(sizeof(CommonSlider_C_PreConstruct) == 0x000001, "Wrong size on CommonSlider_C_PreConstruct");
static_assert(offsetof(CommonSlider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CommonSlider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.ResetSlider
// 0x0001 (0x0001 - 0x0000)
struct CommonSlider_C_ResetSlider final
{
public:
	bool                                          Focus__0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_ResetSlider) == 0x000001, "Wrong alignment on CommonSlider_C_ResetSlider");
static_assert(sizeof(CommonSlider_C_ResetSlider) == 0x000001, "Wrong size on CommonSlider_C_ResetSlider");
static_assert(offsetof(CommonSlider_C_ResetSlider, Focus__0) == 0x000000, "Member 'CommonSlider_C_ResetSlider::Focus__0' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.Set Focused or Unfocused Color
// 0x0800 (0x0800 - 0x0000)
struct CommonSlider_C_Set_Focused_or_Unfocused_Color final
{
public:
	bool                                          ChangeSliderColorWhenFocused__0;                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeTextColorWhenFocused__0;                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USlider*                                Slider_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 imgLeftButton;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 imgRightButton;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                SliderTitle_0;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                SliderValue_0;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SetMargin;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            LeftButtonColor;                                   // 0x0040(0x00D0)(Parm, OutParm)
	struct FSlateBrush                            RightButtonColor;                                  // 0x0110(0x00D0)(Parm, OutParm)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_2;                  // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_3;                  // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_1;            // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_4;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue_1;               // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EF[0x1];                                      // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0220(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0234(0x0014)()
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0250(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0320(0x00D0)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x03F0(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0404(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x041C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x0430(0x0014)()
	uint8                                         Pad_444[0xC];                                      // 0x0444(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0450(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0520(0x00D0)()
	bool                                          Temp_bool_Variable_1;                              // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0xF];                                      // 0x05F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0600(0x00D0)()
	bool                                          Temp_bool_Variable_2;                              // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x3];                                      // 0x06D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x06D4(0x0014)()
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Select_Default_2;                           // 0x06F0(0x00D0)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x07C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x07D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x07E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_Set_Focused_or_Unfocused_Color) == 0x000010, "Wrong alignment on CommonSlider_C_Set_Focused_or_Unfocused_Color");
static_assert(sizeof(CommonSlider_C_Set_Focused_or_Unfocused_Color) == 0x000800, "Wrong size on CommonSlider_C_Set_Focused_or_Unfocused_Color");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, ChangeSliderColorWhenFocused__0) == 0x000000, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::ChangeSliderColorWhenFocused__0' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, ChangeTextColorWhenFocused__0) == 0x000001, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::ChangeTextColorWhenFocused__0' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, Slider_0) == 0x000008, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::Slider_0' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, imgLeftButton) == 0x000010, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::imgLeftButton' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, imgRightButton) == 0x000018, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::imgRightButton' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, SliderTitle_0) == 0x000020, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::SliderTitle_0' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, SliderValue_0) == 0x000028, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::SliderValue_0' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, SetMargin) == 0x000030, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::SetMargin' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, LeftButtonColor) == 0x000040, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::LeftButtonColor' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, RightButtonColor) == 0x000110, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::RightButtonColor' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_IsHovered_ReturnValue) == 0x0001E0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_IsHovered_ReturnValue_1) == 0x0001E1, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_IsHovered_ReturnValue_2) == 0x0001E2, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_IsHovered_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_IsHovered_ReturnValue_3) == 0x0001E3, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_IsHovered_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_HasAnyUserFocus_ReturnValue) == 0x0001E4, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_GetIsEnabled_ReturnValue) == 0x0001E5, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_HasAnyUserFocus_ReturnValue_1) == 0x0001E6, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_HasAnyUserFocus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanAND_ReturnValue) == 0x0001E7, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_IsHovered_ReturnValue_4) == 0x0001E8, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_IsHovered_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanOR_ReturnValue) == 0x0001E9, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_GetIsEnabled_ReturnValue_1) == 0x0001EA, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_GetIsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanOR_ReturnValue_1) == 0x0001EB, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanOR_ReturnValue_2) == 0x0001EC, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanOR_ReturnValue_3) == 0x0001ED, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanOR_ReturnValue_4) == 0x0001EE, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F8, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_MakeVector2D_ReturnValue) == 0x000200, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_MakeVector2D_ReturnValue_1) == 0x000210, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateColor) == 0x000220, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateColor_1) == 0x000234, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateBrush) == 0x000250, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateBrush_1) == 0x000320, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateColor_2) == 0x0003F0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateColor_3) == 0x000404, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, Temp_bool_Variable) == 0x000418, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateColor_4) == 0x00041C, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateColor_5) == 0x000430, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateBrush_2) == 0x000450, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_MakeStruct_SlateBrush_3) == 0x000520, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, Temp_bool_Variable_1) == 0x0005F0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_Select_Default) == 0x000600, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, Temp_bool_Variable_2) == 0x0006D0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_Select_Default_1) == 0x0006D4, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_Select_Default_2) == 0x0006F0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_SelectColor_ReturnValue) == 0x0007C0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, CallFunc_SelectColor_ReturnValue_1) == 0x0007D0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, Temp_bool_Variable_3) == 0x0007E0, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_Set_Focused_or_Unfocused_Color, K2Node_Select_Default_3) == 0x0007E8, "Member 'CommonSlider_C_Set_Focused_or_Unfocused_Color::K2Node_Select_Default_3' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.SetLeftButtonSettings
// 0x0270 (0x0270 - 0x0000)
struct CommonSlider_C_SetLeftButtonSettings final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            CallFunc_Set_Focused_or_Unfocused_Color_LeftButtonColor; // 0x00D0(0x00D0)()
	struct FSlateBrush                            CallFunc_Set_Focused_or_Unfocused_Color_RightButtonColor; // 0x01A0(0x00D0)()
};
static_assert(alignof(CommonSlider_C_SetLeftButtonSettings) == 0x000010, "Wrong alignment on CommonSlider_C_SetLeftButtonSettings");
static_assert(sizeof(CommonSlider_C_SetLeftButtonSettings) == 0x000270, "Wrong size on CommonSlider_C_SetLeftButtonSettings");
static_assert(offsetof(CommonSlider_C_SetLeftButtonSettings, ReturnValue) == 0x000000, "Member 'CommonSlider_C_SetLeftButtonSettings::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_SetLeftButtonSettings, CallFunc_Set_Focused_or_Unfocused_Color_LeftButtonColor) == 0x0000D0, "Member 'CommonSlider_C_SetLeftButtonSettings::CallFunc_Set_Focused_or_Unfocused_Color_LeftButtonColor' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_SetLeftButtonSettings, CallFunc_Set_Focused_or_Unfocused_Color_RightButtonColor) == 0x0001A0, "Member 'CommonSlider_C_SetLeftButtonSettings::CallFunc_Set_Focused_or_Unfocused_Color_RightButtonColor' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.SetRightButtonSettings
// 0x0270 (0x0270 - 0x0000)
struct CommonSlider_C_SetRightButtonSettings final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            CallFunc_Set_Focused_or_Unfocused_Color_LeftButtonColor; // 0x00D0(0x00D0)()
	struct FSlateBrush                            CallFunc_Set_Focused_or_Unfocused_Color_RightButtonColor; // 0x01A0(0x00D0)()
};
static_assert(alignof(CommonSlider_C_SetRightButtonSettings) == 0x000010, "Wrong alignment on CommonSlider_C_SetRightButtonSettings");
static_assert(sizeof(CommonSlider_C_SetRightButtonSettings) == 0x000270, "Wrong size on CommonSlider_C_SetRightButtonSettings");
static_assert(offsetof(CommonSlider_C_SetRightButtonSettings, ReturnValue) == 0x000000, "Member 'CommonSlider_C_SetRightButtonSettings::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_SetRightButtonSettings, CallFunc_Set_Focused_or_Unfocused_Color_LeftButtonColor) == 0x0000D0, "Member 'CommonSlider_C_SetRightButtonSettings::CallFunc_Set_Focused_or_Unfocused_Color_LeftButtonColor' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_SetRightButtonSettings, CallFunc_Set_Focused_or_Unfocused_Color_RightButtonColor) == 0x0001A0, "Member 'CommonSlider_C_SetRightButtonSettings::CallFunc_Set_Focused_or_Unfocused_Color_RightButtonColor' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.setTxtValue
// 0x00C0 (0x00C0 - 0x0000)
struct CommonSlider_C_setTxtValue final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0058(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_setTxtValue) == 0x000008, "Wrong alignment on CommonSlider_C_setTxtValue");
static_assert(sizeof(CommonSlider_C_setTxtValue) == 0x0000C0, "Wrong size on CommonSlider_C_setTxtValue");
static_assert(offsetof(CommonSlider_C_setTxtValue, ReturnValue) == 0x000000, "Member 'CommonSlider_C_setTxtValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, Temp_bool_Variable) == 0x000018, "Member 'CommonSlider_C_setTxtValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, Temp_int_Variable) == 0x00001C, "Member 'CommonSlider_C_setTxtValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, Temp_bool_Variable_1) == 0x000020, "Member 'CommonSlider_C_setTxtValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, Temp_int_Variable_1) == 0x000024, "Member 'CommonSlider_C_setTxtValue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'CommonSlider_C_setTxtValue::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000038, "Member 'CommonSlider_C_setTxtValue::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, K2Node_Select_Default) == 0x000048, "Member 'CommonSlider_C_setTxtValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, K2Node_Select_Default_1) == 0x00004C, "Member 'CommonSlider_C_setTxtValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_GetValue_ReturnValue) == 0x000050, "Member 'CommonSlider_C_setTxtValue::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000058, "Member 'CommonSlider_C_setTxtValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000070, "Member 'CommonSlider_C_setTxtValue::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'CommonSlider_C_setTxtValue::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'CommonSlider_C_setTxtValue::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'CommonSlider_C_setTxtValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_setTxtValue, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0000B8, "Member 'CommonSlider_C_setTxtValue::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function CommonSlider.CommonSlider_C.TextValueVisibility
// 0x0006 (0x0006 - 0x0000)
struct CommonSlider_C_TextValueVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CommonSlider_C_TextValueVisibility) == 0x000001, "Wrong alignment on CommonSlider_C_TextValueVisibility");
static_assert(sizeof(CommonSlider_C_TextValueVisibility) == 0x000006, "Wrong size on CommonSlider_C_TextValueVisibility");
static_assert(offsetof(CommonSlider_C_TextValueVisibility, ReturnValue) == 0x000000, "Member 'CommonSlider_C_TextValueVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_TextValueVisibility, Temp_bool_Variable) == 0x000001, "Member 'CommonSlider_C_TextValueVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_TextValueVisibility, Temp_byte_Variable) == 0x000002, "Member 'CommonSlider_C_TextValueVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_TextValueVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'CommonSlider_C_TextValueVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_TextValueVisibility, CallFunc_GetIsEnabled_ReturnValue) == 0x000004, "Member 'CommonSlider_C_TextValueVisibility::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CommonSlider_C_TextValueVisibility, K2Node_Select_Default) == 0x000005, "Member 'CommonSlider_C_TextValueVisibility::K2Node_Select_Default' has a wrong offset!");

}

