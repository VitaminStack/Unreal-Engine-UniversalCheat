#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestGiver

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterQuestObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuestGiver.BP_QuestGiver_C
// 0x0070 (0x0330 - 0x02C0)
class ABP_QuestGiver_C : public ABP_MasterQuestObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_QuestGiver_C;                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Gun;                                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mouth;                                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Accessory1;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Accessory;                                         // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hat;                                               // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Beard;                                             // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UDialogue>                  Dialogue;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0308(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 InteractionArgument;                               // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void SetPickupCount(int32 NewCount, bool* Result);
	void SetInteractOption(const struct FGameplayTag& Option);
	void ReceiveBeginPlay();
	void PickupBuildFromGround();
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnExecuteInteractEnded();
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnEndInteract();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void JigCanInteract(bool* Result);
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void ExecuteUbergraph_BP_QuestGiver(int32 EntryPoint);
	void BndEvt__BP_MPVendor_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuestGiver_C">();
	}
	static class ABP_QuestGiver_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_QuestGiver_C>();
	}
};
static_assert(alignof(ABP_QuestGiver_C) == 0x000008, "Wrong alignment on ABP_QuestGiver_C");
static_assert(sizeof(ABP_QuestGiver_C) == 0x000330, "Wrong size on ABP_QuestGiver_C");
static_assert(offsetof(ABP_QuestGiver_C, UberGraphFrame_BP_QuestGiver_C) == 0x0002C0, "Member 'ABP_QuestGiver_C::UberGraphFrame_BP_QuestGiver_C' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Gun) == 0x0002C8, "Member 'ABP_QuestGiver_C::Gun' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Mouth) == 0x0002D0, "Member 'ABP_QuestGiver_C::Mouth' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Accessory1) == 0x0002D8, "Member 'ABP_QuestGiver_C::Accessory1' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Accessory) == 0x0002E0, "Member 'ABP_QuestGiver_C::Accessory' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Hat) == 0x0002E8, "Member 'ABP_QuestGiver_C::Hat' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Beard) == 0x0002F0, "Member 'ABP_QuestGiver_C::Beard' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, SkeletalMesh) == 0x0002F8, "Member 'ABP_QuestGiver_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Dialogue) == 0x000300, "Member 'ABP_QuestGiver_C::Dialogue' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, Name_0) == 0x000308, "Member 'ABP_QuestGiver_C::Name_0' has a wrong offset!");
static_assert(offsetof(ABP_QuestGiver_C, InteractionArgument) == 0x000320, "Member 'ABP_QuestGiver_C::InteractionArgument' has a wrong offset!");

}

