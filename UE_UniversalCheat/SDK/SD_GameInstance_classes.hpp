#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SD_GameInstance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_Difficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SD_GameInstance.SD_GameInstance_C
// 0x0060 (0x0220 - 0x01C0)
class USD_GameInstance_C final : public UGameInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void(class FName LevelName)> SmoothLoadLevel;                                   // 0x01C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          NewGame_;                                          // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              PlayerRespawned;                                   // 0x01E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          InSafeZone_;                                       // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Difficulty                               Difficulty;                                        // 0x01F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameStarted_;                                      // 0x01F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F3[0x1];                                      // 0x01F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentLevel;                                      // 0x01F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              PlayerSpawnedInLevel;                              // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AllowSaving_;                                      // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Class_0;                                           // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AmbientVolumeChanged(float NewValue);
	void ChangedAMDFrameGen(bool NewValue);
	void ChangedUpscalingMethod(int32 NewValue);
	void ChangedUpscalingQuality(int32 NewValue);
	void Debug_SpawnCamera();
	void Debug_SpawnPlayer(int32 Index_0, bool SpawnStartingItems_);
	void EffectsVolumeChanged(float NewValue);
	void Event_Fog(bool NewValue);
	void Event_LoadLevel(class FName Level);
	void Event_ResetAIOSpawner();
	void Event_VolFog();
	void ExecuteUbergraph_SD_GameInstance(int32 EntryPoint);
	void FixWeather();
	void GameMode_SpawnPlayer();
	void GamepadIconsChanged(const class FString& NewValue);
	void MasterVolumeChanged(float NewValue);
	void MusicVolumeChanged(float NewValue);
	void OnCompleted_094C167A44DBAC5826AB0A94C7C0DD1E();
	void RadioMusicVolumeChanged(float NewValue);
	void ReceiveInit();
	void Survival_Respawn(bool Random_);
	void Survival_SpawnPlayer();
	void Survival_SuicideRespawn();
	void UIVolumeChanged(float NewValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SD_GameInstance_C">();
	}
	static class USD_GameInstance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USD_GameInstance_C>();
	}
};
static_assert(alignof(USD_GameInstance_C) == 0x000008, "Wrong alignment on USD_GameInstance_C");
static_assert(sizeof(USD_GameInstance_C) == 0x000220, "Wrong size on USD_GameInstance_C");
static_assert(offsetof(USD_GameInstance_C, UberGraphFrame) == 0x0001C0, "Member 'USD_GameInstance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, SmoothLoadLevel) == 0x0001C8, "Member 'USD_GameInstance_C::SmoothLoadLevel' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, NewGame_) == 0x0001D8, "Member 'USD_GameInstance_C::NewGame_' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, PlayerRespawned) == 0x0001E0, "Member 'USD_GameInstance_C::PlayerRespawned' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, InSafeZone_) == 0x0001F0, "Member 'USD_GameInstance_C::InSafeZone_' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, Difficulty) == 0x0001F1, "Member 'USD_GameInstance_C::Difficulty' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, GameStarted_) == 0x0001F2, "Member 'USD_GameInstance_C::GameStarted_' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, CurrentLevel) == 0x0001F4, "Member 'USD_GameInstance_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, PlayerSpawnedInLevel) == 0x000200, "Member 'USD_GameInstance_C::PlayerSpawnedInLevel' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, AllowSaving_) == 0x000210, "Member 'USD_GameInstance_C::AllowSaving_' has a wrong offset!");
static_assert(offsetof(USD_GameInstance_C, Class_0) == 0x000218, "Member 'USD_GameInstance_C::Class_0' has a wrong offset!");

}

