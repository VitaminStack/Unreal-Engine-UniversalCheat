#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_Occlusion_Volume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UDS_Occlusion_Volume.UDS_Occlusion_Volume_C.Configure Weather Particle Blocking
// 0x0010 (0x0010 - 0x0000)
struct UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking final
{
public:
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking) == 0x000008, "Wrong alignment on UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking");
static_assert(sizeof(UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking) == 0x000010, "Wrong size on UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking");
static_assert(offsetof(UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UDS_Occlusion_Volume_C_Configure_Weather_Particle_Blocking::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UDS_Occlusion_Volume.UDS_Occlusion_Volume_C.ExecuteUbergraph_UDS_Occlusion_Volume
// 0x0004 (0x0004 - 0x0000)
struct UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume) == 0x000004, "Wrong alignment on UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume");
static_assert(sizeof(UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume) == 0x000004, "Wrong size on UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume");
static_assert(offsetof(UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume, EntryPoint) == 0x000000, "Member 'UDS_Occlusion_Volume_C_ExecuteUbergraph_UDS_Occlusion_Volume::EntryPoint' has a wrong offset!");

// Function UDS_Occlusion_Volume.UDS_Occlusion_Volume_C.Query Occlusion Multiplier
// 0x0048 (0x0048 - 0x0000)
struct UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Location;                                    // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Query_Blend_Radius_Multiplier;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier) == 0x000008, "Wrong alignment on UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier");
static_assert(sizeof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier) == 0x000048, "Wrong size on UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier");
static_assert(offsetof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier, Location) == 0x000000, "Member 'UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier::Location' has a wrong offset!");
static_assert(offsetof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier, Multiplier) == 0x000018, "Member 'UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier, Local_Location) == 0x000020, "Member 'UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier::Local_Location' has a wrong offset!");
static_assert(offsetof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier, CallFunc_Query_Blend_Radius_Multiplier) == 0x000038, "Member 'UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier::CallFunc_Query_Blend_Radius_Multiplier' has a wrong offset!");
static_assert(offsetof(UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'UDS_Occlusion_Volume_C_Query_Occlusion_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}

