#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BarbedWire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BarbedWire.BP_BarbedWire_C
// 0x0028 (0x02C8 - 0x02A0)
class ABP_BarbedWire_C : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DamageTimer;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BarbedWire(int32 EntryPoint);
	void Event_Damage();
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void BndEvt__BP_BarbedWire_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_BarbedWire_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BarbedWire_C">();
	}
	static class ABP_BarbedWire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BarbedWire_C>();
	}
};
static_assert(alignof(ABP_BarbedWire_C) == 0x000008, "Wrong alignment on ABP_BarbedWire_C");
static_assert(sizeof(ABP_BarbedWire_C) == 0x0002C8, "Wrong size on ABP_BarbedWire_C");
static_assert(offsetof(ABP_BarbedWire_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_BarbedWire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BarbedWire_C, Box) == 0x0002A8, "Member 'ABP_BarbedWire_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BarbedWire_C, StaticMesh) == 0x0002B0, "Member 'ABP_BarbedWire_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_BarbedWire_C, AIOSubject) == 0x0002B8, "Member 'ABP_BarbedWire_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_BarbedWire_C, DamageTimer) == 0x0002C0, "Member 'ABP_BarbedWire_C::DamageTimer' has a wrong offset!");

}

