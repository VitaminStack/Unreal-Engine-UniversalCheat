#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemInspector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemInspector.BP_ItemInspector_C
// 0x00A0 (0x0338 - 0x0298)
class ABP_ItemInspector_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Main;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        InitialFOV;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ItemToInspect;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MaxZoomInFOV;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxZoomOutFOV;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderT;                                           // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AMainLocalAttachment_C*>     CurrentAttachments;                                // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FRotator                               NewVar;                                            // 0x0320(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Capture_One_Frame();
	void ClearAttachments();
	void ExecuteUbergraph_BP_ItemInspector(int32 EntryPoint);
	void FindLocalAttachmentByUID(const struct FGuid& UID, class ABP_AMainLocalAttachment_C** Attachment);
	void GetActiveComponent(class USceneComponent** Comp);
	void GetAttachSocketByInContainerIndex(class UJigsawItem_DataAsset_C* Info, int32 InContainerIndex, class FName* Socket);
	struct FTransform GetInitValues(double* FOVAngle);
	void GetRenderTarget(class UTextureRenderTarget2D** RenderT_0);
	void InstallAttachments(class UJSI_Slot_C* JigItem);
	void OnZoomIn();
	void OnZoomOut();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RemoveIronsights(bool Hide_, class ABP_AMainLocalAttachment_C* Attachment);
	void SetCaptorActiveState(bool IsActive);
	void SetItemToInspect(class UJSI_Slot_C* ItemRef);
	void SetMeshPosition(const struct FVector2D& XYRot);
	void SetMeshRotation(const struct FVector2D& XYRot);
	void UpdateLocAndRot(double FOVAngle, const struct FTransform& NewTransform);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemInspector_C">();
	}
	static class ABP_ItemInspector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemInspector_C>();
	}
};
static_assert(alignof(ABP_ItemInspector_C) == 0x000008, "Wrong alignment on ABP_ItemInspector_C");
static_assert(sizeof(ABP_ItemInspector_C) == 0x000338, "Wrong size on ABP_ItemInspector_C");
static_assert(offsetof(ABP_ItemInspector_C, UberGraphFrame) == 0x000298, "Member 'ABP_ItemInspector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, SkeletalMesh) == 0x0002A0, "Member 'ABP_ItemInspector_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, SpotLight2) == 0x0002A8, "Member 'ABP_ItemInspector_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, SpotLight1) == 0x0002B0, "Member 'ABP_ItemInspector_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, StaticMesh) == 0x0002B8, "Member 'ABP_ItemInspector_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, SpringArm) == 0x0002C0, "Member 'ABP_ItemInspector_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, Root) == 0x0002C8, "Member 'ABP_ItemInspector_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, Main) == 0x0002D0, "Member 'ABP_ItemInspector_C::Main' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, SpotLight) == 0x0002D8, "Member 'ABP_ItemInspector_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, SceneCaptureComponent2D) == 0x0002E0, "Member 'ABP_ItemInspector_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, InitialFOV) == 0x0002E8, "Member 'ABP_ItemInspector_C::InitialFOV' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, ItemToInspect) == 0x0002F0, "Member 'ABP_ItemInspector_C::ItemToInspect' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, MaxZoomInFOV) == 0x0002F8, "Member 'ABP_ItemInspector_C::MaxZoomInFOV' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, MaxZoomOutFOV) == 0x000300, "Member 'ABP_ItemInspector_C::MaxZoomOutFOV' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, RenderT) == 0x000308, "Member 'ABP_ItemInspector_C::RenderT' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, CurrentAttachments) == 0x000310, "Member 'ABP_ItemInspector_C::CurrentAttachments' has a wrong offset!");
static_assert(offsetof(ABP_ItemInspector_C, NewVar) == 0x000320, "Member 'ABP_ItemInspector_C::NewVar' has a wrong offset!");

}

