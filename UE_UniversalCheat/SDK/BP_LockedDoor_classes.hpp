#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockedDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LockPickObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LockedDoor.BP_LockedDoor_C
// 0x0080 (0x0340 - 0x02C0)
class ABP_LockedDoor_C final : public ABP_LockPickObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LockedDoor_C;                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_OpenDoorAuto_Alpha_7388A7EA4CB01198880C048DDE54E33F; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_OpenDoorAuto__Direction_7388A7EA4CB01198880C048DDE54E33F; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_OpenDoorAuto;                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_OpenDoor_Alpha_CA4B83EF45872B61E7779EAD32D6380C; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_OpenDoor__Direction_CA4B83EF45872B61E7779EAD32D6380C; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_OpenDoor;                                 // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHeld;                                            // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Mesh;                                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NoiseAudio;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Closed_;                                           // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Action_Name;                                       // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AdvancedLockCheck(bool* Check);
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void Event_Door();
	void EventDoorBehind();
	void ExecuteUbergraph_BP_LockedDoor(int32 EntryPoint);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetMainSceneComp(class USceneComponent** Comp);
	void JigCanInteract(bool* Result);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void LockpickSuccessful();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void OnEndInteract();
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteractEnded();
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void PickupBuildFromGround();
	void ReceiveBeginPlay();
	void SetInteractOption(const struct FGameplayTag& Option);
	void SetPickupCount(int32 NewCount, bool* Result);
	void Timeline_OpenDoor__FinishedFunc();
	void Timeline_OpenDoor__UpdateFunc();
	void Timeline_OpenDoorAuto__FinishedFunc();
	void Timeline_OpenDoorAuto__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LockedDoor_C">();
	}
	static class ABP_LockedDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LockedDoor_C>();
	}
};
static_assert(alignof(ABP_LockedDoor_C) == 0x000008, "Wrong alignment on ABP_LockedDoor_C");
static_assert(sizeof(ABP_LockedDoor_C) == 0x000340, "Wrong size on ABP_LockedDoor_C");
static_assert(offsetof(ABP_LockedDoor_C, UberGraphFrame_BP_LockedDoor_C) == 0x0002C0, "Member 'ABP_LockedDoor_C::UberGraphFrame_BP_LockedDoor_C' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, AIOSubject) == 0x0002C8, "Member 'ABP_LockedDoor_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Door) == 0x0002D0, "Member 'ABP_LockedDoor_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Arrow) == 0x0002D8, "Member 'ABP_LockedDoor_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Timeline_OpenDoorAuto_Alpha_7388A7EA4CB01198880C048DDE54E33F) == 0x0002E0, "Member 'ABP_LockedDoor_C::Timeline_OpenDoorAuto_Alpha_7388A7EA4CB01198880C048DDE54E33F' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Timeline_OpenDoorAuto__Direction_7388A7EA4CB01198880C048DDE54E33F) == 0x0002E4, "Member 'ABP_LockedDoor_C::Timeline_OpenDoorAuto__Direction_7388A7EA4CB01198880C048DDE54E33F' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Timeline_OpenDoorAuto) == 0x0002E8, "Member 'ABP_LockedDoor_C::Timeline_OpenDoorAuto' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Timeline_OpenDoor_Alpha_CA4B83EF45872B61E7779EAD32D6380C) == 0x0002F0, "Member 'ABP_LockedDoor_C::Timeline_OpenDoor_Alpha_CA4B83EF45872B61E7779EAD32D6380C' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Timeline_OpenDoor__Direction_CA4B83EF45872B61E7779EAD32D6380C) == 0x0002F4, "Member 'ABP_LockedDoor_C::Timeline_OpenDoor__Direction_CA4B83EF45872B61E7779EAD32D6380C' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Timeline_OpenDoor) == 0x0002F8, "Member 'ABP_LockedDoor_C::Timeline_OpenDoor' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, IsHeld) == 0x000300, "Member 'ABP_LockedDoor_C::IsHeld' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Mesh) == 0x000308, "Member 'ABP_LockedDoor_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Duration) == 0x000310, "Member 'ABP_LockedDoor_C::Duration' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, NoiseAudio) == 0x000318, "Member 'ABP_LockedDoor_C::NoiseAudio' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Closed_) == 0x000320, "Member 'ABP_LockedDoor_C::Closed_' has a wrong offset!");
static_assert(offsetof(ABP_LockedDoor_C, Action_Name) == 0x000328, "Member 'ABP_LockedDoor_C::Action_Name' has a wrong offset!");

}

