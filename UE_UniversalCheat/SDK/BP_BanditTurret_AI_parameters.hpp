#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BanditTurret_AI

#include "Basic.hpp"

#include "S_RandomStatsConfig_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_BanditTurret_AI_C_SetPickupCount");
static_assert(sizeof(BP_BanditTurret_AI_C_SetPickupCount) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_SetPickupCount");
static_assert(offsetof(BP_BanditTurret_AI_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_BanditTurret_AI_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_SetPickupCount, Result) == 0x000004, "Member 'BP_BanditTurret_AI_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_BanditTurret_AI_C_SetInteractOption");
static_assert(sizeof(BP_BanditTurret_AI_C_SetInteractOption) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_SetInteractOption");
static_assert(offsetof(BP_BanditTurret_AI_C_SetInteractOption, Option) == 0x000000, "Member 'BP_BanditTurret_AI_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_OnStopExecuteInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_OnStopExecuteInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_BanditTurret_AI_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_BanditTurret_AI_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_OnServerExecuteInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_BanditTurret_AI_C_OnServerExecuteInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_BanditTurret_AI_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_BanditTurret_AI_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_BanditTurret_AI_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_BanditTurret_AI_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_OnRequestServerInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_BanditTurret_AI_C_OnRequestServerInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_BanditTurret_AI_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_BanditTurret_AI_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_BanditTurret_AI_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_BanditTurret_AI_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_BanditTurret_AI_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_BanditTurret_AI_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_BanditTurret_AI_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_BanditTurret_AI_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_OnExecuteInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_BanditTurret_AI_C_OnExecuteInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_BanditTurret_AI_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_BanditTurret_AI_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_BanditTurret_AI_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BanditTurret_AI_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_OnBeginInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_OnBeginInteract) == 0x000058, "Wrong size on BP_BanditTurret_AI_C_OnBeginInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_BanditTurret_AI_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_BanditTurret_AI_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_BanditTurret_AI_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_BanditTurret_AI_C_JigSetCanInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_BanditTurret_AI_C_JigSetCanInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_BanditTurret_AI_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_BanditTurret_AI_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_BanditTurret_AI_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.JigCanInteract
// 0x0002 (0x0002 - 0x0000)
struct BP_BanditTurret_AI_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_BanditTurret_AI_C_JigCanInteract");
static_assert(sizeof(BP_BanditTurret_AI_C_JigCanInteract) == 0x000002, "Wrong size on BP_BanditTurret_AI_C_JigCanInteract");
static_assert(offsetof(BP_BanditTurret_AI_C_JigCanInteract, Result) == 0x000000, "Member 'BP_BanditTurret_AI_C_JigCanInteract::Result' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_JigCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_BanditTurret_AI_C_JigCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.IsObjectDamageable?
// 0x0001 (0x0001 - 0x0000)
struct BP_BanditTurret_AI_C_IsObjectDamageable_ final
{
public:
	bool                                          Damageable_;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_IsObjectDamageable_) == 0x000001, "Wrong alignment on BP_BanditTurret_AI_C_IsObjectDamageable_");
static_assert(sizeof(BP_BanditTurret_AI_C_IsObjectDamageable_) == 0x000001, "Wrong size on BP_BanditTurret_AI_C_IsObjectDamageable_");
static_assert(offsetof(BP_BanditTurret_AI_C_IsObjectDamageable_, Damageable_) == 0x000000, "Member 'BP_BanditTurret_AI_C_IsObjectDamageable_::Damageable_' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_GetMainSceneComp");
static_assert(sizeof(BP_BanditTurret_AI_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_GetMainSceneComp");
static_assert(offsetof(BP_BanditTurret_AI_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_BanditTurret_AI_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_BanditTurret_AI_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_BanditTurret_AI_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_BanditTurret_AI_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_BanditTurret_AI_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_BanditTurret_AI_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_GetItemInfo");
static_assert(sizeof(BP_BanditTurret_AI_C_GetItemInfo) == 0x000078, "Wrong size on BP_BanditTurret_AI_C_GetItemInfo");
static_assert(offsetof(BP_BanditTurret_AI_C_GetItemInfo, Info) == 0x000000, "Member 'BP_BanditTurret_AI_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_GetItemInfo, Count) == 0x000008, "Member 'BP_BanditTurret_AI_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_BanditTurret_AI_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_BanditTurret_AI_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BanditTurret_AI_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_BanditTurret_AI_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_GetInteractOptions");
static_assert(sizeof(BP_BanditTurret_AI_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_BanditTurret_AI_C_GetInteractOptions");
static_assert(offsetof(BP_BanditTurret_AI_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_BanditTurret_AI_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_BanditTurret_AI_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.ExecuteUbergraph_BP_BanditTurret_AI
// 0x05A0 (0x05A0 - 0x0000)
struct BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0018(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue_1;       // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0250(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x02A0(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_2;                              // 0x02F0(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_3;                              // 0x0340(0x0050)(ConstParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_4;                              // 0x0390(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x03E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0400(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_1;                         // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_2;                         // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_3;                         // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0430(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_4;                         // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x0458(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0480(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x04F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_TurretGunPickup_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBehindObject__BehindObject_;           // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0520(0x0050)(ConstParm)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_2;              // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentTime_ImplicitCast;       // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI) == 0x000010, "Wrong alignment on BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI");
static_assert(sizeof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI) == 0x0005A0, "Wrong size on BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, EntryPoint) == 0x000000, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_Option_2) == 0x000008, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_ByActor) == 0x000010, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_Payload) == 0x000018, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_InteractingActor_3) == 0x000048, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_Option_1) == 0x000050, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_ReturnValue_1) == 0x000078, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_IsPlaying_ReturnValue) == 0x000090, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000B0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000B8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_RLerp_ReturnValue) == 0x0000C0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000D8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001C0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x0001D8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001E0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0001E8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_ReturnValue_2) == 0x0001F0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_ReturnValue_3) == 0x000208, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000220, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_SpawnDecalAtLocation_ReturnValue_1) == 0x000228, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_SpawnDecalAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_InteractingActor_2) == 0x000230, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetHUD_HUD) == 0x000238, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000240, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_ComponentBoundEvent_LayerIndex) == 0x000244, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_ComponentBoundEvent_bIsSeen) == 0x000248, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_SwitchInteger_CmpSuccess) == 0x000249, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_MakeMap_Map) == 0x000250, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_MakeMap_Map_1) == 0x0002A0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_MakeMap_Map_2) == 0x0002F0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_MakeMap_Map_3) == 0x000340, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_MakeMap_Map_3' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_MakeMap_Map_4) == 0x000390, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_MakeMap_Map_4' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetHUD_HUD_1) == 0x0003E0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_CreateDelegate_OutputDelegate) == 0x0003E8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetGameHUD_HUD) == 0x0003F8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000400, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000408, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetGameHUD_HUD_1) == 0x000410, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetGameHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetBoolCVar_ReturnValue) == 0x000418, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetGameHUD_HUD_2) == 0x000420, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetGameHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetGameHUD_HUD_3) == 0x000428, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetGameHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_ShowInteractWidget_Widget) == 0x000430, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetGameHUD_HUD_4) == 0x000438, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetGameHUD_HUD_4' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000440, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_ShowInteractWidget_Widget_1) == 0x000458, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_Add_VectorVector_ReturnValue) == 0x000460, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeTransform_ReturnValue) == 0x000480, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0004E0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_InteractingActor_1) == 0x0004E8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_Option) == 0x0004F0, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_FinishSpawningActor_ReturnValue) == 0x0004F8, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_DynamicCast_AsBPI_Player) == 0x000500, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_DynamicCast_bSuccess) == 0x000510, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_GetBehindObject__BehindObject_) == 0x000511, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_GetBehindObject__BehindObject_' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_InteractingActor) == 0x000518, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_Event_Options) == 0x000520, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_ShowInteractWidget_Widget_2) == 0x000570, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_ShowInteractWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000578, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x00057C, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000580, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x000584, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000588, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00058C, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI, K2Node_VariableSet_CurrentTime_ImplicitCast) == 0x000590, "Member 'BP_BanditTurret_AI_C_ExecuteUbergraph_BP_BanditTurret_AI::K2Node_VariableSet_CurrentTime_ImplicitCast' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.CheckBehindTurret
// 0x0008 (0x0008 - 0x0000)
struct BP_BanditTurret_AI_C_CheckBehindTurret final
{
public:
	class AActor*                                 Interactor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_CheckBehindTurret) == 0x000008, "Wrong alignment on BP_BanditTurret_AI_C_CheckBehindTurret");
static_assert(sizeof(BP_BanditTurret_AI_C_CheckBehindTurret) == 0x000008, "Wrong size on BP_BanditTurret_AI_C_CheckBehindTurret");
static_assert(offsetof(BP_BanditTurret_AI_C_CheckBehindTurret, Interactor) == 0x000000, "Member 'BP_BanditTurret_AI_C_CheckBehindTurret::Interactor' has a wrong offset!");

// Function BP_BanditTurret_AI.BP_BanditTurret_AI_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_BanditTurret_AI_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

