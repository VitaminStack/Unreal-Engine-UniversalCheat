#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaboratorySlidingDoor

#include "Basic.hpp"

#include "BP_LaboratorySlidingDoor_classes.hpp"
#include "BP_LaboratorySlidingDoor_parameters.hpp"


namespace SDK
{

// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.TL_DoorsKeycard__UpdateFunc
// (BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::TL_DoorsKeycard__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "TL_DoorsKeycard__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.TL_DoorsKeycard__FinishedFunc
// (BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::TL_DoorsKeycard__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "TL_DoorsKeycard__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.TL_DoorsAuto__UpdateFunc
// (BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::TL_DoorsAuto__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "TL_DoorsAuto__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.TL_DoorsAuto__FinishedFunc
// (BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::TL_DoorsAuto__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "TL_DoorsAuto__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetPower_Warning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetWarning                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::SetPower_Warning(bool SetWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "SetPower_Warning");

	Params::BP_LaboratorySlidingDoor_C_SetPower_Warning Parms{};

	Parms.SetWarning = SetWarning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetPower_TurnedOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnOn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::SetPower_TurnedOn(bool TurnOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "SetPower_TurnedOn");

	Params::BP_LaboratorySlidingDoor_C_SetPower_TurnedOn Parms{};

	Parms.TurnOn = TurnOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetPickupCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::SetPickupCount(int32 NewCount, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "SetPickupCount");

	Params::BP_LaboratorySlidingDoor_C_SetPickupCount Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.SetInteractOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::SetInteractOption(const struct FGameplayTag& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "SetInteractOption");

	Params::BP_LaboratorySlidingDoor_C_SetInteractOption Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.PickupBuildFromGround
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::PickupBuildFromGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "PickupBuildFromGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnStopExecuteInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::OnStopExecuteInteract(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnStopExecuteInteract");

	Params::BP_LaboratorySlidingDoor_C_OnStopExecuteInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnServerExecuteInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ByActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_JigPayload                    Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnServerExecuteInteract");

	Params::BP_LaboratorySlidingDoor_C_OnServerExecuteInteract Parms{};

	Parms.Option = std::move(Option);
	Parms.ByActor = ByActor;
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnRequestServerInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_JigPayload                    Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnRequestServerInteract");

	Params::BP_LaboratorySlidingDoor_C_OnRequestServerInteract Parms{};

	Parms.Actor = Actor;
	Parms.Option = std::move(Option);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnRep_Warning
// (BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::OnRep_Warning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnRep_Warning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnRep_Unlocked
// (BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::OnRep_Unlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnRep_Unlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnRep_Locked
// (BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::OnRep_Locked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnRep_Locked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnExecuteInteractEnded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::OnExecuteInteractEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnExecuteInteractEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnExecuteInteractDialogue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::OnExecuteInteractDialogue(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnExecuteInteractDialogue");

	Params::BP_LaboratorySlidingDoor_C_OnExecuteInteractDialogue Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnExecuteInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnExecuteInteract");

	Params::BP_LaboratorySlidingDoor_C_OnExecuteInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnEndInteract
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::OnEndInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnEndInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.OnBeginInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TMap<struct FGameplayTag, class FText>  Options                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_LaboratorySlidingDoor_C::OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "OnBeginInteract");

	Params::BP_LaboratorySlidingDoor_C_OnBeginInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.Options = std::move(Options);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.JigSetCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanInteract                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnablePhysics                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "JigSetCanInteract");

	Params::BP_LaboratorySlidingDoor_C_JigSetCanInteract Parms{};

	Parms.CanInteract = CanInteract;
	Parms.EnablePhysics = EnablePhysics;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.JigCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::JigCanInteract(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "JigCanInteract");

	Params::BP_LaboratorySlidingDoor_C_JigCanInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetMainSceneComp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::GetMainSceneComp(class USceneComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "GetMainSceneComp");

	Params::BP_LaboratorySlidingDoor_C_GetMainSceneComp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetJigMultiplayerComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  JigComp                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::GetJigMultiplayerComponent(class UActorComponent** JigComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "GetJigMultiplayerComponent");

	Params::BP_LaboratorySlidingDoor_C_GetJigMultiplayerComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (JigComp != nullptr)
		*JigComp = Parms.JigComp;
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetItemInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJigsawItem_DataAsset_C*          Info                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_RandomStatsConfig             RandomStatsConfig                                      (Parm, OutParm, HasGetValueTypeHash)
// TMap<class FString, class FString>      CustomData                                             (Parm, OutParm)

void ABP_LaboratorySlidingDoor_C::GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "GetItemInfo");

	Params::BP_LaboratorySlidingDoor_C_GetItemInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = Parms.Info;

	if (Count != nullptr)
		*Count = Parms.Count;

	if (RandomStatsConfig != nullptr)
		*RandomStatsConfig = std::move(Parms.RandomStatsConfig);

	if (CustomData != nullptr)
		*CustomData = std::move(Parms.CustomData);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.GetInteractOptions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGameplayTag, class FText>  Options                                                (Parm, OutParm)

void ABP_LaboratorySlidingDoor_C::GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "GetInteractOptions");

	Params::BP_LaboratorySlidingDoor_C_GetInteractOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Options != nullptr)
		*Options = std::move(Parms.Options);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.ExecuteUbergraph_BP_LaboratorySlidingDoor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::ExecuteUbergraph_BP_LaboratorySlidingDoor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "ExecuteUbergraph_BP_LaboratorySlidingDoor");

	Params::BP_LaboratorySlidingDoor_C_ExecuteUbergraph_BP_LaboratorySlidingDoor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.Event_Door
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::Event_Door(class AActor* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "Event_Door");

	Params::BP_LaboratorySlidingDoor_C_Event_Door Parms{};

	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.Event_AutoDoor
// (BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::Event_AutoDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "Event_AutoDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.CallInteractOnObject
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LaboratorySlidingDoor_C::CallInteractOnObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "CallInteractOnObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsBeyondLastLayer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LayerIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsSeen                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LaboratorySlidingDoor_C::BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LaboratorySlidingDoor_C", "BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");

	Params::BP_LaboratorySlidingDoor_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature Parms{};

	Parms.bIsBeyondLastLayer = bIsBeyondLastLayer;
	Parms.LayerIndex = LayerIndex;
	Parms.bIsSeen = bIsSeen;

	UObject::ProcessEvent(Func, &Parms);
}

}

