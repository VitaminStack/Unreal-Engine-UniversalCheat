#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoadLightGenerator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterLight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RoadLightGenerator.BP_RoadLightGenerator_C
// 0x0048 (0x02E8 - 0x02A0)
class ABP_RoadLightGenerator_C final : public ABP_MasterLight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Plane3;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane2;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane1;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LightHum_Cue;                                      // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pole;                                              // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RoadLightGenerator(int32 EntryPoint);
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RoadLightGenerator_C">();
	}
	static class ABP_RoadLightGenerator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoadLightGenerator_C>();
	}
};
static_assert(alignof(ABP_RoadLightGenerator_C) == 0x000008, "Wrong alignment on ABP_RoadLightGenerator_C");
static_assert(sizeof(ABP_RoadLightGenerator_C) == 0x0002E8, "Wrong size on ABP_RoadLightGenerator_C");
static_assert(offsetof(ABP_RoadLightGenerator_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_RoadLightGenerator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, Plane3) == 0x0002A8, "Member 'ABP_RoadLightGenerator_C::Plane3' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, Plane2) == 0x0002B0, "Member 'ABP_RoadLightGenerator_C::Plane2' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, Plane1) == 0x0002B8, "Member 'ABP_RoadLightGenerator_C::Plane1' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, Plane) == 0x0002C0, "Member 'ABP_RoadLightGenerator_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, LightHum_Cue) == 0x0002C8, "Member 'ABP_RoadLightGenerator_C::LightHum_Cue' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, AIOSubject) == 0x0002D0, "Member 'ABP_RoadLightGenerator_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, SpotLight1) == 0x0002D8, "Member 'ABP_RoadLightGenerator_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_RoadLightGenerator_C, Pole) == 0x0002E0, "Member 'ABP_RoadLightGenerator_C::Pole' has a wrong offset!");

}

