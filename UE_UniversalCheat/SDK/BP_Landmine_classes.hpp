#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Landmine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Landmine.BP_Landmine_C
// 0x0048 (0x02E8 - 0x02A0)
class ABP_Landmine_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URadialForceComponent*                  RadialForce;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ExplosionSphere;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CameraShakeSphere;                                 // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DamageTimer;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreSoldier_;                                    // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SpawnCombatText(const struct FVector& Location, double Damage);
	void ReceiveBeginPlay();
	void IsObjectDamageable_(bool* Damageable_);
	void ExecuteUbergraph_BP_Landmine(int32 EntryPoint);
	void Event_Explode();
	void Damage_Shoved(bool Anim, double Force);
	void Damage_Object(double Damage, class AActor* Damage_Causer, class AController* Event_Instigator);
	void BndEvt__Buildable_BearTrap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Landmine_C">();
	}
	static class ABP_Landmine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Landmine_C>();
	}
};
static_assert(alignof(ABP_Landmine_C) == 0x000008, "Wrong alignment on ABP_Landmine_C");
static_assert(sizeof(ABP_Landmine_C) == 0x0002E8, "Wrong size on ABP_Landmine_C");
static_assert(offsetof(ABP_Landmine_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_Landmine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, RadialForce) == 0x0002A8, "Member 'ABP_Landmine_C::RadialForce' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, ExplosionSphere) == 0x0002B0, "Member 'ABP_Landmine_C::ExplosionSphere' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, CameraShakeSphere) == 0x0002B8, "Member 'ABP_Landmine_C::CameraShakeSphere' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, Box) == 0x0002C0, "Member 'ABP_Landmine_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, StaticMesh) == 0x0002C8, "Member 'ABP_Landmine_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, AIOSubject) == 0x0002D0, "Member 'ABP_Landmine_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, DamageTimer) == 0x0002D8, "Member 'ABP_Landmine_C::DamageTimer' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, IgnoreSoldier_) == 0x0002E0, "Member 'ABP_Landmine_C::IgnoreSoldier_' has a wrong offset!");

}

