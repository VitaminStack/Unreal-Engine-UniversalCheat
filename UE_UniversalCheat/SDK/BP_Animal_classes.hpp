#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Animal

#include "Basic.hpp"

#include "E_BlockType_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_AI_classes.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Animal.BP_Animal_C
// 0x0010 (0x06A0 - 0x0690)
class ABP_Animal_C : public ABP_AI_C
{
public:
	uint8                                         Pad_68A[0x6];                                      // 0x068A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Animal_C;                        // 0x0690(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USD_AIComponent_C*                      SD_AIComponent;                                    // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Turret_Start_Reload();
	void Turret_Idle_Stop();
	void Turret_Idle_Start();
	void Turret_End_Reload();
	void Turret_Destroyed_Effect();
	void ExecuteUbergraph_BP_Animal(int32 EntryPoint);
	void Alert_Actor_Defenders(class AActor* Attacked, class AActor* Attacker);
	void AI_End_Alert();
	void AI_Dead();
	void AI_Can_Interact_(bool* Can_Interact);
	void AI_Camera_Activate(bool Activate);
	void AI_Block(E_BlockType Block_Type, class AActor* Block_Attacker);
	void AI_Animation_Switch(E_AIBehaviour Behaviour);
	void AI_Alert(class AActor* Alert_Actor);
	void Actor_Attack_Target(class AActor** Attack_Target);
	void Actor_Aim_Focus(class AActor* Instigator_0);

	void AI_Is_Dead_(bool* Dead_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Animal_C">();
	}
	static class ABP_Animal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Animal_C>();
	}
};
static_assert(alignof(ABP_Animal_C) == 0x000010, "Wrong alignment on ABP_Animal_C");
static_assert(sizeof(ABP_Animal_C) == 0x0006A0, "Wrong size on ABP_Animal_C");
static_assert(offsetof(ABP_Animal_C, UberGraphFrame_BP_Animal_C) == 0x000690, "Member 'ABP_Animal_C::UberGraphFrame_BP_Animal_C' has a wrong offset!");
static_assert(offsetof(ABP_Animal_C, SD_AIComponent) == 0x000698, "Member 'ABP_Animal_C::SD_AIComponent' has a wrong offset!");

}

