#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DifficultySettingsPage

#include "Basic.hpp"

#include "DifficultySettingsPage_classes.hpp"
#include "DifficultySettingsPage_parameters.hpp"


namespace SDK
{

// Function DifficultySettingsPage.DifficultySettingsPage_C.CategoryChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UDifficultySettingsPage_C::CategoryChanged(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySettingsPage_C", "CategoryChanged");

	Params::DifficultySettingsPage_C_CategoryChanged Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function DifficultySettingsPage.DifficultySettingsPage_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDifficultySettingsPage_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySettingsPage_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DifficultySettingsPage.DifficultySettingsPage_C.ExecuteUbergraph_DifficultySettingsPage
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDifficultySettingsPage_C::ExecuteUbergraph_DifficultySettingsPage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DifficultySettingsPage_C", "ExecuteUbergraph_DifficultySettingsPage");

	Params::DifficultySettingsPage_C_ExecuteUbergraph_DifficultySettingsPage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

