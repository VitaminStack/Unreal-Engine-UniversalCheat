#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bear_FindPlayerLocation

#include "Basic.hpp"

#include "SurrounDead_structs.hpp"


namespace SDK::Params
{

// Function Bear_FindPlayerLocation.Bear_FindPlayerLocation_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct Bear_FindPlayerLocation_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bear_FindPlayerLocation_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on Bear_FindPlayerLocation_C_ReceiveExecuteAI");
static_assert(sizeof(Bear_FindPlayerLocation_C_ReceiveExecuteAI) == 0x000010, "Wrong size on Bear_FindPlayerLocation_C_ReceiveExecuteAI");
static_assert(offsetof(Bear_FindPlayerLocation_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'Bear_FindPlayerLocation_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'Bear_FindPlayerLocation_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function Bear_FindPlayerLocation.Bear_FindPlayerLocation_C.ExecuteUbergraph_Bear_FindPlayerLocation
// 0x0058 (0x0058 - 0x0000)
struct Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetCurrentlyPerceivedActors_OutActors;    // 0x0020(0x0010)(ReferenceParm)
	TArray<struct FActor_Dist>                    CallFunc_Distance_Sort_Sorted_Array;               // 0x0030(0x0010)(ReferenceParm)
	struct FActor_Dist                            CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation) == 0x000008, "Wrong alignment on Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation");
static_assert(sizeof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation) == 0x000058, "Wrong size on Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, EntryPoint) == 0x000000, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, K2Node_Event_OwnerController) == 0x000008, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, K2Node_Event_ControlledPawn) == 0x000010, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, CallFunc_GetCurrentlyPerceivedActors_OutActors) == 0x000020, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::CallFunc_GetCurrentlyPerceivedActors_OutActors' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, CallFunc_Distance_Sort_Sorted_Array) == 0x000030, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::CallFunc_Distance_Sort_Sorted_Array' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, CallFunc_Array_Get_Item) == 0x000040, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, CallFunc_ActorHasTag_ReturnValue) == 0x000050, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'Bear_FindPlayerLocation_C_ExecuteUbergraph_Bear_FindPlayerLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

