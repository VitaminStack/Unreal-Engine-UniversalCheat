#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_TurretMASTER

#include "Basic.hpp"

#include "E_AIBehaviour_structs.hpp"
#include "E_BlockType_structs.hpp"


namespace SDK::Params
{

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.Actor Aim Focus
// 0x0008 (0x0008 - 0x0000)
struct Buildable_TurretMASTER_C_Actor_Aim_Focus final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_Actor_Aim_Focus) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_Actor_Aim_Focus");
static_assert(sizeof(Buildable_TurretMASTER_C_Actor_Aim_Focus) == 0x000008, "Wrong size on Buildable_TurretMASTER_C_Actor_Aim_Focus");
static_assert(offsetof(Buildable_TurretMASTER_C_Actor_Aim_Focus, Instigator_0) == 0x000000, "Member 'Buildable_TurretMASTER_C_Actor_Aim_Focus::Instigator_0' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.Actor Attack Target
// 0x0008 (0x0008 - 0x0000)
struct Buildable_TurretMASTER_C_Actor_Attack_Target final
{
public:
	class AActor*                                 Attack_Target;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_Actor_Attack_Target) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_Actor_Attack_Target");
static_assert(sizeof(Buildable_TurretMASTER_C_Actor_Attack_Target) == 0x000008, "Wrong size on Buildable_TurretMASTER_C_Actor_Attack_Target");
static_assert(offsetof(Buildable_TurretMASTER_C_Actor_Attack_Target, Attack_Target) == 0x000000, "Member 'Buildable_TurretMASTER_C_Actor_Attack_Target::Attack_Target' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.AI Alert
// 0x0008 (0x0008 - 0x0000)
struct Buildable_TurretMASTER_C_AI_Alert final
{
public:
	class AActor*                                 Alert_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_AI_Alert) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_AI_Alert");
static_assert(sizeof(Buildable_TurretMASTER_C_AI_Alert) == 0x000008, "Wrong size on Buildable_TurretMASTER_C_AI_Alert");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Alert, Alert_Actor) == 0x000000, "Member 'Buildable_TurretMASTER_C_AI_Alert::Alert_Actor' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.AI Animation Switch
// 0x0001 (0x0001 - 0x0000)
struct Buildable_TurretMASTER_C_AI_Animation_Switch final
{
public:
	E_AIBehaviour                                 Behaviour;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_AI_Animation_Switch) == 0x000001, "Wrong alignment on Buildable_TurretMASTER_C_AI_Animation_Switch");
static_assert(sizeof(Buildable_TurretMASTER_C_AI_Animation_Switch) == 0x000001, "Wrong size on Buildable_TurretMASTER_C_AI_Animation_Switch");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Animation_Switch, Behaviour) == 0x000000, "Member 'Buildable_TurretMASTER_C_AI_Animation_Switch::Behaviour' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.AI Block
// 0x0010 (0x0010 - 0x0000)
struct Buildable_TurretMASTER_C_AI_Block final
{
public:
	E_BlockType                                   Block_Type;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Block_Attacker;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_AI_Block) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_AI_Block");
static_assert(sizeof(Buildable_TurretMASTER_C_AI_Block) == 0x000010, "Wrong size on Buildable_TurretMASTER_C_AI_Block");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Block, Block_Type) == 0x000000, "Member 'Buildable_TurretMASTER_C_AI_Block::Block_Type' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Block, Block_Attacker) == 0x000008, "Member 'Buildable_TurretMASTER_C_AI_Block::Block_Attacker' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.AI Camera Activate
// 0x0001 (0x0001 - 0x0000)
struct Buildable_TurretMASTER_C_AI_Camera_Activate final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_AI_Camera_Activate) == 0x000001, "Wrong alignment on Buildable_TurretMASTER_C_AI_Camera_Activate");
static_assert(sizeof(Buildable_TurretMASTER_C_AI_Camera_Activate) == 0x000001, "Wrong size on Buildable_TurretMASTER_C_AI_Camera_Activate");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Camera_Activate, Activate) == 0x000000, "Member 'Buildable_TurretMASTER_C_AI_Camera_Activate::Activate' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.AI Can Interact?
// 0x0001 (0x0001 - 0x0000)
struct Buildable_TurretMASTER_C_AI_Can_Interact_ final
{
public:
	bool                                          Can_Interact;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_AI_Can_Interact_) == 0x000001, "Wrong alignment on Buildable_TurretMASTER_C_AI_Can_Interact_");
static_assert(sizeof(Buildable_TurretMASTER_C_AI_Can_Interact_) == 0x000001, "Wrong size on Buildable_TurretMASTER_C_AI_Can_Interact_");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Can_Interact_, Can_Interact) == 0x000000, "Member 'Buildable_TurretMASTER_C_AI_Can_Interact_::Can_Interact' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.Alert Actor Defenders
// 0x0010 (0x0010 - 0x0000)
struct Buildable_TurretMASTER_C_Alert_Actor_Defenders final
{
public:
	class AActor*                                 Attacked;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attacker;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_Alert_Actor_Defenders) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_Alert_Actor_Defenders");
static_assert(sizeof(Buildable_TurretMASTER_C_Alert_Actor_Defenders) == 0x000010, "Wrong size on Buildable_TurretMASTER_C_Alert_Actor_Defenders");
static_assert(offsetof(Buildable_TurretMASTER_C_Alert_Actor_Defenders, Attacked) == 0x000000, "Member 'Buildable_TurretMASTER_C_Alert_Actor_Defenders::Attacked' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_Alert_Actor_Defenders, Attacker) == 0x000008, "Member 'Buildable_TurretMASTER_C_Alert_Actor_Defenders::Attacker' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.ExecuteUbergraph_Buildable_TurretMASTER
// 0x0080 (0x0080 - 0x0000)
struct Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Instigator;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Attacked;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Attacker;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Alert_Actor;                          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 K2Node_Event_Behaviour;                            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Activate;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BlockType                                   K2Node_Event_Block_Type;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Block_Attacker;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildable_TurretMASTER_C*              K2Node_DynamicCast_AsBuildable_Turret_MASTER;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Server_Turret_Damaged_Damage_ImplicitCast; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER");
static_assert(sizeof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER) == 0x000080, "Wrong size on Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, EntryPoint) == 0x000000, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::EntryPoint' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Instigator) == 0x000010, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Attacked) == 0x000018, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Attacked' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Attacker) == 0x000020, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Attacker' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Alert_Actor) == 0x000028, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Alert_Actor' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Behaviour) == 0x000030, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Behaviour' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Activate) == 0x000031, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Activate' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Block_Type) == 0x000032, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Block_Type' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Block_Attacker) == 0x000038, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Block_Attacker' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_Damage) == 0x000040, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_DamageType) == 0x000048, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_InstigatedBy) == 0x000050, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_Event_DamageCauser) == 0x000058, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_DynamicCast_AsBuildable_Turret_MASTER) == 0x000068, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_DynamicCast_AsBuildable_Turret_MASTER' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER, CallFunc_Server_Turret_Damaged_Damage_ImplicitCast) == 0x000078, "Member 'Buildable_TurretMASTER_C_ExecuteUbergraph_Buildable_TurretMASTER::CallFunc_Server_Turret_Damaged_Damage_ImplicitCast' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.UpdateHealth
// 0x0020 (0x0020 - 0x0000)
struct Buildable_TurretMASTER_C_UpdateHealth final
{
public:
	int32                                         Health_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBuildableObjectHealth_C*               K2Node_DynamicCast_AsBuildable_Object_Health;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_UpdateHealth) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_UpdateHealth");
static_assert(sizeof(Buildable_TurretMASTER_C_UpdateHealth) == 0x000020, "Wrong size on Buildable_TurretMASTER_C_UpdateHealth");
static_assert(offsetof(Buildable_TurretMASTER_C_UpdateHealth, Health_0) == 0x000000, "Member 'Buildable_TurretMASTER_C_UpdateHealth::Health_0' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_UpdateHealth, CallFunc_GetWidget_ReturnValue) == 0x000008, "Member 'Buildable_TurretMASTER_C_UpdateHealth::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_UpdateHealth, K2Node_DynamicCast_AsBuildable_Object_Health) == 0x000010, "Member 'Buildable_TurretMASTER_C_UpdateHealth::K2Node_DynamicCast_AsBuildable_Object_Health' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_UpdateHealth, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Buildable_TurretMASTER_C_UpdateHealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct Buildable_TurretMASTER_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on Buildable_TurretMASTER_C_ReceiveAnyDamage");
static_assert(sizeof(Buildable_TurretMASTER_C_ReceiveAnyDamage) == 0x000020, "Wrong size on Buildable_TurretMASTER_C_ReceiveAnyDamage");
static_assert(offsetof(Buildable_TurretMASTER_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'Buildable_TurretMASTER_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'Buildable_TurretMASTER_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'Buildable_TurretMASTER_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Buildable_TurretMASTER_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'Buildable_TurretMASTER_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function Buildable_TurretMASTER.Buildable_TurretMASTER_C.AI Is Dead?
// 0x0001 (0x0001 - 0x0000)
struct Buildable_TurretMASTER_C_AI_Is_Dead_ final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_TurretMASTER_C_AI_Is_Dead_) == 0x000001, "Wrong alignment on Buildable_TurretMASTER_C_AI_Is_Dead_");
static_assert(sizeof(Buildable_TurretMASTER_C_AI_Is_Dead_) == 0x000001, "Wrong size on Buildable_TurretMASTER_C_AI_Is_Dead_");
static_assert(offsetof(Buildable_TurretMASTER_C_AI_Is_Dead_, Dead) == 0x000000, "Member 'Buildable_TurretMASTER_C_AI_Is_Dead_::Dead' has a wrong offset!");

}

