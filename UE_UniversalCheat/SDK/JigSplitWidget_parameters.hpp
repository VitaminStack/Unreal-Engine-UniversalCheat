#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JigSplitWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function JigSplitWidget.JigSplitWidget_C.BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'JigSplitWidget_C_BndEvt__SplitSlider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function JigSplitWidget.JigSplitWidget_C.ExecuteUbergraph_JigSplitWidget
// 0x0158 (0x0158 - 0x0000)
struct JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_Name;                         // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateCount_Count;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00D0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Count_1;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectRotation_Rotated;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0130(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_B_ImplicitCast;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget) == 0x000008, "Wrong alignment on JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget");
static_assert(sizeof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget) == 0x000158, "Wrong size on JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, EntryPoint) == 0x000000, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_GetItemName_Name) == 0x000008, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_GetItemName_Name' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, K2Node_MakeArray_Array) == 0x000070, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Format_ReturnValue) == 0x000088, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, K2Node_ComponentBoundEvent_Value) == 0x0000A8, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000B0, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Round_ReturnValue) == 0x0000B8, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_IsValid_ReturnValue) == 0x0000BD, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_IsValid_ReturnValue_1) == 0x0000BE, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_BooleanAND_ReturnValue) == 0x0000BF, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_GetCount_Count) == 0x0000C0, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C4, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_UpdateCount_Count) == 0x0000C8, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_UpdateCount_Count' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x0000D0, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_GetCount_Count_1) == 0x0000EC, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_GetCount_Count_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000F0, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x0000F8, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000FC, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_IsEquipTo__ReturnValue) == 0x0000FD, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Clamp_ReturnValue) == 0x000100, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000104, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_BooleanAND_ReturnValue_1) == 0x000105, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_SelectInt_ReturnValue) == 0x000108, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_SelectRotation_Rotated) == 0x00010C, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_SelectRotation_Rotated' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_AddNewInventoryItem_Added) == 0x00010D, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_AddNewInventoryItem_SlotIndex) == 0x000110, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_AddNewInventoryItem_ItemInfo) == 0x000118, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x000120, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_AddNewInventoryItem_Stacked_) == 0x000128, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000130, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000148, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x00014C, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget, CallFunc_Multiply_IntFloat_B_ImplicitCast) == 0x000150, "Member 'JigSplitWidget_C_ExecuteUbergraph_JigSplitWidget::CallFunc_Multiply_IntFloat_B_ImplicitCast' has a wrong offset!");

}

