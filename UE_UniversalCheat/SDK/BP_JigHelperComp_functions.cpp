#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JigHelperComp

#include "Basic.hpp"

#include "BP_JigHelperComp_classes.hpp"
#include "BP_JigHelperComp_parameters.hpp"


namespace SDK
{

// Function BP_JigHelperComp.BP_JigHelperComp_C.CycleOptions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::CycleOptions(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "CycleOptions");

	Params::BP_JigHelperComp_C_CycleOptions Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.Equip Actor to Socket
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSecondary                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::Equip_Actor_to_Socket(class AActor* ActorRef, bool IsSecondary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "Equip Actor to Socket");

	Params::BP_JigHelperComp_C_Equip_Actor_to_Socket Parms{};

	Parms.ActorRef = ActorRef;
	Parms.IsSecondary = IsSecondary;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.ExecuteUbergraph_BP_JigHelperComp
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::ExecuteUbergraph_BP_JigHelperComp(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "ExecuteUbergraph_BP_JigHelperComp");

	Params::BP_JigHelperComp_C_ExecuteUbergraph_BP_JigHelperComp Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.ForceRepPrimitiveActorSpawns
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::ForceRepPrimitiveActorSpawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "ForceRepPrimitiveActorSpawns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetActiveWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetActiveWeapon(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetActiveWeapon");

	Params::BP_JigHelperComp_C_GetActiveWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetActiveWeaponSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     ActiveWeapon_0                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetActiveWeaponSlot(struct FGameplayTag* ActiveWeapon_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetActiveWeaponSlot");

	Params::BP_JigHelperComp_C_GetActiveWeaponSlot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveWeapon_0 != nullptr)
		*ActiveWeapon_0 = std::move(Parms.ActiveWeapon_0);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetAllEquippedActors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   OutArr                                                 (Parm, OutParm)

void UBP_JigHelperComp_C::GetAllEquippedActors(TArray<class AActor*>* OutArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetAllEquippedActors");

	Params::BP_JigHelperComp_C_GetAllEquippedActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutArr != nullptr)
		*OutArr = std::move(Parms.OutArr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetCurrentTracActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetCurrentTracActor(class AActor** Actor, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetCurrentTracActor");

	Params::BP_JigHelperComp_C_GetCurrentTracActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetDropLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_JigHelperComp_C::GetDropLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetDropLocation");

	Params::BP_JigHelperComp_C_GetDropLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetEquipConfigByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_EquipmentIDInfo               Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Slot                                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetEquipConfigByName(class FName& Name_0, struct FS_EquipmentIDInfo* Result, struct FGameplayTag* Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetEquipConfigByName");

	Params::BP_JigHelperComp_C_GetEquipConfigByName Parms{};

	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	Name_0 = Parms.Name_0;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	if (Slot != nullptr)
		*Slot = std::move(Parms.Slot);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetEquipmentUID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Slot                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetEquipmentUID(const struct FGameplayTag& Slot, struct FGuid* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetEquipmentUID");

	Params::BP_JigHelperComp_C_GetEquipmentUID Parms{};

	Parms.Slot = std::move(Slot);

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetEquippedActorBySlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    IncludePrimitive_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Array_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetEquippedActorBySlot(const struct FGameplayTag& Slot, bool IncludePrimitive_, class AActor** Actor, int32* Array_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetEquippedActorBySlot");

	Params::BP_JigHelperComp_C_GetEquippedActorBySlot Parms{};

	Parms.Slot = std::move(Slot);
	Parms.IncludePrimitive_ = IncludePrimitive_;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (Array_Index != nullptr)
		*Array_Index = Parms.Array_Index;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetEquippedInfoBySlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     Info                                                   (Parm, OutParm, HasGetValueTypeHash)
// bool                                    Equipped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetEquippedInfoBySlot(const struct FGameplayTag& Slot, struct FRepItemInfo* Info, bool* Equipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetEquippedInfoBySlot");

	Params::BP_JigHelperComp_C_GetEquippedInfoBySlot Parms{};

	Parms.Slot = std::move(Slot);

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	if (Equipped != nullptr)
		*Equipped = Parms.Equipped;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetMeshFromOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetMeshFromOwner(class USkeletalMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetMeshFromOwner");

	Params::BP_JigHelperComp_C_GetMeshFromOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetPrimitiveBySlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Slot                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_CustomPrimitiveComp_C*        Value                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetPrimitiveBySlot(const struct FGameplayTag& Slot, class ABP_CustomPrimitiveComp_C** Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetPrimitiveBySlot");

	Params::BP_JigHelperComp_C_GetPrimitiveBySlot Parms{};

	Parms.Slot = std::move(Slot);

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetPrimitiveByUID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::GetPrimitiveByUID(const struct FGuid& UID, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetPrimitiveByUID");

	Params::BP_JigHelperComp_C_GetPrimitiveByUID Parms{};

	Parms.UID = std::move(UID);

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.GetTraceIgnore
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   OutArr                                                 (Parm, OutParm)

void UBP_JigHelperComp_C::GetTraceIgnore(TArray<class AActor*>* OutArr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "GetTraceIgnore");

	Params::BP_JigHelperComp_C_GetTraceIgnore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutArr != nullptr)
		*OutArr = std::move(Parms.OutArr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnContainerSwap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnContainerSwap(class FName From, class FName To)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnContainerSwap");

	Params::BP_JigHelperComp_C_OnContainerSwap Parms{};

	Parms.From = From;
	Parms.To = To;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnInventoryOpenClose_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Opened_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnInventoryOpenClose_Event_0(bool Opened_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnInventoryOpenClose_Event_0");

	Params::BP_JigHelperComp_C_OnInventoryOpenClose_Event_0 Parms{};

	Parms.Opened_ = Opened_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnItemAdded
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  ToComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnItemAdded(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, const struct FGuid& ToContainerUID, class UActorComponent* ToComponent, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnItemAdded");

	Params::BP_JigHelperComp_C_OnItemAdded Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.ToComponent = ToComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnItemMoved
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnItemMoved(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, const struct FGuid& ToContainerUID, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnItemMoved");

	Params::BP_JigHelperComp_C_OnItemMoved Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ToContainerUID = std::move(ToContainerUID);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnItemRemoved
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  ToComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnItemRemoved(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, const struct FGuid& ToContainerUID, class UActorComponent* ToComponent, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnItemRemoved");

	Params::BP_JigHelperComp_C_OnItemRemoved Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.ToComponent = ToComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnLoadDataRequested
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::OnLoadDataRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnLoadDataRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnMainAdded
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ToContainerName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             FromMain                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnMainAdded(const struct FGuid& ToContainerUID, const struct FGuid& ItemUID, class FName ToContainerName, struct FRepItemInfo& ItemInfo, class FName FromMain, bool* Result, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnMainAdded");

	Params::BP_JigHelperComp_C_OnMainAdded Parms{};

	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.ItemUID = std::move(ItemUID);
	Parms.ToContainerName = ToContainerName;
	Parms.ItemInfo = std::move(ItemInfo);
	Parms.FromMain = FromMain;

	UObject::ProcessEvent(Func, &Parms);

	ItemInfo = std::move(Parms.ItemInfo);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnMainRemoved
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ContainerName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     ItemRemovedInfo                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnMainRemoved(const struct FGuid& FromContainerUID, const struct FGuid& ItemUID, class FName ContainerName, const struct FRepItemInfo& ItemRemovedInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnMainRemoved");

	Params::BP_JigHelperComp_C_OnMainRemoved Parms{};

	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ItemUID = std::move(ItemUID);
	Parms.ContainerName = ContainerName;
	Parms.ItemRemovedInfo = std::move(ItemRemovedInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnPawnControllerChangedDelegates_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnPawnControllerChangedDelegates_Event_0(class APawn* Pawn, class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnPawnControllerChangedDelegates_Event_0");

	Params::BP_JigHelperComp_C_OnPawnControllerChangedDelegates_Event_0 Parms{};

	Parms.Pawn = Pawn;
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnPickupEquipped
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             ToContainerName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class AActor*                           OverrideActor                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::OnPickupEquipped(class AActor* ActorRef, class FName ToContainerName, struct FGuid& UID, struct FGuid& ToContainerUID, struct FRepItemInfo& Info, class AActor** OverrideActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnPickupEquipped");

	Params::BP_JigHelperComp_C_OnPickupEquipped Parms{};

	Parms.ActorRef = ActorRef;
	Parms.ToContainerName = ToContainerName;
	Parms.UID = std::move(UID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	UID = std::move(Parms.UID);
	ToContainerUID = std::move(Parms.ToContainerUID);
	Info = std::move(Parms.Info);

	if (OverrideActor != nullptr)
		*OverrideActor = Parms.OverrideActor;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnRep_ActiveWeapon
// (BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::OnRep_ActiveWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnRep_ActiveWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnRep_RepActorsData
// (BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::OnRep_RepActorsData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnRep_RepActorsData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.OnRep_RepPrimitiveActorsData
// (BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::OnRep_RepPrimitiveActorsData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "OnRep_RepPrimitiveActorsData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.PreviewAttachmentUpdated
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::PreviewAttachmentUpdated(class UObject* Item, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "PreviewAttachmentUpdated");

	Params::BP_JigHelperComp_C_PreviewAttachmentUpdated Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_JigHelperComp_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "ReceiveEndPlay");

	Params::BP_JigHelperComp_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.RemovePrimitiveActorBySlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::RemovePrimitiveActorBySlot(const struct FGameplayTag& Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "RemovePrimitiveActorBySlot");

	Params::BP_JigHelperComp_C_RemovePrimitiveActorBySlot Parms{};

	Parms.Slot = std::move(Slot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.RequestDropAsPickup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRepItemInfo                     ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             ContainerName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ActorRef                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::RequestDropAsPickup(struct FRepItemInfo& ItemInfo, class FName ContainerName, class AActor** ActorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "RequestDropAsPickup");

	Params::BP_JigHelperComp_C_RequestDropAsPickup Parms{};

	Parms.ItemInfo = std::move(ItemInfo);
	Parms.ContainerName = ContainerName;

	UObject::ProcessEvent(Func, &Parms);

	ItemInfo = std::move(Parms.ItemInfo);

	if (ActorRef != nullptr)
		*ActorRef = Parms.ActorRef;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.SetActiveWeaponSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     NewSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::SetActiveWeaponSlot(const struct FGameplayTag& NewSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "SetActiveWeaponSlot");

	Params::BP_JigHelperComp_C_SetActiveWeaponSlot Parms{};

	Parms.NewSlot = std::move(NewSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.SetEquippedInfoBySlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::SetEquippedInfoBySlot(const struct FGameplayTag& Slot, const struct FRepItemInfo& Info, const struct FGuid& UID, bool SkipUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "SetEquippedInfoBySlot");

	Params::BP_JigHelperComp_C_SetEquippedInfoBySlot Parms{};

	Parms.Slot = std::move(Slot);
	Parms.Info = std::move(Info);
	Parms.UID = std::move(UID);
	Parms.SkipUID = SkipUID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.SetPreviewChar
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PreviewChar_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::SetPreviewChar(class AActor* PreviewChar_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "SetPreviewChar");

	Params::BP_JigHelperComp_C_SetPreviewChar Parms{};

	Parms.PreviewChar_0 = PreviewChar_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.SpawnPrimitiveActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_RepNonActorData               Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AActor* UBP_JigHelperComp_C::SpawnPrimitiveActor(struct FS_RepNonActorData& Data, const struct FGuid& UID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "SpawnPrimitiveActor");

	Params::BP_JigHelperComp_C_SpawnPrimitiveActor Parms{};

	Parms.Data = std::move(Data);
	Parms.UID = std::move(UID);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.StopInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::StopInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "StopInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.TraceToWorld
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::TraceToWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "TraceToWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.TryInteract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TraceDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::TryInteract(double TraceDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "TryInteract");

	Params::BP_JigHelperComp_C_TryInteract Parms{};

	Parms.TraceDistance = TraceDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.TryPickup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PickupRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  TargetContainer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::TryPickup(class AActor* PickupRef, class UJSIContainer_C* TargetContainer, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "TryPickup");

	Params::BP_JigHelperComp_C_TryPickup Parms{};

	Parms.PickupRef = PickupRef;
	Parms.TargetContainer = TargetContainer;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.UpdateChamberUID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JigHelperComp_C::UpdateChamberUID(const struct FGuid& UID, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "UpdateChamberUID");

	Params::BP_JigHelperComp_C_UpdateChamberUID Parms{};

	Parms.UID = std::move(UID);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigHelperComp.BP_JigHelperComp_C.UpdatePrevFromPrim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_JigHelperComp_C::UpdatePrevFromPrim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigHelperComp_C", "UpdatePrevFromPrim");

	UObject::ProcessEvent(Func, nullptr);
}

}

