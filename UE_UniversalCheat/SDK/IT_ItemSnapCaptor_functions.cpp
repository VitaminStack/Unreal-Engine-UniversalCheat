#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IT_ItemSnapCaptor

#include "Basic.hpp"

#include "IT_ItemSnapCaptor_classes.hpp"
#include "IT_ItemSnapCaptor_parameters.hpp"


namespace SDK
{

// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.AddItemToQueue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::AddItemToQueue(class UJSI_Slot_C* Item, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "AddItemToQueue");

	Params::IT_ItemSnapCaptor_C_AddItemToQueue Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.GetLocalAttachmentByID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJigsawItem_DataAsset_C*          ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Type                                                   (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::GetLocalAttachmentByID(class UJigsawItem_DataAsset_C* ItemId, bool* Found, class FName* Socket, struct FGameplayTag* Type, class UClass** Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "GetLocalAttachmentByID");

	Params::IT_ItemSnapCaptor_C_GetLocalAttachmentByID Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Socket != nullptr)
		*Socket = Parms.Socket;

	if (Type != nullptr)
		*Type = std::move(Parms.Type);

	if (Class_0 != nullptr)
		*Class_0 = Parms.Class_0;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.GetSnap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           Texture                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::GetSnap(class UJSI_Slot_C* ItemRef, class UTextureRenderTarget2D** Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "GetSnap");

	Params::IT_ItemSnapCaptor_C_GetSnap Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Texture != nullptr)
		*Texture = Parms.Texture;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.InspectorGetPrimitiveComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::InspectorGetPrimitiveComponent(class AActor* Actor, class UPrimitiveComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "InspectorGetPrimitiveComponent");

	Params::IT_ItemSnapCaptor_C_InspectorGetPrimitiveComponent Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.SpawnSnapshotCaptor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_ItemInspector_C*              InspectorRef                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::SpawnSnapshotCaptor(class UJSI_Slot_C* ItemRef, class ABP_ItemInspector_C** InspectorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "SpawnSnapshotCaptor");

	Params::IT_ItemSnapCaptor_C_SpawnSnapshotCaptor Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);

	if (InspectorRef != nullptr)
		*InspectorRef = Parms.InspectorRef;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.UpdateAttachments
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderT                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     Attachments                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UTextureRenderTarget*             RenderTarget                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::UpdateAttachments(class UJSI_Slot_C* ItemRef, class UTextureRenderTarget2D* RenderT, TArray<class FName>& Attachments, class UTextureRenderTarget** RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "UpdateAttachments");

	Params::IT_ItemSnapCaptor_C_UpdateAttachments Parms{};

	Parms.ItemRef = ItemRef;
	Parms.RenderT = RenderT;
	Parms.Attachments = std::move(Attachments);

	UObject::ProcessEvent(Func, &Parms);

	Attachments = std::move(Parms.Attachments);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.UpdateSnap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderT                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget*             RenderTarget                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::UpdateSnap(class UJSI_Slot_C* ItemRef, class UTextureRenderTarget2D* RenderT, class UTextureRenderTarget** RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "UpdateSnap");

	Params::IT_ItemSnapCaptor_C_UpdateSnap Parms{};

	Parms.ItemRef = ItemRef;
	Parms.RenderT = RenderT;

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;
}


// Function IT_ItemSnapCaptor.IT_ItemSnapCaptor_C.UpdateSnapCustom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      JigItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IIT_ItemSnapCaptor_C::UpdateSnapCustom(const struct FTransform& Transform, double FOV, class UJSI_Slot_C* JigItem, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IT_ItemSnapCaptor_C", "UpdateSnapCustom");

	Params::IT_ItemSnapCaptor_C_UpdateSnapCustom Parms{};

	Parms.Transform = std::move(Transform);
	Parms.FOV = FOV;
	Parms.JigItem = JigItem;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

