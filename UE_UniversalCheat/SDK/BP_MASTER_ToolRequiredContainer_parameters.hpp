#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MASTER_ToolRequiredContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_NotificationDetails_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RepItemInfo_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"


namespace SDK::Params
{

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.TraceToPlayer
// 0x0170 (0x0170 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_TraceToPlayer final
{
public:
	bool                                          HitObject_;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_TraceToPlayer");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer) == 0x000170, "Wrong size on BP_MASTER_ToolRequiredContainer_C_TraceToPlayer");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, HitObject_) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::HitObject_' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000068, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_LineTraceSingle_OutHit) == 0x000080, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceToPlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x000168, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceToPlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.TraceForActor
// 0x01F8 (0x01F8 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_TraceForActor final
{
public:
	bool                                          Ouput;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_TraceForActor) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_TraceForActor");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_TraceForActor) == 0x0001F8, "Wrong size on BP_MASTER_ToolRequiredContainer_C_TraceForActor");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, Ouput) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::Ouput' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, Temp_object_Variable) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_SphereTraceSingle_OutHit) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_SphereTraceSingle_ReturnValue) == 0x000118, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_Location) == 0x000128, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_Normal) == 0x000158, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_ImpactNormal) == 0x000170, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_PhysMat) == 0x000188, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_HitActor) == 0x000190, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_HitComponent) == 0x000198, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_HitBoneName) == 0x0001A0, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_BoneName) == 0x0001A8, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_HitItem) == 0x0001B0, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_ElementIndex) == 0x0001B4, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_FaceIndex) == 0x0001B8, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_TraceStart) == 0x0001C0, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_TraceForActor, CallFunc_ActorHasTag_ReturnValue) == 0x0001F0, "Member 'BP_MASTER_ToolRequiredContainer_C_TraceForActor::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_SetPickupCount");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_SetPickupCount) == 0x000008, "Wrong size on BP_MASTER_ToolRequiredContainer_C_SetPickupCount");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetPickupCount, Result) == 0x000004, "Member 'BP_MASTER_ToolRequiredContainer_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_SetInteractOption");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_SetInteractOption) == 0x000008, "Wrong size on BP_MASTER_ToolRequiredContainer_C_SetInteractOption");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInteractOption, Option) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.SetInteractDistance
// 0x0020 (0x0020 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_SetInteractDistance final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_SetInteractDistance) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_SetInteractDistance");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_SetInteractDistance) == 0x000020, "Wrong size on BP_MASTER_ToolRequiredContainer_C_SetInteractDistance");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInteractDistance, Target) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInteractDistance::Target' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInteractDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInteractDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.SetInspected
// 0x00B0 (0x00B0 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_SetInspected final
{
public:
	bool                                          Inspected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0098(0x0018)()
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_SetInspected) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_SetInspected");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_SetInspected) == 0x0000B0, "Wrong size on BP_MASTER_ToolRequiredContainer_C_SetInspected");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Inspected) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Inspected' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Temp_text_Variable) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Temp_text_Variable_1) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Temp_bool_Variable) == 0x000038, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Temp_text_Variable_2) == 0x000040, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Temp_text_Variable_3) == 0x000058, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, CallFunc_GetHUD_HUD) == 0x000070, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, K2Node_Select_Default) == 0x000078, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, Temp_bool_Variable_1) == 0x000091, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SetInspected, K2Node_Select_Default_1) == 0x000098, "Member 'BP_MASTER_ToolRequiredContainer_C_SetInspected::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.SearchSound
// 0x0028 (0x0028 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_SearchSound final
{
public:
	bool                                          Spawn_;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_SearchSound) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_SearchSound");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_SearchSound) == 0x000028, "Wrong size on BP_MASTER_ToolRequiredContainer_C_SearchSound");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SearchSound, Spawn_) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_SearchSound::Spawn_' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SearchSound, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_MASTER_ToolRequiredContainer_C_SearchSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SearchSound, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_MASTER_ToolRequiredContainer_C_SearchSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SearchSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_SearchSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_SearchSound, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_SearchSound::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_MASTER_ToolRequiredContainer_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_OnBeginInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_OnBeginInteract) == 0x000058, "Wrong size on BP_MASTER_ToolRequiredContainer_C_OnBeginInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.NoiseEvent
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_NoiseEvent final
{
public:
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_PlayerControllerInterface_C> K2Node_DynamicCast_AsBP_Player_Controller_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_NoiseEvent");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent) == 0x0000C0, "Wrong size on BP_MASTER_ToolRequiredContainer_C_NoiseEvent");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_GetHUD_HUD) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, K2Node_DynamicCast_AsBP_Player_Controller_Interface) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::K2Node_DynamicCast_AsBP_Player_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000070, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_RandomFloatInRange_ReturnValue) == 0x000080, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000090, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_NoiseEvent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A8, "Member 'BP_MASTER_ToolRequiredContainer_C_NoiseEvent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_MASTER_ToolRequiredContainer_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnUpdateChamberUID
// 0x0014 (0x0014 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID) == 0x000004, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID) == 0x000014, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID, NewUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID::NewUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID, Result) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnUpdateChamberUID::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnTwoContainersSwap
// 0x0014 (0x0014 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap final
{
public:
	class FName                                   FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap) == 0x000004, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap) == 0x000014, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap, FromContainer) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap, ToContainer) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap, Result) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnTwoContainersSwap::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnRequestDropItem
// 0x0150 (0x0150 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ContainerName_0;                                   // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem) == 0x000010, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem) == 0x000150, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, ItemInfo) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, ContainerName_0) == 0x000078, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::ContainerName_0' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, ActorRef) == 0x000080, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000140, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnPickupEquipped
// 0x00B8 (0x00B8 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           Info;                                              // 0x0030(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverrideActor;                                     // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped) == 0x0000B8, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, ActorRef) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, ToContainerName) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::ToContainerName' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, UID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::UID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, ToContainerUID) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, Info) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::Info' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, Result) == 0x0000A8, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped, OverrideActor) == 0x0000B0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupEquipped::OverrideActor' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnPickupAdded
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded final
{
public:
	struct FRepItemInfo                           Info;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded) == 0x0000A8, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded, Info) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded::Info' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded, ItemUID) == 0x000078, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded, ToContainerUID) == 0x000088, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded, ToContainer) == 0x000098, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded, Result) == 0x0000A0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnPickupAdded::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnMainContainerItemRemoved
// 0x00A8 (0x00A8 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved final
{
public:
	struct FGuid                                  FromContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName_0;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemRemovedInfo;                                   // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved) == 0x0000A8, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved, FromContainerUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved, ItemUID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved, ContainerName_0) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved::ContainerName_0' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved, ItemRemovedInfo) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved::ItemRemovedInfo' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved, Result) == 0x0000A0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemRemoved::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnMainContainerItemAdded
// 0x00B8 (0x00B8 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded final
{
public:
	struct FGuid                                  ToContainerUID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemInfo;                                          // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromMain;                                          // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorRef;                                          // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded) == 0x0000B8, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, ToContainerUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, ItemUID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, ToContainerName) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::ToContainerName' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, ItemInfo) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, FromMain) == 0x0000A0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::FromMain' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, Result) == 0x0000A8, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded, ActorRef) == 0x0000B0, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnMainContainerItemAdded::ActorRef' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnItemRemoved
// 0x0040 (0x0040 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        ToComponent;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved) == 0x000040, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved, ItemUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved, FromContainerUID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved, ToContainerUID) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved, ToComponent) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved::ToComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved, Result) == 0x000038, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemRemoved::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnItemMoved
// 0x0034 (0x0034 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved) == 0x000004, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved) == 0x000034, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved, ItemUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved, FromContainerUID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved, ToContainerUID) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved, Result) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemMoved::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnItemDropped
// 0x0030 (0x0030 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped) == 0x000030, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped, ItemUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped, FromContainerUID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped, ActorRef) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped, Result) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemDropped::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnItemConsumed
// 0x0118 (0x0118 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed final
{
public:
	struct FRepItemInfo                           ConsumedItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0080(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromContainer;                                     // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0111(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed) == 0x000118, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, ConsumedItem) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::ConsumedItem' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, Amount) == 0x000078, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::Amount' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, Remaining) == 0x00007C, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::Remaining' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, InsideOf) == 0x000080, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::InsideOf' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, FromContainer) == 0x0000F8, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, CustomData) == 0x000100, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::CustomData' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, CallbackToPlayer_) == 0x000110, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed, Result) == 0x000111, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemConsumed::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnItemAdded
// 0x0040 (0x0040 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        FromComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded) == 0x000040, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded, ItemUID) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded, FromContainerUID) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded, ToContainerUID) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded, FromComponent) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded::FromComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded, Result) == 0x000038, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnItemAdded::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_OnContainersSwap
// 0x0018 (0x0018 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap final
{
public:
	class UJSIContainer_C*                        Container1;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container2;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap) == 0x000018, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap, Container1) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap::Container1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap, Container2) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap::Container2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap, Result) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_OnContainersSwap::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigMP_GetLootWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget final
{
public:
	class UWidget*                                Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget) == 0x000010, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget, Result) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget::Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget, Valid_) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_JigMP_GetLootWidget::Valid_' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_JigCanInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_JigCanInteract) == 0x000001, "Wrong size on BP_MASTER_ToolRequiredContainer_C_JigCanInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_JigCanInteract, Result) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.IsHeld?
// 0x0001 (0x0001 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_IsHeld_ final
{
public:
	bool                                          Held_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_IsHeld_) == 0x000001, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_IsHeld_");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_IsHeld_) == 0x000001, "Wrong size on BP_MASTER_ToolRequiredContainer_C_IsHeld_");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_IsHeld_, Held_) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_IsHeld_::Held_' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.HoldToInteract
// 0x0188 (0x0188 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_HoldToInteract final
{
public:
	class ULevellingComponent_C*                  CallFunc_GetLevellingComponent_LevellingComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_XPOutput;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x00B8(0x0040)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent_1; // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills;           // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills_1;         // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_HoldToInteract");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract) == 0x000188, "Wrong size on BP_MASTER_ToolRequiredContainer_C_HoldToInteract");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GetLevellingComponent_LevellingComponent) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GetLevellingComponent_LevellingComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GetGameHUD_HUD) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_AddXP_XPOutput) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_AddXP_XPOutput' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GetHUD_HUD) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GetHUD_HUD_1) == 0x000088, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_MakeStruct_S_NotificationDetails) == 0x0000B8, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000F8, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000121, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_BooleanAND_ReturnValue) == 0x000122, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000130, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_RandomFloatInRange_ReturnValue) == 0x000138, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000148, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, CallFunc_GetPassiveSkillsComponent_SkillsComponent_1) == 0x000150, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::CallFunc_GetPassiveSkillsComponent_SkillsComponent_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_DynamicCast_AsInt_Passive_Skills) == 0x000158, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_DynamicCast_AsInt_Passive_Skills' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_DynamicCast_AsInt_Passive_Skills_1) == 0x000170, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_DynamicCast_AsInt_Passive_Skills_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_HoldToInteract, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'BP_MASTER_ToolRequiredContainer_C_HoldToInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.GetSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_GetSettings final
{
public:
	double                                        ChanceToProduceNoise;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_ChanceToProduceNoise;                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DurationToHold_0;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_GetSettings) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_GetSettings");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_GetSettings) == 0x000018, "Wrong size on BP_MASTER_ToolRequiredContainer_C_GetSettings");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetSettings, ChanceToProduceNoise) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_GetSettings::ChanceToProduceNoise' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetSettings, Default_ChanceToProduceNoise) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_GetSettings::Default_ChanceToProduceNoise' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetSettings, DurationToHold_0) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_GetSettings::DurationToHold_0' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_GetItemInfo");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_GetItemInfo) == 0x000078, "Wrong size on BP_MASTER_ToolRequiredContainer_C_GetItemInfo");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetItemInfo, Info) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetItemInfo, Count) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_GetInteractOptions");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_MASTER_ToolRequiredContainer_C_GetInteractOptions");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_MASTER_ToolRequiredContainer_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.FindItem
// 0x0138 (0x0138 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_FindItem final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Append_Text_Return_Value;                 // 0x0038(0x0018)()
	class FText                                   CallFunc_Append_Text_Return_Value_1;               // 0x0050(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0068(0x0040)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x00A8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_FindJigItemByDA_Result;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindJigItemByDA_Found;                    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ServerFuncUpdateDurabilityByUID_NewDur;   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_FindItem) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_FindItem");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_FindItem) == 0x000138, "Wrong size on BP_MASTER_ToolRequiredContainer_C_FindItem");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, Actor) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::Actor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, Found_) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::Found_' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetBoolCVar_ReturnValue) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetFloatCVar_ReturnValue) == 0x00001C, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetHUD_HUD) == 0x000028, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetHUD_HUD_1) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_Append_Text_Return_Value) == 0x000038, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_Append_Text_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_Append_Text_Return_Value_1) == 0x000050, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_Append_Text_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, K2Node_MakeStruct_S_NotificationDetails) == 0x000068, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, K2Node_MakeStruct_S_NotificationDetails_1) == 0x0000A8, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_FindJigItemByDA_Result) == 0x0000E8, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_FindJigItemByDA_Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_FindJigItemByDA_Found) == 0x0000F0, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_FindJigItemByDA_Found' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetDurability_Durability) == 0x0000F8, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetDurability_MaxDurability) == 0x000100, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_GetUniqueID_UniqueServerID) == 0x000108, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_ServerFuncUpdateDurabilityByUID_NewDur) == 0x000120, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_ServerFuncUpdateDurabilityByUID_NewDur' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_FindItem, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000130, "Member 'BP_MASTER_ToolRequiredContainer_C_FindItem::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.ExecuteUbergraph_BP_MASTER_ToolRequiredContainer
// 0x0258 (0x0258 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Spawn;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0018(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLootTableName_Text;                    // 0x0088(0x0018)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x00A0(0x0050)(ConstParm)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_2;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0120(0x0050)(ConstParm)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindItem_Found_;                          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface_1; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_3;                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x01F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x0200(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestServerData_Result;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_SetupInventoryWidget_InventoryWidgetRef;  // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddJigWidgetToContent_Result;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryVisible__Result;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B[0x1];                                      // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_4;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B[0x5];                                      // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_RefillTimer_ImplicitCast;       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer) == 0x000258, "Wrong size on BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, EntryPoint) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_CustomEvent_Spawn) == 0x000004, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_CustomEvent_Spawn' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_Option_2) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_ByActor) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_Payload) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_InteractingActor_3) == 0x000048, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_Option_1) == 0x000050, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000068, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetBoolCVar_ReturnValue) == 0x00006C, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x000074, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000075, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000076, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_ComponentBoundEvent_LayerIndex) == 0x000078, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_ComponentBoundEvent_bIsSeen) == 0x00007C, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_SwitchInteger_CmpSuccess) == 0x00007D, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_InteractingActor_2) == 0x000080, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetLootTableName_Text) == 0x000088, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetLootTableName_Text' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_MakeMap_Map) == 0x0000A0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetBoolCVar_ReturnValue_1) == 0x0000F0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetBoolCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetBoolCVar_ReturnValue_2) == 0x0000F1, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetBoolCVar_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetHUD_HUD) == 0x0000F8, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetHUD_HUD_1) == 0x000100, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetHUD_HUD_2) == 0x000108, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_RandomFloatInRange_ReturnValue) == 0x000110, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_InteractingActor_1) == 0x000118, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_Options) == 0x000120, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_InteractingActor) == 0x000170, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_Event_Option) == 0x000178, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_FindItem_Found_) == 0x000180, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_FindItem_Found_' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_K2_SetTimer_ReturnValue) == 0x000188, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000190, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000198, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0001A8, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x0001B0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_DynamicCast_bSuccess) == 0x0001C0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_DynamicCast_AsBP_Jig_Character_Interface_1) == 0x0001C8, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_DynamicCast_AsBP_Jig_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetBoolCVar_ReturnValue_3) == 0x0001D9, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetBoolCVar_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_DynamicCast_AsBPI_Player) == 0x0001E0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_K2_SetTimer_ReturnValue_2) == 0x0001F8, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_K2_SetTimer_ReturnValue_3) == 0x000200, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_RequestServerData_Result) == 0x000208, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_RequestServerData_Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_SetupInventoryWidget_InventoryWidgetRef) == 0x000210, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_SetupInventoryWidget_InventoryWidgetRef' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_AddJigWidgetToContent_Result) == 0x000218, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_AddJigWidgetToContent_Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_IsInventoryVisible__Result) == 0x000219, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_IsInventoryVisible__Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Not_PreBool_ReturnValue) == 0x00021A, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetFloatCVar_ReturnValue) == 0x00021C, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000220, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_GetBoolCVar_ReturnValue_4) == 0x000228, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_GetBoolCVar_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000229, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_AddComponent_ReturnValue) == 0x000230, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, Temp_bool_IsClosed_Variable) == 0x000238, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_IsValid_ReturnValue) == 0x000239, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_IsValid_ReturnValue_1) == 0x00023A, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, K2Node_VariableSet_RefillTimer_ImplicitCast) == 0x000240, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::K2Node_VariableSet_RefillTimer_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000248, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000250, "Member 'BP_MASTER_ToolRequiredContainer_C_ExecuteUbergraph_BP_MASTER_ToolRequiredContainer::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.Event_MagnifierUI
// 0x0001 (0x0001 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI final
{
public:
	bool                                          Spawn;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI) == 0x000001, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI) == 0x000001, "Wrong size on BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI, Spawn) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_Event_MagnifierUI::Spawn' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.DistanceOutline
// 0x0028 (0x0028 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_DistanceOutline final
{
public:
	bool                                          CallFunc_TraceToPlayer_HitObject_;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_DistanceOutline");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline) == 0x000028, "Wrong size on BP_MASTER_ToolRequiredContainer_C_DistanceOutline");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_TraceToPlayer_HitObject_) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_TraceToPlayer_HitObject_' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_GetDistanceTo_ReturnValue) == 0x000014, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_GetBoolCVar_ReturnValue) == 0x000019, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_DistanceOutline, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_MASTER_ToolRequiredContainer_C_DistanceOutline::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.ComponentsToSave
// 0x0010 (0x0010 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_ComponentsToSave final
{
public:
	TArray<class UActorComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_ComponentsToSave) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_ComponentsToSave");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_ComponentsToSave) == 0x000010, "Wrong size on BP_MASTER_ToolRequiredContainer_C_ComponentsToSave");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_ComponentsToSave, Components) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_ComponentsToSave::Components' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.CheckDistanceFromActor
// 0x0058 (0x0058 - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor final
{
public:
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnInteractActorOverDistance_Result;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor) == 0x000008, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor) == 0x000058, "Wrong size on BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, CallFunc_OnInteractActorOverDistance_Result) == 0x000011, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::CallFunc_OnInteractActorOverDistance_Result' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_MASTER_ToolRequiredContainer_C_CheckDistanceFromActor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_MASTER_ToolRequiredContainer.BP_MASTER_ToolRequiredContainer_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_MASTER_ToolRequiredContainer_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

}

