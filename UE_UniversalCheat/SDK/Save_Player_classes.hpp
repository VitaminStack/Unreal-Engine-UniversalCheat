#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Save_Player

#include "Basic.hpp"

#include "S_ReplicatedContainerInfo_structs.hpp"
#include "Enum_Occupation_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_InvWeight_structs.hpp"
#include "EasyMultiSave_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Save_Player.Save_Player_C
// 0x01D0 (0x0220 - 0x0050)
class USave_Player_C final : public UEMSCustomSaveGame
{
public:
	TArray<struct FS_ReplicatedContainerInfo>     MainJigContainers;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, SaveGame, ContainsInstancedReference)
	TArray<struct FGuid>                          MainUIDs;                                          // 0x0060(0x0010)(Edit, BlueprintVisible, SaveGame)
	TArray<struct FS_InvWeight>                   Weights;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, SaveGame)
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0080(0x0010)(Edit, BlueprintVisible, SaveGame)
	class UMaterialInstance*                      SkinColor;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            HairType;                                          // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      HairColor;                                         // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BeardType;                                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BeardColor;                                        // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class FString                                 Forename;                                          // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash)
	class FString                                 Surname;                                           // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash)
	class FString                                 Sex;                                               // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash)
	class FString                                 Age;                                               // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, HasGetValueTypeHash)
	class UStaticMesh*                            EyebrowsType;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	Enum_Occupation                               Occupation;                                        // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ZombieKills;                                       // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BossZombieKills;                                   // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimalKills;                                       // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HumanKills;                                        // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DaysSurvived;                                      // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceTravelled;                                 // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InfestationsDestroyed;                             // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0xC];                                      // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PlayerLocation;                                    // 0x0130(0x0060)(Edit, BlueprintVisible, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RespawnLocation;                                   // 0x0190(0x0060)(Edit, BlueprintVisible, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RespawnLocationSet_;                               // 0x01F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            AccessoryType1;                                    // 0x01F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            AccessoryType2;                                    // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            AccessoryType3;                                    // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            MouthType;                                         // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Save_Player_C">();
	}
	static class USave_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USave_Player_C>();
	}
};
static_assert(alignof(USave_Player_C) == 0x000010, "Wrong alignment on USave_Player_C");
static_assert(sizeof(USave_Player_C) == 0x000220, "Wrong size on USave_Player_C");
static_assert(offsetof(USave_Player_C, MainJigContainers) == 0x000050, "Member 'USave_Player_C::MainJigContainers' has a wrong offset!");
static_assert(offsetof(USave_Player_C, MainUIDs) == 0x000060, "Member 'USave_Player_C::MainUIDs' has a wrong offset!");
static_assert(offsetof(USave_Player_C, Weights) == 0x000070, "Member 'USave_Player_C::Weights' has a wrong offset!");
static_assert(offsetof(USave_Player_C, ActionbarUIDs) == 0x000080, "Member 'USave_Player_C::ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(USave_Player_C, SkinColor) == 0x000090, "Member 'USave_Player_C::SkinColor' has a wrong offset!");
static_assert(offsetof(USave_Player_C, HairType) == 0x000098, "Member 'USave_Player_C::HairType' has a wrong offset!");
static_assert(offsetof(USave_Player_C, HairColor) == 0x0000A0, "Member 'USave_Player_C::HairColor' has a wrong offset!");
static_assert(offsetof(USave_Player_C, BeardType) == 0x0000A8, "Member 'USave_Player_C::BeardType' has a wrong offset!");
static_assert(offsetof(USave_Player_C, BeardColor) == 0x0000B0, "Member 'USave_Player_C::BeardColor' has a wrong offset!");
static_assert(offsetof(USave_Player_C, Forename) == 0x0000B8, "Member 'USave_Player_C::Forename' has a wrong offset!");
static_assert(offsetof(USave_Player_C, Surname) == 0x0000C8, "Member 'USave_Player_C::Surname' has a wrong offset!");
static_assert(offsetof(USave_Player_C, Sex) == 0x0000D8, "Member 'USave_Player_C::Sex' has a wrong offset!");
static_assert(offsetof(USave_Player_C, Age) == 0x0000E8, "Member 'USave_Player_C::Age' has a wrong offset!");
static_assert(offsetof(USave_Player_C, EyebrowsType) == 0x0000F8, "Member 'USave_Player_C::EyebrowsType' has a wrong offset!");
static_assert(offsetof(USave_Player_C, Occupation) == 0x000100, "Member 'USave_Player_C::Occupation' has a wrong offset!");
static_assert(offsetof(USave_Player_C, ZombieKills) == 0x000104, "Member 'USave_Player_C::ZombieKills' has a wrong offset!");
static_assert(offsetof(USave_Player_C, BossZombieKills) == 0x000108, "Member 'USave_Player_C::BossZombieKills' has a wrong offset!");
static_assert(offsetof(USave_Player_C, AnimalKills) == 0x00010C, "Member 'USave_Player_C::AnimalKills' has a wrong offset!");
static_assert(offsetof(USave_Player_C, HumanKills) == 0x000110, "Member 'USave_Player_C::HumanKills' has a wrong offset!");
static_assert(offsetof(USave_Player_C, DaysSurvived) == 0x000114, "Member 'USave_Player_C::DaysSurvived' has a wrong offset!");
static_assert(offsetof(USave_Player_C, DistanceTravelled) == 0x000118, "Member 'USave_Player_C::DistanceTravelled' has a wrong offset!");
static_assert(offsetof(USave_Player_C, InfestationsDestroyed) == 0x000120, "Member 'USave_Player_C::InfestationsDestroyed' has a wrong offset!");
static_assert(offsetof(USave_Player_C, PlayerLocation) == 0x000130, "Member 'USave_Player_C::PlayerLocation' has a wrong offset!");
static_assert(offsetof(USave_Player_C, RespawnLocation) == 0x000190, "Member 'USave_Player_C::RespawnLocation' has a wrong offset!");
static_assert(offsetof(USave_Player_C, RespawnLocationSet_) == 0x0001F0, "Member 'USave_Player_C::RespawnLocationSet_' has a wrong offset!");
static_assert(offsetof(USave_Player_C, AccessoryType1) == 0x0001F8, "Member 'USave_Player_C::AccessoryType1' has a wrong offset!");
static_assert(offsetof(USave_Player_C, AccessoryType2) == 0x000200, "Member 'USave_Player_C::AccessoryType2' has a wrong offset!");
static_assert(offsetof(USave_Player_C, AccessoryType3) == 0x000208, "Member 'USave_Player_C::AccessoryType3' has a wrong offset!");
static_assert(offsetof(USave_Player_C, MouthType) == 0x000210, "Member 'USave_Player_C::MouthType' has a wrong offset!");

}

