#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SD_AIComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_AIBehviour_structs.hpp"


namespace SDK::Params
{

// Function SD_AIComponent.SD_AIComponent_C.CheckBehaviour
// 0x0038 (0x0038 - 0x0000)
struct SD_AIComponent_C_CheckBehaviour final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SD_AIComponent_C_CheckBehaviour) == 0x000008, "Wrong alignment on SD_AIComponent_C_CheckBehaviour");
static_assert(sizeof(SD_AIComponent_C_CheckBehaviour) == 0x000038, "Wrong size on SD_AIComponent_C_CheckBehaviour");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000008, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000010, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'SD_AIComponent_C_CheckBehaviour::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_CheckBehaviour, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'SD_AIComponent_C_CheckBehaviour::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SD_AIComponent.SD_AIComponent_C.ExecuteUbergraph_SD_AIComponent
// 0x0004 (0x0004 - 0x0000)
struct SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent) == 0x000004, "Wrong alignment on SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent");
static_assert(sizeof(SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent) == 0x000004, "Wrong size on SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent");
static_assert(offsetof(SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent, EntryPoint) == 0x000000, "Member 'SD_AIComponent_C_ExecuteUbergraph_SD_AIComponent::EntryPoint' has a wrong offset!");

// Function SD_AIComponent.SD_AIComponent_C.SetBB_Behaviour
// 0x00C8 (0x00C8 - 0x0000)
struct SD_AIComponent_C_SetBB_Behaviour final
{
public:
	Enum_AIBehviour                               EnumValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_AIBehviour                               LPreviousBehaviour;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_3;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_4;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_5;              // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SD_AIComponent_C_SetBB_Behaviour) == 0x000008, "Wrong alignment on SD_AIComponent_C_SetBB_Behaviour");
static_assert(sizeof(SD_AIComponent_C_SetBB_Behaviour) == 0x0000C8, "Wrong size on SD_AIComponent_C_SetBB_Behaviour");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, EnumValue) == 0x000000, "Member 'SD_AIComponent_C_SetBB_Behaviour::EnumValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, LPreviousBehaviour) == 0x000001, "Member 'SD_AIComponent_C_SetBB_Behaviour::LPreviousBehaviour' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_MakeLiteralName_ReturnValue) == 0x000024, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetBlackboard_ReturnValue_1) == 0x000038, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000040, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000044, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004C, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000050, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetOwner_ReturnValue_2) == 0x000058, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetBlackboard_ReturnValue_2) == 0x000060, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000068, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_Not_PreBool_ReturnValue_2) == 0x000069, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_MakeLiteralName_ReturnValue_3) == 0x00006C, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetOwner_ReturnValue_3) == 0x000078, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetBlackboard_ReturnValue_3) == 0x000080, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetBlackboard_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_MakeLiteralName_ReturnValue_4) == 0x000088, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetOwner_ReturnValue_4) == 0x000090, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetBlackboard_ReturnValue_4) == 0x000098, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetBlackboard_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'SD_AIComponent_C_SetBB_Behaviour::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetOwner_ReturnValue_5) == 0x0000A8, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_GetBlackboard_ReturnValue_5) == 0x0000B8, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_GetBlackboard_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Behaviour, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'SD_AIComponent_C_SetBB_Behaviour::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SD_AIComponent.SD_AIComponent_C.SetBB_ForceAttack
// 0x0050 (0x0050 - 0x0000)
struct SD_AIComponent_C_SetBB_ForceAttack final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SD_AIComponent_C_SetBB_ForceAttack) == 0x000008, "Wrong alignment on SD_AIComponent_C_SetBB_ForceAttack");
static_assert(sizeof(SD_AIComponent_C_SetBB_ForceAttack) == 0x000050, "Wrong size on SD_AIComponent_C_SetBB_ForceAttack");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, Attacker) == 0x000000, "Member 'SD_AIComponent_C_SetBB_ForceAttack::Attacker' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_GetBlackboard_ReturnValue_1) == 0x000040, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_ForceAttack, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'SD_AIComponent_C_SetBB_ForceAttack::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SD_AIComponent.SD_AIComponent_C.SetBB_Location
// 0x0038 (0x0038 - 0x0000)
struct SD_AIComponent_C_SetBB_Location final
{
public:
	struct FVector                                VectorValue;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SD_AIComponent_C_SetBB_Location) == 0x000008, "Wrong alignment on SD_AIComponent_C_SetBB_Location");
static_assert(sizeof(SD_AIComponent_C_SetBB_Location) == 0x000038, "Wrong size on SD_AIComponent_C_SetBB_Location");
static_assert(offsetof(SD_AIComponent_C_SetBB_Location, VectorValue) == 0x000000, "Member 'SD_AIComponent_C_SetBB_Location::VectorValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Location, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'SD_AIComponent_C_SetBB_Location::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Location, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'SD_AIComponent_C_SetBB_Location::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Location, CallFunc_GetBlackboard_ReturnValue) == 0x000028, "Member 'SD_AIComponent_C_SetBB_Location::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Location, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'SD_AIComponent_C_SetBB_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SD_AIComponent_C_SetBB_Location, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'SD_AIComponent_C_SetBB_Location::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SD_AIComponent.SD_AIComponent_C.SetBB_LockOnTarget
// 0x0018 (0x0018 - 0x0000)
struct SD_AIComponent_C_SetBB_LockOnTarget final
{
public:
	struct FVector                                VectorValue;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SD_AIComponent_C_SetBB_LockOnTarget) == 0x000008, "Wrong alignment on SD_AIComponent_C_SetBB_LockOnTarget");
static_assert(sizeof(SD_AIComponent_C_SetBB_LockOnTarget) == 0x000018, "Wrong size on SD_AIComponent_C_SetBB_LockOnTarget");
static_assert(offsetof(SD_AIComponent_C_SetBB_LockOnTarget, VectorValue) == 0x000000, "Member 'SD_AIComponent_C_SetBB_LockOnTarget::VectorValue' has a wrong offset!");

}

