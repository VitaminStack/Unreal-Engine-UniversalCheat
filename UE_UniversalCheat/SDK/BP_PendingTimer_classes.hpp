#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PendingTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_PendingTimer.BP_PendingTimer_C
// 0x0028 (0x02E8 - 0x02C0)
class UBP_PendingTimer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             TextBlock_41;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        TimeInSec;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnDone;                                            // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_BP_PendingTimer(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PendingTimer_C">();
	}
	static class UBP_PendingTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PendingTimer_C>();
	}
};
static_assert(alignof(UBP_PendingTimer_C) == 0x000008, "Wrong alignment on UBP_PendingTimer_C");
static_assert(sizeof(UBP_PendingTimer_C) == 0x0002E8, "Wrong size on UBP_PendingTimer_C");
static_assert(offsetof(UBP_PendingTimer_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_PendingTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PendingTimer_C, TextBlock_41) == 0x0002C8, "Member 'UBP_PendingTimer_C::TextBlock_41' has a wrong offset!");
static_assert(offsetof(UBP_PendingTimer_C, TimeInSec) == 0x0002D0, "Member 'UBP_PendingTimer_C::TimeInSec' has a wrong offset!");
static_assert(offsetof(UBP_PendingTimer_C, OnDone) == 0x0002D8, "Member 'UBP_PendingTimer_C::OnDone' has a wrong offset!");

}

