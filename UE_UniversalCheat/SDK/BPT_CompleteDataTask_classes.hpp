#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPT_CompleteDataTask

#include "Basic.hpp"

#include "Narrative_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPT_CompleteDataTask.BPT_CompleteDataTask_C
// 0x0028 (0x00B0 - 0x0088)
class UBPT_CompleteDataTask_C final : public UNarrativeTask
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0088(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNarrativeDataTask*                     DataTask;                                          // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Argument;                                          // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Retroactive_;                                      // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnTaskCompleted(const class UNarrativeDataTask* NarrativeTask, const class FString& Name_0);
	void K2_EndTask();
	void K2_BeginTask();
	void ExecuteUbergraph_BPT_CompleteDataTask(int32 EntryPoint);

	class FText GetTaskDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPT_CompleteDataTask_C">();
	}
	static class UBPT_CompleteDataTask_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPT_CompleteDataTask_C>();
	}
};
static_assert(alignof(UBPT_CompleteDataTask_C) == 0x000008, "Wrong alignment on UBPT_CompleteDataTask_C");
static_assert(sizeof(UBPT_CompleteDataTask_C) == 0x0000B0, "Wrong size on UBPT_CompleteDataTask_C");
static_assert(offsetof(UBPT_CompleteDataTask_C, UberGraphFrame) == 0x000088, "Member 'UBPT_CompleteDataTask_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPT_CompleteDataTask_C, DataTask) == 0x000090, "Member 'UBPT_CompleteDataTask_C::DataTask' has a wrong offset!");
static_assert(offsetof(UBPT_CompleteDataTask_C, Argument) == 0x000098, "Member 'UBPT_CompleteDataTask_C::Argument' has a wrong offset!");
static_assert(offsetof(UBPT_CompleteDataTask_C, Retroactive_) == 0x0000A8, "Member 'UBPT_CompleteDataTask_C::Retroactive_' has a wrong offset!");

}

