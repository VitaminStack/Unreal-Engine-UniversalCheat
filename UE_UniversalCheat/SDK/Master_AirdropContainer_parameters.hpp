#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Master_AirdropContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RepItemInfo_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"


namespace SDK::Params
{

// Function Master_AirdropContainer.Master_AirdropContainer_C.AirdropNotification
// 0x0001 (0x0001 - 0x0000)
struct Master_AirdropContainer_C_AirdropNotification final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_AirdropNotification) == 0x000001, "Wrong alignment on Master_AirdropContainer_C_AirdropNotification");
static_assert(sizeof(Master_AirdropContainer_C_AirdropNotification) == 0x000001, "Wrong size on Master_AirdropContainer_C_AirdropNotification");
static_assert(offsetof(Master_AirdropContainer_C_AirdropNotification, NewValue) == 0x000000, "Member 'Master_AirdropContainer_C_AirdropNotification::NewValue' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.CheckDistanceFromActor
// 0x0058 (0x0058 - 0x0000)
struct Master_AirdropContainer_C_CheckDistanceFromActor final
{
public:
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnInteractActorOverDistance_Result;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_CheckDistanceFromActor) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_CheckDistanceFromActor");
static_assert(sizeof(Master_AirdropContainer_C_CheckDistanceFromActor) == 0x000058, "Wrong size on Master_AirdropContainer_C_CheckDistanceFromActor");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x000000, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, CallFunc_OnInteractActorOverDistance_Result) == 0x000011, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::CallFunc_OnInteractActorOverDistance_Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_CheckDistanceFromActor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Master_AirdropContainer_C_CheckDistanceFromActor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.DistanceOutline
// 0x0020 (0x0020 - 0x0000)
struct Master_AirdropContainer_C_DistanceOutline final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_DistanceOutline) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_DistanceOutline");
static_assert(sizeof(Master_AirdropContainer_C_DistanceOutline) == 0x000020, "Wrong size on Master_AirdropContainer_C_DistanceOutline");
static_assert(offsetof(Master_AirdropContainer_C_DistanceOutline, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'Master_AirdropContainer_C_DistanceOutline::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_DistanceOutline, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Master_AirdropContainer_C_DistanceOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_DistanceOutline, CallFunc_GetDistanceTo_ReturnValue) == 0x00000C, "Member 'Master_AirdropContainer_C_DistanceOutline::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_DistanceOutline, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Master_AirdropContainer_C_DistanceOutline::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_DistanceOutline, CallFunc_GetBoolCVar_ReturnValue) == 0x000011, "Member 'Master_AirdropContainer_C_DistanceOutline::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_DistanceOutline, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'Master_AirdropContainer_C_DistanceOutline::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.ExecuteUbergraph_Master_AirdropContainer
// 0x0450 (0x0450 - 0x0000)
struct Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0030(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00D8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01C0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Marker_C*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0238(0x0018)()
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_1;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLootTableName_Text;                    // 0x0268(0x0018)()
	class UBPC_MinimapSystem_C*                   CallFunc_Get_Minimap_Component_ReturnValue;        // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0290(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_2;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface_1; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0338(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0350(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0368(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_3;                // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0398(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x03A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x03A8(0x0018)(ConstParm)
	bool                                          CallFunc_RequestServerData_Result;                 // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x03D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_SetupInventoryWidget_InventoryWidgetRef;  // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddJigWidgetToContent_Result;             // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryVisible__Result;               // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3[0x5];                                      // 0x03E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x03F0(0x0050)(ConstParm)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer) == 0x000010, "Wrong alignment on Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer");
static_assert(sizeof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer) == 0x000450, "Wrong size on Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, EntryPoint) == 0x000000, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_struct_Variable) == 0x000008, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x00001A, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_bool_Has_Been_Initd_Variable_1) == 0x00001B, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Option_2) == 0x00001C, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_ByActor) == 0x000028, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Payload) == 0x000030, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_InteractingActor_3) == 0x000060, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Option_1) == 0x000068, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_MyComp) == 0x000070, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Other) == 0x000078, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_OtherComp) == 0x000080, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_bSelfMoved) == 0x000088, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_HitLocation) == 0x000090, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_HitNormal) == 0x0000A8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_NormalImpulse) == 0x0000C0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Hit) == 0x0000D8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetTransform_ReturnValue) == 0x0001C0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000220, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000228, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_bool_IsClosed_Variable_1) == 0x000230, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Conv_StringToText_ReturnValue) == 0x000238, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_CustomEvent_NewValue) == 0x000250, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetBoolCVar_ReturnValue) == 0x000251, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_InteractingActor_2) == 0x000258, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetBoolCVar_ReturnValue_1) == 0x000260, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetBoolCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetLootTableName_Text) == 0x000268, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetLootTableName_Text' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Get_Minimap_Component_ReturnValue) == 0x000280, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Get_Minimap_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_IsActive_ReturnValue) == 0x000288, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_MakeMap_Map) == 0x000290, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetHUD_HUD) == 0x0002E0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetHUD_HUD_1) == 0x0002E8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetHUD_HUD_2) == 0x0002F0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002F8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetBoolCVar_ReturnValue_2) == 0x000300, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetBoolCVar_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetFloatCVar_ReturnValue) == 0x000304, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x000308, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_DynamicCast_bSuccess) == 0x000318, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_DynamicCast_AsBP_Jig_Character_Interface_1) == 0x000320, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_DynamicCast_AsBP_Jig_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_DynamicCast_bSuccess_1) == 0x000330, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_K2_SetTimer_ReturnValue) == 0x000338, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000340, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000348, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000350, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000358, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000360, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000368, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_GetBoolCVar_ReturnValue_3) == 0x000378, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_GetBoolCVar_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_DynamicCast_AsBPI_Player) == 0x000380, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_DynamicCast_bSuccess_2) == 0x000390, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000398, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_K2_SetTimer_ReturnValue_3) == 0x0003A0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, Temp_text_Variable) == 0x0003A8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_RequestServerData_Result) == 0x0003C0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_RequestServerData_Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_InteractingActor_1) == 0x0003C8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Option) == 0x0003D0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_SetupInventoryWidget_InventoryWidgetRef) == 0x0003D8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_SetupInventoryWidget_InventoryWidgetRef' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_AddJigWidgetToContent_Result) == 0x0003E0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_AddJigWidgetToContent_Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_IsInventoryVisible__Result) == 0x0003E1, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_IsInventoryVisible__Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Not_PreBool_ReturnValue) == 0x0003E2, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_InteractingActor) == 0x0003E8, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, K2Node_Event_Options) == 0x0003F0, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000440, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000448, "Member 'Master_AirdropContainer_C_ExecuteUbergraph_Master_AirdropContainer::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct Master_AirdropContainer_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(Master_AirdropContainer_C_GetInteractOptions) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_GetInteractOptions");
static_assert(sizeof(Master_AirdropContainer_C_GetInteractOptions) == 0x0000A0, "Wrong size on Master_AirdropContainer_C_GetInteractOptions");
static_assert(offsetof(Master_AirdropContainer_C_GetInteractOptions, Options) == 0x000000, "Member 'Master_AirdropContainer_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'Master_AirdropContainer_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct Master_AirdropContainer_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(Master_AirdropContainer_C_GetItemInfo) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_GetItemInfo");
static_assert(sizeof(Master_AirdropContainer_C_GetItemInfo) == 0x000078, "Wrong size on Master_AirdropContainer_C_GetItemInfo");
static_assert(offsetof(Master_AirdropContainer_C_GetItemInfo, Info) == 0x000000, "Member 'Master_AirdropContainer_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_GetItemInfo, Count) == 0x000008, "Member 'Master_AirdropContainer_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'Master_AirdropContainer_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_GetItemInfo, CustomData) == 0x000028, "Member 'Master_AirdropContainer_C_GetItemInfo::CustomData' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct Master_AirdropContainer_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_GetJigMultiplayerComponent");
static_assert(sizeof(Master_AirdropContainer_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on Master_AirdropContainer_C_GetJigMultiplayerComponent");
static_assert(offsetof(Master_AirdropContainer_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'Master_AirdropContainer_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct Master_AirdropContainer_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_GetMainSceneComp) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_GetMainSceneComp");
static_assert(sizeof(Master_AirdropContainer_C_GetMainSceneComp) == 0x000008, "Wrong size on Master_AirdropContainer_C_GetMainSceneComp");
static_assert(offsetof(Master_AirdropContainer_C_GetMainSceneComp, Comp) == 0x000000, "Member 'Master_AirdropContainer_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.GetSettings
// 0x0018 (0x0018 - 0x0000)
struct Master_AirdropContainer_C_GetSettings final
{
public:
	double                                        ChanceToProduceNoise_0;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_ChanceToProduceNoise;                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DurationToHold_0;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_GetSettings) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_GetSettings");
static_assert(sizeof(Master_AirdropContainer_C_GetSettings) == 0x000018, "Wrong size on Master_AirdropContainer_C_GetSettings");
static_assert(offsetof(Master_AirdropContainer_C_GetSettings, ChanceToProduceNoise_0) == 0x000000, "Member 'Master_AirdropContainer_C_GetSettings::ChanceToProduceNoise_0' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_GetSettings, Default_ChanceToProduceNoise) == 0x000008, "Member 'Master_AirdropContainer_C_GetSettings::Default_ChanceToProduceNoise' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_GetSettings, DurationToHold_0) == 0x000010, "Member 'Master_AirdropContainer_C_GetSettings::DurationToHold_0' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.HoldToInteract
// 0x0070 (0x0070 - 0x0000)
struct Master_AirdropContainer_C_HoldToInteract final
{
public:
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills;           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_HoldToInteract) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_HoldToInteract");
static_assert(sizeof(Master_AirdropContainer_C_HoldToInteract) == 0x000070, "Wrong size on Master_AirdropContainer_C_HoldToInteract");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_GetHUD_HUD) == 0x000000, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_GetHUD_HUD_1) == 0x000008, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000018, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_RandomFloatInRange_ReturnValue) == 0x000048, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000050, "Member 'Master_AirdropContainer_C_HoldToInteract::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, K2Node_DynamicCast_AsInt_Passive_Skills) == 0x000058, "Member 'Master_AirdropContainer_C_HoldToInteract::K2Node_DynamicCast_AsInt_Passive_Skills' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_HoldToInteract, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'Master_AirdropContainer_C_HoldToInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.IsHeld?
// 0x0001 (0x0001 - 0x0000)
struct Master_AirdropContainer_C_IsHeld_ final
{
public:
	bool                                          Held_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_IsHeld_) == 0x000001, "Wrong alignment on Master_AirdropContainer_C_IsHeld_");
static_assert(sizeof(Master_AirdropContainer_C_IsHeld_) == 0x000001, "Wrong size on Master_AirdropContainer_C_IsHeld_");
static_assert(offsetof(Master_AirdropContainer_C_IsHeld_, Held_) == 0x000000, "Member 'Master_AirdropContainer_C_IsHeld_::Held_' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct Master_AirdropContainer_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigCanInteract) == 0x000001, "Wrong alignment on Master_AirdropContainer_C_JigCanInteract");
static_assert(sizeof(Master_AirdropContainer_C_JigCanInteract) == 0x000001, "Wrong size on Master_AirdropContainer_C_JigCanInteract");
static_assert(offsetof(Master_AirdropContainer_C_JigCanInteract, Result) == 0x000000, "Member 'Master_AirdropContainer_C_JigCanInteract::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_GetLootWidget
// 0x0010 (0x0010 - 0x0000)
struct Master_AirdropContainer_C_JigMP_GetLootWidget final
{
public:
	class UWidget*                                Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_GetLootWidget) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_GetLootWidget");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_GetLootWidget) == 0x000010, "Wrong size on Master_AirdropContainer_C_JigMP_GetLootWidget");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_GetLootWidget, Result) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_GetLootWidget::Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_GetLootWidget, Valid_) == 0x000008, "Member 'Master_AirdropContainer_C_JigMP_GetLootWidget::Valid_' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnContainersSwap
// 0x0018 (0x0018 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnContainersSwap final
{
public:
	class UJSIContainer_C*                        Container1;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container2;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnContainersSwap) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnContainersSwap");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnContainersSwap) == 0x000018, "Wrong size on Master_AirdropContainer_C_JigMP_OnContainersSwap");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnContainersSwap, Container1) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnContainersSwap::Container1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnContainersSwap, Container2) == 0x000008, "Member 'Master_AirdropContainer_C_JigMP_OnContainersSwap::Container2' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnContainersSwap, Result) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnContainersSwap::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnItemAdded
// 0x0040 (0x0040 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnItemAdded final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        FromComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnItemAdded) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnItemAdded");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnItemAdded) == 0x000040, "Wrong size on Master_AirdropContainer_C_JigMP_OnItemAdded");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemAdded, ItemUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemAdded, FromContainerUID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnItemAdded::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemAdded, ToContainerUID) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemAdded, FromComponent) == 0x000030, "Member 'Master_AirdropContainer_C_JigMP_OnItemAdded::FromComponent' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemAdded, Result) == 0x000038, "Member 'Master_AirdropContainer_C_JigMP_OnItemAdded::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnItemConsumed
// 0x0118 (0x0118 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnItemConsumed final
{
public:
	struct FRepItemInfo                           ConsumedItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0080(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromContainer;                                     // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0111(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnItemConsumed) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnItemConsumed");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnItemConsumed) == 0x000118, "Wrong size on Master_AirdropContainer_C_JigMP_OnItemConsumed");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, ConsumedItem) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::ConsumedItem' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, Amount) == 0x000078, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::Amount' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, Remaining) == 0x00007C, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::Remaining' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, InsideOf) == 0x000080, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::InsideOf' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, FromContainer) == 0x0000F8, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::FromContainer' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, CustomData) == 0x000100, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::CustomData' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, CallbackToPlayer_) == 0x000110, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemConsumed, Result) == 0x000111, "Member 'Master_AirdropContainer_C_JigMP_OnItemConsumed::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnItemDropped
// 0x0030 (0x0030 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnItemDropped final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnItemDropped) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnItemDropped");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnItemDropped) == 0x000030, "Wrong size on Master_AirdropContainer_C_JigMP_OnItemDropped");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemDropped, ItemUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnItemDropped::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemDropped, FromContainerUID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnItemDropped::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemDropped, ActorRef) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnItemDropped::ActorRef' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemDropped, Result) == 0x000028, "Member 'Master_AirdropContainer_C_JigMP_OnItemDropped::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnItemMoved
// 0x0034 (0x0034 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnItemMoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnItemMoved) == 0x000004, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnItemMoved");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnItemMoved) == 0x000034, "Wrong size on Master_AirdropContainer_C_JigMP_OnItemMoved");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemMoved, ItemUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnItemMoved::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemMoved, FromContainerUID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnItemMoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemMoved, ToContainerUID) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnItemMoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemMoved, Result) == 0x000030, "Member 'Master_AirdropContainer_C_JigMP_OnItemMoved::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnItemRemoved
// 0x0040 (0x0040 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnItemRemoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        ToComponent;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnItemRemoved) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnItemRemoved");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnItemRemoved) == 0x000040, "Wrong size on Master_AirdropContainer_C_JigMP_OnItemRemoved");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemRemoved, ItemUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemRemoved, FromContainerUID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemRemoved, ToContainerUID) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnItemRemoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemRemoved, ToComponent) == 0x000030, "Member 'Master_AirdropContainer_C_JigMP_OnItemRemoved::ToComponent' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnItemRemoved, Result) == 0x000038, "Member 'Master_AirdropContainer_C_JigMP_OnItemRemoved::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnMainContainerItemAdded
// 0x00B8 (0x00B8 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded final
{
public:
	struct FGuid                                  ToContainerUID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemInfo;                                          // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromMain;                                          // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorRef;                                          // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded) == 0x0000B8, "Wrong size on Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, ToContainerUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, ItemUID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, ToContainerName) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::ToContainerName' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, ItemInfo) == 0x000028, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, FromMain) == 0x0000A0, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::FromMain' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, Result) == 0x0000A8, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded, ActorRef) == 0x0000B0, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemAdded::ActorRef' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnMainContainerItemRemoved
// 0x00A8 (0x00A8 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved final
{
public:
	struct FGuid                                  FromContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemRemovedInfo;                                   // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved) == 0x0000A8, "Wrong size on Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved, FromContainerUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved, ItemUID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved, ContainerName) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved::ContainerName' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved, ItemRemovedInfo) == 0x000028, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved::ItemRemovedInfo' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved, Result) == 0x0000A0, "Member 'Master_AirdropContainer_C_JigMP_OnMainContainerItemRemoved::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnPickupAdded
// 0x00A8 (0x00A8 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnPickupAdded final
{
public:
	struct FRepItemInfo                           Info;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnPickupAdded) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnPickupAdded");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnPickupAdded) == 0x0000A8, "Wrong size on Master_AirdropContainer_C_JigMP_OnPickupAdded");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupAdded, Info) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnPickupAdded::Info' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupAdded, ItemUID) == 0x000078, "Member 'Master_AirdropContainer_C_JigMP_OnPickupAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupAdded, ToContainerUID) == 0x000088, "Member 'Master_AirdropContainer_C_JigMP_OnPickupAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupAdded, ToContainer) == 0x000098, "Member 'Master_AirdropContainer_C_JigMP_OnPickupAdded::ToContainer' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupAdded, Result) == 0x0000A0, "Member 'Master_AirdropContainer_C_JigMP_OnPickupAdded::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnPickupEquipped
// 0x00B8 (0x00B8 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnPickupEquipped final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           Info;                                              // 0x0030(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverrideActor;                                     // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnPickupEquipped) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnPickupEquipped");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnPickupEquipped) == 0x0000B8, "Wrong size on Master_AirdropContainer_C_JigMP_OnPickupEquipped");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, ActorRef) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::ActorRef' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, ToContainerName) == 0x000008, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::ToContainerName' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, UID) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::UID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, ToContainerUID) == 0x000020, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, Info) == 0x000030, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::Info' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, Result) == 0x0000A8, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::Result' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnPickupEquipped, OverrideActor) == 0x0000B0, "Member 'Master_AirdropContainer_C_JigMP_OnPickupEquipped::OverrideActor' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnRequestDropItem
// 0x0150 (0x0150 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnRequestDropItem final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnRequestDropItem) == 0x000010, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnRequestDropItem");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnRequestDropItem) == 0x000150, "Wrong size on Master_AirdropContainer_C_JigMP_OnRequestDropItem");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, ItemInfo) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, ContainerName) == 0x000078, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::ContainerName' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, ActorRef) == 0x000080, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::ActorRef' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000140, "Member 'Master_AirdropContainer_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnTwoContainersSwap
// 0x0014 (0x0014 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnTwoContainersSwap final
{
public:
	class FName                                   FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnTwoContainersSwap) == 0x000004, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnTwoContainersSwap");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnTwoContainersSwap) == 0x000014, "Wrong size on Master_AirdropContainer_C_JigMP_OnTwoContainersSwap");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnTwoContainersSwap, FromContainer) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnTwoContainersSwap::FromContainer' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnTwoContainersSwap, ToContainer) == 0x000008, "Member 'Master_AirdropContainer_C_JigMP_OnTwoContainersSwap::ToContainer' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnTwoContainersSwap, Result) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnTwoContainersSwap::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigMP_OnUpdateChamberUID
// 0x0014 (0x0014 - 0x0000)
struct Master_AirdropContainer_C_JigMP_OnUpdateChamberUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigMP_OnUpdateChamberUID) == 0x000004, "Wrong alignment on Master_AirdropContainer_C_JigMP_OnUpdateChamberUID");
static_assert(sizeof(Master_AirdropContainer_C_JigMP_OnUpdateChamberUID) == 0x000014, "Wrong size on Master_AirdropContainer_C_JigMP_OnUpdateChamberUID");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnUpdateChamberUID, NewUID) == 0x000000, "Member 'Master_AirdropContainer_C_JigMP_OnUpdateChamberUID::NewUID' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigMP_OnUpdateChamberUID, Result) == 0x000010, "Member 'Master_AirdropContainer_C_JigMP_OnUpdateChamberUID::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct Master_AirdropContainer_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_JigSetCanInteract) == 0x000001, "Wrong alignment on Master_AirdropContainer_C_JigSetCanInteract");
static_assert(sizeof(Master_AirdropContainer_C_JigSetCanInteract) == 0x000003, "Wrong size on Master_AirdropContainer_C_JigSetCanInteract");
static_assert(offsetof(Master_AirdropContainer_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'Master_AirdropContainer_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'Master_AirdropContainer_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_JigSetCanInteract, Result) == 0x000002, "Member 'Master_AirdropContainer_C_JigSetCanInteract::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.NoiseEvent
// 0x00C0 (0x00C0 - 0x0000)
struct Master_AirdropContainer_C_NoiseEvent final
{
public:
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_PlayerControllerInterface_C> K2Node_DynamicCast_AsBP_Player_Controller_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_NoiseEvent) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_NoiseEvent");
static_assert(sizeof(Master_AirdropContainer_C_NoiseEvent) == 0x0000C0, "Wrong size on Master_AirdropContainer_C_NoiseEvent");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_GetHUD_HUD) == 0x000000, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, K2Node_DynamicCast_AsBP_Player_Controller_Interface) == 0x000018, "Member 'Master_AirdropContainer_C_NoiseEvent::K2Node_DynamicCast_AsBP_Player_Controller_Interface' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Master_AirdropContainer_C_NoiseEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000030, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000070, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_RandomFloatInRange_ReturnValue) == 0x000080, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000090, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_NoiseEvent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A8, "Member 'Master_AirdropContainer_C_NoiseEvent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct Master_AirdropContainer_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Master_AirdropContainer_C_OnBeginInteract) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_OnBeginInteract");
static_assert(sizeof(Master_AirdropContainer_C_OnBeginInteract) == 0x000058, "Wrong size on Master_AirdropContainer_C_OnBeginInteract");
static_assert(offsetof(Master_AirdropContainer_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'Master_AirdropContainer_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnBeginInteract, Options) == 0x000008, "Member 'Master_AirdropContainer_C_OnBeginInteract::Options' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct Master_AirdropContainer_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_OnExecuteInteract) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_OnExecuteInteract");
static_assert(sizeof(Master_AirdropContainer_C_OnExecuteInteract) == 0x000010, "Wrong size on Master_AirdropContainer_C_OnExecuteInteract");
static_assert(offsetof(Master_AirdropContainer_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'Master_AirdropContainer_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnExecuteInteract, Option) == 0x000008, "Member 'Master_AirdropContainer_C_OnExecuteInteract::Option' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct Master_AirdropContainer_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_OnExecuteInteractDialogue");
static_assert(sizeof(Master_AirdropContainer_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on Master_AirdropContainer_C_OnExecuteInteractDialogue");
static_assert(offsetof(Master_AirdropContainer_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'Master_AirdropContainer_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct Master_AirdropContainer_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_OnRequestServerInteract");
static_assert(sizeof(Master_AirdropContainer_C_OnRequestServerInteract) == 0x000048, "Wrong size on Master_AirdropContainer_C_OnRequestServerInteract");
static_assert(offsetof(Master_AirdropContainer_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'Master_AirdropContainer_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnRequestServerInteract, Option) == 0x000008, "Member 'Master_AirdropContainer_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'Master_AirdropContainer_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnRequestServerInteract, Result) == 0x000040, "Member 'Master_AirdropContainer_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct Master_AirdropContainer_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_OnServerExecuteInteract");
static_assert(sizeof(Master_AirdropContainer_C_OnServerExecuteInteract) == 0x000040, "Wrong size on Master_AirdropContainer_C_OnServerExecuteInteract");
static_assert(offsetof(Master_AirdropContainer_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'Master_AirdropContainer_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'Master_AirdropContainer_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'Master_AirdropContainer_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct Master_AirdropContainer_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_OnStopExecuteInteract");
static_assert(sizeof(Master_AirdropContainer_C_OnStopExecuteInteract) == 0x000008, "Wrong size on Master_AirdropContainer_C_OnStopExecuteInteract");
static_assert(offsetof(Master_AirdropContainer_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'Master_AirdropContainer_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct Master_AirdropContainer_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Master_AirdropContainer_C_ReceiveHit) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_ReceiveHit");
static_assert(sizeof(Master_AirdropContainer_C_ReceiveHit) == 0x000150, "Wrong size on Master_AirdropContainer_C_ReceiveHit");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, MyComp) == 0x000000, "Member 'Master_AirdropContainer_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, Other) == 0x000008, "Member 'Master_AirdropContainer_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, OtherComp) == 0x000010, "Member 'Master_AirdropContainer_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'Master_AirdropContainer_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, HitLocation) == 0x000020, "Member 'Master_AirdropContainer_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, HitNormal) == 0x000038, "Member 'Master_AirdropContainer_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'Master_AirdropContainer_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_ReceiveHit, Hit) == 0x000068, "Member 'Master_AirdropContainer_C_ReceiveHit::Hit' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.SetInspected
// 0x0030 (0x0030 - 0x0000)
struct Master_AirdropContainer_C_SetInspected final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Inspected_;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_SetInspected) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_SetInspected");
static_assert(sizeof(Master_AirdropContainer_C_SetInspected) == 0x000030, "Wrong size on Master_AirdropContainer_C_SetInspected");
static_assert(offsetof(Master_AirdropContainer_C_SetInspected, InText) == 0x000000, "Member 'Master_AirdropContainer_C_SetInspected::InText' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_SetInspected, Inspected_) == 0x000018, "Member 'Master_AirdropContainer_C_SetInspected::Inspected_' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_SetInspected, CallFunc_GetHUD_HUD) == 0x000020, "Member 'Master_AirdropContainer_C_SetInspected::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_SetInspected, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Master_AirdropContainer_C_SetInspected::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.SetInteractDistance
// 0x0020 (0x0020 - 0x0000)
struct Master_AirdropContainer_C_SetInteractDistance final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_SetInteractDistance) == 0x000008, "Wrong alignment on Master_AirdropContainer_C_SetInteractDistance");
static_assert(sizeof(Master_AirdropContainer_C_SetInteractDistance) == 0x000020, "Wrong size on Master_AirdropContainer_C_SetInteractDistance");
static_assert(offsetof(Master_AirdropContainer_C_SetInteractDistance, Target) == 0x000000, "Member 'Master_AirdropContainer_C_SetInteractDistance::Target' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_SetInteractDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Master_AirdropContainer_C_SetInteractDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct Master_AirdropContainer_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_SetInteractOption) == 0x000004, "Wrong alignment on Master_AirdropContainer_C_SetInteractOption");
static_assert(sizeof(Master_AirdropContainer_C_SetInteractOption) == 0x000008, "Wrong size on Master_AirdropContainer_C_SetInteractOption");
static_assert(offsetof(Master_AirdropContainer_C_SetInteractOption, Option) == 0x000000, "Member 'Master_AirdropContainer_C_SetInteractOption::Option' has a wrong offset!");

// Function Master_AirdropContainer.Master_AirdropContainer_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct Master_AirdropContainer_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Master_AirdropContainer_C_SetPickupCount) == 0x000004, "Wrong alignment on Master_AirdropContainer_C_SetPickupCount");
static_assert(sizeof(Master_AirdropContainer_C_SetPickupCount) == 0x000008, "Wrong size on Master_AirdropContainer_C_SetPickupCount");
static_assert(offsetof(Master_AirdropContainer_C_SetPickupCount, NewCount) == 0x000000, "Member 'Master_AirdropContainer_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(Master_AirdropContainer_C_SetPickupCount, Result) == 0x000004, "Member 'Master_AirdropContainer_C_SetPickupCount::Result' has a wrong offset!");

}

