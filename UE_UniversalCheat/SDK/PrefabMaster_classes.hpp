#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PrefabMaster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PrefabMaster.PrefabMaster_C
// 0x0030 (0x02D0 - 0x02A0)
class APrefabMaster_C : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       FoliageRemover;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AI;                                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Actors;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        StaticMeshes;                                      // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FoliageRemoverRadius;                              // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PrefabMaster(int32 EntryPoint);
	void ReceiveBeginPlay();
	void RemoveFoliageComp();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PrefabMaster_C">();
	}
	static class APrefabMaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APrefabMaster_C>();
	}
};
static_assert(alignof(APrefabMaster_C) == 0x000008, "Wrong alignment on APrefabMaster_C");
static_assert(sizeof(APrefabMaster_C) == 0x0002D0, "Wrong size on APrefabMaster_C");
static_assert(offsetof(APrefabMaster_C, UberGraphFrame) == 0x0002A0, "Member 'APrefabMaster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APrefabMaster_C, FoliageRemover) == 0x0002A8, "Member 'APrefabMaster_C::FoliageRemover' has a wrong offset!");
static_assert(offsetof(APrefabMaster_C, AI) == 0x0002B0, "Member 'APrefabMaster_C::AI' has a wrong offset!");
static_assert(offsetof(APrefabMaster_C, Actors) == 0x0002B8, "Member 'APrefabMaster_C::Actors' has a wrong offset!");
static_assert(offsetof(APrefabMaster_C, StaticMeshes) == 0x0002C0, "Member 'APrefabMaster_C::StaticMeshes' has a wrong offset!");
static_assert(offsetof(APrefabMaster_C, FoliageRemoverRadius) == 0x0002C8, "Member 'APrefabMaster_C::FoliageRemoverRadius' has a wrong offset!");

}

