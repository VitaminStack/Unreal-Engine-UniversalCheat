#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintSubsystem

#include "Basic.hpp"

#include "BlueprintSubsystem_classes.hpp"
#include "BlueprintSubsystem_parameters.hpp"


namespace SDK
{

// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.K2_OnDeInit
// (Event, Public, BlueprintEvent)

void UBlueprintGameInstanceSubsystem::K2_OnDeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "K2_OnDeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.K2_OnInit
// (Event, Public, BlueprintEvent)

void UBlueprintGameInstanceSubsystem::K2_OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "K2_OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.K2_OnTick
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintGameInstanceSubsystem::K2_OnTick(const float& DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "K2_OnTick");

	Params::BlueprintGameInstanceSubsystem_K2_OnTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.SetTickEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableTick                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintGameInstanceSubsystem::SetTickEnabled(const bool bEnableTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "SetTickEnabled");

	Params::BlueprintGameInstanceSubsystem_SetTickEnabled Parms{};

	Parms.bEnableTick = bEnableTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.GetGameInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameInstance*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameInstance* UBlueprintGameInstanceSubsystem::GetGameInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "GetGameInstance");

	Params::BlueprintGameInstanceSubsystem_GetGameInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.IsTickEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintGameInstanceSubsystem::IsTickEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "IsTickEnabled");

	Params::BlueprintGameInstanceSubsystem_IsTickEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystem.K2_ShouldCreateSubsystem
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FText                             OutReason                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintGameInstanceSubsystem::K2_ShouldCreateSubsystem(class FText* OutReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintGameInstanceSubsystem", "K2_ShouldCreateSubsystem");

	Params::BlueprintGameInstanceSubsystem_K2_ShouldCreateSubsystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutReason != nullptr)
		*OutReason = std::move(Parms.OutReason);

	return Parms.ReturnValue;
}


// Function BlueprintSubsystem.BlueprintGameInstanceSubsystemBase.GetBlueprintSubsystemOfClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UBlueprintGameInstanceSubsystem>TargetClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlueprintGameInstanceSubsystem*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlueprintGameInstanceSubsystem* UBlueprintGameInstanceSubsystemBase::GetBlueprintSubsystemOfClass(const class UObject* WorldContextObject, const TSubclassOf<class UBlueprintGameInstanceSubsystem> TargetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintGameInstanceSubsystemBase", "GetBlueprintSubsystemOfClass");

	Params::BlueprintGameInstanceSubsystemBase_GetBlueprintSubsystemOfClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetClass = TargetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnDeInit
// (Event, Public, BlueprintEvent)

void UBlueprintWorldSubsystem::K2_OnDeInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnDeInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnInit
// (Event, Public, BlueprintEvent)

void UBlueprintWorldSubsystem::K2_OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnPostInitialize
// (Event, Public, BlueprintEvent)

void UBlueprintWorldSubsystem::K2_OnPostInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnPostInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnTick
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintWorldSubsystem::K2_OnTick(const float& DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnTick");

	Params::BlueprintWorldSubsystem_K2_OnTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnUpdateStreamingState
// (Event, Public, BlueprintEvent)

void UBlueprintWorldSubsystem::K2_OnUpdateStreamingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnUpdateStreamingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnWorldBeginPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintWorldSubsystem::K2_OnWorldBeginPlay(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnWorldBeginPlay");

	Params::BlueprintWorldSubsystem_K2_OnWorldBeginPlay Parms{};

	Parms.World = World;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_OnWorldComponentsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWorld*                           World                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintWorldSubsystem::K2_OnWorldComponentsUpdated(class UWorld* World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_OnWorldComponentsUpdated");

	Params::BlueprintWorldSubsystem_K2_OnWorldComponentsUpdated Parms{};

	Parms.World = World;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.SetTickEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableTick                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBlueprintWorldSubsystem::SetTickEnabled(const bool bEnableTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "SetTickEnabled");

	Params::BlueprintWorldSubsystem_SetTickEnabled Parms{};

	Parms.bEnableTick = bEnableTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.IsTickEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintWorldSubsystem::IsTickEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "IsTickEnabled");

	Params::BlueprintWorldSubsystem_IsTickEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintSubsystem.BlueprintWorldSubsystem.K2_ShouldCreateSubsystem
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class FText                             OutReason                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBlueprintWorldSubsystem::K2_ShouldCreateSubsystem(class FText* OutReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BlueprintWorldSubsystem", "K2_ShouldCreateSubsystem");

	Params::BlueprintWorldSubsystem_K2_ShouldCreateSubsystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutReason != nullptr)
		*OutReason = std::move(Parms.OutReason);

	return Parms.ReturnValue;
}


// Function BlueprintSubsystem.BlueprintWorldSubsystemBase.GetBlueprintSubsystemOfClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UBlueprintWorldSubsystem>TargetClass                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlueprintWorldSubsystem*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlueprintWorldSubsystem* UBlueprintWorldSubsystemBase::GetBlueprintSubsystemOfClass(const class UObject* WorldContextObject, const TSubclassOf<class UBlueprintWorldSubsystem> TargetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintWorldSubsystemBase", "GetBlueprintSubsystemOfClass");

	Params::BlueprintWorldSubsystemBase_GetBlueprintSubsystemOfClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetClass = TargetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

