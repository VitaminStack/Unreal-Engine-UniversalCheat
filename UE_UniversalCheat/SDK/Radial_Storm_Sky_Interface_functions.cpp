#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Radial_Storm_Sky_Interface

#include "Basic.hpp"

#include "Radial_Storm_Sky_Interface_classes.hpp"
#include "Radial_Storm_Sky_Interface_parameters.hpp"


namespace SDK
{

// Function Radial_Storm_Sky_Interface.Radial_Storm_Sky_Interface_C.Get Cloud Coverage Brush Data
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUltra_Dynamic_Sky_C*             UDS                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Soft_Fraction                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     RGBA                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          World_Location                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  UDS_Coverage_Level                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IRadial_Storm_Sky_Interface_C::Get_Cloud_Coverage_Brush_Data(class AUltra_Dynamic_Sky_C* UDS, double* Soft_Fraction, struct FLinearColor* RGBA, struct FVector* World_Location, double* Size, double* UDS_Coverage_Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Radial_Storm_Sky_Interface_C", "Get Cloud Coverage Brush Data");

	Params::Radial_Storm_Sky_Interface_C_Get_Cloud_Coverage_Brush_Data Parms{};

	Parms.UDS = UDS;

	UObject::ProcessEvent(Func, &Parms);

	if (Soft_Fraction != nullptr)
		*Soft_Fraction = Parms.Soft_Fraction;

	if (RGBA != nullptr)
		*RGBA = std::move(Parms.RGBA);

	if (World_Location != nullptr)
		*World_Location = std::move(Parms.World_Location);

	if (Size != nullptr)
		*Size = Parms.Size;

	if (UDS_Coverage_Level != nullptr)
		*UDS_Coverage_Level = Parms.UDS_Coverage_Level;
}


// Function Radial_Storm_Sky_Interface.Radial_Storm_Sky_Interface_C.Update with Sky Mode Change
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Successful                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IRadial_Storm_Sky_Interface_C::Update_with_Sky_Mode_Change(bool* Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Radial_Storm_Sky_Interface_C", "Update with Sky Mode Change");

	Params::Radial_Storm_Sky_Interface_C_Update_with_Sky_Mode_Change Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Successful != nullptr)
		*Successful = Parms.Successful;
}

}

