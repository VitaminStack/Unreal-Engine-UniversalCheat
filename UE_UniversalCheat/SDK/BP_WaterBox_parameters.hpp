#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_WaterBox.BP_WaterBox_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_WaterBox_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBox_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_WaterBox_C_UserConstructionScript");
static_assert(sizeof(BP_WaterBox_C_UserConstructionScript) == 0x000018, "Wrong size on BP_WaterBox_C_UserConstructionScript");
static_assert(offsetof(BP_WaterBox_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BP_WaterBox_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_WaterBox.BP_WaterBox_C.SetCollisionType
// 0x0010 (0x0010 - 0x0000)
struct BP_WaterBox_C_SetCollisionType final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_WaterBox_C_SetCollisionType) == 0x000008, "Wrong alignment on BP_WaterBox_C_SetCollisionType");
static_assert(sizeof(BP_WaterBox_C_SetCollisionType) == 0x000010, "Wrong size on BP_WaterBox_C_SetCollisionType");
static_assert(offsetof(BP_WaterBox_C_SetCollisionType, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_WaterBox_C_SetCollisionType::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_WaterBox.BP_WaterBox_C.ExecuteUbergraph_BP_WaterBox
// 0x0158 (0x0158 - 0x0000)
struct BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URadiationComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URadiationComponent_C*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USwimmingComponent_C*                   CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USwimmingComponent_C*                   CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox) == 0x000008, "Wrong alignment on BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox");
static_assert(sizeof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox) == 0x000158, "Wrong size on BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, EntryPoint) == 0x000000, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000110, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OtherActor) == 0x000118, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OtherComp) == 0x000120, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000128, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, CallFunc_GetComponentByClass_ReturnValue) == 0x000130, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000138, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000140, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000148, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox, CallFunc_IsValid_ReturnValue_1) == 0x000151, "Member 'BP_WaterBox_C_ExecuteUbergraph_BP_WaterBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_WaterBox.BP_WaterBox_C.BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_WaterBox.BP_WaterBox_C.BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_WaterBox_C_BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

