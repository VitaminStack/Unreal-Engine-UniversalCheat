#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TechTreeComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TechTree_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TechTreeComponent.TechTreeComponent_C
// 0x0020 (0x0160 - 0x0140)
class UTechTreeComponent_C final : public UTechTreeManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0140(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         SkillPoints;                                       // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPoints;                                     // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 Points)>  UpdatePointsUI;                                    // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Add_Skill_Points();
	void CheckUnlockCost(class UTechnologyAsset* Technology, bool* CanUnlock);
	void ComponentLoaded();
	void ComponentPreSave();
	void ExecuteUbergraph_TechTreeComponent(int32 EntryPoint);
	void HasEnoughResources(int32 TechnologyCost, bool* EnoughResources);
	void PayCost(int32 Cost);
	void ResetTree();
	void ResetTreeComplete();
	void TryPayTechnologyCost(int32 Cost, bool* Success);
	void TryToUnlockTechnology(class UTechnologyAsset* Technology);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TechTreeComponent_C">();
	}
	static class UTechTreeComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTechTreeComponent_C>();
	}
};
static_assert(alignof(UTechTreeComponent_C) == 0x000008, "Wrong alignment on UTechTreeComponent_C");
static_assert(sizeof(UTechTreeComponent_C) == 0x000160, "Wrong size on UTechTreeComponent_C");
static_assert(offsetof(UTechTreeComponent_C, UberGraphFrame) == 0x000140, "Member 'UTechTreeComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTechTreeComponent_C, SkillPoints) == 0x000148, "Member 'UTechTreeComponent_C::SkillPoints' has a wrong offset!");
static_assert(offsetof(UTechTreeComponent_C, CurrentPoints) == 0x00014C, "Member 'UTechTreeComponent_C::CurrentPoints' has a wrong offset!");
static_assert(offsetof(UTechTreeComponent_C, UpdatePointsUI) == 0x000150, "Member 'UTechTreeComponent_C::UpdatePointsUI' has a wrong offset!");

}

