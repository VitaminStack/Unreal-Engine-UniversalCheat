#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_SmallConcreteWall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Buildable_MASTER_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Buildable_SmallConcreteWall.Buildable_SmallConcreteWall_C
// 0x0010 (0x0440 - 0x0430)
class ABuildable_SmallConcreteWall_C final : public ABuildable_MASTER_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Buildable_SmallConcreteWall_C;      // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void ExecuteUbergraph_Buildable_SmallConcreteWall(int32 EntryPoint);
	void ReceiveBeginPlay();
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void JigCanInteract(bool* Result);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void SetPickupCount(int32 NewCount, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Buildable_SmallConcreteWall_C">();
	}
	static class ABuildable_SmallConcreteWall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildable_SmallConcreteWall_C>();
	}
};
static_assert(alignof(ABuildable_SmallConcreteWall_C) == 0x000008, "Wrong alignment on ABuildable_SmallConcreteWall_C");
static_assert(sizeof(ABuildable_SmallConcreteWall_C) == 0x000440, "Wrong size on ABuildable_SmallConcreteWall_C");
static_assert(offsetof(ABuildable_SmallConcreteWall_C, UberGraphFrame_Buildable_SmallConcreteWall_C) == 0x000430, "Member 'ABuildable_SmallConcreteWall_C::UberGraphFrame_Buildable_SmallConcreteWall_C' has a wrong offset!");
static_assert(offsetof(ABuildable_SmallConcreteWall_C, Sphere) == 0x000438, "Member 'ABuildable_SmallConcreteWall_C::Sphere' has a wrong offset!");

}

