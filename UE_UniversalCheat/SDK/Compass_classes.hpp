#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Compass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Compass.Compass_C
// 0x0058 (0x0318 - 0x02C0)
class UCompass_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_99;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompassMarker;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CompassPanel;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompassPoints;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCameraComponent*                       Rotation;                                          // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UCompassMarkerUI_C*>             UsedObjectWidgets;                                 // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void Construct();
	void ExecuteUbergraph_Compass(int32 EntryPoint);
	void GetWidgetReference(class UObject* Object, class UCompassMarkerUI_C** Array_Element);
	void NavPoints();
	void NavPointsTimer();
	void NewPointPosition(class AActor* Object);
	double NewXPosition(class AActor* Object);
	void ObjectBehind(class AActor* Target, bool* Behind);
	void OnVisibilityChanged_Event_0(ESlateVisibility InVisibility);
	void RemoveFromCompass(class UObject* Object);
	void SetDirection();
	void UsedActor(TArray<class UCompassMarkerUI_C*>& Widgets, class UObject* Actor, bool* Used);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Compass_C">();
	}
	static class UCompass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCompass_C>();
	}
};
static_assert(alignof(UCompass_C) == 0x000008, "Wrong alignment on UCompass_C");
static_assert(sizeof(UCompass_C) == 0x000318, "Wrong size on UCompass_C");
static_assert(offsetof(UCompass_C, UberGraphFrame) == 0x0002C0, "Member 'UCompass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCompass_C, FadeIn) == 0x0002C8, "Member 'UCompass_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UCompass_C, FadeOut) == 0x0002D0, "Member 'UCompass_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UCompass_C, Border_99) == 0x0002D8, "Member 'UCompass_C::Border_99' has a wrong offset!");
static_assert(offsetof(UCompass_C, CompassMarker) == 0x0002E0, "Member 'UCompass_C::CompassMarker' has a wrong offset!");
static_assert(offsetof(UCompass_C, CompassPanel) == 0x0002E8, "Member 'UCompass_C::CompassPanel' has a wrong offset!");
static_assert(offsetof(UCompass_C, CompassPoints) == 0x0002F0, "Member 'UCompass_C::CompassPoints' has a wrong offset!");
static_assert(offsetof(UCompass_C, RetainerBox) == 0x0002F8, "Member 'UCompass_C::RetainerBox' has a wrong offset!");
static_assert(offsetof(UCompass_C, Rotation) == 0x000300, "Member 'UCompass_C::Rotation' has a wrong offset!");
static_assert(offsetof(UCompass_C, UsedObjectWidgets) == 0x000308, "Member 'UCompass_C::UsedObjectWidgets' has a wrong offset!");

}

