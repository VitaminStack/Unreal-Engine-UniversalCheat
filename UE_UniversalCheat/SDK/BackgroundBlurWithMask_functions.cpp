#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BackgroundBlurWithMask

#include "Basic.hpp"

#include "BackgroundBlurWithMask_classes.hpp"
#include "BackgroundBlurWithMask_parameters.hpp"


namespace SDK
{

// Function BackgroundBlurWithMask.BackgroundBlurWithMask.RedrawMaskMaterial
// (Final, Native, Public, BlueprintCallable)

void UBackgroundBlurWithMask::RedrawMaskMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "RedrawMaskMaterial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetApplyAlphaToBlur
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInApplyAlphaToBlur                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetApplyAlphaToBlur(bool bInApplyAlphaToBlur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetApplyAlphaToBlur");

	Params::BackgroundBlurWithMask_SetApplyAlphaToBlur Parms{};

	Parms.bInApplyAlphaToBlur = bInApplyAlphaToBlur;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetBlurRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InBlurRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetBlurRadius(int32 InBlurRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetBlurRadius");

	Params::BackgroundBlurWithMask_SetBlurRadius Parms{};

	Parms.InBlurRadius = InBlurRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetBlurStrength
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   InStrength                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetBlurStrength(float InStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetBlurStrength");

	Params::BackgroundBlurWithMask_SetBlurStrength Parms{};

	Parms.InStrength = InStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetHorizontalAlignment");

	Params::BackgroundBlurWithMask_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetLowQualityFallbackBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetLowQualityFallbackBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetLowQualityFallbackBrush");

	Params::BackgroundBlurWithMask_SetLowQualityFallbackBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetMaskMaterialSetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMaskMaterialSetting             InMaskMaterialSetting                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetMaskMaterialSetting(const struct FMaskMaterialSetting& InMaskMaterialSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetMaskMaterialSetting");

	Params::BackgroundBlurWithMask_SetMaskMaterialSetting Parms{};

	Parms.InMaskMaterialSetting = std::move(InMaskMaterialSetting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetMaskTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       InMaskTexture                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetMaskTexture(class UTexture2D* InMaskTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetMaskTexture");

	Params::BackgroundBlurWithMask_SetMaskTexture Parms{};

	Parms.InMaskTexture = InMaskTexture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetMaskTextureChannel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMaskTextureChannel                     InMaskTextureChannel                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetMaskTextureChannel(EMaskTextureChannel InMaskTextureChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetMaskTextureChannel");

	Params::BackgroundBlurWithMask_SetMaskTextureChannel Parms{};

	Parms.InMaskTextureChannel = InMaskTextureChannel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetPadding");

	Params::BackgroundBlurWithMask_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetUseMaskMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInUseMaskMaterial                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetUseMaskMaterial(bool bInUseMaskMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetUseMaskMaterial");

	Params::BackgroundBlurWithMask_SetUseMaskMaterial Parms{};

	Parms.bInUseMaskMaterial = bInUseMaskMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMask::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "SetVerticalAlignment");

	Params::BackgroundBlurWithMask_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMask.GetMaskTextureInUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UBackgroundBlurWithMask::GetMaskTextureInUse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMask", "GetMaskTextureInUse");

	Params::BackgroundBlurWithMask_GetMaskTextureInUse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMaskSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMaskSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMaskSlot", "SetHorizontalAlignment");

	Params::BackgroundBlurWithMaskSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMaskSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMaskSlot::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMaskSlot", "SetPadding");

	Params::BackgroundBlurWithMaskSlot_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BackgroundBlurWithMask.BackgroundBlurWithMaskSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBackgroundBlurWithMaskSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BackgroundBlurWithMaskSlot", "SetVerticalAlignment");

	Params::BackgroundBlurWithMaskSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

