#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Game

#include "Basic.hpp"

#include "HUD_Game_classes.hpp"
#include "HUD_Game_parameters.hpp"


namespace SDK
{

// Function HUD_Game.HUD_Game_C.BindAreaUIFinished
// (Public, BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::BindAreaUIFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "BindAreaUIFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.BindEnteringFinished
// (BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::BindEnteringFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "BindEnteringFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.BindLeavingFinished
// (BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::BindLeavingFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "BindLeavingFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.Client_ForceUnpause
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::Client_ForceUnpause(class UWidget* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "Client_ForceUnpause");

	Params::HUD_Game_C_Client_ForceUnpause Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.Client_PauseGame
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Toggle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::Client_PauseGame(bool Toggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "Client_PauseGame");

	Params::HUD_Game_C_Client_PauseGame Parms{};

	Parms.Toggle = Toggle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.CreateRadioTextWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_Radio                    RadioStruct                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ABP_Radio_Text_C*                 RadioRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::CreateRadioTextWidget(bool Visible_, const struct FStruct_Radio& RadioStruct, class ABP_Radio_Text_C* RadioRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "CreateRadioTextWidget");

	Params::HUD_Game_C_CreateRadioTextWidget Parms{};

	Parms.Visible_ = Visible_;
	Parms.RadioStruct = std::move(RadioStruct);
	Parms.RadioRef = RadioRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.DaysSurvivedHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::DaysSurvivedHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "DaysSurvivedHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.DiscoverPOI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_POI                      POI                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AHUD_Game_C::DiscoverPOI(const struct FStruct_POI& POI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "DiscoverPOI");

	Params::HUD_Game_C_DiscoverPOI Parms{};

	Parms.POI = std::move(POI);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.ExecuteUbergraph_HUD_Game
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::ExecuteUbergraph_HUD_Game(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ExecuteUbergraph_HUD_Game");

	Params::HUD_Game_C_ExecuteUbergraph_HUD_Game Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.InteractTimerUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             InteractionText                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void AHUD_Game_C::InteractTimerUI(bool Open_, const class FText& InteractionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "InteractTimerUI");

	Params::HUD_Game_C_InteractTimerUI Parms{};

	Parms.Open_ = Open_;
	Parms.InteractionText = std::move(InteractionText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.Notification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_NotificationDetails           NotificationDetails                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AHUD_Game_C::Notification(const struct FS_NotificationDetails& NotificationDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "Notification");

	Params::HUD_Game_C_Notification Parms{};

	Parms.NotificationDetails = std::move(NotificationDetails);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.Re-Initialise
// (BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::Re_Initialise()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "Re-Initialise");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AHUD_Game_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.RemoveInteractAndLootWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::RemoveInteractAndLootWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "RemoveInteractAndLootWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.SafeZoneAreaUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::SafeZoneAreaUI(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "SafeZoneAreaUI");

	Params::HUD_Game_C_SafeZoneAreaUI Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.ShowChangeObjectNameWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ObjectRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::ShowChangeObjectNameWidget(bool Show_, class AActor* ObjectRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ShowChangeObjectNameWidget");

	Params::HUD_Game_C_ShowChangeObjectNameWidget Parms{};

	Parms.Show_ = Show_;
	Parms.ObjectRef = ObjectRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.ShowInteractWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             AdditionalText                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<struct FGameplayTag, class FText>  Options                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<class FName, class FText>          Stats                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UWidget*                          Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::ShowInteractWidget(bool Visible_, const class FText& Name_0, const class FText& AdditionalText, const TMap<struct FGameplayTag, class FText>& Options, const TMap<class FName, class FText>& Stats, class UWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ShowInteractWidget");

	Params::HUD_Game_C_ShowInteractWidget Parms{};

	Parms.Visible_ = Visible_;
	Parms.Name_0 = std::move(Name_0);
	Parms.AdditionalText = std::move(AdditionalText);
	Parms.Options = std::move(Options);
	Parms.Stats = std::move(Stats);

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function HUD_Game.HUD_Game_C.ShowLootContainerWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Container                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             LootType                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Marked_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Looted_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<struct FGameplayTag, class FText>  Options                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void AHUD_Game_C::ShowLootContainerWidget(bool Show_, class AActor* Actor, const class FText& Container, const class FText& LootType, bool Marked_, bool Looted_, const TMap<struct FGameplayTag, class FText>& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ShowLootContainerWidget");

	Params::HUD_Game_C_ShowLootContainerWidget Parms{};

	Parms.Show_ = Show_;
	Parms.Actor = Actor;
	Parms.Container = std::move(Container);
	Parms.LootType = std::move(LootType);
	Parms.Marked_ = Marked_;
	Parms.Looted_ = Looted_;
	Parms.Options = std::move(Options);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.ShowSleepWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::ShowSleepWidget(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ShowSleepWidget");

	Params::HUD_Game_C_ShowSleepWidget Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.Time
// (Public, BlueprintCallable, BlueprintEvent)

void AHUD_Game_C::Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_Game.HUD_Game_C.ToggleAIHealthBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Toggle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Boss_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::ToggleAIHealthBar(bool Toggle, const class FString& Name_0, bool Boss_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ToggleAIHealthBar");

	Params::HUD_Game_C_ToggleAIHealthBar Parms{};

	Parms.Toggle = Toggle;
	Parms.Name_0 = std::move(Name_0);
	Parms.Boss_ = Boss_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.UpdateHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::UpdateHealth(double Health, double MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "UpdateHealth");

	Params::HUD_Game_C_UpdateHealth Parms{};

	Parms.Health = Health;
	Parms.MaxHealth = MaxHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.UpdateInteractOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     OptionToUpdate                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ClearOptions_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::UpdateInteractOptions(const struct FGameplayTag& OptionToUpdate, const class FText& Text, bool ClearOptions_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "UpdateInteractOptions");

	Params::HUD_Game_C_UpdateInteractOptions Parms{};

	Parms.OptionToUpdate = std::move(OptionToUpdate);
	Parms.Text = std::move(Text);
	Parms.ClearOptions_ = ClearOptions_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.UpdateInteractStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StatToUpdate                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ClearOptions_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::UpdateInteractStats(const class FName StatToUpdate, const class FText& Value, bool ClearOptions_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "UpdateInteractStats");

	Params::HUD_Game_C_UpdateInteractStats Parms{};

	Parms.StatToUpdate = StatToUpdate;
	Parms.Value = std::move(Value);
	Parms.ClearOptions_ = ClearOptions_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.UpdateLootOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     OptionToUpdate                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ClearOptions_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::UpdateLootOptions(const struct FGameplayTag& OptionToUpdate, const class FText& Text, bool ClearOptions_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "UpdateLootOptions");

	Params::HUD_Game_C_UpdateLootOptions Parms{};

	Parms.OptionToUpdate = std::move(OptionToUpdate);
	Parms.Text = std::move(Text);
	Parms.ClearOptions_ = ClearOptions_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_Game.HUD_Game_C.YesAndNoUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class UModularYesNoUI_C*                UI                                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::YesAndNoUI(bool Show_, const class FText& Text, class UModularYesNoUI_C** UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "YesAndNoUI");

	Params::HUD_Game_C_YesAndNoUI Parms{};

	Parms.Show_ = Show_;
	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	if (UI != nullptr)
		*UI = Parms.UI;
}


// Function HUD_Game.HUD_Game_C.ZoneAreaUI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Entering_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Area_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture*                         Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHUD_Game_C::ZoneAreaUI(bool Entering_, const class FText& Area_Name, class UTexture* Texture, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Game_C", "ZoneAreaUI");

	Params::HUD_Game_C_ZoneAreaUI Parms{};

	Parms.Entering_ = Entering_;
	Parms.Area_Name = std::move(Area_Name);
	Parms.Texture = Texture;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}

}

