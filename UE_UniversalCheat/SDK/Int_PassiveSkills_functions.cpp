#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Int_PassiveSkills

#include "Basic.hpp"

#include "Int_PassiveSkills_classes.hpp"
#include "Int_PassiveSkills_parameters.hpp"


namespace SDK
{

// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_FirstAid
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_FirstAid(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_FirstAid");

	Params::Int_PassiveSkills_C_AddXP_FirstAid Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Fishing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Fishing(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Fishing");

	Params::Int_PassiveSkills_C_AddXP_Fishing Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Fitness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Fitness(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Fitness");

	Params::Int_PassiveSkills_C_AddXP_Fitness Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Marksmanship
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Marksmanship(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Marksmanship");

	Params::Int_PassiveSkills_C_AddXP_Marksmanship Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Reloading
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Reloading(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Reloading");

	Params::Int_PassiveSkills_C_AddXP_Reloading Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Scavenging
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Scavenging(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Scavenging");

	Params::Int_PassiveSkills_C_AddXP_Scavenging Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Sneaking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Sneaking(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Sneaking");

	Params::Int_PassiveSkills_C_AddXP_Sneaking Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Strength
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Strength(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Strength");

	Params::Int_PassiveSkills_C_AddXP_Strength Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Thief
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Thief(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Thief");

	Params::Int_PassiveSkills_C_AddXP_Thief Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.AddXP_Toughness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  float_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::AddXP_Toughness(double float_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "AddXP_Toughness");

	Params::Int_PassiveSkills_C_AddXP_Toughness Parms{};

	Parms.float_0 = float_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_FirstAid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_FirstAid(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_FirstAid");

	Params::Int_PassiveSkills_C_XPMultiplier_FirstAid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Fishing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Fishing(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Fishing");

	Params::Int_PassiveSkills_C_XPMultiplier_Fishing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Fitness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Fitness(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Fitness");

	Params::Int_PassiveSkills_C_XPMultiplier_Fitness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Marksmanship
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Marksmanship(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Marksmanship");

	Params::Int_PassiveSkills_C_XPMultiplier_Marksmanship Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Reloading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Reloading(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Reloading");

	Params::Int_PassiveSkills_C_XPMultiplier_Reloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Scavenging
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Scavenging(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Scavenging");

	Params::Int_PassiveSkills_C_XPMultiplier_Scavenging Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Sneaking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Sneaking(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Sneaking");

	Params::Int_PassiveSkills_C_XPMultiplier_Sneaking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Strength
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Strength(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Strength");

	Params::Int_PassiveSkills_C_XPMultiplier_Strength Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Thief
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Thief(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Thief");

	Params::Int_PassiveSkills_C_XPMultiplier_Thief Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}


// Function Int_PassiveSkills.Int_PassiveSkills_C.XPMultiplier_Toughness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Used_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IInt_PassiveSkills_C::XPMultiplier_Toughness(bool* Used_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Int_PassiveSkills_C", "XPMultiplier_Toughness");

	Params::Int_PassiveSkills_C_XPMultiplier_Toughness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Used_ != nullptr)
		*Used_ = Parms.Used_;
}

}

