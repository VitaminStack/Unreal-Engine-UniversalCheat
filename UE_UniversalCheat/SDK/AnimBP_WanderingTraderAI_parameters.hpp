#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_WanderingTraderAI

#include "Basic.hpp"

#include "E_BlockType_structs.hpp"
#include "S_AIAnims_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_AllAIAnims_structs.hpp"
#include "E_AIBehaviour_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.Actor Attack Target
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_WanderingTraderAI_C_Actor_Attack_Target final
{
public:
	class AActor*                                 Attack_Target;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_Actor_Attack_Target) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_Actor_Attack_Target");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_Actor_Attack_Target) == 0x000008, "Wrong size on AnimBP_WanderingTraderAI_C_Actor_Attack_Target");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Actor_Attack_Target, Attack_Target) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_Actor_Attack_Target::Attack_Target' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.Actor Aim Focus
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_WanderingTraderAI_C_Actor_Aim_Focus final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_Actor_Aim_Focus) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_Actor_Aim_Focus");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_Actor_Aim_Focus) == 0x000008, "Wrong size on AnimBP_WanderingTraderAI_C_Actor_Aim_Focus");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Actor_Aim_Focus, Instigator) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_Actor_Aim_Focus::Instigator' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AI Alert
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AI_Alert final
{
public:
	class AActor*                                 Alert_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AI_Alert) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_AI_Alert");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AI_Alert) == 0x000008, "Wrong size on AnimBP_WanderingTraderAI_C_AI_Alert");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Alert, Alert_Actor) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AI_Alert::Alert_Actor' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AI Animation Switch
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AI_Animation_Switch final
{
public:
	E_AIBehaviour                                 Behaviour;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AI_Animation_Switch) == 0x000001, "Wrong alignment on AnimBP_WanderingTraderAI_C_AI_Animation_Switch");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AI_Animation_Switch) == 0x000001, "Wrong size on AnimBP_WanderingTraderAI_C_AI_Animation_Switch");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Animation_Switch, Behaviour) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AI_Animation_Switch::Behaviour' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AI Block
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AI_Block final
{
public:
	E_BlockType                                   Block_Type;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Block_Attacker;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AI_Block) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_AI_Block");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AI_Block) == 0x000010, "Wrong size on AnimBP_WanderingTraderAI_C_AI_Block");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Block, Block_Type) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AI_Block::Block_Type' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Block, Block_Attacker) == 0x000008, "Member 'AnimBP_WanderingTraderAI_C_AI_Block::Block_Attacker' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AI Camera Activate
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AI_Camera_Activate final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AI_Camera_Activate) == 0x000001, "Wrong alignment on AnimBP_WanderingTraderAI_C_AI_Camera_Activate");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AI_Camera_Activate) == 0x000001, "Wrong size on AnimBP_WanderingTraderAI_C_AI_Camera_Activate");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Camera_Activate, Activate) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AI_Camera_Activate::Activate' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AI Can Interact?
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AI_Can_Interact_ final
{
public:
	bool                                          Can_Interact;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AI_Can_Interact_) == 0x000001, "Wrong alignment on AnimBP_WanderingTraderAI_C_AI_Can_Interact_");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AI_Can_Interact_) == 0x000001, "Wrong size on AnimBP_WanderingTraderAI_C_AI_Can_Interact_");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Can_Interact_, Can_Interact) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AI_Can_Interact_::Can_Interact' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.Alert Actor Defenders
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders final
{
public:
	class AActor*                                 Attacked;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attacker;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders) == 0x000010, "Wrong size on AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders, Attacked) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders::Attacked' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders, Attacker) == 0x000008, "Member 'AnimBP_WanderingTraderAI_C_Alert_Actor_Defenders::Attacker' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_AnimGraph");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_WanderingTraderAI_C_AnimGraph");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.ExecuteUbergraph_AnimBP_WanderingTraderAI
// 0x0700 (0x0700 - 0x0000)
struct AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAICharacter_C*                K2Node_DynamicCast_AsBP_Master_AICharacter;        // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0136(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_137[0x1];                                      // 0x0137(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_4;                   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_5;                   // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_6;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 CallFunc_Return_Current_Behaviour_New_Behaviour;   // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 CallFunc_Return_Current_Behaviour_New_Behaviour_1; // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_14;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims;             // 0x0160(0x0050)(HasGetValueTypeHash)
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_1;           // 0x01B0(0x0050)(HasGetValueTypeHash)
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_2;           // 0x0200(0x0050)(HasGetValueTypeHash)
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_3;           // 0x0250(0x0050)(HasGetValueTypeHash)
	E_AIBehaviour                                 CallFunc_Return_Current_Behaviour_New_Behaviour_2; // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_15;                           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_4;           // 0x02B0(0x0050)(HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_16;                           // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_5;           // 0x0308(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_7;                   // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_17;                           // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 K2Node_Event_Behaviour;                            // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0377(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_BlockType                                   K2Node_Event_Block_Type;                           // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Block_Attacker;                       // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Activate;                             // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Alert_Actor;                          // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Attacked;                             // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Attacker;                             // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Instigator;                           // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Return_Combat_Stance_Anims_Use_Combat_Stance; // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB[0x5];                                      // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIAnims                             CallFunc_Return_Combat_Stance_Anims_AI_Animation;  // 0x03C0(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 K2Node_Select_Default;                             // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0416(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417[0x1];                                      // 0x0417(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_19;                           // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_423[0x5];                                      // 0x0423(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_6;           // 0x0428(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIAnims                             CallFunc_Return_Behaviour_Anims_Anims_7;           // 0x0480(0x0050)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0508(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x05F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3[0x1];                                      // 0x05F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C9[0x7];                                      // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Direction_ImplicitCast;         // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3;  // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI) == 0x000700, "Wrong size on AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, EntryPoint) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_bool_Variable) == 0x000007, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_3) == 0x000008, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_4) == 0x000009, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_5) == 0x00000A, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_6) == 0x00000B, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_7) == 0x00000C, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_8) == 0x00000D, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_9) == 0x00000E, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable) == 0x000010, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_byte_Variable) == 0x000020, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_10) == 0x000021, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_11) == 0x000022, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_12) == 0x000023, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_1) == 0x000028, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_2) == 0x000030, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_3) == 0x000038, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_13) == 0x000040, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_4) == 0x000048, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_5) == 0x000050, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_6) == 0x000058, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_7) == 0x000060, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_8) == 0x000068, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_9) == 0x000070, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_14) == 0x000078, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_15) == 0x000079, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_16) == 0x00007A, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_17) == 0x00007B, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_18) == 0x00007C, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_19) == 0x00007D, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_20) == 0x00007E, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_21) == 0x00007F, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_22) == 0x000088, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000089, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00008A, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_10) == 0x000090, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_11) == 0x000098, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_DeltaTimeX) == 0x0000A0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0000A8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_23) == 0x0000B0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetVelocity_ReturnValue) == 0x0000B8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_VSize_ReturnValue) == 0x0000D0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x0000D8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x0000E0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_24) == 0x0000E4, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000E5, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BooleanAND_ReturnValue) == 0x0000E6, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_DynamicCast_AsBP_Master_AICharacter) == 0x0000E8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_DynamicCast_AsBP_Master_AICharacter' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue) == 0x0000F1, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_1) == 0x0000F2, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x0000F8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000100, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetVelocity_ReturnValue_1) == 0x000118, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_CalculateDirection_ReturnValue) == 0x000130, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_2) == 0x000134, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_25) == 0x000135, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsValid_ReturnValue_26) == 0x000136, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_12) == 0x000138, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_3) == 0x000140, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_4) == 0x000141, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_5) == 0x000142, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_13) == 0x000148, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_6) == 0x000150, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000151, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BooleanAND_ReturnValue_1) == 0x000152, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Current_Behaviour_New_Behaviour) == 0x000153, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Current_Behaviour_New_Behaviour' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Current_Behaviour_New_Behaviour_1) == 0x000154, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Current_Behaviour_New_Behaviour_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_14) == 0x000158, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims) == 0x000160, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_1) == 0x0001B0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_2) == 0x000200, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_3) == 0x000250, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Current_Behaviour_New_Behaviour_2) == 0x0002A0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Current_Behaviour_New_Behaviour_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_15) == 0x0002A8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_4) == 0x0002B0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_4' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_16) == 0x000300, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_5) == 0x000308, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_5' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsServer_ReturnValue_7) == 0x000358, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_17) == 0x000360, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000368, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x00036C, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Behaviour) == 0x00036D, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Behaviour' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000370, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsFalling_ReturnValue) == 0x000374, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000375, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_IsCrouching_ReturnValue) == 0x000376, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BooleanOR_ReturnValue) == 0x000377, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_18) == 0x000378, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Block_Type) == 0x000380, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Block_Type' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Block_Attacker) == 0x000388, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Block_Attacker' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Activate) == 0x000390, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Activate' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Alert_Actor) == 0x000398, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Alert_Actor' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Attacked) == 0x0003A0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Attacked' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Attacker) == 0x0003A8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Attacker' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Event_Instigator) == 0x0003B0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_bool_Has_Been_Initd_Variable) == 0x0003B8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_bool_IsClosed_Variable) == 0x0003B9, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Combat_Stance_Anims_Use_Combat_Stance) == 0x0003BA, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Combat_Stance_Anims_Use_Combat_Stance' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Combat_Stance_Anims_AI_Animation) == 0x0003C0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Combat_Stance_Anims_AI_Animation' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000410, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000414, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Select_Default) == 0x000415, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BooleanOR_ReturnValue_1) == 0x000416, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, Temp_object_Variable_19) == 0x000418, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000420, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000421, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BooleanAND_ReturnValue_2) == 0x000422, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_6) == 0x000428, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_6' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BooleanOR_ReturnValue_2) == 0x000478, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Return_Behaviour_Anims_Anims_7) == 0x000480, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Return_Behaviour_Anims_Anims_7' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetOwningActor_ReturnValue) == 0x0004D0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004D8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0004F0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LineTraceSingle_OutHit) == 0x000508, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LineTraceSingle_ReturnValue) == 0x0005F0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_bBlockingHit) == 0x0005F1, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_bInitialOverlap) == 0x0005F2, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_Time) == 0x0005F4, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_Distance) == 0x0005F8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_Location) == 0x000600, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_ImpactPoint) == 0x000618, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_Normal) == 0x000630, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_ImpactNormal) == 0x000648, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_PhysMat) == 0x000660, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_HitActor) == 0x000668, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_HitComponent) == 0x000670, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_HitBoneName) == 0x000678, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_BoneName) == 0x000680, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_HitItem) == 0x000688, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_ElementIndex) == 0x00068C, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_FaceIndex) == 0x000690, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_TraceStart) == 0x000698, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_BreakHitResult_TraceEnd) == 0x0006B0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_GetSurfaceType_ReturnValue) == 0x0006C8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_Select_Default_1) == 0x0006D0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0006D8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, K2Node_VariableSet_Direction_ImplicitCast) == 0x0006E0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::K2Node_VariableSet_Direction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x0006E8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x0006F0, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3) == 0x0006F8, "Member 'AnimBP_WanderingTraderAI_C_ExecuteUbergraph_AnimBP_WanderingTraderAI::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.HeadRotation
// 0x0148 (0x0148 - 0x0000)
struct AnimBP_WanderingTraderAI_C_HeadRotation final
{
public:
	double                                        Right;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Down;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Player;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_HeadRotation) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_HeadRotation");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_HeadRotation) == 0x000148, "Wrong size on AnimBP_WanderingTraderAI_C_HeadRotation");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, Right) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::Right' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, Down) == 0x000008, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::Down' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, InterpSpeed) == 0x000010, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::InterpSpeed' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, Player) == 0x000018, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::Player' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_GetOwningActor_ReturnValue) == 0x000020, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_BreakRotator_Roll) == 0x000060, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_BreakRotator_Pitch) == 0x000064, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_BreakRotator_Yaw) == 0x000068, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000078, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000080, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000A0, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_BreakRotator_Roll_1) == 0x0000B8, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_BreakRotator_Pitch_1) == 0x0000BC, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_BreakRotator_Yaw_1) == 0x0000C0, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_ClampAngle_ReturnValue) == 0x0000D0, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_ClampAngle_ReturnValue_1) == 0x0000D8, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_MakeRotator_ReturnValue) == 0x0000E0, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F8, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_RInterpTo_ReturnValue) == 0x000100, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000118, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000120, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x000128, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000130, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000138, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00013C, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_HeadRotation, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000140, "Member 'AnimBP_WanderingTraderAI_C_HeadRotation::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.Return Behaviour Anims
// 0x0528 (0x0528 - 0x0000)
struct AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims final
{
public:
	struct FS_AllAIAnims                          All_Anims;                                         // 0x0000(0x04C8)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_AIBehaviour                                 Behaviour;                                         // 0x04C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIAnims                             Anims;                                             // 0x04D0(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims) == 0x000528, "Wrong size on AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims, All_Anims) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims::All_Anims' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims, Behaviour) == 0x0004C8, "Member 'AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims::Behaviour' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims, Anims) == 0x0004D0, "Member 'AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims::Anims' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims, K2Node_SwitchEnum_CmpSuccess) == 0x000520, "Member 'AnimBP_WanderingTraderAI_C_Return_Behaviour_Anims::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.Return Combat Stance Anims
// 0x0060 (0x0060 - 0x0000)
struct AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims final
{
public:
	bool                                          Use_Combat_Stance;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AIAnims                             AI_Animation;                                      // 0x0008(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims) == 0x000008, "Wrong alignment on AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims) == 0x000060, "Wrong size on AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, Use_Combat_Stance) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::Use_Combat_Stance' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, AI_Animation) == 0x000008, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::AI_Animation' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005A, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00005B, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00005C, "Member 'AnimBP_WanderingTraderAI_C_Return_Combat_Stance_Anims::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.Return Current Behaviour
// 0x0003 (0x0003 - 0x0000)
struct AnimBP_WanderingTraderAI_C_Return_Current_Behaviour final
{
public:
	E_AIBehaviour                                 New_Behaviour;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_Return_Current_Behaviour) == 0x000001, "Wrong alignment on AnimBP_WanderingTraderAI_C_Return_Current_Behaviour");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_Return_Current_Behaviour) == 0x000003, "Wrong size on AnimBP_WanderingTraderAI_C_Return_Current_Behaviour");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Current_Behaviour, New_Behaviour) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_Return_Current_Behaviour::New_Behaviour' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Current_Behaviour, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'AnimBP_WanderingTraderAI_C_Return_Current_Behaviour::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_Return_Current_Behaviour, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'AnimBP_WanderingTraderAI_C_Return_Current_Behaviour::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AnimBP_WanderingTraderAI.AnimBP_WanderingTraderAI_C.AI Is Dead?
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_WanderingTraderAI_C_AI_Is_Dead_ final
{
public:
	bool                                          Dead;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_WanderingTraderAI_C_AI_Is_Dead_) == 0x000001, "Wrong alignment on AnimBP_WanderingTraderAI_C_AI_Is_Dead_");
static_assert(sizeof(AnimBP_WanderingTraderAI_C_AI_Is_Dead_) == 0x000001, "Wrong size on AnimBP_WanderingTraderAI_C_AI_Is_Dead_");
static_assert(offsetof(AnimBP_WanderingTraderAI_C_AI_Is_Dead_, Dead) == 0x000000, "Member 'AnimBP_WanderingTraderAI_C_AI_Is_Dead_::Dead' has a wrong offset!");

}

