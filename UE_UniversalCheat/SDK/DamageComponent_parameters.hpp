#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function DamageComponent.DamageComponent_C.BurningFinished
// 0x0002 (0x0002 - 0x0000)
struct DamageComponent_C_BurningFinished final
{
public:
	bool                                          Death_;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_BurningFinished) == 0x000001, "Wrong alignment on DamageComponent_C_BurningFinished");
static_assert(sizeof(DamageComponent_C_BurningFinished) == 0x000002, "Wrong size on DamageComponent_C_BurningFinished");
static_assert(offsetof(DamageComponent_C_BurningFinished, Death_) == 0x000000, "Member 'DamageComponent_C_BurningFinished::Death_' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_BurningFinished, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'DamageComponent_C_BurningFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.DamageTaken
// 0x0090 (0x0090 - 0x0000)
struct DamageComponent_C_DamageTaken final
{
public:
	double                                        DmgAmount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DmgType;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DmgCauser;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive__Alive_;                          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_DamageTaken) == 0x000008, "Wrong alignment on DamageComponent_C_DamageTaken");
static_assert(sizeof(DamageComponent_C_DamageTaken) == 0x000090, "Wrong size on DamageComponent_C_DamageTaken");
static_assert(offsetof(DamageComponent_C_DamageTaken, DmgAmount) == 0x000000, "Member 'DamageComponent_C_DamageTaken::DmgAmount' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, DmgType) == 0x000008, "Member 'DamageComponent_C_DamageTaken::DmgType' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, DmgCauser) == 0x000010, "Member 'DamageComponent_C_DamageTaken::DmgCauser' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'DamageComponent_C_DamageTaken::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'DamageComponent_C_DamageTaken::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'DamageComponent_C_DamageTaken::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'DamageComponent_C_DamageTaken::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'DamageComponent_C_DamageTaken::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'DamageComponent_C_DamageTaken::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_GetOwner_ReturnValue_1) == 0x000050, "Member 'DamageComponent_C_DamageTaken::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_IsAlive__Alive_) == 0x000058, "Member 'DamageComponent_C_DamageTaken::CallFunc_IsAlive__Alive_' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'DamageComponent_C_DamageTaken::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'DamageComponent_C_DamageTaken::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'DamageComponent_C_DamageTaken::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_DamageTaken, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'DamageComponent_C_DamageTaken::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.ExecuteUbergraph_DamageComponent
// 0x0088 (0x0088 - 0x0000)
struct DamageComponent_C_ExecuteUbergraph_DamageComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentHealth, double MaxHealth)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_CurrentHealth;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxHealth;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_ExecuteUbergraph_DamageComponent) == 0x000008, "Wrong alignment on DamageComponent_C_ExecuteUbergraph_DamageComponent");
static_assert(sizeof(DamageComponent_C_ExecuteUbergraph_DamageComponent) == 0x000088, "Wrong size on DamageComponent_C_ExecuteUbergraph_DamageComponent");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, EntryPoint) == 0x000000, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, K2Node_CustomEvent_CurrentHealth) == 0x000018, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::K2Node_CustomEvent_CurrentHealth' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, K2Node_CustomEvent_MaxHealth) == 0x000020, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::K2Node_CustomEvent_MaxHealth' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_GetBoolCVar_ReturnValue) == 0x000028, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_RandomFloatInRange_ReturnValue) == 0x000030, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000038, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_GetBoolCVar_ReturnValue_1) == 0x000058, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_GetBoolCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000078, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000080, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_ExecuteUbergraph_DamageComponent, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000084, "Member 'DamageComponent_C_ExecuteUbergraph_DamageComponent::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.FireDamageTaken
// 0x0130 (0x0130 - 0x0000)
struct DamageComponent_C_FireDamageTaken final
{
public:
	double                                        DmgAmount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DmgCauser;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_FireDamageTaken) == 0x000010, "Wrong alignment on DamageComponent_C_FireDamageTaken");
static_assert(sizeof(DamageComponent_C_FireDamageTaken) == 0x000130, "Wrong size on DamageComponent_C_FireDamageTaken");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, DmgAmount) == 0x000000, "Member 'DamageComponent_C_FireDamageTaken::DmgAmount' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, DmgCauser) == 0x000008, "Member 'DamageComponent_C_FireDamageTaken::DmgCauser' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_K2_SetTimer_ReturnValue) == 0x000020, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_BreakVector2D_X) == 0x000028, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000038, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000048, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000058, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000C0, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_BreakTransform_Location) == 0x0000C8, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_BreakTransform_Rotation) == 0x0000E0, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000110, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000118, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000120, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_BooleanAND_ReturnValue) == 0x000121, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000124, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_FireDamageTaken, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x000128, "Member 'DamageComponent_C_FireDamageTaken::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.GetValues
// 0x0018 (0x0018 - 0x0000)
struct DamageComponent_C_GetValues final
{
public:
	double                                        StandardHealth;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHealth_0;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth_0;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_GetValues) == 0x000008, "Wrong alignment on DamageComponent_C_GetValues");
static_assert(sizeof(DamageComponent_C_GetValues) == 0x000018, "Wrong size on DamageComponent_C_GetValues");
static_assert(offsetof(DamageComponent_C_GetValues, StandardHealth) == 0x000000, "Member 'DamageComponent_C_GetValues::StandardHealth' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_GetValues, CurrentHealth_0) == 0x000008, "Member 'DamageComponent_C_GetValues::CurrentHealth_0' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_GetValues, MaxHealth_0) == 0x000010, "Member 'DamageComponent_C_GetValues::MaxHealth_0' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.IsAlive?
// 0x0003 (0x0003 - 0x0000)
struct DamageComponent_C_IsAlive_ final
{
public:
	bool                                          Alive_;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_IsAlive_) == 0x000001, "Wrong alignment on DamageComponent_C_IsAlive_");
static_assert(sizeof(DamageComponent_C_IsAlive_) == 0x000003, "Wrong size on DamageComponent_C_IsAlive_");
static_assert(offsetof(DamageComponent_C_IsAlive_, Alive_) == 0x000000, "Member 'DamageComponent_C_IsAlive_::Alive_' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_IsAlive_, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000001, "Member 'DamageComponent_C_IsAlive_::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_IsAlive_, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'DamageComponent_C_IsAlive_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.SetCurrent&MaxHealth_Event
// 0x0010 (0x0010 - 0x0000)
struct DamageComponent_C_SetCurrent_MaxHealth_Event final
{
public:
	double                                        CurrentHealth_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth_0;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_SetCurrent_MaxHealth_Event) == 0x000008, "Wrong alignment on DamageComponent_C_SetCurrent_MaxHealth_Event");
static_assert(sizeof(DamageComponent_C_SetCurrent_MaxHealth_Event) == 0x000010, "Wrong size on DamageComponent_C_SetCurrent_MaxHealth_Event");
static_assert(offsetof(DamageComponent_C_SetCurrent_MaxHealth_Event, CurrentHealth_0) == 0x000000, "Member 'DamageComponent_C_SetCurrent_MaxHealth_Event::CurrentHealth_0' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetCurrent_MaxHealth_Event, MaxHealth_0) == 0x000008, "Member 'DamageComponent_C_SetCurrent_MaxHealth_Event::MaxHealth_0' has a wrong offset!");

// Function DamageComponent.DamageComponent_C.SetHealth
// 0x0038 (0x0038 - 0x0000)
struct DamageComponent_C_SetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScaleHealth_;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ScalingHealthMultiplier_NewMaxHealth;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageComponent_C_SetHealth) == 0x000008, "Wrong alignment on DamageComponent_C_SetHealth");
static_assert(sizeof(DamageComponent_C_SetHealth) == 0x000038, "Wrong size on DamageComponent_C_SetHealth");
static_assert(offsetof(DamageComponent_C_SetHealth, Health) == 0x000000, "Member 'DamageComponent_C_SetHealth::Health' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetHealth, ScaleHealth_) == 0x000008, "Member 'DamageComponent_C_SetHealth::ScaleHealth_' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetHealth, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'DamageComponent_C_SetHealth::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetHealth, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'DamageComponent_C_SetHealth::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetHealth, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'DamageComponent_C_SetHealth::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetHealth, CallFunc_ScalingHealthMultiplier_NewMaxHealth) == 0x000028, "Member 'DamageComponent_C_SetHealth::CallFunc_ScalingHealthMultiplier_NewMaxHealth' has a wrong offset!");
static_assert(offsetof(DamageComponent_C_SetHealth, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'DamageComponent_C_SetHealth::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

}

