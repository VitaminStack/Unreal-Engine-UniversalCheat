#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterInteractionPoint

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_OrderOptions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterInteractionPoint.BP_MasterInteractionPoint_C
// 0x00A0 (0x0338 - 0x0298)
class ABP_MasterInteractionPoint_C final : public AActor
{
public:
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Target_Location;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_OrderOptions                                Animation_Order;                                   // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   Interact_Animations;                               // 0x02C8(0x0010)(Edit, BlueprintVisible)
	class UAnimMontage*                           Start_Animation;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           End_Animation;                                     // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Target_Location;                               // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop_Animations;                                   // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Animation_location_Speed;                          // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Interact_Time;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Interact_Time_Variation;                           // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Occupied;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Inteaction_Face_Location;                          // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Debug_Animation;                                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_Target_Location;                             // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterInteractionPoint_C">();
	}
	static class ABP_MasterInteractionPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterInteractionPoint_C>();
	}
};
static_assert(alignof(ABP_MasterInteractionPoint_C) == 0x000008, "Wrong alignment on ABP_MasterInteractionPoint_C");
static_assert(sizeof(ABP_MasterInteractionPoint_C) == 0x000338, "Wrong size on ABP_MasterInteractionPoint_C");
static_assert(offsetof(ABP_MasterInteractionPoint_C, SkeletalMesh) == 0x000298, "Member 'ABP_MasterInteractionPoint_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Target_Location) == 0x0002A0, "Member 'ABP_MasterInteractionPoint_C::Target_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Arrow) == 0x0002A8, "Member 'ABP_MasterInteractionPoint_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Capsule) == 0x0002B0, "Member 'ABP_MasterInteractionPoint_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_MasterInteractionPoint_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Animation_Order) == 0x0002C0, "Member 'ABP_MasterInteractionPoint_C::Animation_Order' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Interact_Animations) == 0x0002C8, "Member 'ABP_MasterInteractionPoint_C::Interact_Animations' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Start_Animation) == 0x0002D8, "Member 'ABP_MasterInteractionPoint_C::Start_Animation' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, End_Animation) == 0x0002E0, "Member 'ABP_MasterInteractionPoint_C::End_Animation' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Use_Target_Location) == 0x0002E8, "Member 'ABP_MasterInteractionPoint_C::Use_Target_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Loop_Animations) == 0x0002E9, "Member 'ABP_MasterInteractionPoint_C::Loop_Animations' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Animation_location_Speed) == 0x0002F0, "Member 'ABP_MasterInteractionPoint_C::Animation_location_Speed' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Interact_Time) == 0x0002F8, "Member 'ABP_MasterInteractionPoint_C::Interact_Time' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Interact_Time_Variation) == 0x000300, "Member 'ABP_MasterInteractionPoint_C::Interact_Time_Variation' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Occupied) == 0x000308, "Member 'ABP_MasterInteractionPoint_C::Occupied' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Inteaction_Face_Location) == 0x000310, "Member 'ABP_MasterInteractionPoint_C::Inteaction_Face_Location' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Debug_Animation) == 0x000328, "Member 'ABP_MasterInteractionPoint_C::Debug_Animation' has a wrong offset!");
static_assert(offsetof(ABP_MasterInteractionPoint_C, Debug_Target_Location) == 0x000330, "Member 'ABP_MasterInteractionPoint_C::Debug_Target_Location' has a wrong offset!");

}

