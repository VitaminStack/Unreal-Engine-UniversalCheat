#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovementSpeedBear

#include "Basic.hpp"


namespace SDK::Params
{

// Function MovementSpeedBear.MovementSpeedBear_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct MovementSpeedBear_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MovementSpeedBear_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on MovementSpeedBear_C_ReceiveActivationAI");
static_assert(sizeof(MovementSpeedBear_C_ReceiveActivationAI) == 0x000010, "Wrong size on MovementSpeedBear_C_ReceiveActivationAI");
static_assert(offsetof(MovementSpeedBear_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'MovementSpeedBear_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(MovementSpeedBear_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'MovementSpeedBear_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function MovementSpeedBear.MovementSpeedBear_C.ExecuteUbergraph_MovementSpeedBear
// 0x0028 (0x0028 - 0x0000)
struct MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AnimalBear_C*                       K2Node_DynamicCast_AsBP_Animal_Bear;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear) == 0x000008, "Wrong alignment on MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear");
static_assert(sizeof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear) == 0x000028, "Wrong size on MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear");
static_assert(offsetof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear, EntryPoint) == 0x000000, "Member 'MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear::EntryPoint' has a wrong offset!");
static_assert(offsetof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear, K2Node_Event_OwnerController) == 0x000008, "Member 'MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear, K2Node_Event_ControlledPawn) == 0x000010, "Member 'MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear, K2Node_DynamicCast_AsBP_Animal_Bear) == 0x000018, "Member 'MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear::K2Node_DynamicCast_AsBP_Animal_Bear' has a wrong offset!");
static_assert(offsetof(MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MovementSpeedBear_C_ExecuteUbergraph_MovementSpeedBear::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

