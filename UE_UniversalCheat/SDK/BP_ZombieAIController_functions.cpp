#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZombieAIController

#include "Basic.hpp"

#include "BP_ZombieAIController_classes.hpp"
#include "BP_ZombieAIController_parameters.hpp"


namespace SDK
{

// Function BP_ZombieAIController.BP_ZombieAIController_C.BndEvt__BP_ZombieAIController_AIPerception_K2Node_ComponentBoundEvent_4_ActorPerceptionUpdatedDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_ZombieAIController_C::BndEvt__BP_ZombieAIController_AIPerception_K2Node_ComponentBoundEvent_4_ActorPerceptionUpdatedDelegate__DelegateSignature(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "BndEvt__BP_ZombieAIController_AIPerception_K2Node_ComponentBoundEvent_4_ActorPerceptionUpdatedDelegate__DelegateSignature");

	Params::BP_ZombieAIController_C_BndEvt__BP_ZombieAIController_AIPerception_K2Node_ComponentBoundEvent_4_ActorPerceptionUpdatedDelegate__DelegateSignature Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.ExecuteUbergraph_BP_ZombieAIController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieAIController_C::ExecuteUbergraph_BP_ZombieAIController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "ExecuteUbergraph_BP_ZombieAIController");

	Params::BP_ZombieAIController_C_ExecuteUbergraph_BP_ZombieAIController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.GetCurrentlyPerceived
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CanSee                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieAIController_C::GetCurrentlyPerceived(class AActor* Target, bool* CanSee)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "GetCurrentlyPerceived");

	Params::BP_ZombieAIController_C_GetCurrentlyPerceived Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (CanSee != nullptr)
		*CanSee = Parms.CanSee;
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.GetZombiesInRadius
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ZombieAIController_C::GetZombiesInRadius()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "GetZombiesInRadius");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.InCombat?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCombat                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieAIController_C::InCombat_(bool* InCombat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "InCombat?");

	Params::BP_ZombieAIController_C_InCombat_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InCombat != nullptr)
		*InCombat = Parms.InCombat;
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.PerceptionUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_ZombieAIController_C::PerceptionUpdate(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "PerceptionUpdate");

	Params::BP_ZombieAIController_C_PerceptionUpdate Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.PerceptionUpdateCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_ZombieAIController_C::PerceptionUpdateCheck(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "PerceptionUpdateCheck");

	Params::BP_ZombieAIController_C_PerceptionUpdateCheck Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ZombieAIController.BP_ZombieAIController_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ZombieAIController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ZombieAIController_C", "ReceivePossess");

	Params::BP_ZombieAIController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}

}

