#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContainerWindowWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ContainerWindowWidget.ContainerWindowWidget_C
// 0x00E8 (0x03A8 - 0x02C0)
class UContainerWindowWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                CloseBtn;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ContainerName;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_1;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_115;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                MainBorder;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TitleBorder;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox;                                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Weight;                                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   CName;                                             // 0x0308(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          MouseBtnDown;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              LastBtnPressLoc;                                   // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              GeoClick;                                          // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   KeyToClose;                                        // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   NoneKey;                                           // 0x0368(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CanvasSlot;                                        // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InspectorCanvas_C*                  CanvasBPRef;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TotalWeight;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultPos;                                        // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CloseBtn_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_ContainerWindowWidget(int32 EntryPoint);
	void ForceInitSpecialcontainer();
	void GetAllAttachments(TArray<class FName>* Attachments);
	void GetContainerByAttachmentType(const struct FGameplayTag& Type, class UJSIContainer_C** JigContainer, int32* ContainerIndex);
	void GetDropWidget(class UDropItemBackGwidget_C** DropWRef);
	void GetJSIContainerByPlayerSlots(const struct FGameplayTag& Slot_0, class UJSIContainer_C** Container, class UJSI_Slot_C** EquippedItem, bool* IsPending_);
	void GetListOfNonAddContainers(TArray<class UJSIContainer_C*>* Containers);
	void GetLootContent(class UUserWidget** Widget);
	struct FVector2D GetPos(class UWidget* Target);
	struct FVector2D GetPosInViewport();
	void GetValidReloadContainers(TArray<class UJSIContainer_C*>* Containers);
	void GetWeight();
	void JigSetLootContent(class UUserWidget* Widget, const class FText& Name_0);
	void JSICheckStatus();
	void JSIOnWeightUpdated(double NewWeight);
	struct FEventReply On_TitleBorder_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnCreatedFromUtility();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetActionbarFollower(class UJSI_Slot_C* JigRef, bool* Return);
	void SetActorOwner(class AActor* ActorRef);
	void SetContainerWindowLocation();
	void SetInspectorRef(class UBP_InspectorWindowWidget_C* Inspector);
	void SetItemReference(class UJSI_Slot_C* ItemRef_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

	void GetListOfContainers(TArray<class UJSIContainer_C*>* Containers) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ContainerWindowWidget_C">();
	}
	static class UContainerWindowWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UContainerWindowWidget_C>();
	}
};
static_assert(alignof(UContainerWindowWidget_C) == 0x000008, "Wrong alignment on UContainerWindowWidget_C");
static_assert(sizeof(UContainerWindowWidget_C) == 0x0003A8, "Wrong size on UContainerWindowWidget_C");
static_assert(offsetof(UContainerWindowWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UContainerWindowWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, CloseBtn) == 0x0002C8, "Member 'UContainerWindowWidget_C::CloseBtn' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, ContainerName) == 0x0002D0, "Member 'UContainerWindowWidget_C::ContainerName' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, HorizontalBox_1) == 0x0002D8, "Member 'UContainerWindowWidget_C::HorizontalBox_1' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, Image_115) == 0x0002E0, "Member 'UContainerWindowWidget_C::Image_115' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, MainBorder) == 0x0002E8, "Member 'UContainerWindowWidget_C::MainBorder' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, TitleBorder) == 0x0002F0, "Member 'UContainerWindowWidget_C::TitleBorder' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, VBox) == 0x0002F8, "Member 'UContainerWindowWidget_C::VBox' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, Weight) == 0x000300, "Member 'UContainerWindowWidget_C::Weight' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, CName) == 0x000308, "Member 'UContainerWindowWidget_C::CName' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, MouseBtnDown) == 0x000320, "Member 'UContainerWindowWidget_C::MouseBtnDown' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, LastBtnPressLoc) == 0x000328, "Member 'UContainerWindowWidget_C::LastBtnPressLoc' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, GeoClick) == 0x000338, "Member 'UContainerWindowWidget_C::GeoClick' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, KeyToClose) == 0x000348, "Member 'UContainerWindowWidget_C::KeyToClose' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, ItemRef) == 0x000360, "Member 'UContainerWindowWidget_C::ItemRef' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, NoneKey) == 0x000368, "Member 'UContainerWindowWidget_C::NoneKey' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, CanvasSlot) == 0x000380, "Member 'UContainerWindowWidget_C::CanvasSlot' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, CanvasBPRef) == 0x000388, "Member 'UContainerWindowWidget_C::CanvasBPRef' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, TotalWeight) == 0x000390, "Member 'UContainerWindowWidget_C::TotalWeight' has a wrong offset!");
static_assert(offsetof(UContainerWindowWidget_C, DefaultPos) == 0x000398, "Member 'UContainerWindowWidget_C::DefaultPos' has a wrong offset!");

}

