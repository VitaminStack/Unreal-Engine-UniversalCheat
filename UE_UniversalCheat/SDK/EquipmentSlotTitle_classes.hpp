#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipmentSlotTitle

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EquipmentSlotTitle.EquipmentSlotTitle_C
// 0x0090 (0x0350 - 0x02C0)
class UEquipmentSlotTitle_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TheSlotName;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SlotName;                                          // 0x02D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         FontSize;                                          // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UJSIContainer_C* FromContainer, class UEquipmentSlotTitle_C* EquipmentSlotRef, class UJSI_Slot_C* NewSlotRef, class UJigsawItem_DataAsset_C* PickupItemInfo)> ItemDropped;                                       // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsEmpty;                                           // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color;                                             // 0x030C(0x0014)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FLinearColor                           BackColor;                                         // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                TextPadding;                                       // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TMulticastInlineDelegate<void(const struct FKey& Button)> OnWidgetMouseButtonDown;                           // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_EquipmentSlotTitle(int32 EntryPoint);
	void IsEmptyEquipmentSlot(bool* IsEmpty_0);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void SetDefaultColor();
	void UpdateName(const class FText& SlotName_0);
	void UpdateTextColor(const struct FSlateColor& Color_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EquipmentSlotTitle_C">();
	}
	static class UEquipmentSlotTitle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipmentSlotTitle_C>();
	}
};
static_assert(alignof(UEquipmentSlotTitle_C) == 0x000008, "Wrong alignment on UEquipmentSlotTitle_C");
static_assert(sizeof(UEquipmentSlotTitle_C) == 0x000350, "Wrong size on UEquipmentSlotTitle_C");
static_assert(offsetof(UEquipmentSlotTitle_C, UberGraphFrame) == 0x0002C0, "Member 'UEquipmentSlotTitle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, Border_0) == 0x0002C8, "Member 'UEquipmentSlotTitle_C::Border_0' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, TheSlotName) == 0x0002D0, "Member 'UEquipmentSlotTitle_C::TheSlotName' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, SlotName) == 0x0002D8, "Member 'UEquipmentSlotTitle_C::SlotName' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, FontSize) == 0x0002F0, "Member 'UEquipmentSlotTitle_C::FontSize' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, ItemDropped) == 0x0002F8, "Member 'UEquipmentSlotTitle_C::ItemDropped' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, IsEmpty) == 0x000308, "Member 'UEquipmentSlotTitle_C::IsEmpty' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, Color) == 0x00030C, "Member 'UEquipmentSlotTitle_C::Color' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, BackColor) == 0x000320, "Member 'UEquipmentSlotTitle_C::BackColor' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, TextPadding) == 0x000330, "Member 'UEquipmentSlotTitle_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UEquipmentSlotTitle_C, OnWidgetMouseButtonDown) == 0x000340, "Member 'UEquipmentSlotTitle_C::OnWidgetMouseButtonDown' has a wrong offset!");

}

