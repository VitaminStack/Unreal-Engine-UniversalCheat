#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_TurretMASTER

#include "Basic.hpp"

#include "E_BlockType_structs.hpp"
#include "Engine_structs.hpp"
#include "Buildable_MASTER_classes.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Buildable_TurretMASTER.Buildable_TurretMASTER_C
// 0x0050 (0x0480 - 0x0430)
class ABuildable_TurretMASTER_C : public ABuildable_MASTER_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Buildable_TurretMASTER_C;           // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BuildableTurretAIComponent_C*       BP_BuildableTurretAIComponent;                     // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Weapon_Muzzle;                                     // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Forward_Direction;                                 // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        FOV_Arrow_Right;                                   // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        FOV_Arrow_Up;                                      // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        FOV_Arrow_Down;                                    // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        FOV_Arrow_Left;                                    // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Turret;                                            // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Actor_Aim_Focus(class AActor* Instigator_0);
	void Actor_Attack_Target(class AActor** Attack_Target);
	void AI_Alert(class AActor* Alert_Actor);
	void AI_Animation_Switch(E_AIBehaviour Behaviour);
	void AI_Block(E_BlockType Block_Type, class AActor* Block_Attacker);
	void AI_Camera_Activate(bool Activate);
	void AI_Can_Interact_(bool* Can_Interact);
	void AI_Dead();
	void AI_End_Alert();
	void Alert_Actor_Defenders(class AActor* Attacked, class AActor* Attacker);
	void ExecuteUbergraph_Buildable_TurretMASTER(int32 EntryPoint);
	void Turret_Destroyed_Effect();
	void Turret_End_Reload();
	void Turret_Idle_Start();
	void Turret_Idle_Stop();
	void Turret_Start_Reload();
	void UpdateHealth(int32 Health_0);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);

	void AI_Is_Dead_(bool* Dead) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Buildable_TurretMASTER_C">();
	}
	static class ABuildable_TurretMASTER_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildable_TurretMASTER_C>();
	}
};
static_assert(alignof(ABuildable_TurretMASTER_C) == 0x000008, "Wrong alignment on ABuildable_TurretMASTER_C");
static_assert(sizeof(ABuildable_TurretMASTER_C) == 0x000480, "Wrong size on ABuildable_TurretMASTER_C");
static_assert(offsetof(ABuildable_TurretMASTER_C, UberGraphFrame_Buildable_TurretMASTER_C) == 0x000430, "Member 'ABuildable_TurretMASTER_C::UberGraphFrame_Buildable_TurretMASTER_C' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, Widget) == 0x000438, "Member 'ABuildable_TurretMASTER_C::Widget' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, BP_BuildableTurretAIComponent) == 0x000440, "Member 'ABuildable_TurretMASTER_C::BP_BuildableTurretAIComponent' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, Weapon_Muzzle) == 0x000448, "Member 'ABuildable_TurretMASTER_C::Weapon_Muzzle' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, Forward_Direction) == 0x000450, "Member 'ABuildable_TurretMASTER_C::Forward_Direction' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, FOV_Arrow_Right) == 0x000458, "Member 'ABuildable_TurretMASTER_C::FOV_Arrow_Right' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, FOV_Arrow_Up) == 0x000460, "Member 'ABuildable_TurretMASTER_C::FOV_Arrow_Up' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, FOV_Arrow_Down) == 0x000468, "Member 'ABuildable_TurretMASTER_C::FOV_Arrow_Down' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, FOV_Arrow_Left) == 0x000470, "Member 'ABuildable_TurretMASTER_C::FOV_Arrow_Left' has a wrong offset!");
static_assert(offsetof(ABuildable_TurretMASTER_C, Turret) == 0x000478, "Member 'ABuildable_TurretMASTER_C::Turret' has a wrong offset!");

}

