#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TechTree

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum TechTree.ETechTreeOrientation
// NumValues: 0x0004
enum class ETechTreeOrientation : uint8
{
	Vertical                                 = 0,
	Horizontal                               = 1,
	Custom                                   = 2,
	ETechTreeOrientation_MAX                 = 3,
};

// Enum TechTree.ETechNodePinType
// NumValues: 0x0003
enum class ETechNodePinType : uint8
{
	Input                                    = 0,
	Output                                   = 1,
	ETechNodePinType_MAX                     = 2,
};

// ScriptStruct TechTree.UnlockedTechnologiesData
// 0x0010 (0x0010 - 0x0000)
struct FUnlockedTechnologiesData final
{
public:
	TArray<class UTechnologyAsset*>               UnlockedTechnologies;                              // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUnlockedTechnologiesData) == 0x000008, "Wrong alignment on FUnlockedTechnologiesData");
static_assert(sizeof(FUnlockedTechnologiesData) == 0x000010, "Wrong size on FUnlockedTechnologiesData");
static_assert(offsetof(FUnlockedTechnologiesData, UnlockedTechnologies) == 0x000000, "Member 'FUnlockedTechnologiesData::UnlockedTechnologies' has a wrong offset!");

// ScriptStruct TechTree.TechNodeLink
// 0x0030 (0x0030 - 0x0000)
struct FTechNodeLink final
{
public:
	class UTechnologyAsset*                       ParentTechnology;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTechnologyAsset*                       ChildTechnology;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LinkFromPostion;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              LinkToPostion;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTechNodeLink) == 0x000008, "Wrong alignment on FTechNodeLink");
static_assert(sizeof(FTechNodeLink) == 0x000030, "Wrong size on FTechNodeLink");
static_assert(offsetof(FTechNodeLink, ParentTechnology) == 0x000000, "Member 'FTechNodeLink::ParentTechnology' has a wrong offset!");
static_assert(offsetof(FTechNodeLink, ChildTechnology) == 0x000008, "Member 'FTechNodeLink::ChildTechnology' has a wrong offset!");
static_assert(offsetof(FTechNodeLink, LinkFromPostion) == 0x000010, "Member 'FTechNodeLink::LinkFromPostion' has a wrong offset!");
static_assert(offsetof(FTechNodeLink, LinkToPostion) == 0x000020, "Member 'FTechNodeLink::LinkToPostion' has a wrong offset!");

}

