#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SD_AIComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_AIBehviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SD_AIComponent.SD_AIComponent_C
// 0x0028 (0x00C8 - 0x00A0)
class USD_AIComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          CanSystemDespawnAI_;                               // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_AIBehviour                               Behaviour;                                         // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MeleeAttackDistance;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AIWaypoint_C*                       Waypoint;                                          // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBlendSpace1D*                          MovementBlendspace;                                // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void CheckBehaviour();
	void ExecuteUbergraph_SD_AIComponent(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SetBB_Behaviour(Enum_AIBehviour EnumValue);
	void SetBB_ForceAttack(class AActor* Attacker);
	void SetBB_Location(const struct FVector& VectorValue);
	void SetBB_LockOnTarget(const struct FVector& VectorValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SD_AIComponent_C">();
	}
	static class USD_AIComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USD_AIComponent_C>();
	}
};
static_assert(alignof(USD_AIComponent_C) == 0x000008, "Wrong alignment on USD_AIComponent_C");
static_assert(sizeof(USD_AIComponent_C) == 0x0000C8, "Wrong size on USD_AIComponent_C");
static_assert(offsetof(USD_AIComponent_C, UberGraphFrame) == 0x0000A0, "Member 'USD_AIComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USD_AIComponent_C, CanSystemDespawnAI_) == 0x0000A8, "Member 'USD_AIComponent_C::CanSystemDespawnAI_' has a wrong offset!");
static_assert(offsetof(USD_AIComponent_C, Behaviour) == 0x0000A9, "Member 'USD_AIComponent_C::Behaviour' has a wrong offset!");
static_assert(offsetof(USD_AIComponent_C, MeleeAttackDistance) == 0x0000B0, "Member 'USD_AIComponent_C::MeleeAttackDistance' has a wrong offset!");
static_assert(offsetof(USD_AIComponent_C, Waypoint) == 0x0000B8, "Member 'USD_AIComponent_C::Waypoint' has a wrong offset!");
static_assert(offsetof(USD_AIComponent_C, MovementBlendspace) == 0x0000C0, "Member 'USD_AIComponent_C::MovementBlendspace' has a wrong offset!");

}

