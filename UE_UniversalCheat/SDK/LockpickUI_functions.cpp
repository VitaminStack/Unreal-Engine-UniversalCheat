#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LockpickUI

#include "Basic.hpp"

#include "LockpickUI_classes.hpp"
#include "LockpickUI_parameters.hpp"


namespace SDK
{

// Function LockpickUI.LockpickUI_C.BreakLockpick
// (Public, BlueprintCallable, BlueprintEvent)

void ULockpickUI_C::BreakLockpick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "BreakLockpick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LockpickUI.LockpickUI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULockpickUI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LockpickUI.LockpickUI_C.ExecuteUbergraph_LockpickUI
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULockpickUI_C::ExecuteUbergraph_LockpickUI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "ExecuteUbergraph_LockpickUI");

	Params::LockpickUI_C_ExecuteUbergraph_LockpickUI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LockpickUI.LockpickUI_C.ExitText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ULockpickUI_C::ExitText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "ExitText");

	Params::LockpickUI_C_ExitText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LockpickUI.LockpickUI_C.GetLockpickAmount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)
// int32                                   Lockpicks                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FText ULockpickUI_C::GetLockpickAmount(int32* Lockpicks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "GetLockpickAmount");

	Params::LockpickUI_C_GetLockpickAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Lockpicks != nullptr)
		*Lockpicks = Parms.Lockpicks;

	return Parms.ReturnValue;
}


// Function LockpickUI.LockpickUI_C.GetLockpickAmountText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ULockpickUI_C::GetLockpickAmountText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "GetLockpickAmountText");

	Params::LockpickUI_C_GetLockpickAmountText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LockpickUI.LockpickUI_C.GetLockpickDiffText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ULockpickUI_C::GetLockpickDiffText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "GetLockpickDiffText");

	Params::LockpickUI_C_GetLockpickDiffText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LockpickUI.LockpickUI_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULockpickUI_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LockpickUI.LockpickUI_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply ULockpickUI_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "OnMouseButtonDown");

	Params::LockpickUI_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LockpickUI.LockpickUI_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply ULockpickUI_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "OnMouseMove");

	Params::LockpickUI_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LockpickUI.LockpickUI_C.PausePressed
// (BlueprintCallable, BlueprintEvent)

void ULockpickUI_C::PausePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "PausePressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LockpickUI.LockpickUI_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULockpickUI_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LockpickUI_C", "Tick");

	Params::LockpickUI_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

