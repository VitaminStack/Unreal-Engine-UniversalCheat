#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawningVolume_RandomChanceToSpawn

#include "Basic.hpp"

#include "BP_AISpawningVolume_RandomChanceToSpawn_classes.hpp"
#include "BP_AISpawningVolume_RandomChanceToSpawn_parameters.hpp"


namespace SDK
{

// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.TraceForPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Loc                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PlayerHit_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::TraceForPlayer(const struct FVector& Loc, bool* PlayerHit_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "TraceForPlayer");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_TraceForPlayer Parms{};

	Parms.Loc = std::move(Loc);

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerHit_ != nullptr)
		*PlayerHit_ = Parms.PlayerHit_;
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Stop Spawning
// (BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Stop_Spawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Stop Spawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Spawn Location Trace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Spawn_Location_Trace(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Spawn Location Trace");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_Spawn_Location_Trace Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Restart Spawning
// (BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Restart_Spawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Restart Spawning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.RespawnAI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::RespawnAI(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "RespawnAI");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_RespawnAI Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Respawn Timer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Respawn_Timer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Respawn Timer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Reset Find Respawn
// (BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Reset_Find_Respawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Reset Find Respawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Reset AI
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_Result                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class ACharacter*                       AI_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Reset_AI(const struct FHitResult& Hit_Result, class ACharacter* AI_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Reset AI");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_Reset_AI Parms{};

	Parms.Hit_Result = std::move(Hit_Result);
	Parms.AI_Character = AI_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "ReceiveEndPlay");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.RandomSpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_AISpawningVolume_RandomChanceToSpawn_C::RandomSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "RandomSpawn");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_RandomSpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.PlayerInAreaCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::PlayerInAreaCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "PlayerInAreaCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.KillSpawnedActors
// (BlueprintCallable, BlueprintEvent)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::KillSpawnedActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "KillSpawnedActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Find Spawn Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_Result                                             (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

bool ABP_AISpawningVolume_RandomChanceToSpawn_C::Find_Spawn_Location(struct FHitResult* Hit_Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Find Spawn Location");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_Find_Spawn_Location Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hit_Result != nullptr)
		*Hit_Result = std::move(Parms.Hit_Result);

	return Parms.ReturnValue;
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.ExecuteUbergraph_BP_AISpawningVolume_RandomChanceToSpawn
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::ExecuteUbergraph_BP_AISpawningVolume_RandomChanceToSpawn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "ExecuteUbergraph_BP_AISpawningVolume_RandomChanceToSpawn");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_ExecuteUbergraph_BP_AISpawningVolume_RandomChanceToSpawn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.ConvertLocalToWorldLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Point_Local                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point_World                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::ConvertLocalToWorldLocation(struct FVector& Point_Local, struct FVector* Point_World)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "ConvertLocalToWorldLocation");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_ConvertLocalToWorldLocation Parms{};

	Parms.Point_Local = std::move(Point_Local);

	UObject::ProcessEvent(Func, &Parms);

	Point_Local = std::move(Parms.Point_Local);

	if (Point_World != nullptr)
		*Point_World = std::move(Parms.Point_World);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.AI Respawn Timer Finished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       AI_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::AI_Respawn_Timer_Finished(class ACharacter* AI_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "AI Respawn Timer Finished");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_AI_Respawn_Timer_Finished Parms{};

	Parms.AI_Character = AI_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AISpawningVolume_RandomChanceToSpawn.BP_AISpawningVolume_RandomChanceToSpawn_C.Add AI Respawn Timer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       AI_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_AISpawningVolume_RandomChanceToSpawn_C::Add_AI_Respawn_Timer(class ACharacter* AI_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AISpawningVolume_RandomChanceToSpawn_C", "Add AI Respawn Timer");

	Params::BP_AISpawningVolume_RandomChanceToSpawn_C_Add_AI_Respawn_Timer Parms{};

	Parms.AI_Character = AI_Character;

	UObject::ProcessEvent(Func, &Parms);
}

}

