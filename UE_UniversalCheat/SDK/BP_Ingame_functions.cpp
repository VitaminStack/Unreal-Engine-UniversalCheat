#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ingame

#include "Basic.hpp"

#include "BP_Ingame_classes.hpp"
#include "BP_Ingame_parameters.hpp"


namespace SDK
{

// Function BP_Ingame.BP_Ingame_C.ActionBar_Keys
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ActionBar_Keys(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ActionBar_Keys");

	Params::BP_Ingame_C_ActionBar_Keys Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.AddScreenMarker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_PlayerMarker_C*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UW_PlayerMarker_C* UBP_Ingame_C::AddScreenMarker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "AddScreenMarker");

	Params::BP_Ingame_C_AddScreenMarker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Ingame.BP_Ingame_C.AllCrosshairsVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::AllCrosshairsVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "AllCrosshairsVisibility");

	Params::BP_Ingame_C_AllCrosshairsVisibility Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.BindEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::BindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "BindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.ChangeFiringMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Auto_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ChangeFiringMode(bool Auto_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ChangeFiringMode");

	Params::BP_Ingame_C_ChangeFiringMode Parms{};

	Parms.Auto_ = Auto_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.ChangeSnappingModeText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ChangeSnappingModeText(bool Enable_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ChangeSnappingModeText");

	Params::BP_Ingame_C_ChangeSnappingModeText Parms{};

	Parms.Enable_ = Enable_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.ClearContainers
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::ClearContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ClearContainers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_Ingame_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.CreateMedicalUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MedicalEffect                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Adding_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::CreateMedicalUI(class FName MedicalEffect, bool Adding_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "CreateMedicalUI");

	Params::BP_Ingame_C_CreateMedicalUI Parms{};

	Parms.MedicalEffect = MedicalEffect;
	Parms.Adding_ = Adding_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.Crosshairs_Scale
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::Crosshairs_Scale(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Crosshairs_Scale");

	Params::BP_Ingame_C_Crosshairs_Scale Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.CrosshairShoot
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::CrosshairShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "CrosshairShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.Event_HideStopFiringCrosshair
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::Event_HideStopFiringCrosshair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Event_HideStopFiringCrosshair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.Event_StopFiringCrosshair
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::Event_StopFiringCrosshair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Event_StopFiringCrosshair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.Event_VisibilityChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::Event_VisibilityChanged(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Event_VisibilityChanged");

	Params::BP_Ingame_C_Event_VisibilityChanged Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.EventOnMouseBtnDown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_Ingame_C::EventOnMouseBtnDown(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "EventOnMouseBtnDown");

	Params::BP_Ingame_C_EventOnMouseBtnDown Parms{};

	Parms.Container = Container;
	Parms.SlotRef = SlotRef;
	Parms.Button = std::move(Button);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.EventOnSomethingDropped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      DroppedSlotRef                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotReceiverRef                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   ToSlotIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::EventOnSomethingDropped(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "EventOnSomethingDropped");

	Params::BP_Ingame_C_EventOnSomethingDropped Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;
	Parms.DroppedSlotRef = DroppedSlotRef;
	Parms.SlotReceiverRef = SlotReceiverRef;
	Parms.ToSlotIndex = ToSlotIndex;
	Parms.Rotated_ = Rotated_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.ExecuteUbergraph_BP_Ingame
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ExecuteUbergraph_BP_Ingame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ExecuteUbergraph_BP_Ingame");

	Params::BP_Ingame_C_ExecuteUbergraph_BP_Ingame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.FindAndUnbindCapacity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::FindAndUnbindCapacity(class UJSI_Slot_C* ItemRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "FindAndUnbindCapacity");

	Params::BP_Ingame_C_FindAndUnbindCapacity Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.GetActionbarUIDs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FGuid>                    UIDs                                                   (Parm, OutParm)

void UBP_Ingame_C::GetActionbarUIDs(TArray<struct FGuid>* UIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetActionbarUIDs");

	Params::BP_Ingame_C_GetActionbarUIDs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UIDs != nullptr)
		*UIDs = std::move(Parms.UIDs);
}


// Function BP_Ingame.BP_Ingame_C.GetBufferBarPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_Ingame_C::GetBufferBarPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetBufferBarPercent");

	Params::BP_Ingame_C_GetBufferBarPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Ingame.BP_Ingame_C.GetCurrentPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_Ingame_C::GetCurrentPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetCurrentPercent");

	Params::BP_Ingame_C_GetCurrentPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Ingame.BP_Ingame_C.GetFlashlightDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Dur                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::GetFlashlightDurability(double Dur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetFlashlightDurability");

	Params::BP_Ingame_C_GetFlashlightDurability Parms{};

	Parms.Dur = Dur;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.GetHotbarByIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ItemRef                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Found_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  ContainerRef                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      MainItem                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::GetHotbarByIndex(int32 Index_0, class UJSI_Slot_C** ItemRef, bool* Found_, class UJSIContainer_C** ContainerRef, class UJSI_Slot_C** MainItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetHotbarByIndex");

	Params::BP_Ingame_C_GetHotbarByIndex Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemRef != nullptr)
		*ItemRef = Parms.ItemRef;

	if (Found_ != nullptr)
		*Found_ = Parms.Found_;

	if (ContainerRef != nullptr)
		*ContainerRef = Parms.ContainerRef;

	if (MainItem != nullptr)
		*MainItem = Parms.MainItem;
}


// Function BP_Ingame.BP_Ingame_C.GetLevelUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::GetLevelUI(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetLevelUI");

	Params::BP_Ingame_C_GetLevelUI Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.GetNightVisionDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Dur                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::GetNightVisionDurability(double Dur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetNightVisionDurability");

	Params::BP_Ingame_C_GetNightVisionDurability Parms{};

	Parms.Dur = Dur;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.GetRespiratorDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Dur                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::GetRespiratorDurability(double Dur)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetRespiratorDurability");

	Params::BP_Ingame_C_GetRespiratorDurability Parms{};

	Parms.Dur = Dur;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.GetXPUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentXP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxXP_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::GetXPUI(double CurrentXP, double MaxXP_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "GetXPUI");

	Params::BP_Ingame_C_GetXPUI Parms{};

	Parms.CurrentXP = CurrentXP;
	Parms.MaxXP_0 = MaxXP_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.Name
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::Name_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.Hitmarker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::Hitmarker(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "Hitmarker");

	Params::BP_Ingame_C_Hitmarker Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.MedicalUIAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MedicalEffect                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::MedicalUIAnimation(class FName MedicalEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "MedicalUIAnimation");

	Params::BP_Ingame_C_MedicalUIAnimation Parms{};

	Parms.MedicalEffect = MedicalEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.OnCapacityUpdated_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      SlotMother                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::OnCapacityUpdated_Event_0(int32 Current, int32 Max, class UJSIContainer_C* Container, class UJSI_Slot_C* SlotMother)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "OnCapacityUpdated_Event_0");

	Params::BP_Ingame_C_OnCapacityUpdated_Event_0 Parms{};

	Parms.Current = Current;
	Parms.Max = Max;
	Parms.Container = Container;
	Parms.SlotMother = SlotMother;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_Ingame_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.OnItemRemoved_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::OnItemRemoved_Event_0(class UJSI_Slot_C* ItemRef, class UJSIContainer_C* FromContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "OnItemRemoved_Event_0");

	Params::BP_Ingame_C_OnItemRemoved_Event_0 Parms{};

	Parms.ItemRef = ItemRef;
	Parms.FromContainer = FromContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.OxygenVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::OxygenVisibility(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "OxygenVisibility");

	Params::BP_Ingame_C_OxygenVisibility Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.ReloadingUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ReloadingUI(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ReloadingUI");

	Params::BP_Ingame_C_ReloadingUI Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.SetCombatCrosshairType
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::SetCombatCrosshairType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "SetCombatCrosshairType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.SetCrosshair
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::SetCrosshair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "SetCrosshair");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.SetHotbarText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::SetHotbarText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "SetHotbarText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.SetInteractCrosshairType
// (BlueprintCallable, BlueprintEvent)

void UBP_Ingame_C::SetInteractCrosshairType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "SetInteractCrosshairType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Ingame.BP_Ingame_C.ShowFlashlightDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ShowFlashlightDurability(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ShowFlashlightDurability");

	Params::BP_Ingame_C_ShowFlashlightDurability Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.ShowNightVisionDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ShowNightVisionDurability(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ShowNightVisionDurability");

	Params::BP_Ingame_C_ShowNightVisionDurability Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.ShowRespiratorDurability
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::ShowRespiratorDurability(bool Show_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "ShowRespiratorDurability");

	Params::BP_Ingame_C_ShowRespiratorDurability Parms{};

	Parms.Show_ = Show_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.StatsVisibilty
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::StatsVisibilty(bool Hide_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "StatsVisibilty");

	Params::BP_Ingame_C_StatsVisibilty Parms{};

	Parms.Hide_ = Hide_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UnequipExisting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UnequipExisting(class UJSI_Slot_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UnequipExisting");

	Params::BP_Ingame_C_UnequipExisting Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateAmmo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateAmmo(int32 Current, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateAmmo");

	Params::BP_Ingame_C_UpdateAmmo Parms{};

	Parms.Current = Current;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateBuildingDegree
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Degree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateBuildingDegree(double Degree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateBuildingDegree");

	Params::BP_Ingame_C_UpdateBuildingDegree Parms{};

	Parms.Degree = Degree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateFirearmName
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_Ingame_C::UpdateFirearmName(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateFirearmName");

	Params::BP_Ingame_C_UpdateFirearmName Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateHealth
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateHealth(double Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateHealth");

	Params::BP_Ingame_C_UpdateHealth Parms{};

	Parms.Health = Health;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateHunger
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  hunger                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateHunger(double hunger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateHunger");

	Params::BP_Ingame_C_UpdateHunger Parms{};

	Parms.hunger = hunger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateOxygen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Oxygen                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateOxygen(double Oxygen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateOxygen");

	Params::BP_Ingame_C_UpdateOxygen Parms{};

	Parms.Oxygen = Oxygen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateRadiation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Radiation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateRadiation(double Radiation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateRadiation");

	Params::BP_Ingame_C_UpdateRadiation Parms{};

	Parms.Radiation = Radiation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateRangeFinderDistance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Degree                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateRangeFinderDistance(int32 Degree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateRangeFinderDistance");

	Params::BP_Ingame_C_UpdateRangeFinderDistance Parms{};

	Parms.Degree = Degree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateStamina
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Stamina                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateStamina(double Stamina)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateStamina");

	Params::BP_Ingame_C_UpdateStamina Parms{};

	Parms.Stamina = Stamina;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Ingame.BP_Ingame_C.UpdateThirst
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  thirst                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Ingame_C::UpdateThirst(double thirst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Ingame_C", "UpdateThirst");

	Params::BP_Ingame_C_UpdateThirst Parms{};

	Parms.thirst = thirst;

	UObject::ProcessEvent(Func, &Parms);
}

}

