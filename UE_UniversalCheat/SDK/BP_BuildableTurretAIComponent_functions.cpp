#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BuildableTurretAIComponent

#include "Basic.hpp"

#include "BP_BuildableTurretAIComponent_classes.hpp"
#include "BP_BuildableTurretAIComponent_parameters.hpp"


namespace SDK
{

// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Activate Target Actors
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::Activate_Target_Actors(bool Activate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Activate Target Actors");

	Params::BP_BuildableTurretAIComponent_C_Activate_Target_Actors Parms{};

	Parms.Activate_0 = Activate_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Check Tags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     Tags_1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     Tags_2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Return_value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Found_Tag                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::Check_Tags(TArray<class FName>& Tags_1, TArray<class FName>& Tags_2, bool* Return_value, class FName* Found_Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Check Tags");

	Params::BP_BuildableTurretAIComponent_C_Check_Tags Parms{};

	Parms.Tags_1 = std::move(Tags_1);
	Parms.Tags_2 = std::move(Tags_2);

	UObject::ProcessEvent(Func, &Parms);

	Tags_1 = std::move(Parms.Tags_1);
	Tags_2 = std::move(Parms.Tags_2);

	if (Return_value != nullptr)
		*Return_value = Parms.Return_value;

	if (Found_Tag != nullptr)
		*Found_Tag = Parms.Found_Tag;
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.ComponentLoaded
// (Event, Public, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::ComponentLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "ComponentLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.ComponentPreSave
// (Event, Public, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::ComponentPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "ComponentPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Debug Text
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           In_String                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     Text_Color                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::Debug_Text(const class FString& In_String, const struct FLinearColor& Text_Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Debug Text");

	Params::BP_BuildableTurretAIComponent_C_Debug_Text Parms{};

	Parms.In_String = std::move(In_String);
	Parms.Text_Color = std::move(Text_Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Deduct Ammo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::Deduct_Ammo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Deduct Ammo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Deduct Health
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::Deduct_Health(double Damage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Deduct Health");

	Params::BP_BuildableTurretAIComponent_C_Deduct_Health Parms{};

	Parms.Damage_0 = Damage_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.ExecuteUbergraph_BP_BuildableTurretAIComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::ExecuteUbergraph_BP_BuildableTurretAIComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "ExecuteUbergraph_BP_BuildableTurretAIComponent");

	Params::BP_BuildableTurretAIComponent_C_ExecuteUbergraph_BP_BuildableTurretAIComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Multicast Muzzle Effect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Effect_Hit_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_BuildableTurretAIComponent_C::Multicast_Muzzle_Effect(const struct FHitResult& Effect_Hit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Multicast Muzzle Effect");

	Params::BP_BuildableTurretAIComponent_C_Multicast_Muzzle_Effect Parms{};

	Parms.Effect_Hit_0 = std::move(Effect_Hit_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Multicast Projectile
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::Multicast_Projectile(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Multicast Projectile");

	Params::BP_BuildableTurretAIComponent_C_Multicast_Projectile Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Perception Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::Perception_Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Perception Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "ReceiveTick");

	Params::BP_BuildableTurretAIComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Reload
// (BlueprintCallable, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Server Turret Damaged
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BuildableTurretAIComponent_C::Server_Turret_Damaged(double Damage_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Server Turret Damaged");

	Params::BP_BuildableTurretAIComponent_C_Server_Turret_Damaged Parms{};

	Parms.Damage_0 = Damage_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BuildableTurretAIComponent.BP_BuildableTurretAIComponent_C.Turret Fire
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BuildableTurretAIComponent_C::Turret_Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BuildableTurretAIComponent_C", "Turret Fire");

	UObject::ProcessEvent(Func, nullptr);
}

}

