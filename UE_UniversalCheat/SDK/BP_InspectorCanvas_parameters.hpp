#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InspectorCanvas

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_InspectorCanvas.BP_InspectorCanvas_C.ActivateHighestZ
// 0x0020 (0x0020 - 0x0000)
struct BP_InspectorCanvas_C_ActivateHighestZ final
{
public:
	class UWidget*                                BestRef;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Best;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        Arr;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
};
static_assert(alignof(BP_InspectorCanvas_C_ActivateHighestZ) == 0x000008, "Wrong alignment on BP_InspectorCanvas_C_ActivateHighestZ");
static_assert(sizeof(BP_InspectorCanvas_C_ActivateHighestZ) == 0x000020, "Wrong size on BP_InspectorCanvas_C_ActivateHighestZ");
static_assert(offsetof(BP_InspectorCanvas_C_ActivateHighestZ, BestRef) == 0x000000, "Member 'BP_InspectorCanvas_C_ActivateHighestZ::BestRef' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ActivateHighestZ, Best) == 0x000008, "Member 'BP_InspectorCanvas_C_ActivateHighestZ::Best' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ActivateHighestZ, Arr) == 0x000010, "Member 'BP_InspectorCanvas_C_ActivateHighestZ::Arr' has a wrong offset!");

// Function BP_InspectorCanvas.BP_InspectorCanvas_C.AddNewItem
// 0x0008 (0x0008 - 0x0000)
struct BP_InspectorCanvas_C_AddNewItem final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorCanvas_C_AddNewItem) == 0x000008, "Wrong alignment on BP_InspectorCanvas_C_AddNewItem");
static_assert(sizeof(BP_InspectorCanvas_C_AddNewItem) == 0x000008, "Wrong size on BP_InspectorCanvas_C_AddNewItem");
static_assert(offsetof(BP_InspectorCanvas_C_AddNewItem, Content) == 0x000000, "Member 'BP_InspectorCanvas_C_AddNewItem::Content' has a wrong offset!");

// Function BP_InspectorCanvas.BP_InspectorCanvas_C.ExecuteUbergraph_BP_InspectorCanvas
// 0x0038 (0x0038 - 0x0000)
struct BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_Content;                        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_CustomEvent_CanvasSlot;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_CustomEvent_Widget;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas) == 0x000008, "Wrong alignment on BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas");
static_assert(sizeof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas) == 0x000038, "Wrong size on BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, EntryPoint) == 0x000000, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, K2Node_CustomEvent_Content) == 0x000008, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::K2Node_CustomEvent_Content' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, CallFunc_AddChildToCanvas_ReturnValue) == 0x000010, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000018, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, K2Node_CustomEvent_CanvasSlot) == 0x000020, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::K2Node_CustomEvent_CanvasSlot' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas, K2Node_CustomEvent_Widget) == 0x000030, "Member 'BP_InspectorCanvas_C_ExecuteUbergraph_BP_InspectorCanvas::K2Node_CustomEvent_Widget' has a wrong offset!");

// Function BP_InspectorCanvas.BP_InspectorCanvas_C.OnWindowRemoved
// 0x0008 (0x0008 - 0x0000)
struct BP_InspectorCanvas_C_OnWindowRemoved final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorCanvas_C_OnWindowRemoved) == 0x000008, "Wrong alignment on BP_InspectorCanvas_C_OnWindowRemoved");
static_assert(sizeof(BP_InspectorCanvas_C_OnWindowRemoved) == 0x000008, "Wrong size on BP_InspectorCanvas_C_OnWindowRemoved");
static_assert(offsetof(BP_InspectorCanvas_C_OnWindowRemoved, Widget) == 0x000000, "Member 'BP_InspectorCanvas_C_OnWindowRemoved::Widget' has a wrong offset!");

// Function BP_InspectorCanvas.BP_InspectorCanvas_C.SetActiveWindow
// 0x0008 (0x0008 - 0x0000)
struct BP_InspectorCanvas_C_SetActiveWindow final
{
public:
	class UCanvasPanelSlot*                       CanvasSlot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorCanvas_C_SetActiveWindow) == 0x000008, "Wrong alignment on BP_InspectorCanvas_C_SetActiveWindow");
static_assert(sizeof(BP_InspectorCanvas_C_SetActiveWindow) == 0x000008, "Wrong size on BP_InspectorCanvas_C_SetActiveWindow");
static_assert(offsetof(BP_InspectorCanvas_C_SetActiveWindow, CanvasSlot) == 0x000000, "Member 'BP_InspectorCanvas_C_SetActiveWindow::CanvasSlot' has a wrong offset!");

}

