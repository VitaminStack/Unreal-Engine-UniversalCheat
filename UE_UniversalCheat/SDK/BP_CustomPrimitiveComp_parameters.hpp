#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CustomPrimitiveComp

#include "Basic.hpp"

#include "S_RandomStatsConfig_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.ExecuteUbergraph_BP_CustomPrimitiveComp
// 0x00E8 (0x00E8 - 0x0000)
struct BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0018(0x0050)(ConstParm)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0098(0x0030)(HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMeshFromOwner_Mesh;                    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                K2Node_CustomEvent_DA;                             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_OwnerMesh;                      // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseLeaderPose_;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp");
static_assert(sizeof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp) == 0x0000E8, "Wrong size on BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, EntryPoint) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_Option) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_InteractingActor_1) == 0x000010, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_Options) == 0x000018, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_InteractingActor_2) == 0x000068, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_Option_1) == 0x000070, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_InteractingActor_3) == 0x000078, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_InteractingActor) == 0x000080, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_Option_2) == 0x000088, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_ByActor) == 0x000090, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_Event_Payload) == 0x000098, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, CallFunc_GetMeshFromOwner_Mesh) == 0x0000C8, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::CallFunc_GetMeshFromOwner_Mesh' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_CustomEvent_DA) == 0x0000D0, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_CustomEvent_DA' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_CustomEvent_OwnerMesh) == 0x0000D8, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_CustomEvent_OwnerMesh' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp, K2Node_CustomEvent_UseLeaderPose_) == 0x0000E0, "Member 'BP_CustomPrimitiveComp_C_ExecuteUbergraph_BP_CustomPrimitiveComp::K2Node_CustomEvent_UseLeaderPose_' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.GetInteractOptions
// 0x0050 (0x0050 - 0x0000)
struct BP_CustomPrimitiveComp_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_GetInteractOptions");
static_assert(sizeof(BP_CustomPrimitiveComp_C_GetInteractOptions) == 0x000050, "Wrong size on BP_CustomPrimitiveComp_C_GetInteractOptions");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_GetInteractOptions::Options' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_CustomPrimitiveComp_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_GetItemInfo");
static_assert(sizeof(BP_CustomPrimitiveComp_C_GetItemInfo) == 0x000078, "Wrong size on BP_CustomPrimitiveComp_C_GetItemInfo");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetItemInfo, Info) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetItemInfo, Count) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_CustomPrimitiveComp_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_CustomPrimitiveComp_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomPrimitiveComp_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_GetMainSceneComp");
static_assert(sizeof(BP_CustomPrimitiveComp_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_CustomPrimitiveComp_C_GetMainSceneComp");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.GetMeshFromOwner
// 0x0020 (0x0020 - 0x0000)
struct BP_CustomPrimitiveComp_C_GetMeshFromOwner final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_GetMeshFromOwner) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_GetMeshFromOwner");
static_assert(sizeof(BP_CustomPrimitiveComp_C_GetMeshFromOwner) == 0x000020, "Wrong size on BP_CustomPrimitiveComp_C_GetMeshFromOwner");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetMeshFromOwner, Mesh) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_GetMeshFromOwner::Mesh' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetMeshFromOwner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_GetMeshFromOwner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetMeshFromOwner, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_CustomPrimitiveComp_C_GetMeshFromOwner::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_GetMeshFromOwner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CustomPrimitiveComp_C_GetMeshFromOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.Init
// 0x0018 (0x0018 - 0x0000)
struct BP_CustomPrimitiveComp_C_Init final
{
public:
	class UJigsawItem_DataAsset_C*                DA_0;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OwnerMesh;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLeaderPose_;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_Init) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_Init");
static_assert(sizeof(BP_CustomPrimitiveComp_C_Init) == 0x000018, "Wrong size on BP_CustomPrimitiveComp_C_Init");
static_assert(offsetof(BP_CustomPrimitiveComp_C_Init, DA_0) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_Init::DA_0' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_Init, OwnerMesh) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_Init::OwnerMesh' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_Init, UseLeaderPose_) == 0x000010, "Member 'BP_CustomPrimitiveComp_C_Init::UseLeaderPose_' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_CustomPrimitiveComp_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_CustomPrimitiveComp_C_JigCanInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_JigCanInteract) == 0x000001, "Wrong size on BP_CustomPrimitiveComp_C_JigCanInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_JigCanInteract, Result) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_CustomPrimitiveComp_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_CustomPrimitiveComp_C_JigSetCanInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_CustomPrimitiveComp_C_JigSetCanInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_CustomPrimitiveComp_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_CustomPrimitiveComp_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_CustomPrimitiveComp_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_OnBeginInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_OnBeginInteract) == 0x000058, "Wrong size on BP_CustomPrimitiveComp_C_OnBeginInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_CustomPrimitiveComp_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_OnExecuteInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_CustomPrimitiveComp_C_OnExecuteInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_CustomPrimitiveComp_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_OnRequestServerInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_CustomPrimitiveComp_C_OnRequestServerInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_CustomPrimitiveComp_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_CustomPrimitiveComp_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_CustomPrimitiveComp_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_OnServerExecuteInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_CustomPrimitiveComp_C_OnServerExecuteInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_CustomPrimitiveComp_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_CustomPrimitiveComp_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomPrimitiveComp_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_CustomPrimitiveComp_C_OnStopExecuteInteract");
static_assert(sizeof(BP_CustomPrimitiveComp_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_CustomPrimitiveComp_C_OnStopExecuteInteract");
static_assert(offsetof(BP_CustomPrimitiveComp_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomPrimitiveComp_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_CustomPrimitiveComp_C_SetInteractOption");
static_assert(sizeof(BP_CustomPrimitiveComp_C_SetInteractOption) == 0x000008, "Wrong size on BP_CustomPrimitiveComp_C_SetInteractOption");
static_assert(offsetof(BP_CustomPrimitiveComp_C_SetInteractOption, Option) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_CustomPrimitiveComp.BP_CustomPrimitiveComp_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_CustomPrimitiveComp_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CustomPrimitiveComp_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_CustomPrimitiveComp_C_SetPickupCount");
static_assert(sizeof(BP_CustomPrimitiveComp_C_SetPickupCount) == 0x000008, "Wrong size on BP_CustomPrimitiveComp_C_SetPickupCount");
static_assert(offsetof(BP_CustomPrimitiveComp_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_CustomPrimitiveComp_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_CustomPrimitiveComp_C_SetPickupCount, Result) == 0x000004, "Member 'BP_CustomPrimitiveComp_C_SetPickupCount::Result' has a wrong offset!");

}

