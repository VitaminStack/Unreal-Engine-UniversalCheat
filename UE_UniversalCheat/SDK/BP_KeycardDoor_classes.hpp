#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KeycardDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterDoor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KeycardDoor.BP_KeycardDoor_C
// 0x0078 (0x0318 - 0x02A0)
class ABP_KeycardDoor_C : public ABP_MasterDoor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Scanner1;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Scanner;                                           // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorFrame;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Alpha_020BC8084747E4088ED566892304DB21; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_020BC8084747E4088ED566892304DB21; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_CloseDoor_Alpha_319EF3CC4BBC24B091BCCEAF8446D51F; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_CloseDoor__Direction_319EF3CC4BBC24B091BCCEAF8446D51F; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_CloseDoor;                                // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_OpenDoor_Alpha_C0E23A7340A8D534984C27B69F1920A4; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_OpenDoor__Direction_C0E23A7340A8D534984C27B69F1920A4; // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_OpenDoor;                                 // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                Keycard;                                           // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Open_;                                             // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Outline_;                                          // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XPGiven_;                                          // 0x0312(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void Event_CloseDoor(class AActor* Actor);
	void Event_OpenDoor(class AActor* Actor);
	void Event_OpenDoorBehind();
	void ExecuteUbergraph_BP_KeycardDoor(int32 EntryPoint);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetMainSceneComp(class USceneComponent** Comp);
	void JigCanInteract(bool* Result);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void MC_OpenDoor(class AActor* Actor);
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void OnEndInteract();
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteractEnded();
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void PickupBuildFromGround();
	void SetInteractOption(const struct FGameplayTag& Option);
	void SetPickupCount(int32 NewCount, bool* Result);
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_CloseDoor__FinishedFunc();
	void Timeline_CloseDoor__UpdateFunc();
	void Timeline_OpenDoor__FinishedFunc();
	void Timeline_OpenDoor__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KeycardDoor_C">();
	}
	static class ABP_KeycardDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KeycardDoor_C>();
	}
};
static_assert(alignof(ABP_KeycardDoor_C) == 0x000008, "Wrong alignment on ABP_KeycardDoor_C");
static_assert(sizeof(ABP_KeycardDoor_C) == 0x000318, "Wrong size on ABP_KeycardDoor_C");
static_assert(offsetof(ABP_KeycardDoor_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_KeycardDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Scanner1) == 0x0002A8, "Member 'ABP_KeycardDoor_C::Scanner1' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Scanner) == 0x0002B0, "Member 'ABP_KeycardDoor_C::Scanner' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, AIOSubject) == 0x0002B8, "Member 'ABP_KeycardDoor_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Arrow) == 0x0002C0, "Member 'ABP_KeycardDoor_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Door) == 0x0002C8, "Member 'ABP_KeycardDoor_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, DoorFrame) == 0x0002D0, "Member 'ABP_KeycardDoor_C::DoorFrame' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_1_Alpha_020BC8084747E4088ED566892304DB21) == 0x0002D8, "Member 'ABP_KeycardDoor_C::Timeline_1_Alpha_020BC8084747E4088ED566892304DB21' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_1__Direction_020BC8084747E4088ED566892304DB21) == 0x0002DC, "Member 'ABP_KeycardDoor_C::Timeline_1__Direction_020BC8084747E4088ED566892304DB21' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_1) == 0x0002E0, "Member 'ABP_KeycardDoor_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_CloseDoor_Alpha_319EF3CC4BBC24B091BCCEAF8446D51F) == 0x0002E8, "Member 'ABP_KeycardDoor_C::Timeline_CloseDoor_Alpha_319EF3CC4BBC24B091BCCEAF8446D51F' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_CloseDoor__Direction_319EF3CC4BBC24B091BCCEAF8446D51F) == 0x0002EC, "Member 'ABP_KeycardDoor_C::Timeline_CloseDoor__Direction_319EF3CC4BBC24B091BCCEAF8446D51F' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_CloseDoor) == 0x0002F0, "Member 'ABP_KeycardDoor_C::Timeline_CloseDoor' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_OpenDoor_Alpha_C0E23A7340A8D534984C27B69F1920A4) == 0x0002F8, "Member 'ABP_KeycardDoor_C::Timeline_OpenDoor_Alpha_C0E23A7340A8D534984C27B69F1920A4' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_OpenDoor__Direction_C0E23A7340A8D534984C27B69F1920A4) == 0x0002FC, "Member 'ABP_KeycardDoor_C::Timeline_OpenDoor__Direction_C0E23A7340A8D534984C27B69F1920A4' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Timeline_OpenDoor) == 0x000300, "Member 'ABP_KeycardDoor_C::Timeline_OpenDoor' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Keycard) == 0x000308, "Member 'ABP_KeycardDoor_C::Keycard' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Open_) == 0x000310, "Member 'ABP_KeycardDoor_C::Open_' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, Outline_) == 0x000311, "Member 'ABP_KeycardDoor_C::Outline_' has a wrong offset!");
static_assert(offsetof(ABP_KeycardDoor_C, XPGiven_) == 0x000312, "Member 'ABP_KeycardDoor_C::XPGiven_' has a wrong offset!");

}

