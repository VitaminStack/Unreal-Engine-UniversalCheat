#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PendingTimer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PendingTimer.BP_PendingTimer_C.ExecuteUbergraph_BP_PendingTimer
// 0x0058 (0x0058 - 0x0000)
struct BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer) == 0x000008, "Wrong alignment on BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer");
static_assert(sizeof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer) == 0x000058, "Wrong size on BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer");
static_assert(offsetof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer, EntryPoint) == 0x000000, "Member 'BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer, K2Node_Event_InDeltaTime) == 0x000040, "Member 'BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'BP_PendingTimer_C_ExecuteUbergraph_BP_PendingTimer::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_PendingTimer.BP_PendingTimer_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_PendingTimer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PendingTimer_C_Tick) == 0x000004, "Wrong alignment on BP_PendingTimer_C_Tick");
static_assert(sizeof(BP_PendingTimer_C_Tick) == 0x00003C, "Wrong size on BP_PendingTimer_C_Tick");
static_assert(offsetof(BP_PendingTimer_C_Tick, MyGeometry) == 0x000000, "Member 'BP_PendingTimer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_PendingTimer_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_PendingTimer.BP_PendingTimer_C.UpdateText
// 0x0280 (0x0280 - 0x0000)
struct BP_PendingTimer_C_UpdateText final
{
public:
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0018)()
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_4;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0200(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0258(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0268(0x0018)()
};
static_assert(alignof(BP_PendingTimer_C_UpdateText) == 0x000008, "Wrong alignment on BP_PendingTimer_C_UpdateText");
static_assert(sizeof(BP_PendingTimer_C_UpdateText) == 0x000280, "Wrong size on BP_PendingTimer_C_UpdateText");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_FFloor_ReturnValue) == 0x000010, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_FFloor_ReturnValue_1) == 0x000014, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000020, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_FFloor_ReturnValue_2) == 0x0000F0, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0000F8, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeArray_Array_1) == 0x000158, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000180, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_FFloor_ReturnValue_3) == 0x000198, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_FFloor_ReturnValue_4) == 0x00019C, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_FFloor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x0001A0, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x0001A8, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000200, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, K2Node_MakeArray_Array_2) == 0x000258, "Member 'BP_PendingTimer_C_UpdateText::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PendingTimer_C_UpdateText, CallFunc_Format_ReturnValue_2) == 0x000268, "Member 'BP_PendingTimer_C_UpdateText::CallFunc_Format_ReturnValue_2' has a wrong offset!");

}

