#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Buildables

#include "Basic.hpp"

#include "Enum_BuildingSnapTypes_structs.hpp"


namespace SDK::Params
{

// Function BPI_Buildables.BPI_Buildables_C.GetBuildType
// 0x0001 (0x0001 - 0x0000)
struct BPI_Buildables_C_GetBuildType final
{
public:
	Enum_BuildingSnapTypes                        Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Buildables_C_GetBuildType) == 0x000001, "Wrong alignment on BPI_Buildables_C_GetBuildType");
static_assert(sizeof(BPI_Buildables_C_GetBuildType) == 0x000001, "Wrong size on BPI_Buildables_C_GetBuildType");
static_assert(offsetof(BPI_Buildables_C_GetBuildType, Type) == 0x000000, "Member 'BPI_Buildables_C_GetBuildType::Type' has a wrong offset!");

// Function BPI_Buildables.BPI_Buildables_C.OnDestroy
// 0x0008 (0x0008 - 0x0000)
struct BPI_Buildables_C_OnDestroy final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Buildables_C_OnDestroy) == 0x000008, "Wrong alignment on BPI_Buildables_C_OnDestroy");
static_assert(sizeof(BPI_Buildables_C_OnDestroy) == 0x000008, "Wrong size on BPI_Buildables_C_OnDestroy");
static_assert(offsetof(BPI_Buildables_C_OnDestroy, Actor) == 0x000000, "Member 'BPI_Buildables_C_OnDestroy::Actor' has a wrong offset!");

// Function BPI_Buildables.BPI_Buildables_C.OnInteractBuildable
// 0x0008 (0x0008 - 0x0000)
struct BPI_Buildables_C_OnInteractBuildable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Buildables_C_OnInteractBuildable) == 0x000008, "Wrong alignment on BPI_Buildables_C_OnInteractBuildable");
static_assert(sizeof(BPI_Buildables_C_OnInteractBuildable) == 0x000008, "Wrong size on BPI_Buildables_C_OnInteractBuildable");
static_assert(offsetof(BPI_Buildables_C_OnInteractBuildable, Actor) == 0x000000, "Member 'BPI_Buildables_C_OnInteractBuildable::Actor' has a wrong offset!");

// Function BPI_Buildables.BPI_Buildables_C.OverrideBuildName
// 0x0018 (0x0018 - 0x0000)
struct BPI_Buildables_C_OverrideBuildName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPI_Buildables_C_OverrideBuildName) == 0x000008, "Wrong alignment on BPI_Buildables_C_OverrideBuildName");
static_assert(sizeof(BPI_Buildables_C_OverrideBuildName) == 0x000018, "Wrong size on BPI_Buildables_C_OverrideBuildName");
static_assert(offsetof(BPI_Buildables_C_OverrideBuildName, Name_0) == 0x000000, "Member 'BPI_Buildables_C_OverrideBuildName::Name_0' has a wrong offset!");

// Function BPI_Buildables.BPI_Buildables_C.Power Off
// 0x0008 (0x0008 - 0x0000)
struct BPI_Buildables_C_Power_Off final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Buildables_C_Power_Off) == 0x000008, "Wrong alignment on BPI_Buildables_C_Power_Off");
static_assert(sizeof(BPI_Buildables_C_Power_Off) == 0x000008, "Wrong size on BPI_Buildables_C_Power_Off");
static_assert(offsetof(BPI_Buildables_C_Power_Off, Actor) == 0x000000, "Member 'BPI_Buildables_C_Power_Off::Actor' has a wrong offset!");

// Function BPI_Buildables.BPI_Buildables_C.Power On
// 0x0008 (0x0008 - 0x0000)
struct BPI_Buildables_C_Power_On final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Buildables_C_Power_On) == 0x000008, "Wrong alignment on BPI_Buildables_C_Power_On");
static_assert(sizeof(BPI_Buildables_C_Power_On) == 0x000008, "Wrong size on BPI_Buildables_C_Power_On");
static_assert(offsetof(BPI_Buildables_C_Power_On, Actor) == 0x000000, "Member 'BPI_Buildables_C_Power_On::Actor' has a wrong offset!");

// Function BPI_Buildables.BPI_Buildables_C.Requires Power?
// 0x0001 (0x0001 - 0x0000)
struct BPI_Buildables_C_Requires_Power_ final
{
public:
	bool                                          Required_;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Buildables_C_Requires_Power_) == 0x000001, "Wrong alignment on BPI_Buildables_C_Requires_Power_");
static_assert(sizeof(BPI_Buildables_C_Requires_Power_) == 0x000001, "Wrong size on BPI_Buildables_C_Requires_Power_");
static_assert(offsetof(BPI_Buildables_C_Requires_Power_, Required_) == 0x000000, "Member 'BPI_Buildables_C_Requires_Power_::Required_' has a wrong offset!");

}

