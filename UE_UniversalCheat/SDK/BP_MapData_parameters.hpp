#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapData

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MapData.BP_MapData_C.Construct Minimap
// 0x0068 (0x0068 - 0x0000)
struct BP_MapData_C_Construct_Minimap final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapData_C_Construct_Minimap) == 0x000008, "Wrong alignment on BP_MapData_C_Construct_Minimap");
static_assert(sizeof(BP_MapData_C_Construct_Minimap) == 0x000068, "Wrong size on BP_MapData_C_Construct_Minimap");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_BreakVector2D_X) == 0x000000, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_BreakVector2D_Y_1) == 0x000018, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_BreakVector2D_X_2) == 0x000028, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_BreakVector2D_Y_2) == 0x000030, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000038, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000040, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000044, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000048, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00004C, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000050, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000054, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000058, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x00005C, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Construct_Minimap, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000060, "Member 'BP_MapData_C_Construct_Minimap::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");

// Function BP_MapData.BP_MapData_C.Update Player Vision
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MapData_C_Update_Player_Vision final
{
public:
	class UMaterialInstanceDynamic*               L_Vision_Material;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapData_C_Update_Player_Vision) == 0x000008, "Wrong alignment on BP_MapData_C_Update_Player_Vision");
static_assert(sizeof(BP_MapData_C_Update_Player_Vision) == 0x0000A0, "Wrong size on BP_MapData_C_Update_Player_Vision");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, L_Vision_Material) == 0x000000, "Member 'BP_MapData_C_Update_Player_Vision::L_Vision_Material' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000050, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000090, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000094, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MapData_C_Update_Player_Vision, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000098, "Member 'BP_MapData_C_Update_Player_Vision::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

}

