#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MinimapSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_MarkerData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_MinimapSystem.BPC_MinimapSystem_C
// 0x00A0 (0x0140 - 0x00A0)
class UBPC_MinimapSystem_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_PlayerMarker_C*                     PlayerMarker;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MapToggled;                                        // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_MarkerData>                  Markers;                                           // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FS_MarkerData                          MarkerData;                                        // 0x00C8(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMapWidget_C*                           MapWidget;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Player_Marker(const struct FS_MarkerData& Marker_Data, class ABP_PlayerMarker_C* Target_Actor, TArray<class UW_PlayerMarker_C*>* Markers_0);
	void Add_POI_Marker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, const struct FStruct_POI& POI_Data, bool Explored_, class UW_POIMarker_C** Markers_0);
	void Add_Quest_Marker(const struct FS_MarkerData& Marker_Data, class ABP_QuestMarker_C* Target_Actor, TArray<class UW_QuestMarker_C*>* Markers_0);
	void Add_Saved_Player_Marker(const struct FS_MarkerData& Marker_Data, class ABP_PlayerMarker_C* Target_Actor, int32 Index_0, TArray<class UW_PlayerMarker_C*>* Markers_0);
	void Add_Standard_Marker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, TArray<class UW_StandardMarker_C*>* Markers_0);
	void Add_World_Marker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, const class FText& Description, class UW_WorldMarker_C** Markers_0);
	void Create_Checkpoint_Marker(const struct FVector2D& Map_Location);
	void Event_ConstructMap();
	void ExecuteUbergraph_BPC_MinimapSystem(int32 EntryPoint);
	void Marker_Location(const struct FVector2D& Map_Location, struct FVector* ImpactPoint, bool* Success);
	void Remove_Player_Marker(class UW_PlayerMarker_C* Marker, int32 Index_0, class ABP_PlayerMarker_C* Actor);
	void Remove_Quest_Marker(class UW_QuestMarker_C* Marker, class ABP_QuestMarker_C* Actor);
	void Remove_Standard_Marker(class UW_StandardMarker_C* Marker);
	void Remove_World_Marker(class UW_WorldMarker_C* Marker, class ABP_Marker_C* Actor);
	void SERVER_Spawn_Player_Marker(const struct FVector& Hit_Location, bool Success);
	void Toggle_Bigmap();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_MinimapSystem_C">();
	}
	static class UBPC_MinimapSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_MinimapSystem_C>();
	}
};
static_assert(alignof(UBPC_MinimapSystem_C) == 0x000008, "Wrong alignment on UBPC_MinimapSystem_C");
static_assert(sizeof(UBPC_MinimapSystem_C) == 0x000140, "Wrong size on UBPC_MinimapSystem_C");
static_assert(offsetof(UBPC_MinimapSystem_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_MinimapSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_MinimapSystem_C, PlayerMarker) == 0x0000A8, "Member 'UBPC_MinimapSystem_C::PlayerMarker' has a wrong offset!");
static_assert(offsetof(UBPC_MinimapSystem_C, MapToggled) == 0x0000B0, "Member 'UBPC_MinimapSystem_C::MapToggled' has a wrong offset!");
static_assert(offsetof(UBPC_MinimapSystem_C, Markers) == 0x0000B8, "Member 'UBPC_MinimapSystem_C::Markers' has a wrong offset!");
static_assert(offsetof(UBPC_MinimapSystem_C, MarkerData) == 0x0000C8, "Member 'UBPC_MinimapSystem_C::MarkerData' has a wrong offset!");
static_assert(offsetof(UBPC_MinimapSystem_C, MapWidget) == 0x000138, "Member 'UBPC_MinimapSystem_C::MapWidget' has a wrong offset!");

}

