#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WaterBox.BP_WaterBox_C
// 0x0048 (0x02E8 - 0x02A0)
class ABP_WaterBox_C final : public ABP_MasterObject_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ShallowWater_;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Material;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   SplineComp;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_X;                                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_Y;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_Z;                                           // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Radiated_;                                         // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void SetCollisionType();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_WaterBox(int32 EntryPoint);
	void BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BP_WaterBox_Cube_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WaterBox_C">();
	}
	static class ABP_WaterBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WaterBox_C>();
	}
};
static_assert(alignof(ABP_WaterBox_C) == 0x000008, "Wrong alignment on ABP_WaterBox_C");
static_assert(sizeof(ABP_WaterBox_C) == 0x0002E8, "Wrong size on ABP_WaterBox_C");
static_assert(offsetof(ABP_WaterBox_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_WaterBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, Cube) == 0x0002A8, "Member 'ABP_WaterBox_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, ShallowWater_) == 0x0002B0, "Member 'ABP_WaterBox_C::ShallowWater_' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, Material) == 0x0002B8, "Member 'ABP_WaterBox_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, SplineComp) == 0x0002C0, "Member 'ABP_WaterBox_C::SplineComp' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, Scale_X) == 0x0002C8, "Member 'ABP_WaterBox_C::Scale_X' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, Scale_Y) == 0x0002D0, "Member 'ABP_WaterBox_C::Scale_Y' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, Scale_Z) == 0x0002D8, "Member 'ABP_WaterBox_C::Scale_Z' has a wrong offset!");
static_assert(offsetof(ABP_WaterBox_C, Radiated_) == 0x0002E0, "Member 'ABP_WaterBox_C::Radiated_' has a wrong offset!");

}

