#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VehicleMaster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RepItemInfo_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_VehicleMaster.BP_VehicleMaster_C.ApplyDamageToAIBasedOnSpeed
// 0x0058 (0x0058 - 0x0000)
struct BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue_1;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed");
static_assert(sizeof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed) == 0x000058, "Wrong size on BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, DamagedActor) == 0x000000, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000010, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000018, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00001C, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_ApplyDamage_ReturnValue) == 0x000030, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_ApplyDamage_ReturnValue_1) == 0x000034, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_ApplyDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000038, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x000048, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1) == 0x00004C, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x000050, "Member 'BP_VehicleMaster_C_ApplyDamageToAIBasedOnSpeed::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.ApplyDamageToVehicleBasedOnSpeed
// 0x0128 (0x0128 - 0x0000)
struct BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed final
{
public:
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue_1;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue_1;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_3;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue_2;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue_2;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue_3;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue_3;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1;    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast_2;    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast_3;    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_3;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed");
static_assert(sizeof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed) == 0x000128, "Wrong size on BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GetForwardSpeedMPH_ReturnValue) == 0x000000, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GetForwardSpeedMPH_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000030, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000048, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000060, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000078, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_ReturnValue) == 0x000088, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00008C, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000090, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_ReturnValue_1) == 0x000098, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x00009C, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GetForwardSpeedMPH_ReturnValue_1) == 0x0000A8, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GetForwardSpeedMPH_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_RandomIntegerInRange_ReturnValue_3) == 0x0000AC, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_RandomIntegerInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_ReturnValue_1) == 0x0000B0, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000B8, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_ReturnValue_2) == 0x0000C4, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GetForwardSpeedMPH_ReturnValue_2) == 0x0000C8, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GetForwardSpeedMPH_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_ReturnValue_2) == 0x0000D0, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GetForwardSpeedMPH_ReturnValue_3) == 0x0000D8, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GetForwardSpeedMPH_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0000DC, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_ReturnValue_3) == 0x0000E0, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x0000E8, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_ReturnValue_3) == 0x0000EC, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_A_ImplicitCast) == 0x0000F0, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x0000F8, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1) == 0x0000FC, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_BaseDamage_ImplicitCast_2) == 0x000100, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_BaseDamage_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_A_ImplicitCast_1) == 0x000108, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_ApplyDamage_BaseDamage_ImplicitCast_3) == 0x000110, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_ApplyDamage_BaseDamage_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_A_ImplicitCast_2) == 0x000118, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed, CallFunc_Abs_A_ImplicitCast_3) == 0x000120, "Member 'BP_VehicleMaster_C_ApplyDamageToVehicleBasedOnSpeed::CallFunc_Abs_A_ImplicitCast_3' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_FuelBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_HitBoxCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_VehicleMaster_C_BndEvt__BP_MasterVehicle_RepairBoxCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_MPLootContainer_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BP_VehicleMaster_C_BndEvt__BP_VehicleMaster_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.CheckCanExitCarDriverSide
// 0x0200 (0x0200 - 0x0000)
struct BP_VehicleMaster_C_CheckCanExitCarDriverSide final
{
public:
	bool                                          Can_Exiting_Car_;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanExitCarPassengerSide_Can_Exiting_Car_; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue;           // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_CheckCanExitCarDriverSide) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_CheckCanExitCarDriverSide");
static_assert(sizeof(BP_VehicleMaster_C_CheckCanExitCarDriverSide) == 0x000200, "Wrong size on BP_VehicleMaster_C_CheckCanExitCarDriverSide");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, Can_Exiting_Car_) == 0x000000, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::Can_Exiting_Car_' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, K2Node_MakeArray_Array_1) == 0x000020, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_GetRightVector_ReturnValue) == 0x000048, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_GetForwardVector_ReturnValue) == 0x000090, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_CheckCanExitCarPassengerSide_Can_Exiting_Car_) == 0x0000D8, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_CheckCanExitCarPassengerSide_Can_Exiting_Car_' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000E0, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000F8, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x0001E0, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_GetForwardSpeedMPH_ReturnValue) == 0x0001E4, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_GetForwardSpeedMPH_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Abs_ReturnValue) == 0x0001E8, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_FTrunc_ReturnValue) == 0x0001F0, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarDriverSide, CallFunc_Abs_A_ImplicitCast) == 0x0001F8, "Member 'BP_VehicleMaster_C_CheckCanExitCarDriverSide::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.CheckCanExitCarPassengerSide
// 0x01D0 (0x01D0 - 0x0000)
struct BP_VehicleMaster_C_CheckCanExitCarPassengerSide final
{
public:
	bool                                          Can_Exiting_Car_;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_CheckCanExitCarPassengerSide");
static_assert(sizeof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide) == 0x0001D0, "Wrong size on BP_VehicleMaster_C_CheckCanExitCarPassengerSide");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, Can_Exiting_Car_) == 0x000000, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::Can_Exiting_Car_' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_GetRightVector_ReturnValue) == 0x000080, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000098, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000C8, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_SphereTraceSingle_OutHit) == 0x0000E0, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckCanExitCarPassengerSide, CallFunc_SphereTraceSingle_ReturnValue) == 0x0001C8, "Member 'BP_VehicleMaster_C_CheckCanExitCarPassengerSide::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.CheckDistanceFromActor
// 0x0068 (0x0068 - 0x0000)
struct BP_VehicleMaster_C_CheckDistanceFromActor final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnInteractActorOverDistance_Result;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_CheckDistanceFromActor) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_CheckDistanceFromActor");
static_assert(sizeof(BP_VehicleMaster_C_CheckDistanceFromActor) == 0x000068, "Wrong size on BP_VehicleMaster_C_CheckDistanceFromActor");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x000008, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, CallFunc_OnInteractActorOverDistance_Result) == 0x000050, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::CallFunc_OnInteractActorOverDistance_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckDistanceFromActor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_VehicleMaster_C_CheckDistanceFromActor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.CheckWater
// 0x0148 (0x0148 - 0x0000)
struct BP_VehicleMaster_C_CheckWater final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_CheckWater) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_CheckWater");
static_assert(sizeof(BP_VehicleMaster_C_CheckWater) == 0x000148, "Wrong size on BP_VehicleMaster_C_CheckWater");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, Temp_object_Variable) == 0x000000, "Member 'BP_VehicleMaster_C_CheckWater::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000010, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_ApplyDamage_ReturnValue) == 0x000038, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_SphereTraceSingle_OutHit) == 0x000058, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_SphereTraceSingle_ReturnValue) == 0x000140, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_CheckWater, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x000144, "Member 'BP_VehicleMaster_C_CheckWater::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.ComponentsToSave
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleMaster_C_ComponentsToSave final
{
public:
	TArray<class UActorComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UActorComponent*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_VehicleMaster_C_ComponentsToSave) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_ComponentsToSave");
static_assert(sizeof(BP_VehicleMaster_C_ComponentsToSave) == 0x000020, "Wrong size on BP_VehicleMaster_C_ComponentsToSave");
static_assert(offsetof(BP_VehicleMaster_C_ComponentsToSave, Components) == 0x000000, "Member 'BP_VehicleMaster_C_ComponentsToSave::Components' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ComponentsToSave, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_VehicleMaster_C_ComponentsToSave::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.ExecuteUbergraph_BP_VehicleMaster
// 0x1DE0 (0x1DE0 - 0x0000)
struct BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor_5;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor_4;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0060(0x0030)(HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x01F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Fuel_1;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Fuel;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0318(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0330(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0348(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0398(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03E8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0408(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0420(0x0018)()
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems;               // 0x0440(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0468(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Random_OutItem;                     // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x3];                                      // 0x04E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x04E4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x04F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0520(0x0050)()
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_1;                 // 0x0570(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map_1;                              // 0x0588(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_2;                              // 0x05D8(0x0050)(ConstParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_3;                              // 0x0628(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_3;                             // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0680(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68A[0x2];                                      // 0x068A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x068C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0695(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_696[0x2];                                      // 0x0696(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_4;                             // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_5;                             // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x06B8(0x0018)()
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_6;                             // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_7;                             // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor_3;                              // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor_2;                              // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_1;        // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0712(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_713[0x5];                                      // 0x0713(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor_1;                              // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_2;        // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_3;        // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0743(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0748(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x0758(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0768(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0788(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0870(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0880(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88C[0x4];                                      // 0x088C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0890(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x08AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AD[0x3];                                      // 0x08AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x08B0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x09A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_2;                 // 0x09B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C9[0x7];                                      // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x09D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface_1; // 0x09E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x0A08(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_8;                             // 0x0A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A61[0x7];                                      // 0x0A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0A68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_FuelWidget_C*                       K2Node_DynamicCast_AsBP_Fuel_Widget;               // 0x0A70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_9;                             // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_10;                            // 0x0A88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A91[0x7];                                      // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0A98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0AA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_3;                 // 0x0AA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB9[0x7];                                      // 0x0AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0AC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJigItemByDA_Result;                   // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC9[0x7];                                      // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindJigItemByDA_Found;                    // 0x0AD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVehicleUI_C*                           CallFunc_Create_ReturnValue;                       // 0x0AD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_1;                         // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0AE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEA[0x6];                                      // 0x0AEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_11;                            // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0AF8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0B08(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B11[0x3];                                      // 0x0B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0B18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_RepairWidget_C*                     K2Node_DynamicCast_AsBP_Repair_Widget;             // 0x0B20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B29[0x7];                                      // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_12;                            // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_13;                            // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B41[0x7];                                      // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x0B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_4;                 // 0x0B50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x7];                                      // 0x0B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x0B68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0B70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindJigItemByDA_Result_1;                 // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B79[0x7];                                      // 0x0B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_FindJigItemByDA_Found_1;                  // 0x0B80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_2;                         // 0x0B88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0B90(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA2[0x6];                                      // 0x0BA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_VehicleMaster_C*              Temp_object_Variable;                              // 0x0BA8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_6;         // 0x0BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0BB8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0BC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFindThenConsumeByItemID_Result;     // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC9[0x7];                                      // 0x0BC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_2;        // 0x0BD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_RepairWidget_C*                     K2Node_DynamicCast_AsBP_Repair_Widget_1;           // 0x0BD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE1[0x7];                                      // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_3;                         // 0x0BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0C08(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StoreStats_ReturnValue;                   // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C11[0x3];                                      // 0x0C11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAchievement_ReturnValue;               // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C21[0x7];                                      // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_7;         // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0C30(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0C38(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C41[0x7];                                      // 0x0C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0C48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C61[0x3];                                      // 0x0C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_6;                              // 0x0C64(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6C[0x4];                                      // 0x0C6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x0C70(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestServerData_Result;                 // 0x0C7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7D[0x3];                                      // 0x0C7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_SetupInventoryWidget_InventoryWidgetRef;  // 0x0C80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddJigWidgetToContent_Result;             // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryVisible__Result;               // 0x0C89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0C8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8B[0x5];                                      // 0x0C8B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0C90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0C98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_CA8[0x8];                                      // 0x0CA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0CB0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0D10(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0D70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0D88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0DA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0DD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0DE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0E18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0E60(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0EC8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1[0x7];                                      // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0FD0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x1030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x1040(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x1128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1129[0x7];                                     // 0x1129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x1130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x1138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x1150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1169[0x7];                                     // 0x1169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x1170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems_1;             // 0x1180(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x1190(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x11A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11AC[0x4];                                     // 0x11AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x11B0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x1200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1201[0x7];                                     // 0x1201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x1208(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x1218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x1220(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x1238(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x1288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x1290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x1298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x12A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x12A8(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x12C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x12D8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x1328(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x1378(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x1388(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x1398(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x13B0(0x0018)()
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_8;         // 0x13C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x13D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D1[0x7];                                     // 0x13D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x13D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x13F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x1408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x140C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x1410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x1414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x1418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x141C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x1420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x1438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x1450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x1451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1452[0x6];                                     // 0x1452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_9;         // 0x1458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x1460(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x14C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x1520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x1538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x1550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x1568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x1580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x1598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x15B0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1699[0x7];                                     // 0x1699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x16A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x1788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x1789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x178A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178B[0x5];                                     // 0x178B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x1790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x1798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x17A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x17A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x17B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x17B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x17D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x17E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x1804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x1808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_180C[0x4];                                     // 0x180C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x1810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2; // 0x1828(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2; // 0x1910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1911[0x3];                                     // 0x1911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue;           // 0x1914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x1918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x1920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue_1;         // 0x1924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x1928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1929[0x7];                                     // 0x1929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x1930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x1938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1939[0x7];                                     // 0x1939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x1940(0x0018)()
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue_2;         // 0x1958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x195C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195D[0x3];                                     // 0x195D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x1960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x1968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1969[0x7];                                     // 0x1969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x1970(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x1978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x1980(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x1988(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x19A0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x1A88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x1A90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x1A98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x1AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x1AA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA5[0x3];                                     // 0x1AA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x1AA8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x1B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B91[0x7];                                     // 0x1B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAICharacter_C*                K2Node_DynamicCast_AsBP_Master_AICharacter;        // 0x1B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA1[0x7];                                     // 0x1BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AI_C*                               K2Node_DynamicCast_AsBP_AI;                        // 0x1BA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x1BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB1[0x7];                                     // 0x1BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_AIInterface_C>     K2Node_DynamicCast_AsBP_AIInterface;               // 0x1BB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x1BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_Is_Dead__Dead;                         // 0x1BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCA[0x6];                                     // 0x1BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_10;        // 0x1BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_5;                 // 0x1BD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE9[0x7];                                     // 0x1BE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x1BF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInVehicle__InVehicle;             // 0x1C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C09[0x7];                                     // 0x1C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_11;        // 0x1C10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x1C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1C[0x4];                                     // 0x1C1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x1C20(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x1C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3A[0x6];                                     // 0x1C3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x1C40(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x1C58(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x1CA8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x1CB8(0x0018)()
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x1CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD1[0x7];                                     // 0x1CD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map_4;                              // 0x1CD8(0x0050)()
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_2;              // 0x1D28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x1D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D34[0x4];                                     // 0x1D34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x1D38(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x1D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x1D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x1D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x1D68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x1D6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x1D6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6E[0x2];                                     // 0x1D6E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x1D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x1D74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D75[0x3];                                     // 0x1D75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x1D78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x1D90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x1D94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x1D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9C[0x4];                                     // 0x1D9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentTime_ImplicitCast;       // 0x1DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast_1; // 0x1DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAC[0x4];                                     // 0x1DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x1DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x1DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x1DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x1DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x1DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster) == 0x000010, "Wrong alignment on BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster");
static_assert(sizeof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster) == 0x001DE0, "Wrong size on BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, EntryPoint) == 0x000000, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000030, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000031, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_IsClosed_Variable) == 0x000032, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Has_Been_Initd_Variable) == 0x000033, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Actor_5) == 0x000038, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Actor_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Actor_4) == 0x000040, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Actor_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_InteractingActor_3) == 0x000048, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Option_2) == 0x000050, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_ByActor) == 0x000058, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Payload) == 0x000060, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_InteractingActor_2) == 0x000090, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Location) == 0x000110, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Rotation) == 0x000128, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Scale) == 0x000140, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakVector_X) == 0x000158, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakVector_Y) == 0x000160, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakVector_Z) == 0x000168, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000170, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeVector_ReturnValue) == 0x000178, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0001F0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0002D8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Length_ReturnValue) == 0x0002DC, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Greater_IntInt_ReturnValue) == 0x0002E0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_CustomEvent_Fuel_1) == 0x0002E8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_CustomEvent_Fuel_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_CustomEvent_Fuel) == 0x0002F0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_CustomEvent_Fuel' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000300, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000308, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000310, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000318, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000330, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData) == 0x000348, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_1) == 0x000398, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeArray_Array) == 0x0003E8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeArray_Array_1) == 0x0003F8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Format_ReturnValue) == 0x000408, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Format_ReturnValue_1) == 0x000420, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD) == 0x000438, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetContainerItems_AllItems) == 0x000440, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetContainerItems_AllItems' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Length_ReturnValue_1) == 0x000450, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_1) == 0x000458, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000460, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_2) == 0x000468, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004B8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_2) == 0x0004C0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Random_OutItem) == 0x0004C8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Random_OutIndex) == 0x0004D0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Get_Item) == 0x0004D8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0004E0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable) == 0x0004E4, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0004F0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable_1) == 0x0004F8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBPI_Player) == 0x000500, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess) == 0x000510, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000518, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeMap_Map) == 0x000520, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBPI_Player_1) == 0x000570, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBPI_Player_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_1) == 0x000580, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsCrouching_ReturnValue) == 0x000581, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeMap_Map_1) == 0x000588, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeMap_Map_2) == 0x0005D8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeMap_Map_3) == 0x000628, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeMap_Map_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_3) == 0x000678, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Option_1) == 0x000680, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue) == 0x000688, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BooleanOR_ReturnValue) == 0x000689, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable_2) == 0x00068C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BooleanOR_ReturnValue_1) == 0x000694, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Not_PreBool_ReturnValue) == 0x000695, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_4) == 0x000698, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_ShowInteractWidget_Widget) == 0x0006A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_5) == 0x0006A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_ShowInteractWidget_Widget_1) == 0x0006B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_StringToText_ReturnValue) == 0x0006B8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_6) == 0x0006D0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_7) == 0x0006D8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetGameHUD_HUD) == 0x0006E0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Actor_3) == 0x0006E8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Actor_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Player_Character) == 0x0006F0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_2) == 0x0006F8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Actor_2) == 0x000700, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Player_Character_1) == 0x000708, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_3) == 0x000710, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_1) == 0x000711, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_2) == 0x000712, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Actor_1) == 0x000718, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Player_Character_2) == 0x000720, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Player_Character_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_4) == 0x000728, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Actor) == 0x000730, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Player_Character_3) == 0x000738, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Player_Character_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_5) == 0x000740, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_3) == 0x000741, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_4) == 0x000742, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetBoolCVar_ReturnValue) == 0x000743, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000748, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_5) == 0x000750, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_5) == 0x000758, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000760, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000768, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000770, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000778, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000780, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x000784, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000788, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000870, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000878, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000880, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000888, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000890, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000898, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0008A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0008A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0008AC, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0008B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_AttachToActor_ReturnValue) == 0x000998, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_InteractingActor_1) == 0x0009A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Option) == 0x0009A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0009B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBPI_Player_2) == 0x0009B8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBPI_Player_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_6) == 0x0009C8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x0009D0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_7) == 0x0009E0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Jig_Character_Interface_1) == 0x0009E8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Jig_Character_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_8) == 0x0009F8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_InteractingActor) == 0x000A00, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Options) == 0x000A08, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_8) == 0x000A58, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_5) == 0x000A60, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000A68, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Fuel_Widget) == 0x000A70, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Fuel_Widget' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_9) == 0x000A78, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_9) == 0x000A80, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_9' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_10) == 0x000A88, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_10' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_6) == 0x000A90, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000A98, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000AA0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBPI_Player_3) == 0x000AA8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBPI_Player_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_10) == 0x000AB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetComponentByClass_ReturnValue) == 0x000AC0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_FindJigItemByDA_Result) == 0x000AC8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_FindJigItemByDA_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_FindJigItemByDA_Found) == 0x000AD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_FindJigItemByDA_Found' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Create_ReturnValue) == 0x000AD8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetGameHUD_HUD_1) == 0x000AE0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetGameHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000AE8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_1) == 0x000AE9, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_11) == 0x000AF0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_11' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_CreateDelegate_OutputDelegate_1) == 0x000AF8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000B08, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_7) == 0x000B10, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000B14, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000B18, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Repair_Widget) == 0x000B20, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Repair_Widget' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_11) == 0x000B28, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_12) == 0x000B30, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_12' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetHUD_HUD_13) == 0x000B38, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetHUD_HUD_13' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_8) == 0x000B40, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x000B48, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBPI_Player_4) == 0x000B50, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBPI_Player_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_12) == 0x000B60, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x000B68, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000B70, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_FindJigItemByDA_Result_1) == 0x000B78, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_FindJigItemByDA_Result_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_FindJigItemByDA_Found_1) == 0x000B80, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_FindJigItemByDA_Found_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetGameHUD_HUD_2) == 0x000B88, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetGameHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable_3) == 0x000B90, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000B98, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000BA0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_IsClosed_Variable_1) == 0x000BA1, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_object_Variable) == 0x000BA8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_6) == 0x000BB0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable_4) == 0x000BB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000BC0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_ServerFindThenConsumeByItemID_Result) == 0x000BC8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_ServerFindThenConsumeByItemID_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetUserWidgetObject_ReturnValue_2) == 0x000BD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetUserWidgetObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Repair_Widget_1) == 0x000BD8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Repair_Widget_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_13) == 0x000BE0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetGameHUD_HUD_3) == 0x000BE8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetGameHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000BF0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000BF8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_FClamp_ReturnValue) == 0x000C00, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000C08, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_StoreStats_ReturnValue) == 0x000C10, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_StoreStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Add_ReturnValue) == 0x000C14, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Add_ReturnValue_1) == 0x000C18, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Add_ReturnValue_2) == 0x000C1C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_SetAchievement_ReturnValue) == 0x000C20, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_SetAchievement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_7) == 0x000C28, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable_5) == 0x000C30, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000C38, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000C40, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000C48, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_1) == 0x000C60, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_name_Variable_6) == 0x000C64, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimer_ReturnValue_3) == 0x000C70, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Add_ReturnValue_3) == 0x000C78, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_RequestServerData_Result) == 0x000C7C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_RequestServerData_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_SetupInventoryWidget_InventoryWidgetRef) == 0x000C80, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_SetupInventoryWidget_InventoryWidgetRef' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_AddJigWidgetToContent_Result) == 0x000C88, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_AddJigWidgetToContent_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsInventoryVisible__Result) == 0x000C89, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsInventoryVisible__Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Not_PreBool_ReturnValue_2) == 0x000C8A, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Get_Item_1) == 0x000C90, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_string_Variable) == 0x000C98, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000CB0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000D10, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Location_1) == 0x000D70, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Rotation_1) == 0x000D88, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Scale_1) == 0x000DA0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Location_2) == 0x000DB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Rotation_2) == 0x000DD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Scale_2) == 0x000DE8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Roll) == 0x000E00, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Pitch) == 0x000E04, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Yaw) == 0x000E08, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Roll_1) == 0x000E0C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Pitch_1) == 0x000E10, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Yaw_1) == 0x000E14, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeRotator_ReturnValue) == 0x000E18, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeRotator_ReturnValue_1) == 0x000E30, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakVector_X_1) == 0x000E48, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakVector_Y_1) == 0x000E50, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakVector_Z_1) == 0x000E58, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeTransform_ReturnValue_1) == 0x000E60, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000EC0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000EC8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x000FB0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeVector_ReturnValue_1) == 0x000FB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeTransform_ReturnValue_2) == 0x000FD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_string_Variable_1) == 0x001030, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x001040, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x001128, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x001130, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetActorForwardVector_ReturnValue) == 0x001138, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_VectorVector_ReturnValue) == 0x001150, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Variable) == 0x001168, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Select_Default) == 0x001170, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetContainerItems_AllItems_1) == 0x001180, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetContainerItems_AllItems_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_StringToText_ReturnValue_1) == 0x001190, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_Length_ReturnValue_2) == 0x0011A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_3) == 0x0011B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x001200, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeArray_Array_2) == 0x001208, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x001218, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Format_ReturnValue_2) == 0x001220, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_4) == 0x001238, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x001288, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x001290, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x001298, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0012A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x0012A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x0012C0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_5) == 0x0012D8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_6) == 0x001328, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeArray_Array_3) == 0x001378, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeArray_Array_4) == 0x001388, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Format_ReturnValue_3) == 0x001398, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Format_ReturnValue_4) == 0x0013B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_8) == 0x0013C8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_RemoveItem_ReturnValue) == 0x0013D0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0013D8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0013F0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Roll_2) == 0x001408, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Pitch_2) == 0x00140C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Yaw_2) == 0x001410, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Roll_3) == 0x001414, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Pitch_3) == 0x001418, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Yaw_3) == 0x00141C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeRotator_ReturnValue_2) == 0x001420, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeRotator_ReturnValue_3) == 0x001438, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x001450, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x001451, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_9) == 0x001458, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetSocketTransform_ReturnValue) == 0x001460, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0014C0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Location_3) == 0x001520, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Rotation_3) == 0x001538, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Scale_3) == 0x001550, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Location_4) == 0x001568, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Rotation_4) == 0x001580, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakTransform_Scale_4) == 0x001598, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0015B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x001698, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x0016A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x001788, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x001789, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x00178A, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x001790, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x001798, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0017A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0017A8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0017B0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0017B8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0017D0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Add_VectorVector_ReturnValue) == 0x0017E8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Roll_4) == 0x001800, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Pitch_4) == 0x001804, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_BreakRotator_Yaw_4) == 0x001808, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_MakeRotator_ReturnValue_4) == 0x001810, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2) == 0x001828, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2) == 0x001910, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetForwardSpeedMPH_ReturnValue) == 0x001914, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetForwardSpeedMPH_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Abs_ReturnValue) == 0x001918, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_FTrunc_ReturnValue) == 0x001920, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetForwardSpeedMPH_ReturnValue_1) == 0x001924, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetForwardSpeedMPH_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x001928, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Abs_ReturnValue_1) == 0x001930, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x001938, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_text_Variable) == 0x001940, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetForwardSpeedMPH_ReturnValue_2) == 0x001958, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetForwardSpeedMPH_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Has_Been_Initd_Variable_2) == 0x00195C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Abs_ReturnValue_2) == 0x001960, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x001968, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_HitComponent) == 0x001970, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor_1) == 0x001978, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp_1) == 0x001980, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_NormalImpulse) == 0x001988, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_Hit) == 0x0019A0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x001A88, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherActor) == 0x001A90, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherComp) == 0x001A98, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x001AA0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_bFromSweep) == 0x001AA4, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_SweepResult) == 0x001AA8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_9) == 0x001B90, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_Master_AICharacter) == 0x001B98, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_Master_AICharacter' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_14) == 0x001BA0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_AI) == 0x001BA8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_AI' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_15) == 0x001BB0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBP_AIInterface) == 0x001BB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBP_AIInterface' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_16) == 0x001BC8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_AI_Is_Dead__Dead) == 0x001BC9, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_AI_Is_Dead__Dead' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_10) == 0x001BD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_AsBPI_Player_5) == 0x001BD8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_AsBPI_Player_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_DynamicCast_bSuccess_17) == 0x001BE8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x001BF0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsPlayerInVehicle__InVehicle) == 0x001C08, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsPlayerInVehicle__InVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetPlayerCharacter_ReturnValue_11) == 0x001C10, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetPlayerCharacter_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_GetFloatCVar_ReturnValue) == 0x001C18, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_text_Variable_1) == 0x001C20, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_Variable_1) == 0x001C38, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_IsValid_ReturnValue_10) == 0x001C39, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Select_Default_1) == 0x001C40, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeStruct_FormatArgumentData_7) == 0x001C58, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeArray_Array_5) == 0x001CA8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Format_ReturnValue_5) == 0x001CB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x001CD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_MakeMap_Map_4) == 0x001CD8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_MakeMap_Map_4' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_ShowInteractWidget_Widget_2) == 0x001D28, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_ShowInteractWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_Damage) == 0x001D30, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_DamageType) == 0x001D38, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_InstigatedBy) == 0x001D40, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_Event_DamageCauser) == 0x001D48, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x001D50, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x001D58, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x001D60, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_ApplyDamage_ReturnValue) == 0x001D68, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, Temp_bool_IsClosed_Variable_2) == 0x001D6C, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x001D6D, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_LayerIndex) == 0x001D70, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_ComponentBoundEvent_bIsSeen) == 0x001D74, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x001D78, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x001D90, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x001D94, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x001D98, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, K2Node_VariableSet_CurrentTime_ImplicitCast) == 0x001DA0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::K2Node_VariableSet_CurrentTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_RetriggerableDelay_Duration_ImplicitCast_1) == 0x001DA8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_RetriggerableDelay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Abs_A_ImplicitCast) == 0x001DB0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Abs_A_ImplicitCast_1) == 0x001DB8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Abs_A_ImplicitCast_2) == 0x001DC0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x001DC8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x001DD0, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x001DD8, "Member 'BP_VehicleMaster_C_ExecuteUbergraph_BP_VehicleMaster::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.ExitVehicle
// 0x0038 (0x0038 - 0x0000)
struct BP_VehicleMaster_C_ExitVehicle final
{
public:
	bool                                          CanExit_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInVehicle__InVehicle;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanExitCarDriverSide_Can_Exiting_Car_; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_ExitVehicle) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_ExitVehicle");
static_assert(sizeof(BP_VehicleMaster_C_ExitVehicle) == 0x000038, "Wrong size on BP_VehicleMaster_C_ExitVehicle");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, CanExit_) == 0x000000, "Member 'BP_VehicleMaster_C_ExitVehicle::CanExit_' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_ExitVehicle::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_AsBPI_Player) == 0x000010, "Member 'BP_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_VehicleMaster_C_ExitVehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, CallFunc_IsPlayerInVehicle__InVehicle) == 0x000021, "Member 'BP_VehicleMaster_C_ExitVehicle::CallFunc_IsPlayerInVehicle__InVehicle' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000028, "Member 'BP_VehicleMaster_C_ExitVehicle::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ExitVehicle, CallFunc_CheckCanExitCarDriverSide_Can_Exiting_Car_) == 0x000030, "Member 'BP_VehicleMaster_C_ExitVehicle::CallFunc_CheckCanExitCarDriverSide_Can_Exiting_Car_' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.GetInteractOptions
// 0x00A0 (0x00A0 - 0x0000)
struct BP_VehicleMaster_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map;                                // 0x0050(0x0050)()
};
static_assert(alignof(BP_VehicleMaster_C_GetInteractOptions) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_GetInteractOptions");
static_assert(sizeof(BP_VehicleMaster_C_GetInteractOptions) == 0x0000A0, "Wrong size on BP_VehicleMaster_C_GetInteractOptions");
static_assert(offsetof(BP_VehicleMaster_C_GetInteractOptions, Options) == 0x000000, "Member 'BP_VehicleMaster_C_GetInteractOptions::Options' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_GetInteractOptions, K2Node_MakeMap_Map) == 0x000050, "Member 'BP_VehicleMaster_C_GetInteractOptions::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct BP_VehicleMaster_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_VehicleMaster_C_GetItemInfo) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_GetItemInfo");
static_assert(sizeof(BP_VehicleMaster_C_GetItemInfo) == 0x000078, "Wrong size on BP_VehicleMaster_C_GetItemInfo");
static_assert(offsetof(BP_VehicleMaster_C_GetItemInfo, Info) == 0x000000, "Member 'BP_VehicleMaster_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_GetItemInfo, Count) == 0x000008, "Member 'BP_VehicleMaster_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'BP_VehicleMaster_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_GetItemInfo, CustomData) == 0x000028, "Member 'BP_VehicleMaster_C_GetItemInfo::CustomData' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_GetJigMultiplayerComponent");
static_assert(sizeof(BP_VehicleMaster_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on BP_VehicleMaster_C_GetJigMultiplayerComponent");
static_assert(offsetof(BP_VehicleMaster_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'BP_VehicleMaster_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_GetMainSceneComp) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_GetMainSceneComp");
static_assert(sizeof(BP_VehicleMaster_C_GetMainSceneComp) == 0x000008, "Wrong size on BP_VehicleMaster_C_GetMainSceneComp");
static_assert(offsetof(BP_VehicleMaster_C_GetMainSceneComp, Comp) == 0x000000, "Member 'BP_VehicleMaster_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.Horn
// 0x0028 (0x0028 - 0x0000)
struct BP_VehicleMaster_C_Horn final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_Horn) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_Horn");
static_assert(sizeof(BP_VehicleMaster_C_Horn) == 0x000028, "Wrong size on BP_VehicleMaster_C_Horn");
static_assert(offsetof(BP_VehicleMaster_C_Horn, Temp_bool_Variable) == 0x000000, "Member 'BP_VehicleMaster_C_Horn::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_Horn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_Horn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_Horn, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_Horn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.IsInAir?
// 0x0158 (0x0158 - 0x0000)
struct BP_VehicleMaster_C_IsInAir_ final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_IsInAir_) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_IsInAir_");
static_assert(sizeof(BP_VehicleMaster_C_IsInAir_) == 0x000158, "Wrong size on BP_VehicleMaster_C_IsInAir_");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, Temp_object_Variable) == 0x000000, "Member 'BP_VehicleMaster_C_IsInAir_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_VehicleMaster_C_IsInAir_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_IsInAir_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_VehicleMaster_C_IsInAir_::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000050, "Member 'BP_VehicleMaster_C_IsInAir_::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000068, "Member 'BP_VehicleMaster_C_IsInAir_::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000150, "Member 'BP_VehicleMaster_C_IsInAir_::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_IsInAir_, CallFunc_Not_PreBool_ReturnValue) == 0x000151, "Member 'BP_VehicleMaster_C_IsInAir_::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct BP_VehicleMaster_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigCanInteract) == 0x000001, "Wrong alignment on BP_VehicleMaster_C_JigCanInteract");
static_assert(sizeof(BP_VehicleMaster_C_JigCanInteract) == 0x000001, "Wrong size on BP_VehicleMaster_C_JigCanInteract");
static_assert(offsetof(BP_VehicleMaster_C_JigCanInteract, Result) == 0x000000, "Member 'BP_VehicleMaster_C_JigCanInteract::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_GetLootWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_VehicleMaster_C_JigMP_GetLootWidget final
{
public:
	class UWidget*                                Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_GetLootWidget) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_GetLootWidget");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_GetLootWidget) == 0x000010, "Wrong size on BP_VehicleMaster_C_JigMP_GetLootWidget");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_GetLootWidget, Result) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_GetLootWidget::Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_GetLootWidget, Valid_) == 0x000008, "Member 'BP_VehicleMaster_C_JigMP_GetLootWidget::Valid_' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnContainersSwap
// 0x0018 (0x0018 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnContainersSwap final
{
public:
	class UJSIContainer_C*                        Container1;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container2;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnContainersSwap) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnContainersSwap");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnContainersSwap) == 0x000018, "Wrong size on BP_VehicleMaster_C_JigMP_OnContainersSwap");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnContainersSwap, Container1) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnContainersSwap::Container1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnContainersSwap, Container2) == 0x000008, "Member 'BP_VehicleMaster_C_JigMP_OnContainersSwap::Container2' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnContainersSwap, Result) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnContainersSwap::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnItemAdded
// 0x0040 (0x0040 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnItemAdded final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        FromComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnItemAdded) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnItemAdded");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnItemAdded) == 0x000040, "Wrong size on BP_VehicleMaster_C_JigMP_OnItemAdded");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemAdded, ItemUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemAdded, FromContainerUID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnItemAdded::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemAdded, ToContainerUID) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemAdded, FromComponent) == 0x000030, "Member 'BP_VehicleMaster_C_JigMP_OnItemAdded::FromComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemAdded, Result) == 0x000038, "Member 'BP_VehicleMaster_C_JigMP_OnItemAdded::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnItemConsumed
// 0x0118 (0x0118 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnItemConsumed final
{
public:
	struct FRepItemInfo                           ConsumedItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0080(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromContainer;                                     // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0111(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnItemConsumed) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnItemConsumed");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnItemConsumed) == 0x000118, "Wrong size on BP_VehicleMaster_C_JigMP_OnItemConsumed");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, ConsumedItem) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::ConsumedItem' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, Amount) == 0x000078, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::Amount' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, Remaining) == 0x00007C, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::Remaining' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, InsideOf) == 0x000080, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::InsideOf' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, FromContainer) == 0x0000F8, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, CustomData) == 0x000100, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::CustomData' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, CallbackToPlayer_) == 0x000110, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemConsumed, Result) == 0x000111, "Member 'BP_VehicleMaster_C_JigMP_OnItemConsumed::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnItemDropped
// 0x0030 (0x0030 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnItemDropped final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnItemDropped) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnItemDropped");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnItemDropped) == 0x000030, "Wrong size on BP_VehicleMaster_C_JigMP_OnItemDropped");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemDropped, ItemUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnItemDropped::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemDropped, FromContainerUID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnItemDropped::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemDropped, ActorRef) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnItemDropped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemDropped, Result) == 0x000028, "Member 'BP_VehicleMaster_C_JigMP_OnItemDropped::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnItemMoved
// 0x0034 (0x0034 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnItemMoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnItemMoved) == 0x000004, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnItemMoved");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnItemMoved) == 0x000034, "Wrong size on BP_VehicleMaster_C_JigMP_OnItemMoved");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemMoved, ItemUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnItemMoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemMoved, FromContainerUID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnItemMoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemMoved, ToContainerUID) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnItemMoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemMoved, Result) == 0x000030, "Member 'BP_VehicleMaster_C_JigMP_OnItemMoved::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnItemRemoved
// 0x0040 (0x0040 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnItemRemoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        ToComponent;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnItemRemoved) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnItemRemoved");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnItemRemoved) == 0x000040, "Wrong size on BP_VehicleMaster_C_JigMP_OnItemRemoved");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemRemoved, ItemUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemRemoved, FromContainerUID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemRemoved, ToContainerUID) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnItemRemoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemRemoved, ToComponent) == 0x000030, "Member 'BP_VehicleMaster_C_JigMP_OnItemRemoved::ToComponent' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnItemRemoved, Result) == 0x000038, "Member 'BP_VehicleMaster_C_JigMP_OnItemRemoved::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnMainContainerItemAdded
// 0x00B8 (0x00B8 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded final
{
public:
	struct FGuid                                  ToContainerUID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemInfo;                                          // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromMain;                                          // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorRef;                                          // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded) == 0x0000B8, "Wrong size on BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, ToContainerUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, ItemUID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, ToContainerName) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::ToContainerName' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, ItemInfo) == 0x000028, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, FromMain) == 0x0000A0, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::FromMain' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, Result) == 0x0000A8, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded, ActorRef) == 0x0000B0, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemAdded::ActorRef' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnMainContainerItemRemoved
// 0x00A8 (0x00A8 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved final
{
public:
	struct FGuid                                  FromContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemRemovedInfo;                                   // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved) == 0x0000A8, "Wrong size on BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved, FromContainerUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved, ItemUID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved, ContainerName) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved, ItemRemovedInfo) == 0x000028, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved::ItemRemovedInfo' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved, Result) == 0x0000A0, "Member 'BP_VehicleMaster_C_JigMP_OnMainContainerItemRemoved::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnPickupAdded
// 0x00A8 (0x00A8 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnPickupAdded final
{
public:
	struct FRepItemInfo                           Info;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnPickupAdded) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnPickupAdded");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnPickupAdded) == 0x0000A8, "Wrong size on BP_VehicleMaster_C_JigMP_OnPickupAdded");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupAdded, Info) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnPickupAdded::Info' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupAdded, ItemUID) == 0x000078, "Member 'BP_VehicleMaster_C_JigMP_OnPickupAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupAdded, ToContainerUID) == 0x000088, "Member 'BP_VehicleMaster_C_JigMP_OnPickupAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupAdded, ToContainer) == 0x000098, "Member 'BP_VehicleMaster_C_JigMP_OnPickupAdded::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupAdded, Result) == 0x0000A0, "Member 'BP_VehicleMaster_C_JigMP_OnPickupAdded::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnPickupEquipped
// 0x00B8 (0x00B8 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnPickupEquipped final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           Info;                                              // 0x0030(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverrideActor;                                     // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnPickupEquipped) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnPickupEquipped");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnPickupEquipped) == 0x0000B8, "Wrong size on BP_VehicleMaster_C_JigMP_OnPickupEquipped");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, ActorRef) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, ToContainerName) == 0x000008, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::ToContainerName' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, UID) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::UID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, ToContainerUID) == 0x000020, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, Info) == 0x000030, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::Info' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, Result) == 0x0000A8, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnPickupEquipped, OverrideActor) == 0x0000B0, "Member 'BP_VehicleMaster_C_JigMP_OnPickupEquipped::OverrideActor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnRequestDropItem
// 0x0150 (0x0150 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnRequestDropItem final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnRequestDropItem) == 0x000010, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnRequestDropItem");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnRequestDropItem) == 0x000150, "Wrong size on BP_VehicleMaster_C_JigMP_OnRequestDropItem");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, ItemInfo) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, ContainerName) == 0x000078, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, ActorRef) == 0x000080, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000140, "Member 'BP_VehicleMaster_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnTwoContainersSwap
// 0x0014 (0x0014 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnTwoContainersSwap final
{
public:
	class FName                                   FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnTwoContainersSwap) == 0x000004, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnTwoContainersSwap");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnTwoContainersSwap) == 0x000014, "Wrong size on BP_VehicleMaster_C_JigMP_OnTwoContainersSwap");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnTwoContainersSwap, FromContainer) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnTwoContainersSwap::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnTwoContainersSwap, ToContainer) == 0x000008, "Member 'BP_VehicleMaster_C_JigMP_OnTwoContainersSwap::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnTwoContainersSwap, Result) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnTwoContainersSwap::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigMP_OnUpdateChamberUID
// 0x0014 (0x0014 - 0x0000)
struct BP_VehicleMaster_C_JigMP_OnUpdateChamberUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigMP_OnUpdateChamberUID) == 0x000004, "Wrong alignment on BP_VehicleMaster_C_JigMP_OnUpdateChamberUID");
static_assert(sizeof(BP_VehicleMaster_C_JigMP_OnUpdateChamberUID) == 0x000014, "Wrong size on BP_VehicleMaster_C_JigMP_OnUpdateChamberUID");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnUpdateChamberUID, NewUID) == 0x000000, "Member 'BP_VehicleMaster_C_JigMP_OnUpdateChamberUID::NewUID' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigMP_OnUpdateChamberUID, Result) == 0x000010, "Member 'BP_VehicleMaster_C_JigMP_OnUpdateChamberUID::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct BP_VehicleMaster_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_JigSetCanInteract) == 0x000001, "Wrong alignment on BP_VehicleMaster_C_JigSetCanInteract");
static_assert(sizeof(BP_VehicleMaster_C_JigSetCanInteract) == 0x000003, "Wrong size on BP_VehicleMaster_C_JigSetCanInteract");
static_assert(offsetof(BP_VehicleMaster_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'BP_VehicleMaster_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'BP_VehicleMaster_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_JigSetCanInteract, Result) == 0x000002, "Member 'BP_VehicleMaster_C_JigSetCanInteract::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnBeginFuelInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnBeginFuelInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnBeginFuelInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnBeginFuelInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnBeginFuelInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnBeginFuelInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnBeginFuelInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnBeginFuelInteract::Actor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct BP_VehicleMaster_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_VehicleMaster_C_OnBeginInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnBeginInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnBeginInteract) == 0x000058, "Wrong size on BP_VehicleMaster_C_OnBeginInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'BP_VehicleMaster_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnBeginInteract, Options) == 0x000008, "Member 'BP_VehicleMaster_C_OnBeginInteract::Options' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnBeginRepairInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnBeginRepairInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnBeginRepairInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnBeginRepairInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnBeginRepairInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnBeginRepairInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnBeginRepairInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnBeginRepairInteract::Actor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnBeginStorageInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnBeginStorageInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnBeginStorageInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnBeginStorageInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnBeginStorageInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnBeginStorageInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnBeginStorageInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnBeginStorageInteract::Actor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnEndFuelInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnEndFuelInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnEndFuelInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnEndFuelInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnEndFuelInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnEndFuelInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnEndFuelInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnEndFuelInteract::Actor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnEndRepairInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnEndRepairInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnEndRepairInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnEndRepairInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnEndRepairInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnEndRepairInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnEndRepairInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnEndRepairInteract::Actor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnEndStorageInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnEndStorageInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnEndStorageInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnEndStorageInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnEndStorageInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnEndStorageInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnEndStorageInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnEndStorageInteract::Actor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct BP_VehicleMaster_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnExecuteInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnExecuteInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnExecuteInteract) == 0x000010, "Wrong size on BP_VehicleMaster_C_OnExecuteInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_VehicleMaster_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnExecuteInteract, Option) == 0x000008, "Member 'BP_VehicleMaster_C_OnExecuteInteract::Option' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnExecuteInteractDialogue");
static_assert(sizeof(BP_VehicleMaster_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnExecuteInteractDialogue");
static_assert(offsetof(BP_VehicleMaster_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'BP_VehicleMaster_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct BP_VehicleMaster_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnRequestServerInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnRequestServerInteract) == 0x000048, "Wrong size on BP_VehicleMaster_C_OnRequestServerInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'BP_VehicleMaster_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnRequestServerInteract, Option) == 0x000008, "Member 'BP_VehicleMaster_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'BP_VehicleMaster_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnRequestServerInteract, Result) == 0x000040, "Member 'BP_VehicleMaster_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct BP_VehicleMaster_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnServerExecuteInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnServerExecuteInteract) == 0x000040, "Wrong size on BP_VehicleMaster_C_OnServerExecuteInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'BP_VehicleMaster_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'BP_VehicleMaster_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'BP_VehicleMaster_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_OnStopExecuteInteract");
static_assert(sizeof(BP_VehicleMaster_C_OnStopExecuteInteract) == 0x000008, "Wrong size on BP_VehicleMaster_C_OnStopExecuteInteract");
static_assert(offsetof(BP_VehicleMaster_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'BP_VehicleMaster_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleMaster_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_ReceiveAnyDamage");
static_assert(sizeof(BP_VehicleMaster_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_VehicleMaster_C_ReceiveAnyDamage");
static_assert(offsetof(BP_VehicleMaster_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_VehicleMaster_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_VehicleMaster_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_VehicleMaster_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_VehicleMaster_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.SetInteractDistance
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleMaster_C_SetInteractDistance final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_SetInteractDistance) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_SetInteractDistance");
static_assert(sizeof(BP_VehicleMaster_C_SetInteractDistance) == 0x000020, "Wrong size on BP_VehicleMaster_C_SetInteractDistance");
static_assert(offsetof(BP_VehicleMaster_C_SetInteractDistance, Target) == 0x000000, "Member 'BP_VehicleMaster_C_SetInteractDistance::Target' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_SetInteractDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_SetInteractDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_SetInteractOption) == 0x000004, "Wrong alignment on BP_VehicleMaster_C_SetInteractOption");
static_assert(sizeof(BP_VehicleMaster_C_SetInteractOption) == 0x000008, "Wrong size on BP_VehicleMaster_C_SetInteractOption");
static_assert(offsetof(BP_VehicleMaster_C_SetInteractOption, Option) == 0x000000, "Member 'BP_VehicleMaster_C_SetInteractOption::Option' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_SetPickupCount) == 0x000004, "Wrong alignment on BP_VehicleMaster_C_SetPickupCount");
static_assert(sizeof(BP_VehicleMaster_C_SetPickupCount) == 0x000008, "Wrong size on BP_VehicleMaster_C_SetPickupCount");
static_assert(offsetof(BP_VehicleMaster_C_SetPickupCount, NewCount) == 0x000000, "Member 'BP_VehicleMaster_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_SetPickupCount, Result) == 0x000004, "Member 'BP_VehicleMaster_C_SetPickupCount::Result' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.Svr_UpdateEngine
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_Svr_UpdateEngine final
{
public:
	double                                        Fuel;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_Svr_UpdateEngine) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_Svr_UpdateEngine");
static_assert(sizeof(BP_VehicleMaster_C_Svr_UpdateEngine) == 0x000008, "Wrong size on BP_VehicleMaster_C_Svr_UpdateEngine");
static_assert(offsetof(BP_VehicleMaster_C_Svr_UpdateEngine, Fuel) == 0x000000, "Member 'BP_VehicleMaster_C_Svr_UpdateEngine::Fuel' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.Svr_UpdateFuel
// 0x0008 (0x0008 - 0x0000)
struct BP_VehicleMaster_C_Svr_UpdateFuel final
{
public:
	double                                        Fuel;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_Svr_UpdateFuel) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_Svr_UpdateFuel");
static_assert(sizeof(BP_VehicleMaster_C_Svr_UpdateFuel) == 0x000008, "Wrong size on BP_VehicleMaster_C_Svr_UpdateFuel");
static_assert(offsetof(BP_VehicleMaster_C_Svr_UpdateFuel, Fuel) == 0x000000, "Member 'BP_VehicleMaster_C_Svr_UpdateFuel::Fuel' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.TurnOnOffLights
// 0x0040 (0x0040 - 0x0000)
struct BP_VehicleMaster_C_TurnOnOffLights final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_TurnOnOffLights) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_TurnOnOffLights");
static_assert(sizeof(BP_VehicleMaster_C_TurnOnOffLights) == 0x000040, "Wrong size on BP_VehicleMaster_C_TurnOnOffLights");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_VehicleMaster_C_TurnOnOffLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_VehicleMaster_C_TurnOnOffLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_VehicleMaster_C_TurnOnOffLights::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_VehicleMaster_C_TurnOnOffLights::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_TurnOnOffLights, CallFunc_Less_IntInt_ReturnValue_1) == 0x000039, "Member 'BP_VehicleMaster_C_TurnOnOffLights::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.UseGasCan
// 0x0058 (0x0058 - 0x0000)
struct BP_VehicleMaster_C_UseGasCan final
{
public:
	class UJSI_Slot_C*                            GasCan;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFindThenConsumeByItemID_Result;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_FuelWidget_C*                       K2Node_DynamicCast_AsBP_Fuel_Widget;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_UseGasCan) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_UseGasCan");
static_assert(sizeof(BP_VehicleMaster_C_UseGasCan) == 0x000058, "Wrong size on BP_VehicleMaster_C_UseGasCan");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, GasCan) == 0x000000, "Member 'BP_VehicleMaster_C_UseGasCan::GasCan' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000018, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_ServerFindThenConsumeByItemID_Result) == 0x000020, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_ServerFindThenConsumeByItemID_Result' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, K2Node_DynamicCast_AsBP_Fuel_Widget) == 0x000028, "Member 'BP_VehicleMaster_C_UseGasCan::K2Node_DynamicCast_AsBP_Fuel_Widget' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_VehicleMaster_C_UseGasCan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_GetGameHUD_HUD) == 0x000038, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_UseGasCan, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'BP_VehicleMaster_C_UseGasCan::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.VehicleFire
// 0x0001 (0x0001 - 0x0000)
struct BP_VehicleMaster_C_VehicleFire final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_VehicleFire) == 0x000001, "Wrong alignment on BP_VehicleMaster_C_VehicleFire");
static_assert(sizeof(BP_VehicleMaster_C_VehicleFire) == 0x000001, "Wrong size on BP_VehicleMaster_C_VehicleFire");
static_assert(offsetof(BP_VehicleMaster_C_VehicleFire, Visible) == 0x000000, "Member 'BP_VehicleMaster_C_VehicleFire::Visible' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.VehicleHealth
// 0x0002 (0x0002 - 0x0000)
struct BP_VehicleMaster_C_VehicleHealth final
{
public:
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_VehicleHealth) == 0x000001, "Wrong alignment on BP_VehicleMaster_C_VehicleHealth");
static_assert(sizeof(BP_VehicleMaster_C_VehicleHealth) == 0x000002, "Wrong size on BP_VehicleMaster_C_VehicleHealth");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHealth, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_VehicleMaster_C_VehicleHealth::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHealth, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000001, "Member 'BP_VehicleMaster_C_VehicleHealth::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.VehicleHitAudio
// 0x0038 (0x0038 - 0x0000)
struct BP_VehicleMaster_C_VehicleHitAudio final
{
public:
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_VehicleHitAudio) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_VehicleHitAudio");
static_assert(sizeof(BP_VehicleMaster_C_VehicleHitAudio) == 0x000038, "Wrong size on BP_VehicleMaster_C_VehicleHitAudio");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHitAudio, CallFunc_GetForwardSpeedMPH_ReturnValue) == 0x000000, "Member 'BP_VehicleMaster_C_VehicleHitAudio::CallFunc_GetForwardSpeedMPH_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHitAudio, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_VehicleHitAudio::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHitAudio, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'BP_VehicleMaster_C_VehicleHitAudio::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHitAudio, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_VehicleMaster_C_VehicleHitAudio::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleHitAudio, CallFunc_Abs_A_ImplicitCast) == 0x000030, "Member 'BP_VehicleMaster_C_VehicleHitAudio::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.VehicleSmoke
// 0x0001 (0x0001 - 0x0000)
struct BP_VehicleMaster_C_VehicleSmoke final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_VehicleSmoke) == 0x000001, "Wrong alignment on BP_VehicleMaster_C_VehicleSmoke");
static_assert(sizeof(BP_VehicleMaster_C_VehicleSmoke) == 0x000001, "Wrong size on BP_VehicleMaster_C_VehicleSmoke");
static_assert(offsetof(BP_VehicleMaster_C_VehicleSmoke, Visible) == 0x000000, "Member 'BP_VehicleMaster_C_VehicleSmoke::Visible' has a wrong offset!");

// Function BP_VehicleMaster.BP_VehicleMaster_C.VehicleSound
// 0x0020 (0x0020 - 0x0000)
struct BP_VehicleMaster_C_VehicleSound final
{
public:
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VehicleMaster_C_VehicleSound) == 0x000008, "Wrong alignment on BP_VehicleMaster_C_VehicleSound");
static_assert(sizeof(BP_VehicleMaster_C_VehicleSound) == 0x000020, "Wrong size on BP_VehicleMaster_C_VehicleSound");
static_assert(offsetof(BP_VehicleMaster_C_VehicleSound, CallFunc_GetForwardSpeedMPH_ReturnValue) == 0x000000, "Member 'BP_VehicleMaster_C_VehicleSound::CallFunc_GetForwardSpeedMPH_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleSound, CallFunc_Abs_ReturnValue) == 0x000008, "Member 'BP_VehicleMaster_C_VehicleSound::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleSound, CallFunc_Abs_A_ImplicitCast) == 0x000010, "Member 'BP_VehicleMaster_C_VehicleSound::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VehicleMaster_C_VehicleSound, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000018, "Member 'BP_VehicleMaster_C_VehicleSound::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");

}

