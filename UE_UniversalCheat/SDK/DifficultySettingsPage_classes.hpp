#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DifficultySettingsPage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DifficultySettingsPage.DifficultySettingsPage_C
// 0x0060 (0x0320 - 0x02C0)
class UDifficultySettingsPage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalRadioSelect_C*                 CategorySelect;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        CategorySwitcher;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficulty_AI_C*                       Difficulty_AI_UI;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficulty_General_C*                  Difficulty_GeneralUI;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficulty_Loot_C*                     Difficulty_Loot;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficulty_Other_C*                    Difficulty_Other;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficulty_Player_C*                   Difficulty_Player;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDifficulty_Vehicles_C*                 Difficulty_Vehicles;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            HoveredTextColor;                                  // 0x0308(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CategoryChanged(const class FString& Value);
	void Construct();
	void ExecuteUbergraph_DifficultySettingsPage(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DifficultySettingsPage_C">();
	}
	static class UDifficultySettingsPage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDifficultySettingsPage_C>();
	}
};
static_assert(alignof(UDifficultySettingsPage_C) == 0x000008, "Wrong alignment on UDifficultySettingsPage_C");
static_assert(sizeof(UDifficultySettingsPage_C) == 0x000320, "Wrong size on UDifficultySettingsPage_C");
static_assert(offsetof(UDifficultySettingsPage_C, UberGraphFrame) == 0x0002C0, "Member 'UDifficultySettingsPage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, CategorySelect) == 0x0002C8, "Member 'UDifficultySettingsPage_C::CategorySelect' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, CategorySwitcher) == 0x0002D0, "Member 'UDifficultySettingsPage_C::CategorySwitcher' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, Difficulty_AI_UI) == 0x0002D8, "Member 'UDifficultySettingsPage_C::Difficulty_AI_UI' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, Difficulty_GeneralUI) == 0x0002E0, "Member 'UDifficultySettingsPage_C::Difficulty_GeneralUI' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, Difficulty_Loot) == 0x0002E8, "Member 'UDifficultySettingsPage_C::Difficulty_Loot' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, Difficulty_Other) == 0x0002F0, "Member 'UDifficultySettingsPage_C::Difficulty_Other' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, Difficulty_Player) == 0x0002F8, "Member 'UDifficultySettingsPage_C::Difficulty_Player' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, Difficulty_Vehicles) == 0x000300, "Member 'UDifficultySettingsPage_C::Difficulty_Vehicles' has a wrong offset!");
static_assert(offsetof(UDifficultySettingsPage_C, HoveredTextColor) == 0x000308, "Member 'UDifficultySettingsPage_C::HoveredTextColor' has a wrong offset!");

}

