#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterCamera

#include "Basic.hpp"

#include "BP_MasterCamera_classes.hpp"
#include "BP_MasterCamera_parameters.hpp"


namespace SDK
{

// Function BP_MasterCamera.BP_MasterCamera_C.Actor Attack Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attack_Target                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterCamera_C::Actor_Attack_Target(class AActor** Attack_Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Actor Attack Target");

	Params::BP_MasterCamera_C_Actor_Attack_Target Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_Target != nullptr)
		*Attack_Target = Parms.Attack_Target;
}


// Function BP_MasterCamera.BP_MasterCamera_C.ExecuteUbergraph_BP_MasterCamera
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterCamera_C::ExecuteUbergraph_BP_MasterCamera(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "ExecuteUbergraph_BP_MasterCamera");

	Params::BP_MasterCamera_C_ExecuteUbergraph_BP_MasterCamera Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Multicast Turret Idle Start
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterCamera_C::Multicast_Turret_Idle_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Multicast Turret Idle Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Multicast Turret Idle Stop
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterCamera_C::Multicast_Turret_Idle_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Multicast Turret Idle Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterCamera_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Rotate Camera__FinishedFunc
// (BlueprintEvent)

void ABP_MasterCamera_C::Rotate_Camera__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Rotate Camera__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Rotate Camera__UpdateFunc
// (BlueprintEvent)

void ABP_MasterCamera_C::Rotate_Camera__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Rotate Camera__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.AI Can Interact?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_Interact                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterCamera_C::AI_Can_Interact_(bool* Can_Interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "AI Can Interact?");

	Params::BP_MasterCamera_C_AI_Can_Interact_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Interact != nullptr)
		*Can_Interact = Parms.Can_Interact;
}


// Function BP_MasterCamera.BP_MasterCamera_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterCamera_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "ReceiveAnyDamage");

	Params::BP_MasterCamera_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Turret Destroyed Effect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterCamera_C::Turret_Destroyed_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Turret Destroyed Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Turret Idle Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterCamera_C::Turret_Idle_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Turret Idle Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.Turret Idle Stop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterCamera_C::Turret_Idle_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "Turret Idle Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterCamera_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterCamera.BP_MasterCamera_C.AI Is Dead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Dead                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterCamera_C::AI_Is_Dead_(bool* Dead) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterCamera_C", "AI Is Dead?");

	Params::BP_MasterCamera_C_AI_Is_Dead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead != nullptr)
		*Dead = Parms.Dead;
}

}

