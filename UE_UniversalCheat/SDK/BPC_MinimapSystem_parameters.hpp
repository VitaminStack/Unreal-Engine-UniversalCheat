#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MinimapSystem

#include "Basic.hpp"

#include "S_MarkerData_structs.hpp"
#include "Struct_POI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Player Marker
// 0x0198 (0x0198 - 0x0000)
struct BPC_MinimapSystem_C_Add_Player_Marker final
{
public:
	struct FS_MarkerData                          Marker_Data;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_PlayerMarker_C*                     Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PlayerMarker_C*>              Markers_0;                                         // 0x0078(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UW_PlayerMarker_C*                      L_Marker;                                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PlayerMarker_C*>              L_Markers;                                         // 0x0090(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_MarkerData                          L_Marker_Data;                                     // 0x00A0(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_MarkerData                          K2Node_MakeStruct_S_MarkerData;                    // 0x0110(0x0070)(HasGetValueTypeHash)
	class UW_PlayerMarker_C*                      CallFunc_AddPlayerCreatedMarker_Return;            // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Add_Player_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Add_Player_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Add_Player_Marker) == 0x000198, "Wrong size on BPC_MinimapSystem_C_Add_Player_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, Marker_Data) == 0x000000, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, Target_Actor) == 0x000070, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, Markers_0) == 0x000078, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::Markers_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, L_Marker) == 0x000088, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::L_Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, L_Markers) == 0x000090, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::L_Markers' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, L_Marker_Data) == 0x0000A0, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::L_Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, K2Node_MakeStruct_S_MarkerData) == 0x000110, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::K2Node_MakeStruct_S_MarkerData' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, CallFunc_AddPlayerCreatedMarker_Return) == 0x000180, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::CallFunc_AddPlayerCreatedMarker_Return' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, CallFunc_Array_Add_ReturnValue) == 0x000188, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, CallFunc_Array_Add_ReturnValue_1) == 0x00018C, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Player_Marker, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'BPC_MinimapSystem_C_Add_Player_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add POI Marker
// 0x0180 (0x0180 - 0x0000)
struct BPC_MinimapSystem_C_Add_POI_Marker final
{
public:
	struct FS_MarkerData                          Marker_Data;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStruct_POI                            POI_Data;                                          // 0x0078(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Explored_;                                         // 0x00E8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_POIMarker_C*                         Markers_0;                                         // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_POIMarker_C*                         L_Marker;                                          // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_MarkerData                          L_Marker_Data;                                     // 0x0100(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UW_POIMarker_C*                         CallFunc_AddPOICreatedMarker_Return;               // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Add_POI_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Add_POI_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Add_POI_Marker) == 0x000180, "Wrong size on BPC_MinimapSystem_C_Add_POI_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, Marker_Data) == 0x000000, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, Target_Actor) == 0x000070, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, POI_Data) == 0x000078, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::POI_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, Explored_) == 0x0000E8, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::Explored_' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, Markers_0) == 0x0000F0, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::Markers_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, L_Marker) == 0x0000F8, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::L_Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, L_Marker_Data) == 0x000100, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::L_Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, CallFunc_AddPOICreatedMarker_Return) == 0x000170, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::CallFunc_AddPOICreatedMarker_Return' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_POI_Marker, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'BPC_MinimapSystem_C_Add_POI_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Quest Marker
// 0x0120 (0x0120 - 0x0000)
struct BPC_MinimapSystem_C_Add_Quest_Marker final
{
public:
	struct FS_MarkerData                          Marker_Data;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_QuestMarker_C*                      Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_QuestMarker_C*>               Markers_0;                                         // 0x0078(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UW_QuestMarker_C*                       L_Marker;                                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_QuestMarker_C*>               L_Markers;                                         // 0x0090(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_MarkerData                          L_Marker_Data;                                     // 0x00A0(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UW_QuestMarker_C*                       CallFunc_AddQuestCreatedMarker_Return;             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Add_Quest_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Add_Quest_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Add_Quest_Marker) == 0x000120, "Wrong size on BPC_MinimapSystem_C_Add_Quest_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, Marker_Data) == 0x000000, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, Target_Actor) == 0x000070, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, Markers_0) == 0x000078, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::Markers_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, L_Marker) == 0x000088, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::L_Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, L_Markers) == 0x000090, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::L_Markers' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, L_Marker_Data) == 0x0000A0, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::L_Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, CallFunc_AddQuestCreatedMarker_Return) == 0x000110, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::CallFunc_AddQuestCreatedMarker_Return' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Quest_Marker, CallFunc_IsValid_ReturnValue) == 0x00011C, "Member 'BPC_MinimapSystem_C_Add_Quest_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Saved Player Marker
// 0x01A0 (0x01A0 - 0x0000)
struct BPC_MinimapSystem_C_Add_Saved_Player_Marker final
{
public:
	struct FS_MarkerData                          Marker_Data;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_PlayerMarker_C*                     Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_PlayerMarker_C*>              Markers_0;                                         // 0x0080(0x0010)(Parm, OutParm, ContainsInstancedReference)
	class UW_PlayerMarker_C*                      L_Marker;                                          // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PlayerMarker_C*>              L_Markers;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_MarkerData                          L_Marker_Data;                                     // 0x00A8(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_MarkerData                          K2Node_MakeStruct_S_MarkerData;                    // 0x0118(0x0070)(HasGetValueTypeHash)
	class UW_PlayerMarker_C*                      CallFunc_AddPlayerCreatedMarker_Return;            // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Add_Saved_Player_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Add_Saved_Player_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Add_Saved_Player_Marker) == 0x0001A0, "Wrong size on BPC_MinimapSystem_C_Add_Saved_Player_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, Marker_Data) == 0x000000, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, Target_Actor) == 0x000070, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, Index_0) == 0x000078, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::Index_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, Markers_0) == 0x000080, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::Markers_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, L_Marker) == 0x000090, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::L_Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, L_Markers) == 0x000098, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::L_Markers' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, L_Marker_Data) == 0x0000A8, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::L_Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, K2Node_MakeStruct_S_MarkerData) == 0x000118, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::K2Node_MakeStruct_S_MarkerData' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, CallFunc_AddPlayerCreatedMarker_Return) == 0x000188, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::CallFunc_AddPlayerCreatedMarker_Return' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, CallFunc_Array_Add_ReturnValue_1) == 0x000194, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Saved_Player_Marker, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'BPC_MinimapSystem_C_Add_Saved_Player_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Standard Marker
// 0x00A8 (0x00A8 - 0x0000)
struct BPC_MinimapSystem_C_Add_Standard_Marker final
{
public:
	struct FS_MarkerData                          Marker_Data;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_StandardMarker_C*>            Markers_0;                                         // 0x0078(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UW_StandardMarker_C*>            L_Markers;                                         // 0x0088(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UW_StandardMarker_C*                    CallFunc_Add_Standard_Marker_Return;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Add_Standard_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Add_Standard_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Add_Standard_Marker) == 0x0000A8, "Wrong size on BPC_MinimapSystem_C_Add_Standard_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, Marker_Data) == 0x000000, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, Target_Actor) == 0x000070, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, Markers_0) == 0x000078, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::Markers_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, L_Markers) == 0x000088, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::L_Markers' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, CallFunc_Add_Standard_Marker_Return) == 0x000098, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::CallFunc_Add_Standard_Marker_Return' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_Standard_Marker, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BPC_MinimapSystem_C_Add_Standard_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add World Marker
// 0x0120 (0x0120 - 0x0000)
struct BPC_MinimapSystem_C_Add_World_Marker final
{
public:
	struct FS_MarkerData                          Marker_Data;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0078(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_WorldMarker_C*                       Markers_0;                                         // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_WorldMarker_C*                       L_Marker;                                          // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_MarkerData                          L_Marker_Data;                                     // 0x00A0(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UW_WorldMarker_C*                       CallFunc_AddWorldCreatedMarker_Return;             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Add_World_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Add_World_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Add_World_Marker) == 0x000120, "Wrong size on BPC_MinimapSystem_C_Add_World_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, Marker_Data) == 0x000000, "Member 'BPC_MinimapSystem_C_Add_World_Marker::Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, Target_Actor) == 0x000070, "Member 'BPC_MinimapSystem_C_Add_World_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, Description) == 0x000078, "Member 'BPC_MinimapSystem_C_Add_World_Marker::Description' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, Markers_0) == 0x000090, "Member 'BPC_MinimapSystem_C_Add_World_Marker::Markers_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, L_Marker) == 0x000098, "Member 'BPC_MinimapSystem_C_Add_World_Marker::L_Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, L_Marker_Data) == 0x0000A0, "Member 'BPC_MinimapSystem_C_Add_World_Marker::L_Marker_Data' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, CallFunc_AddWorldCreatedMarker_Return) == 0x000110, "Member 'BPC_MinimapSystem_C_Add_World_Marker::CallFunc_AddWorldCreatedMarker_Return' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Add_World_Marker, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BPC_MinimapSystem_C_Add_World_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Create Checkpoint Marker
// 0x0010 (0x0010 - 0x0000)
struct BPC_MinimapSystem_C_Create_Checkpoint_Marker final
{
public:
	struct FVector2D                              Map_Location;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Create_Checkpoint_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Create_Checkpoint_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Create_Checkpoint_Marker) == 0x000010, "Wrong size on BPC_MinimapSystem_C_Create_Checkpoint_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Create_Checkpoint_Marker, Map_Location) == 0x000000, "Member 'BPC_MinimapSystem_C_Create_Checkpoint_Marker::Map_Location' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.ExecuteUbergraph_BPC_MinimapSystem
// 0x0100 (0x0100 - 0x0000)
struct BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Hit_Location;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0xF];                                       // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerMarker_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Map_Location;                   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Marker_Location_ImpactPoint;              // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Marker_Location_Success;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MapData_C*                          CallFunc_GetActorOfClass_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapWidget_C*                           CallFunc_Create_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem) == 0x000010, "Wrong alignment on BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem");
static_assert(sizeof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem) == 0x000100, "Wrong size on BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, EntryPoint) == 0x000000, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, K2Node_CustomEvent_Hit_Location) == 0x000008, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::K2Node_CustomEvent_Hit_Location' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, K2Node_CustomEvent_Success) == 0x000020, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, K2Node_CustomEvent_Map_Location) == 0x0000A0, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::K2Node_CustomEvent_Map_Location' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_Marker_Location_ImpactPoint) == 0x0000B8, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_Marker_Location_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_Marker_Location_Success) == 0x0000D0, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_Marker_Location_Success' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000D8, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_GetActorOfClass_ReturnValue) == 0x0000E0, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem, CallFunc_Create_ReturnValue) == 0x0000F0, "Member 'BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Marker Location
// 0x0250 (0x0250 - 0x0000)
struct BPC_MinimapSystem_C_Marker_Location final
{
public:
	struct FVector2D                              Map_Location;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0030(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Marker_Location) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Marker_Location");
static_assert(sizeof(BPC_MinimapSystem_C_Marker_Location) == 0x000250, "Wrong size on BPC_MinimapSystem_C_Marker_Location");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, Map_Location) == 0x000000, "Member 'BPC_MinimapSystem_C_Marker_Location::Map_Location' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, ImpactPoint) == 0x000010, "Member 'BPC_MinimapSystem_C_Marker_Location::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, Success) == 0x000028, "Member 'BPC_MinimapSystem_C_Marker_Location::Success' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, Temp_object_Variable) == 0x000030, "Member 'BPC_MinimapSystem_C_Marker_Location::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakVector2D_X) == 0x000040, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, K2Node_MakeArray_Array) == 0x000080, "Member 'BPC_MinimapSystem_C_Marker_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000090, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000178, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_bBlockingHit) == 0x000179, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017A, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D0, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_BoneName) == 0x000208, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_ElementIndex) == 0x000214, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_FaceIndex) == 0x000218, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Marker_Location, CallFunc_BreakHitResult_TraceEnd) == 0x000238, "Member 'BPC_MinimapSystem_C_Marker_Location::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove Player Marker
// 0x0020 (0x0020 - 0x0000)
struct BPC_MinimapSystem_C_Remove_Player_Marker final
{
public:
	class UW_PlayerMarker_C*                      Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerMarker_C*                     Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Remove_Player_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Remove_Player_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Remove_Player_Marker) == 0x000020, "Wrong size on BPC_MinimapSystem_C_Remove_Player_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Player_Marker, Marker) == 0x000000, "Member 'BPC_MinimapSystem_C_Remove_Player_Marker::Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Player_Marker, Index_0) == 0x000008, "Member 'BPC_MinimapSystem_C_Remove_Player_Marker::Index_0' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Player_Marker, Actor) == 0x000010, "Member 'BPC_MinimapSystem_C_Remove_Player_Marker::Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Player_Marker, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPC_MinimapSystem_C_Remove_Player_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove Quest Marker
// 0x0018 (0x0018 - 0x0000)
struct BPC_MinimapSystem_C_Remove_Quest_Marker final
{
public:
	class UW_QuestMarker_C*                       Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_QuestMarker_C*                      Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Remove_Quest_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Remove_Quest_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Remove_Quest_Marker) == 0x000018, "Wrong size on BPC_MinimapSystem_C_Remove_Quest_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Quest_Marker, Marker) == 0x000000, "Member 'BPC_MinimapSystem_C_Remove_Quest_Marker::Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Quest_Marker, Actor) == 0x000008, "Member 'BPC_MinimapSystem_C_Remove_Quest_Marker::Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Quest_Marker, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPC_MinimapSystem_C_Remove_Quest_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove Standard Marker
// 0x0010 (0x0010 - 0x0000)
struct BPC_MinimapSystem_C_Remove_Standard_Marker final
{
public:
	class UW_StandardMarker_C*                    Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Remove_Standard_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Remove_Standard_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Remove_Standard_Marker) == 0x000010, "Wrong size on BPC_MinimapSystem_C_Remove_Standard_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Standard_Marker, Marker) == 0x000000, "Member 'BPC_MinimapSystem_C_Remove_Standard_Marker::Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_Standard_Marker, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BPC_MinimapSystem_C_Remove_Standard_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove World Marker
// 0x0018 (0x0018 - 0x0000)
struct BPC_MinimapSystem_C_Remove_World_Marker final
{
public:
	class UW_WorldMarker_C*                       Marker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Marker_C*                           Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_Remove_World_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_Remove_World_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_Remove_World_Marker) == 0x000018, "Wrong size on BPC_MinimapSystem_C_Remove_World_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_World_Marker, Marker) == 0x000000, "Member 'BPC_MinimapSystem_C_Remove_World_Marker::Marker' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_World_Marker, Actor) == 0x000008, "Member 'BPC_MinimapSystem_C_Remove_World_Marker::Actor' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_Remove_World_Marker, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPC_MinimapSystem_C_Remove_World_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.SERVER Spawn Player Marker
// 0x0020 (0x0020 - 0x0000)
struct BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker final
{
public:
	struct FVector                                Hit_Location;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker) == 0x000008, "Wrong alignment on BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker");
static_assert(sizeof(BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker) == 0x000020, "Wrong size on BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker");
static_assert(offsetof(BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker, Hit_Location) == 0x000000, "Member 'BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker::Hit_Location' has a wrong offset!");
static_assert(offsetof(BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker, Success) == 0x000018, "Member 'BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker::Success' has a wrong offset!");

}

