#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Compass

#include "Basic.hpp"

#include "Compass_classes.hpp"
#include "Compass_parameters.hpp"


namespace SDK
{

// Function Compass.Compass_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCompass_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Compass.Compass_C.ExecuteUbergraph_Compass
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCompass_C::ExecuteUbergraph_Compass(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "ExecuteUbergraph_Compass");

	Params::Compass_C_ExecuteUbergraph_Compass Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Compass.Compass_C.GetWidgetReference
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UCompassMarkerUI_C*               Array_Element                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UCompass_C::GetWidgetReference(class UObject* Object, class UCompassMarkerUI_C** Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "GetWidgetReference");

	Params::Compass_C_GetWidgetReference Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (Array_Element != nullptr)
		*Array_Element = Parms.Array_Element;
}


// Function Compass.Compass_C.NavPoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCompass_C::NavPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "NavPoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Compass.Compass_C.NavPointsTimer
// (BlueprintCallable, BlueprintEvent)

void UCompass_C::NavPointsTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "NavPointsTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Compass.Compass_C.NewPointPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UCompass_C::NewPointPosition(class AActor* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "NewPointPosition");

	Params::Compass_C_NewPointPosition Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Compass.Compass_C.NewXPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UCompass_C::NewXPosition(class AActor* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "NewXPosition");

	Params::Compass_C_NewXPosition Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Compass.Compass_C.ObjectBehind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Behind                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCompass_C::ObjectBehind(class AActor* Target, bool* Behind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "ObjectBehind");

	Params::Compass_C_ObjectBehind Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Behind != nullptr)
		*Behind = Parms.Behind;
}


// Function Compass.Compass_C.OnVisibilityChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCompass_C::OnVisibilityChanged_Event_0(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "OnVisibilityChanged_Event_0");

	Params::Compass_C_OnVisibilityChanged_Event_0 Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Compass.Compass_C.RemoveFromCompass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UCompass_C::RemoveFromCompass(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "RemoveFromCompass");

	Params::Compass_C_RemoveFromCompass Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Compass.Compass_C.SetDirection
// (Public, BlueprintCallable, BlueprintEvent)

void UCompass_C::SetDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "SetDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Compass.Compass_C.UsedActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UCompassMarkerUI_C*>       Widgets                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Used                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCompass_C::UsedActor(TArray<class UCompassMarkerUI_C*>& Widgets, class UObject* Actor, bool* Used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Compass_C", "UsedActor");

	Params::Compass_C_UsedActor Parms{};

	Parms.Widgets = std::move(Widgets);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	Widgets = std::move(Parms.Widgets);

	if (Used != nullptr)
		*Used = Parms.Used;
}

}

