#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_SaveGames

#include "Basic.hpp"

#include "UDS_and_UDW_State_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BFL_SaveGames.BFL_SaveGames_C.DateMonth
// 0x0030 (0x0030 - 0x0000)
struct BFL_SaveGames_C_DateMonth final
{
public:
	int32                                         Month;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Date;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Text;                                              // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_DateMonth) == 0x000008, "Wrong alignment on BFL_SaveGames_C_DateMonth");
static_assert(sizeof(BFL_SaveGames_C_DateMonth) == 0x000030, "Wrong size on BFL_SaveGames_C_DateMonth");
static_assert(offsetof(BFL_SaveGames_C_DateMonth, Month) == 0x000000, "Member 'BFL_SaveGames_C_DateMonth::Month' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateMonth, __WorldContext) == 0x000008, "Member 'BFL_SaveGames_C_DateMonth::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateMonth, Date) == 0x000010, "Member 'BFL_SaveGames_C_DateMonth::Date' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateMonth, Text) == 0x000018, "Member 'BFL_SaveGames_C_DateMonth::Text' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateMonth, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'BFL_SaveGames_C_DateMonth::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.DateStringPrefix
// 0x0058 (0x0058 - 0x0000)
struct BFL_SaveGames_C_DateStringPrefix final
{
public:
	int32                                         A;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_DateStringPrefix) == 0x000008, "Wrong alignment on BFL_SaveGames_C_DateStringPrefix");
static_assert(sizeof(BFL_SaveGames_C_DateStringPrefix) == 0x000058, "Wrong size on BFL_SaveGames_C_DateStringPrefix");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, A) == 0x000000, "Member 'BFL_SaveGames_C_DateStringPrefix::A' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, __WorldContext) == 0x000008, "Member 'BFL_SaveGames_C_DateStringPrefix::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, ReturnValue) == 0x000010, "Member 'BFL_SaveGames_C_DateStringPrefix::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, Temp_bool_Variable) == 0x000020, "Member 'BFL_SaveGames_C_DateStringPrefix::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BFL_SaveGames_C_DateStringPrefix::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, Temp_string_Variable) == 0x000028, "Member 'BFL_SaveGames_C_DateStringPrefix::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, Temp_string_Variable_1) == 0x000038, "Member 'BFL_SaveGames_C_DateStringPrefix::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateStringPrefix, K2Node_Select_Default) == 0x000048, "Member 'BFL_SaveGames_C_DateStringPrefix::K2Node_Select_Default' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.DateToString
// 0x00C8 (0x00C8 - 0x0000)
struct BFL_SaveGames_C_DateToString final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_DateMonth_Date;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DateStringPrefix_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DateStringPrefix_ReturnValue_1;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DateStringPrefix_ReturnValue_2;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Name_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue_1;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue_2;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue_3;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_DateToString) == 0x000008, "Wrong alignment on BFL_SaveGames_C_DateToString");
static_assert(sizeof(BFL_SaveGames_C_DateToString) == 0x0000C8, "Wrong size on BFL_SaveGames_C_DateToString");
static_assert(offsetof(BFL_SaveGames_C_DateToString, InDateTime) == 0x000000, "Member 'BFL_SaveGames_C_DateToString::InDateTime' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, __WorldContext) == 0x000008, "Member 'BFL_SaveGames_C_DateToString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, ReturnValue) == 0x000010, "Member 'BFL_SaveGames_C_DateToString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Year) == 0x000020, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Month) == 0x000024, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Day) == 0x000028, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Hour) == 0x00002C, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Minute) == 0x000030, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Second) == 0x000034, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BreakDateTime_Millisecond) == 0x000038, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_DateMonth_Date) == 0x00003C, "Member 'BFL_SaveGames_C_DateToString::CallFunc_DateMonth_Date' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_DateStringPrefix_ReturnValue) == 0x000048, "Member 'BFL_SaveGames_C_DateToString::CallFunc_DateStringPrefix_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_DateStringPrefix_ReturnValue_1) == 0x000058, "Member 'BFL_SaveGames_C_DateToString::CallFunc_DateStringPrefix_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_DateStringPrefix_ReturnValue_2) == 0x000068, "Member 'BFL_SaveGames_C_DateToString::CallFunc_DateStringPrefix_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BuildString_Int_ReturnValue) == 0x000078, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BuildString_Name_ReturnValue) == 0x000088, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BuildString_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BuildString_Int_ReturnValue_1) == 0x000098, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BuildString_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BuildString_Int_ReturnValue_2) == 0x0000A8, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BuildString_Int_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString, CallFunc_BuildString_Int_ReturnValue_3) == 0x0000B8, "Member 'BFL_SaveGames_C_DateToString::CallFunc_BuildString_Int_ReturnValue_3' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.DateToString_AutoSave
// 0x0108 (0x0108 - 0x0000)
struct BFL_SaveGames_C_DateToString_AutoSave final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ZeroFill_Out;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ZeroFill_Out_1;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ZeroFill_Out_2;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ZeroFill_Out_3;                           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_DateMonth_Date;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_DateToString_AutoSave) == 0x000008, "Wrong alignment on BFL_SaveGames_C_DateToString_AutoSave");
static_assert(sizeof(BFL_SaveGames_C_DateToString_AutoSave) == 0x000108, "Wrong size on BFL_SaveGames_C_DateToString_AutoSave");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, InDateTime) == 0x000000, "Member 'BFL_SaveGames_C_DateToString_AutoSave::InDateTime' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, __WorldContext) == 0x000008, "Member 'BFL_SaveGames_C_DateToString_AutoSave::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, ReturnValue) == 0x000010, "Member 'BFL_SaveGames_C_DateToString_AutoSave::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Year) == 0x000020, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Month) == 0x000024, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Day) == 0x000028, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Hour) == 0x00002C, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Minute) == 0x000030, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Second) == 0x000034, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_BreakDateTime_Millisecond) == 0x000038, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_ZeroFill_Out) == 0x000050, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_ZeroFill_Out' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_ZeroFill_Out_1) == 0x000060, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_ZeroFill_Out_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_ZeroFill_Out_2) == 0x000070, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_ZeroFill_Out_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_ZeroFill_Out_3) == 0x000080, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_ZeroFill_Out_3' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_DateMonth_Date) == 0x0000A0, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_DateMonth_Date' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B8, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D8, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E8, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_DateToString_AutoSave, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F8, "Member 'BFL_SaveGames_C_DateToString_AutoSave::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.Reset Player Stats
// 0x0020 (0x0020 - 0x0000)
struct BFL_SaveGames_C_Reset_Player_Stats final
{
public:
	class ABP_PlayerCharacter_C*                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SurroundeadGameMode_C*              CallFunc_GetGameMode_GameMode;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_C*                 CallFunc_CastToController_Controller;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_Reset_Player_Stats) == 0x000008, "Wrong alignment on BFL_SaveGames_C_Reset_Player_Stats");
static_assert(sizeof(BFL_SaveGames_C_Reset_Player_Stats) == 0x000020, "Wrong size on BFL_SaveGames_C_Reset_Player_Stats");
static_assert(offsetof(BFL_SaveGames_C_Reset_Player_Stats, Player) == 0x000000, "Member 'BFL_SaveGames_C_Reset_Player_Stats::Player' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_Reset_Player_Stats, __WorldContext) == 0x000008, "Member 'BFL_SaveGames_C_Reset_Player_Stats::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_Reset_Player_Stats, CallFunc_GetGameMode_GameMode) == 0x000010, "Member 'BFL_SaveGames_C_Reset_Player_Stats::CallFunc_GetGameMode_GameMode' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_Reset_Player_Stats, CallFunc_CastToController_Controller) == 0x000018, "Member 'BFL_SaveGames_C_Reset_Player_Stats::CallFunc_CastToController_Controller' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.SaveObjects
// 0x0238 (0x0238 - 0x0000)
struct BFL_SaveGames_C_SaveObjects final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USave_Difficulties_C*                   CallFunc_GetCustomSave_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USave_General_C*                        CallFunc_GetCustomSave_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveCustom_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveCustom_ReturnValue_1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USave_Player_C*                         CallFunc_GetCustomSave_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetUDS_UDS;                               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveCustom_ReturnValue_2;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_and_UDW_State                     CallFunc_Create_UDS_and_UDW_State_for_Saving_Packaged_State; // 0x0038(0x0200)(HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_SaveObjects) == 0x000008, "Wrong alignment on BFL_SaveGames_C_SaveObjects");
static_assert(sizeof(BFL_SaveGames_C_SaveObjects) == 0x000238, "Wrong size on BFL_SaveGames_C_SaveObjects");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, __WorldContext) == 0x000000, "Member 'BFL_SaveGames_C_SaveObjects::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_GetCustomSave_ReturnValue) == 0x000008, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_GetCustomSave_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_GetCustomSave_ReturnValue_1) == 0x000010, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_GetCustomSave_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_SaveCustom_ReturnValue) == 0x000018, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_SaveCustom_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_SaveCustom_ReturnValue_1) == 0x000019, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_SaveCustom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_GetCustomSave_ReturnValue_2) == 0x000020, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_GetCustomSave_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_GetUDS_UDS) == 0x000028, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_GetUDS_UDS' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_SaveCustom_ReturnValue_2) == 0x000030, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_SaveCustom_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveObjects, CallFunc_Create_UDS_and_UDW_State_for_Saving_Packaged_State) == 0x000038, "Member 'BFL_SaveGames_C_SaveObjects::CallFunc_Create_UDS_and_UDW_State_for_Saving_Packaged_State' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.SaveThumbnailImage
// 0x0058 (0x0058 - 0x0000)
struct BFL_SaveGames_C_SaveThumbnailImage final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TempActor;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSlotInfoSaveGame_SaveGameName;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UEMSInfoSaveGame*                       CallFunc_GetSlotInfoSaveGame_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_SaveThumbnailImage) == 0x000008, "Wrong alignment on BFL_SaveGames_C_SaveThumbnailImage");
static_assert(sizeof(BFL_SaveGames_C_SaveThumbnailImage) == 0x000058, "Wrong size on BFL_SaveGames_C_SaveThumbnailImage");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, __WorldContext) == 0x000000, "Member 'BFL_SaveGames_C_SaveThumbnailImage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CaptureComp) == 0x000008, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CaptureComp' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, TempActor) == 0x000010, "Member 'BFL_SaveGames_C_SaveThumbnailImage::TempActor' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_GetSlotInfoSaveGame_SaveGameName) == 0x000018, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_GetSlotInfoSaveGame_SaveGameName' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_GetSlotInfoSaveGame_ReturnValue) == 0x000028, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_GetSlotInfoSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_IsValid_ReturnValue_2) == 0x000042, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_ComponentHasTag_ReturnValue) == 0x000050, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_SaveThumbnailImage, CallFunc_IsValid_ReturnValue_3) == 0x000051, "Member 'BFL_SaveGames_C_SaveThumbnailImage::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BFL_SaveGames.BFL_SaveGames_C.ZeroFill
// 0x0058 (0x0058 - 0x0000)
struct BFL_SaveGames_C_ZeroFill final
{
public:
	int32                                         Int;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Out;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LeadingZero;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_SaveGames_C_ZeroFill) == 0x000008, "Wrong alignment on BFL_SaveGames_C_ZeroFill");
static_assert(sizeof(BFL_SaveGames_C_ZeroFill) == 0x000058, "Wrong size on BFL_SaveGames_C_ZeroFill");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, Int) == 0x000000, "Member 'BFL_SaveGames_C_ZeroFill::Int' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, __WorldContext) == 0x000008, "Member 'BFL_SaveGames_C_ZeroFill::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, Out) == 0x000010, "Member 'BFL_SaveGames_C_ZeroFill::Out' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, LeadingZero) == 0x000020, "Member 'BFL_SaveGames_C_ZeroFill::LeadingZero' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BFL_SaveGames_C_ZeroFill::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BFL_SaveGames_C_ZeroFill::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, CallFunc_Len_ReturnValue) == 0x000050, "Member 'BFL_SaveGames_C_ZeroFill::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_SaveGames_C_ZeroFill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BFL_SaveGames_C_ZeroFill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

