#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_LandMine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Buildable_MASTER_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Buildable_LandMine.Buildable_LandMine_C
// 0x0028 (0x0458 - 0x0430)
class ABuildable_LandMine_C final : public ABuildable_MASTER_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Buildable_LandMine_C;               // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       ExplosionSphere;                                   // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CameraShakeSphere;                                 // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  RadialForce;                                       // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box_0;                                             // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void BndEvt__Buildable_BearTrap_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Damage_Object(double Damage, class AActor* Damage_Causer, class AController* Event_Instigator);
	void Damage_Shoved(bool Anim, double Force);
	void Event_Explode();
	void ExecuteUbergraph_Buildable_LandMine(int32 EntryPoint);
	void IsObjectDamageable_(bool* Damageable_);
	void SpawnCombatText(const struct FVector& Location, double Damage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Buildable_LandMine_C">();
	}
	static class ABuildable_LandMine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildable_LandMine_C>();
	}
};
static_assert(alignof(ABuildable_LandMine_C) == 0x000008, "Wrong alignment on ABuildable_LandMine_C");
static_assert(sizeof(ABuildable_LandMine_C) == 0x000458, "Wrong size on ABuildable_LandMine_C");
static_assert(offsetof(ABuildable_LandMine_C, UberGraphFrame_Buildable_LandMine_C) == 0x000430, "Member 'ABuildable_LandMine_C::UberGraphFrame_Buildable_LandMine_C' has a wrong offset!");
static_assert(offsetof(ABuildable_LandMine_C, ExplosionSphere) == 0x000438, "Member 'ABuildable_LandMine_C::ExplosionSphere' has a wrong offset!");
static_assert(offsetof(ABuildable_LandMine_C, CameraShakeSphere) == 0x000440, "Member 'ABuildable_LandMine_C::CameraShakeSphere' has a wrong offset!");
static_assert(offsetof(ABuildable_LandMine_C, RadialForce) == 0x000448, "Member 'ABuildable_LandMine_C::RadialForce' has a wrong offset!");
static_assert(offsetof(ABuildable_LandMine_C, Box_0) == 0x000450, "Member 'ABuildable_LandMine_C::Box_0' has a wrong offset!");

}

