#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Actor_Weather_Status

#include "Basic.hpp"

#include "Actor_Weather_Status_classes.hpp"
#include "Actor_Weather_Status_parameters.hpp"


namespace SDK
{

// Function Actor_Weather_Status.Actor_Weather_Status_C.Activated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActor_Weather_Status_C::Activated(class UActorComponent* Component, bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Activated");

	Params::Actor_Weather_Status_C_Activated Parms{};

	Parms.Component = Component;
	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Check for Drip Particles
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Check_for_Drip_Particles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Check for Drip Particles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Check for UDW
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Check_for_UDW()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Check for UDW");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Clear Timers
// (Protected, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Clear_Timers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Clear Timers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Deactivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UActor_Weather_Status_C::Deactivated(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Deactivated");

	Params::Actor_Weather_Status_C_Deactivated Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.ExecuteUbergraph_Actor_Weather_Status
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActor_Weather_Status_C::ExecuteUbergraph_Actor_Weather_Status(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "ExecuteUbergraph_Actor_Weather_Status");

	Params::Actor_Weather_Status_C_ExecuteUbergraph_Actor_Weather_Status Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Increment Surface State
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Exposure                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Increase_Speed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Decrease_Speed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Current_Value                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActor_Weather_Status_C::Increment_Surface_State(double Exposure, double Increase_Speed, double Decrease_Speed, double Max_Value, double Current_Value, double Delta, double* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Increment Surface State");

	Params::Actor_Weather_Status_C_Increment_Surface_State Parms{};

	Parms.Exposure = Exposure;
	Parms.Increase_Speed = Increase_Speed;
	Parms.Decrease_Speed = Decrease_Speed;
	Parms.Max_Value = Max_Value;
	Parms.Current_Value = Current_Value;
	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Query Target Status
// (Protected, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Query_Target_Status()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Query Target Status");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UActor_Weather_Status_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActor_Weather_Status_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "ReceiveTick");

	Params::Actor_Weather_Status_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Start Occlusion
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Start_Occlusion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Start Occlusion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Trigger Event Dispatchers
// (Protected, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Trigger_Event_Dispatchers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Trigger Event Dispatchers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.UDW End Play
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActor_Weather_Status_C::UDW_End_Play(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "UDW End Play");

	Params::Actor_Weather_Status_C_UDW_End_Play Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Actor_Weather_Status.Actor_Weather_Status_C.Update Current Status
// (Public, BlueprintCallable, BlueprintEvent)

void UActor_Weather_Status_C::Update_Current_Status()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Actor_Weather_Status_C", "Update Current Status");

	UObject::ProcessEvent(Func, nullptr);
}

}

