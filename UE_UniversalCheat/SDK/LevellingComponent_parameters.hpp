#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevellingComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LevellingComponent.LevellingComponent_C.AddXP
// 0x0030 (0x0030 - 0x0000)
struct LevellingComponent_C_AddXP final
{
public:
	double                                        XP;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LevelUp_;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        XPOutput;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_AddXP) == 0x000008, "Wrong alignment on LevellingComponent_C_AddXP");
static_assert(sizeof(LevellingComponent_C_AddXP) == 0x000030, "Wrong size on LevellingComponent_C_AddXP");
static_assert(offsetof(LevellingComponent_C_AddXP, XP) == 0x000000, "Member 'LevellingComponent_C_AddXP::XP' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_AddXP, LevelUp_) == 0x000008, "Member 'LevellingComponent_C_AddXP::LevelUp_' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_AddXP, XPOutput) == 0x000010, "Member 'LevellingComponent_C_AddXP::XPOutput' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_AddXP, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'LevellingComponent_C_AddXP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_AddXP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'LevellingComponent_C_AddXP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_AddXP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'LevellingComponent_C_AddXP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.CalculateMaxXP
// 0x0020 (0x0020 - 0x0000)
struct LevellingComponent_C_CalculateMaxXP final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_CalculateMaxXP) == 0x000008, "Wrong alignment on LevellingComponent_C_CalculateMaxXP");
static_assert(sizeof(LevellingComponent_C_CalculateMaxXP) == 0x000020, "Wrong size on LevellingComponent_C_CalculateMaxXP");
static_assert(offsetof(LevellingComponent_C_CalculateMaxXP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'LevellingComponent_C_CalculateMaxXP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_CalculateMaxXP, CallFunc_FCeil_ReturnValue) == 0x000008, "Member 'LevellingComponent_C_CalculateMaxXP::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_CalculateMaxXP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'LevellingComponent_C_CalculateMaxXP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_CalculateMaxXP, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'LevellingComponent_C_CalculateMaxXP::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.CalculatePercentage
// 0x0008 (0x0008 - 0x0000)
struct LevellingComponent_C_CalculatePercentage final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_CalculatePercentage) == 0x000008, "Wrong alignment on LevellingComponent_C_CalculatePercentage");
static_assert(sizeof(LevellingComponent_C_CalculatePercentage) == 0x000008, "Wrong size on LevellingComponent_C_CalculatePercentage");
static_assert(offsetof(LevellingComponent_C_CalculatePercentage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'LevellingComponent_C_CalculatePercentage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.ComponentsToSave
// 0x0010 (0x0010 - 0x0000)
struct LevellingComponent_C_ComponentsToSave final
{
public:
	TArray<class UActorComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(LevellingComponent_C_ComponentsToSave) == 0x000008, "Wrong alignment on LevellingComponent_C_ComponentsToSave");
static_assert(sizeof(LevellingComponent_C_ComponentsToSave) == 0x000010, "Wrong size on LevellingComponent_C_ComponentsToSave");
static_assert(offsetof(LevellingComponent_C_ComponentsToSave, Components) == 0x000000, "Member 'LevellingComponent_C_ComponentsToSave::Components' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.Event_Multiplier
// 0x0004 (0x0004 - 0x0000)
struct LevellingComponent_C_Event_Multiplier final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_Event_Multiplier) == 0x000004, "Wrong alignment on LevellingComponent_C_Event_Multiplier");
static_assert(sizeof(LevellingComponent_C_Event_Multiplier) == 0x000004, "Wrong size on LevellingComponent_C_Event_Multiplier");
static_assert(offsetof(LevellingComponent_C_Event_Multiplier, NewValue) == 0x000000, "Member 'LevellingComponent_C_Event_Multiplier::NewValue' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.ExecuteUbergraph_LevellingComponent
// 0x0070 (0x0070 - 0x0000)
struct LevellingComponent_C_ExecuteUbergraph_LevellingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewValue)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Difficulty_MultiplierValue_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent) == 0x000008, "Wrong alignment on LevellingComponent_C_ExecuteUbergraph_LevellingComponent");
static_assert(sizeof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent) == 0x000070, "Wrong size on LevellingComponent_C_ExecuteUbergraph_LevellingComponent");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, EntryPoint) == 0x000000, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, Temp_int_Variable) == 0x000014, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_FCeil_ReturnValue) == 0x000030, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, K2Node_CustomEvent_NewValue) == 0x000060, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_ExecuteUbergraph_LevellingComponent, K2Node_VariableSet_Difficulty_MultiplierValue_ImplicitCast) == 0x000068, "Member 'LevellingComponent_C_ExecuteUbergraph_LevellingComponent::K2Node_VariableSet_Difficulty_MultiplierValue_ImplicitCast' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.LevelUp
// 0x00B0 (0x00B0 - 0x0000)
struct LevellingComponent_C_LevelUp final
{
public:
	double                                        RemainingXP_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_XPOutput;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_LevelUp) == 0x000008, "Wrong alignment on LevellingComponent_C_LevelUp");
static_assert(sizeof(LevellingComponent_C_LevelUp) == 0x0000B0, "Wrong size on LevellingComponent_C_LevelUp");
static_assert(offsetof(LevellingComponent_C_LevelUp, RemainingXP_0) == 0x000000, "Member 'LevellingComponent_C_LevelUp::RemainingXP_0' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, Temp_int_Variable) == 0x000008, "Member 'LevellingComponent_C_LevelUp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'LevellingComponent_C_LevelUp::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'LevellingComponent_C_LevelUp::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, K2Node_MakeArray_Array) == 0x000068, "Member 'LevellingComponent_C_LevelUp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_Format_ReturnValue) == 0x000078, "Member 'LevellingComponent_C_LevelUp::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_GetSkillTreeManager_TechTree) == 0x000090, "Member 'LevellingComponent_C_LevelUp::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_AddXP_XPOutput) == 0x000098, "Member 'LevellingComponent_C_LevelUp::CallFunc_AddXP_XPOutput' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'LevellingComponent_C_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'LevellingComponent_C_LevelUp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_LevelUp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'LevellingComponent_C_LevelUp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function LevellingComponent.LevellingComponent_C.XPDeath
// 0x0030 (0x0030 - 0x0000)
struct LevellingComponent_C_XPDeath final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LevellingComponent_C_XPDeath) == 0x000008, "Wrong alignment on LevellingComponent_C_XPDeath");
static_assert(sizeof(LevellingComponent_C_XPDeath) == 0x000030, "Wrong size on LevellingComponent_C_XPDeath");
static_assert(offsetof(LevellingComponent_C_XPDeath, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'LevellingComponent_C_XPDeath::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_XPDeath, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'LevellingComponent_C_XPDeath::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_XPDeath, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'LevellingComponent_C_XPDeath::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_XPDeath, Temp_int_Variable) == 0x000018, "Member 'LevellingComponent_C_XPDeath::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_XPDeath, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'LevellingComponent_C_XPDeath::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_XPDeath, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'LevellingComponent_C_XPDeath::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LevellingComponent_C_XPDeath, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'LevellingComponent_C_XPDeath::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

}

