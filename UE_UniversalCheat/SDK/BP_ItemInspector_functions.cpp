#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemInspector

#include "Basic.hpp"

#include "BP_ItemInspector_classes.hpp"
#include "BP_ItemInspector_parameters.hpp"


namespace SDK
{

// Function BP_ItemInspector.BP_ItemInspector_C.Capture One Frame
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemInspector_C::Capture_One_Frame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "Capture One Frame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInspector.BP_ItemInspector_C.ClearAttachments
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemInspector_C::ClearAttachments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "ClearAttachments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInspector.BP_ItemInspector_C.ExecuteUbergraph_BP_ItemInspector
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::ExecuteUbergraph_BP_ItemInspector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "ExecuteUbergraph_BP_ItemInspector");

	Params::BP_ItemInspector_C_ExecuteUbergraph_BP_ItemInspector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.FindLocalAttachmentByUID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AMainLocalAttachment_C*       Attachment                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::FindLocalAttachmentByUID(const struct FGuid& UID, class ABP_AMainLocalAttachment_C** Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "FindLocalAttachmentByUID");

	Params::BP_ItemInspector_C_FindLocalAttachmentByUID Parms{};

	Parms.UID = std::move(UID);

	UObject::ProcessEvent(Func, &Parms);

	if (Attachment != nullptr)
		*Attachment = Parms.Attachment;
}


// Function BP_ItemInspector.BP_ItemInspector_C.GetActiveComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::GetActiveComponent(class USceneComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "GetActiveComponent");

	Params::BP_ItemInspector_C_GetActiveComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_ItemInspector.BP_ItemInspector_C.GetAttachSocketByInContainerIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJigsawItem_DataAsset_C*          Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   InContainerIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::GetAttachSocketByInContainerIndex(class UJigsawItem_DataAsset_C* Info, int32 InContainerIndex, class FName* Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "GetAttachSocketByInContainerIndex");

	Params::BP_ItemInspector_C_GetAttachSocketByInContainerIndex Parms{};

	Parms.Info = Info;
	Parms.InContainerIndex = InContainerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Socket != nullptr)
		*Socket = Parms.Socket;
}


// Function BP_ItemInspector.BP_ItemInspector_C.GetInitValues
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FOVAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_ItemInspector_C::GetInitValues(double* FOVAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "GetInitValues");

	Params::BP_ItemInspector_C_GetInitValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FOVAngle != nullptr)
		*FOVAngle = Parms.FOVAngle;

	return Parms.ReturnValue;
}


// Function BP_ItemInspector.BP_ItemInspector_C.GetRenderTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           RenderT_0                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::GetRenderTarget(class UTextureRenderTarget2D** RenderT_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "GetRenderTarget");

	Params::BP_ItemInspector_C_GetRenderTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderT_0 != nullptr)
		*RenderT_0 = Parms.RenderT_0;
}


// Function BP_ItemInspector.BP_ItemInspector_C.InstallAttachments
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      JigItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::InstallAttachments(class UJSI_Slot_C* JigItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "InstallAttachments");

	Params::BP_ItemInspector_C_InstallAttachments Parms{};

	Parms.JigItem = JigItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.OnZoomIn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemInspector_C::OnZoomIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "OnZoomIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInspector.BP_ItemInspector_C.OnZoomOut
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemInspector_C::OnZoomOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "OnZoomOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInspector.BP_ItemInspector_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ItemInspector_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemInspector.BP_ItemInspector_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "ReceiveEndPlay");

	Params::BP_ItemInspector_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.RemoveIronsights
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AMainLocalAttachment_C*       Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::RemoveIronsights(bool Hide_, class ABP_AMainLocalAttachment_C* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "RemoveIronsights");

	Params::BP_ItemInspector_C_RemoveIronsights Parms{};

	Parms.Hide_ = Hide_;
	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.SetCaptorActiveState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::SetCaptorActiveState(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "SetCaptorActiveState");

	Params::BP_ItemInspector_C_SetCaptorActiveState Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.SetItemToInspect
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::SetItemToInspect(class UJSI_Slot_C* ItemRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "SetItemToInspect");

	Params::BP_ItemInspector_C_SetItemToInspect Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.SetMeshPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        XYRot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::SetMeshPosition(const struct FVector2D& XYRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "SetMeshPosition");

	Params::BP_ItemInspector_C_SetMeshPosition Parms{};

	Parms.XYRot = std::move(XYRot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.SetMeshRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        XYRot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::SetMeshRotation(const struct FVector2D& XYRot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "SetMeshRotation");

	Params::BP_ItemInspector_C_SetMeshRotation Parms{};

	Parms.XYRot = std::move(XYRot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.UpdateLocAndRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FOVAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       NewTransform                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemInspector_C::UpdateLocAndRot(double FOVAngle, const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "UpdateLocAndRot");

	Params::BP_ItemInspector_C_UpdateLocAndRot Parms{};

	Parms.FOVAngle = FOVAngle;
	Parms.NewTransform = std::move(NewTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemInspector.BP_ItemInspector_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ItemInspector_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemInspector_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

