#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JigCharacterInterface

#include "Basic.hpp"

#include "BP_JigCharacterInterface_classes.hpp"
#include "BP_JigCharacterInterface_parameters.hpp"


namespace SDK
{

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.AddJigWidgetToContent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      WidgetRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             ContentName                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::AddJigWidgetToContent(class UUserWidget* WidgetRef, const class FText& ContentName, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "AddJigWidgetToContent");

	Params::BP_JigCharacterInterface_C_AddJigWidgetToContent Parms{};

	Parms.WidgetRef = WidgetRef;
	Parms.ContentName = std::move(ContentName);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.CancelExfil
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_JigCharacterInterface_C::CancelExfil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "CancelExfil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.ExecuteExfil
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_JigCharacterInterface_C::ExecuteExfil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "ExecuteExfil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.GetAnimationInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ActiveSlot                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// double                                  Leaning                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ADS                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Crouched                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFirstPerson_                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UJigsawItem_DataAsset_C*          EquippedDA                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::GetAnimationInfo(struct FGameplayTag* ActiveSlot, double* Leaning, bool* ADS, bool* Crouched, bool* IsFirstPerson_, class UJigsawItem_DataAsset_C** EquippedDA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "GetAnimationInfo");

	Params::BP_JigCharacterInterface_C_GetAnimationInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveSlot != nullptr)
		*ActiveSlot = std::move(Parms.ActiveSlot);

	if (Leaning != nullptr)
		*Leaning = Parms.Leaning;

	if (ADS != nullptr)
		*ADS = Parms.ADS;

	if (Crouched != nullptr)
		*Crouched = Parms.Crouched;

	if (IsFirstPerson_ != nullptr)
		*IsFirstPerson_ = Parms.IsFirstPerson_;

	if (EquippedDA != nullptr)
		*EquippedDA = Parms.EquippedDA;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.GetTraceActorsToIgnore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (Parm, OutParm)

void IBP_JigCharacterInterface_C::GetTraceActorsToIgnore(TArray<class AActor*>* Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "GetTraceActorsToIgnore");

	Params::BP_JigCharacterInterface_C_GetTraceActorsToIgnore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actors != nullptr)
		*Actors = std::move(Parms.Actors);
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.InitiateGameSave
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_JigCharacterInterface_C::InitiateGameSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "InitiateGameSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.JigCheckWeaponAmmoCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::JigCheckWeaponAmmoCount(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "JigCheckWeaponAmmoCount");

	Params::BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnClientDataRequested
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGuid>                    ActionbarUIDs                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::OnClientDataRequested(TArray<struct FGuid>& ActionbarUIDs, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "OnClientDataRequested");

	Params::BP_JigCharacterInterface_C_OnClientDataRequested Parms{};

	Parms.ActionbarUIDs = std::move(ActionbarUIDs);

	UObject::ProcessEvent(Func, &Parms);

	ActionbarUIDs = std::move(Parms.ActionbarUIDs);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnInteractActorOverDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::OnInteractActorOverDistance(class AActor* ActorRef, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "OnInteractActorOverDistance");

	Params::BP_JigCharacterInterface_C_OnInteractActorOverDistance Parms{};

	Parms.ActorRef = ActorRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnLoadSavedDataRequested
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::OnLoadSavedDataRequested(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "OnLoadSavedDataRequested");

	Params::BP_JigCharacterInterface_C_OnLoadSavedDataRequested Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnPickupInteractExecuted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PickupRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  TargetContainer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::OnPickupInteractExecuted(class AActor* PickupRef, class UJSIContainer_C* TargetContainer, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "OnPickupInteractExecuted");

	Params::BP_JigCharacterInterface_C_OnPickupInteractExecuted Parms{};

	Parms.PickupRef = PickupRef;
	Parms.TargetContainer = TargetContainer;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnSpecialContainerattachmentUpdated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::OnSpecialContainerattachmentUpdated(class UJSI_Slot_C* ItemRef, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "OnSpecialContainerattachmentUpdated");

	Params::BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.RequestServerData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  TargetComp                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::RequestServerData(class UActorComponent* TargetComp, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "RequestServerData");

	Params::BP_JigCharacterInterface_C_RequestServerData Parms{};

	Parms.TargetComp = TargetComp;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.SetPreviewActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::SetPreviewActor(class AActor* Actor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "SetPreviewActor");

	Params::BP_JigCharacterInterface_C_SetPreviewActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.StartExfil
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_JigCharacterInterface_C::StartExfil(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JigCharacterInterface_C", "StartExfil");

	Params::BP_JigCharacterInterface_C_StartExfil Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}

}

