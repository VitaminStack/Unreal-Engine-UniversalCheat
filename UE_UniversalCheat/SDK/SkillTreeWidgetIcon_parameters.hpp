#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillTreeWidgetIcon

#include "Basic.hpp"

#include "Enum_SkillType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SkillTreeWidgetIcon.SkillTreeWidgetIcon_C.ExecuteUbergraph_SkillTreeWidgetIcon
// 0x00B0 (0x00B0 - 0x0000)
struct SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_SkillType                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJournal_SkillTreeTooltip_C*            CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTTTechNode* TechNode, bool IsUnlocked)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTTTechNode*                            K2Node_CustomEvent_TechNode;                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsUnlocked;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillTreeAsset_C*                   K2Node_DynamicCast_AsBP_Skill_Tree_Asset;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree_1;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTechnologyTree*                        CallFunc_GetAssignedTechTree_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTechnologyUnlocked_ReturnValue;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon) == 0x000008, "Wrong alignment on SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon");
static_assert(sizeof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon) == 0x0000B0, "Wrong size on SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, EntryPoint) == 0x000000, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, Temp_byte_Variable) == 0x000004, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, Temp_struct_Variable) == 0x000008, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, Temp_struct_Variable_1) == 0x000018, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, Temp_struct_Variable_2) == 0x000028, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, Temp_struct_Variable_3) == 0x000038, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_Create_ReturnValue) == 0x000048, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, K2Node_CustomEvent_TechNode) == 0x000060, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::K2Node_CustomEvent_TechNode' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, K2Node_CustomEvent_IsUnlocked) == 0x000068, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::K2Node_CustomEvent_IsUnlocked' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, K2Node_DynamicCast_AsBP_Skill_Tree_Asset) == 0x000070, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::K2Node_DynamicCast_AsBP_Skill_Tree_Asset' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000079, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_GetSkillTreeManager_TechTree) == 0x000080, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_GetSkillTreeManager_TechTree_1) == 0x000088, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_GetSkillTreeManager_TechTree_1' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_GetAssignedTechTree_ReturnValue) == 0x000090, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_GetAssignedTechTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, CallFunc_IsTechnologyUnlocked_ReturnValue) == 0x000099, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::CallFunc_IsTechnologyUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon, K2Node_Select_Default) == 0x00009C, "Member 'SkillTreeWidgetIcon_C_ExecuteUbergraph_SkillTreeWidgetIcon::K2Node_Select_Default' has a wrong offset!");

// Function SkillTreeWidgetIcon.SkillTreeWidgetIcon_C.OnTechnologyUnlockStateChanged
// 0x0010 (0x0010 - 0x0000)
struct SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged final
{
public:
	class UTTTechNode*                            TechNode;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged) == 0x000008, "Wrong alignment on SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged");
static_assert(sizeof(SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged) == 0x000010, "Wrong size on SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged");
static_assert(offsetof(SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged, TechNode) == 0x000000, "Member 'SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged::TechNode' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged, IsUnlocked) == 0x000008, "Member 'SkillTreeWidgetIcon_C_OnTechnologyUnlockStateChanged::IsUnlocked' has a wrong offset!");

// Function SkillTreeWidgetIcon.SkillTreeWidgetIcon_C.SkillTreeTooltip
// 0x0108 (0x0108 - 0x0000)
struct SkillTreeWidgetIcon_C_SkillTreeTooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	Enum_SkillType                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x000C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0020(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0034(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0048(0x0014)()
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0078(0x0014)()
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
};
static_assert(alignof(SkillTreeWidgetIcon_C_SkillTreeTooltip) == 0x000008, "Wrong alignment on SkillTreeWidgetIcon_C_SkillTreeTooltip");
static_assert(sizeof(SkillTreeWidgetIcon_C_SkillTreeTooltip) == 0x000108, "Wrong size on SkillTreeWidgetIcon_C_SkillTreeTooltip");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, ReturnValue) == 0x000000, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, Temp_byte_Variable) == 0x000008, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_MakeStruct_SlateColor) == 0x00000C, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_MakeStruct_SlateColor_1) == 0x000020, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_MakeStruct_SlateColor_2) == 0x000034, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_MakeStruct_SlateColor_3) == 0x000048, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_Select_Default) == 0x000078, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, K2Node_MakeArray_Array) == 0x0000E0, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SkillTreeWidgetIcon_C_SkillTreeTooltip, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'SkillTreeWidgetIcon_C_SkillTreeTooltip::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function SkillTreeWidgetIcon.SkillTreeWidgetIcon_C.UpdateUnlocked
// 0x0001 (0x0001 - 0x0000)
struct SkillTreeWidgetIcon_C_UpdateUnlocked final
{
public:
	bool                                          Unlocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeWidgetIcon_C_UpdateUnlocked) == 0x000001, "Wrong alignment on SkillTreeWidgetIcon_C_UpdateUnlocked");
static_assert(sizeof(SkillTreeWidgetIcon_C_UpdateUnlocked) == 0x000001, "Wrong size on SkillTreeWidgetIcon_C_UpdateUnlocked");
static_assert(offsetof(SkillTreeWidgetIcon_C_UpdateUnlocked, Unlocked) == 0x000000, "Member 'SkillTreeWidgetIcon_C_UpdateUnlocked::Unlocked' has a wrong offset!");

}

