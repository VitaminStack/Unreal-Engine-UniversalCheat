#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NewGameSettings

#include "Basic.hpp"

#include "Enum_Occupation_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NewGameSettings.BP_NewGameSettings_C
// 0x00A0 (0x0338 - 0x0298)
class ABP_NewGameSettings_C final : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 Forename;                                          // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Surname;                                           // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UStaticMesh*                            EyebrowsMesh;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      SkinColor;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	Enum_Occupation                               Occupation;                                        // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            HairMesh;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      HairColor;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            BeardMesh;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      BeardColor;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Age;                                               // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UStaticMesh*                            MouthMesh;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Accessory1Mesh;                                    // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Accessory2Mesh;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Accessory3Mesh;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Sex;                                               // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NewGameSettings_C">();
	}
	static class ABP_NewGameSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NewGameSettings_C>();
	}
};
static_assert(alignof(ABP_NewGameSettings_C) == 0x000008, "Wrong alignment on ABP_NewGameSettings_C");
static_assert(sizeof(ABP_NewGameSettings_C) == 0x000338, "Wrong size on ABP_NewGameSettings_C");
static_assert(offsetof(ABP_NewGameSettings_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_NewGameSettings_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Forename) == 0x0002A0, "Member 'ABP_NewGameSettings_C::Forename' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Surname) == 0x0002B0, "Member 'ABP_NewGameSettings_C::Surname' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, EyebrowsMesh) == 0x0002C0, "Member 'ABP_NewGameSettings_C::EyebrowsMesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, SkinColor) == 0x0002C8, "Member 'ABP_NewGameSettings_C::SkinColor' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Occupation) == 0x0002D0, "Member 'ABP_NewGameSettings_C::Occupation' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, HairMesh) == 0x0002D8, "Member 'ABP_NewGameSettings_C::HairMesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, HairColor) == 0x0002E0, "Member 'ABP_NewGameSettings_C::HairColor' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, BeardMesh) == 0x0002E8, "Member 'ABP_NewGameSettings_C::BeardMesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, BeardColor) == 0x0002F0, "Member 'ABP_NewGameSettings_C::BeardColor' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Age) == 0x0002F8, "Member 'ABP_NewGameSettings_C::Age' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, MouthMesh) == 0x000308, "Member 'ABP_NewGameSettings_C::MouthMesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Accessory1Mesh) == 0x000310, "Member 'ABP_NewGameSettings_C::Accessory1Mesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Accessory2Mesh) == 0x000318, "Member 'ABP_NewGameSettings_C::Accessory2Mesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Accessory3Mesh) == 0x000320, "Member 'ABP_NewGameSettings_C::Accessory3Mesh' has a wrong offset!");
static_assert(offsetof(ABP_NewGameSettings_C, Sex) == 0x000328, "Member 'ABP_NewGameSettings_C::Sex' has a wrong offset!");

}

