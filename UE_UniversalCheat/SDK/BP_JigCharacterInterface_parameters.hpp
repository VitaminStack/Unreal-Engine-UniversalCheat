#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JigCharacterInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.AddJigWidgetToContent
// 0x0028 (0x0028 - 0x0000)
struct BP_JigCharacterInterface_C_AddJigWidgetToContent final
{
public:
	class UUserWidget*                            WidgetRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   ContentName;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_AddJigWidgetToContent) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_AddJigWidgetToContent");
static_assert(sizeof(BP_JigCharacterInterface_C_AddJigWidgetToContent) == 0x000028, "Wrong size on BP_JigCharacterInterface_C_AddJigWidgetToContent");
static_assert(offsetof(BP_JigCharacterInterface_C_AddJigWidgetToContent, WidgetRef) == 0x000000, "Member 'BP_JigCharacterInterface_C_AddJigWidgetToContent::WidgetRef' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_AddJigWidgetToContent, ContentName) == 0x000008, "Member 'BP_JigCharacterInterface_C_AddJigWidgetToContent::ContentName' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_AddJigWidgetToContent, Result) == 0x000020, "Member 'BP_JigCharacterInterface_C_AddJigWidgetToContent::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.GetAnimationInfo
// 0x0020 (0x0020 - 0x0000)
struct BP_JigCharacterInterface_C_GetAnimationInfo final
{
public:
	struct FGameplayTag                           ActiveSlot;                                        // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	double                                        Leaning;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ADS;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Crouched;                                          // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstPerson_;                                    // 0x0012(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                EquippedDA;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_GetAnimationInfo) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_GetAnimationInfo");
static_assert(sizeof(BP_JigCharacterInterface_C_GetAnimationInfo) == 0x000020, "Wrong size on BP_JigCharacterInterface_C_GetAnimationInfo");
static_assert(offsetof(BP_JigCharacterInterface_C_GetAnimationInfo, ActiveSlot) == 0x000000, "Member 'BP_JigCharacterInterface_C_GetAnimationInfo::ActiveSlot' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_GetAnimationInfo, Leaning) == 0x000008, "Member 'BP_JigCharacterInterface_C_GetAnimationInfo::Leaning' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_GetAnimationInfo, ADS) == 0x000010, "Member 'BP_JigCharacterInterface_C_GetAnimationInfo::ADS' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_GetAnimationInfo, Crouched) == 0x000011, "Member 'BP_JigCharacterInterface_C_GetAnimationInfo::Crouched' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_GetAnimationInfo, IsFirstPerson_) == 0x000012, "Member 'BP_JigCharacterInterface_C_GetAnimationInfo::IsFirstPerson_' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_GetAnimationInfo, EquippedDA) == 0x000018, "Member 'BP_JigCharacterInterface_C_GetAnimationInfo::EquippedDA' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.GetTraceActorsToIgnore
// 0x0010 (0x0010 - 0x0000)
struct BP_JigCharacterInterface_C_GetTraceActorsToIgnore final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_JigCharacterInterface_C_GetTraceActorsToIgnore) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_GetTraceActorsToIgnore");
static_assert(sizeof(BP_JigCharacterInterface_C_GetTraceActorsToIgnore) == 0x000010, "Wrong size on BP_JigCharacterInterface_C_GetTraceActorsToIgnore");
static_assert(offsetof(BP_JigCharacterInterface_C_GetTraceActorsToIgnore, Actors) == 0x000000, "Member 'BP_JigCharacterInterface_C_GetTraceActorsToIgnore::Actors' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.JigCheckWeaponAmmoCount
// 0x0001 (0x0001 - 0x0000)
struct BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount) == 0x000001, "Wrong alignment on BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount");
static_assert(sizeof(BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount) == 0x000001, "Wrong size on BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount");
static_assert(offsetof(BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount, Result) == 0x000000, "Member 'BP_JigCharacterInterface_C_JigCheckWeaponAmmoCount::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnClientDataRequested
// 0x0018 (0x0018 - 0x0000)
struct BP_JigCharacterInterface_C_OnClientDataRequested final
{
public:
	TArray<struct FGuid>                          ActionbarUIDs;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_OnClientDataRequested) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_OnClientDataRequested");
static_assert(sizeof(BP_JigCharacterInterface_C_OnClientDataRequested) == 0x000018, "Wrong size on BP_JigCharacterInterface_C_OnClientDataRequested");
static_assert(offsetof(BP_JigCharacterInterface_C_OnClientDataRequested, ActionbarUIDs) == 0x000000, "Member 'BP_JigCharacterInterface_C_OnClientDataRequested::ActionbarUIDs' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_OnClientDataRequested, Result) == 0x000010, "Member 'BP_JigCharacterInterface_C_OnClientDataRequested::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnInteractActorOverDistance
// 0x0010 (0x0010 - 0x0000)
struct BP_JigCharacterInterface_C_OnInteractActorOverDistance final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_OnInteractActorOverDistance) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_OnInteractActorOverDistance");
static_assert(sizeof(BP_JigCharacterInterface_C_OnInteractActorOverDistance) == 0x000010, "Wrong size on BP_JigCharacterInterface_C_OnInteractActorOverDistance");
static_assert(offsetof(BP_JigCharacterInterface_C_OnInteractActorOverDistance, ActorRef) == 0x000000, "Member 'BP_JigCharacterInterface_C_OnInteractActorOverDistance::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_OnInteractActorOverDistance, Result) == 0x000008, "Member 'BP_JigCharacterInterface_C_OnInteractActorOverDistance::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnLoadSavedDataRequested
// 0x0001 (0x0001 - 0x0000)
struct BP_JigCharacterInterface_C_OnLoadSavedDataRequested final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_OnLoadSavedDataRequested) == 0x000001, "Wrong alignment on BP_JigCharacterInterface_C_OnLoadSavedDataRequested");
static_assert(sizeof(BP_JigCharacterInterface_C_OnLoadSavedDataRequested) == 0x000001, "Wrong size on BP_JigCharacterInterface_C_OnLoadSavedDataRequested");
static_assert(offsetof(BP_JigCharacterInterface_C_OnLoadSavedDataRequested, Result) == 0x000000, "Member 'BP_JigCharacterInterface_C_OnLoadSavedDataRequested::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnPickupInteractExecuted
// 0x0018 (0x0018 - 0x0000)
struct BP_JigCharacterInterface_C_OnPickupInteractExecuted final
{
public:
	class AActor*                                 PickupRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        TargetContainer;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_OnPickupInteractExecuted) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_OnPickupInteractExecuted");
static_assert(sizeof(BP_JigCharacterInterface_C_OnPickupInteractExecuted) == 0x000018, "Wrong size on BP_JigCharacterInterface_C_OnPickupInteractExecuted");
static_assert(offsetof(BP_JigCharacterInterface_C_OnPickupInteractExecuted, PickupRef) == 0x000000, "Member 'BP_JigCharacterInterface_C_OnPickupInteractExecuted::PickupRef' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_OnPickupInteractExecuted, TargetContainer) == 0x000008, "Member 'BP_JigCharacterInterface_C_OnPickupInteractExecuted::TargetContainer' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_OnPickupInteractExecuted, Result) == 0x000010, "Member 'BP_JigCharacterInterface_C_OnPickupInteractExecuted::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.OnSpecialContainerattachmentUpdated
// 0x0010 (0x0010 - 0x0000)
struct BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated final
{
public:
	class UJSI_Slot_C*                            ItemRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated");
static_assert(sizeof(BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated) == 0x000010, "Wrong size on BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated");
static_assert(offsetof(BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated, ItemRef) == 0x000000, "Member 'BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated::ItemRef' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated, Result) == 0x000008, "Member 'BP_JigCharacterInterface_C_OnSpecialContainerattachmentUpdated::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.RequestServerData
// 0x0010 (0x0010 - 0x0000)
struct BP_JigCharacterInterface_C_RequestServerData final
{
public:
	class UActorComponent*                        TargetComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_RequestServerData) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_RequestServerData");
static_assert(sizeof(BP_JigCharacterInterface_C_RequestServerData) == 0x000010, "Wrong size on BP_JigCharacterInterface_C_RequestServerData");
static_assert(offsetof(BP_JigCharacterInterface_C_RequestServerData, TargetComp) == 0x000000, "Member 'BP_JigCharacterInterface_C_RequestServerData::TargetComp' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_RequestServerData, Result) == 0x000008, "Member 'BP_JigCharacterInterface_C_RequestServerData::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.SetPreviewActor
// 0x0010 (0x0010 - 0x0000)
struct BP_JigCharacterInterface_C_SetPreviewActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_SetPreviewActor) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_SetPreviewActor");
static_assert(sizeof(BP_JigCharacterInterface_C_SetPreviewActor) == 0x000010, "Wrong size on BP_JigCharacterInterface_C_SetPreviewActor");
static_assert(offsetof(BP_JigCharacterInterface_C_SetPreviewActor, Actor) == 0x000000, "Member 'BP_JigCharacterInterface_C_SetPreviewActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_JigCharacterInterface_C_SetPreviewActor, Result) == 0x000008, "Member 'BP_JigCharacterInterface_C_SetPreviewActor::Result' has a wrong offset!");

// Function BP_JigCharacterInterface.BP_JigCharacterInterface_C.StartExfil
// 0x0008 (0x0008 - 0x0000)
struct BP_JigCharacterInterface_C_StartExfil final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigCharacterInterface_C_StartExfil) == 0x000008, "Wrong alignment on BP_JigCharacterInterface_C_StartExfil");
static_assert(sizeof(BP_JigCharacterInterface_C_StartExfil) == 0x000008, "Wrong size on BP_JigCharacterInterface_C_StartExfil");
static_assert(offsetof(BP_JigCharacterInterface_C_StartExfil, Time) == 0x000000, "Member 'BP_JigCharacterInterface_C_StartExfil::Time' has a wrong offset!");

}

