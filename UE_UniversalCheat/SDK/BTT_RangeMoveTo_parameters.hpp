#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_RangeMoveTo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK::Params
{

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.Cover Move EQS Done
// 0x0010 (0x0010 - 0x0000)
struct BTT_RangeMoveTo_C_Cover_Move_EQS_Done final
{
public:
	class UEnvQueryInstanceBlueprintWrapper*      QueryInstance;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEnvQueryStatus                               QueryStatus;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_Cover_Move_EQS_Done) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_Cover_Move_EQS_Done");
static_assert(sizeof(BTT_RangeMoveTo_C_Cover_Move_EQS_Done) == 0x000010, "Wrong size on BTT_RangeMoveTo_C_Cover_Move_EQS_Done");
static_assert(offsetof(BTT_RangeMoveTo_C_Cover_Move_EQS_Done, QueryInstance) == 0x000000, "Member 'BTT_RangeMoveTo_C_Cover_Move_EQS_Done::QueryInstance' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_Cover_Move_EQS_Done, QueryStatus) == 0x000008, "Member 'BTT_RangeMoveTo_C_Cover_Move_EQS_Done::QueryStatus' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.ExecuteUbergraph_BTT_RangeMoveTo
// 0x0370 (0x0370 - 0x0000)
struct BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RangePointCheck_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQueryInstanceBlueprintWrapper*      CallFunc_RunEQSQuery_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_Result_1;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_AIController_1;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineOfSightTo_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Range_Attack_Distance_Attack_Range; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_MoveTo*                         CallFunc_AIMoveTo_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_2;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineOfSightTo_ReturnValue_1;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_MoveTo*                         CallFunc_AIMoveTo_ReturnValue_1;                   // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineOfSightTo_ReturnValue_2;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)> K2Node_CreateDelegate_OutputDelegate;              // 0x012C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvQueryInstanceBlueprintWrapper*      K2Node_CustomEvent_QueryInstance_1;                // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEnvQueryStatus                               K2Node_CustomEvent_QueryStatus_1;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetQueryResultsAsLocations_ResultLocations; // 0x0150(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetQueryResultsAsLocations_ReturnValue;   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Range_Attack_Distance_Attack_Range_1; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_Result;                         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_CustomEvent_AIController;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEnvQueryInstanceBlueprintWrapper*      K2Node_CustomEvent_QueryInstance;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEnvQueryStatus                               K2Node_CustomEvent_QueryStatus;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult Result, class AAIController* AIController)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x01E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_GetQueryResultsAsLocations_ResultLocations_1; // 0x01F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetQueryResultsAsLocations_ReturnValue_1; // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQueryInstanceBlueprintWrapper*      CallFunc_RunEQSQuery_ReturnValue_1;                // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Range_Attack_Distance_Attack_Range_2; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult Result, class AAIController* AIController)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RangePointCheck_ReturnValue_1;            // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FindTargets_Closest_Attack_Target;        // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Range_Attack_Distance_Attack_Range_3; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_3;                      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0340(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_4;                      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RangePointCheck_ReturnValue_2;            // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNamedParam_Value_ImplicitCast;         // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNamedParam_Value_ImplicitCast_1;       // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo");
static_assert(sizeof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo) == 0x000370, "Wrong size on BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, EntryPoint) == 0x000000, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_RangePointCheck_ReturnValue) == 0x000004, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_RangePointCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_RunEQSQuery_ReturnValue) == 0x000008, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_RunEQSQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_Result_1) == 0x000010, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_Result_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_AIController_1) == 0x000018, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_AIController_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_LineOfSightTo_ReturnValue) == 0x000020, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_LineOfSightTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_GetDistanceTo_ReturnValue) == 0x000024, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Current_Range_Attack_Distance_Attack_Range) == 0x000028, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Current_Range_Attack_Distance_Attack_Range' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000030, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_AIMoveTo_ReturnValue) == 0x000038, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_AIMoveTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_VSize_ReturnValue) == 0x000090, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000A0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000D0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_VSize_ReturnValue_1) == 0x0000E8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0000F0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_VSize_ReturnValue_2) == 0x000110, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_LineOfSightTo_ReturnValue_1) == 0x000118, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_LineOfSightTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_AIMoveTo_ReturnValue_1) == 0x000120, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_AIMoveTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue_2) == 0x000128, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_LineOfSightTo_ReturnValue_2) == 0x000129, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_LineOfSightTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CreateDelegate_OutputDelegate) == 0x00012C, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue_3) == 0x00013C, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_QueryInstance_1) == 0x000140, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_QueryInstance_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_QueryStatus_1) == 0x000148, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_QueryStatus_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_SwitchEnum_CmpSuccess) == 0x000149, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_GetQueryResultsAsLocations_ResultLocations) == 0x000150, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_GetQueryResultsAsLocations_ResultLocations' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_GetQueryResultsAsLocations_ReturnValue) == 0x000160, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_GetQueryResultsAsLocations_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Array_Get_Item) == 0x000168, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Current_Range_Attack_Distance_Attack_Range_1) == 0x000180, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Current_Range_Attack_Distance_Attack_Range_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000188, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000190, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0001A0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_Result) == 0x0001C8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_AIController) == 0x0001D0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_AIController' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_QueryInstance) == 0x0001D8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_QueryInstance' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CustomEvent_QueryStatus) == 0x0001E0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CustomEvent_QueryStatus' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001E1, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001E4, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_GetQueryResultsAsLocations_ResultLocations_1) == 0x0001F8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_GetQueryResultsAsLocations_ResultLocations_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_GetQueryResultsAsLocations_ReturnValue_1) == 0x000208, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_GetQueryResultsAsLocations_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_RunEQSQuery_ReturnValue_1) == 0x000228, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_RunEQSQuery_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Current_Range_Attack_Distance_Attack_Range_2) == 0x000230, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Current_Range_Attack_Distance_Attack_Range_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_Event_OwnerController) == 0x000240, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_Event_ControlledPawn) == 0x000248, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_GetComponentByClass_ReturnValue) == 0x000250, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CreateDelegate_OutputDelegate_4) == 0x000258, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue_4) == 0x000268, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue_5) == 0x000269, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_RangePointCheck_ReturnValue_1) == 0x00026A, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_RangePointCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_FindTargets_Closest_Attack_Target) == 0x000270, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_FindTargets_Closest_Attack_Target' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000278, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_IsValid_ReturnValue_6) == 0x000290, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000298, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x0002B0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x0002C8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Current_Range_Attack_Distance_Attack_Range_3) == 0x0002E0, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Current_Range_Attack_Distance_Attack_Range_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0002E8, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_VSize_ReturnValue_3) == 0x000300, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000308, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x000310, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000328, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, K2Node_CreateDelegate_OutputDelegate_5) == 0x000340, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_VSize_ReturnValue_4) == 0x000350, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000358, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000359, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_RangePointCheck_ReturnValue_2) == 0x00035A, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_RangePointCheck_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00035B, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000360, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_SetNamedParam_Value_ImplicitCast) == 0x000368, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_SetNamedParam_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo, CallFunc_SetNamedParam_Value_ImplicitCast_1) == 0x00036C, "Member 'BTT_RangeMoveTo_C_ExecuteUbergraph_BTT_RangeMoveTo::CallFunc_SetNamedParam_Value_ImplicitCast_1' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.FindTargets
// 0x0068 (0x0068 - 0x0000)
struct BTT_RangeMoveTo_C_FindTargets final
{
public:
	class AActor*                                 Closest_Attack_Target;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Closest_AI_L;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Closest_Distance_L;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Closest_Distance_L_ImplicitCast; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_FindTargets) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_FindTargets");
static_assert(sizeof(BTT_RangeMoveTo_C_FindTargets) == 0x000068, "Wrong size on BTT_RangeMoveTo_C_FindTargets");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, Closest_Attack_Target) == 0x000000, "Member 'BTT_RangeMoveTo_C_FindTargets::Closest_Attack_Target' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, Closest_AI_L) == 0x000008, "Member 'BTT_RangeMoveTo_C_FindTargets::Closest_AI_L' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, Closest_Distance_L) == 0x000010, "Member 'BTT_RangeMoveTo_C_FindTargets::Closest_Distance_L' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BTT_RangeMoveTo_C_FindTargets::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BTT_RangeMoveTo_C_FindTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BTT_RangeMoveTo_C_FindTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_GetDistanceTo_ReturnValue) == 0x000034, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000039, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Array_Get_Item) == 0x000040, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BTT_RangeMoveTo_C_FindTargets::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_FindTargets, K2Node_VariableSet_Closest_Distance_L_ImplicitCast) == 0x000060, "Member 'BTT_RangeMoveTo_C_FindTargets::K2Node_VariableSet_Closest_Distance_L_ImplicitCast' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.OnMoveFinished_147596BE4CB673FA8562839726C4DD21
// 0x0010 (0x0010 - 0x0000)
struct BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21 final
{
public:
	EPathFollowingResult                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21");
static_assert(sizeof(BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21) == 0x000010, "Wrong size on BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21");
static_assert(offsetof(BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21, Result) == 0x000000, "Member 'BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21::Result' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21, AIController) == 0x000008, "Member 'BTT_RangeMoveTo_C_OnMoveFinished_147596BE4CB673FA8562839726C4DD21::AIController' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C
// 0x0010 (0x0010 - 0x0000)
struct BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C final
{
public:
	EPathFollowingResult                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C");
static_assert(sizeof(BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C) == 0x000010, "Wrong size on BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C");
static_assert(offsetof(BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C, Result) == 0x000000, "Member 'BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C::Result' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C, AIController) == 0x000008, "Member 'BTT_RangeMoveTo_C_OnMoveFinished_751C6ACC423B5631FA126CBB0CF58B1C::AIController' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.Range Move EQS Done
// 0x0010 (0x0010 - 0x0000)
struct BTT_RangeMoveTo_C_Range_Move_EQS_Done final
{
public:
	class UEnvQueryInstanceBlueprintWrapper*      QueryInstance;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEnvQueryStatus                               QueryStatus;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_Range_Move_EQS_Done) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_Range_Move_EQS_Done");
static_assert(sizeof(BTT_RangeMoveTo_C_Range_Move_EQS_Done) == 0x000010, "Wrong size on BTT_RangeMoveTo_C_Range_Move_EQS_Done");
static_assert(offsetof(BTT_RangeMoveTo_C_Range_Move_EQS_Done, QueryInstance) == 0x000000, "Member 'BTT_RangeMoveTo_C_Range_Move_EQS_Done::QueryInstance' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_Range_Move_EQS_Done, QueryStatus) == 0x000008, "Member 'BTT_RangeMoveTo_C_Range_Move_EQS_Done::QueryStatus' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.RangePointCheck
// 0x0218 (0x0218 - 0x0000)
struct BTT_RangeMoveTo_C_RangePointCheck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_RangePointCheck) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_RangePointCheck");
static_assert(sizeof(BTT_RangeMoveTo_C_RangePointCheck) == 0x000218, "Wrong size on BTT_RangeMoveTo_C_RangePointCheck");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, ReturnValue) == 0x000000, "Member 'BTT_RangeMoveTo_C_RangePointCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, Temp_object_Variable) == 0x000020, "Member 'BTT_RangeMoveTo_C_RangePointCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_SphereTraceSingle_OutHit) == 0x000050, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_SphereTraceSingle_ReturnValue) == 0x000138, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x000139, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013A, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x000160, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_BoneName) == 0x0001C8, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_ElementIndex) == 0x0001D4, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_FaceIndex) == 0x0001D8, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_BreakHitResult_TraceEnd) == 0x0001F8, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_RangePointCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000210, "Member 'BTT_RangeMoveTo_C_RangePointCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BTT_RangeMoveTo.BTT_RangeMoveTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_RangeMoveTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_RangeMoveTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_RangeMoveTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_RangeMoveTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_RangeMoveTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_RangeMoveTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_RangeMoveTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_RangeMoveTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_RangeMoveTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

