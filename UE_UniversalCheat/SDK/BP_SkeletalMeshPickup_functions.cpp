#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkeletalMeshPickup

#include "Basic.hpp"

#include "BP_SkeletalMeshPickup_classes.hpp"
#include "BP_SkeletalMeshPickup_parameters.hpp"


namespace SDK
{

// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.ExecuteUbergraph_BP_SkeletalMeshPickup
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::ExecuteUbergraph_BP_SkeletalMeshPickup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "ExecuteUbergraph_BP_SkeletalMeshPickup");

	Params::BP_SkeletalMeshPickup_C_ExecuteUbergraph_BP_SkeletalMeshPickup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.GetInteractOptions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGameplayTag, class FText>  Options                                                (Parm, OutParm)

void ABP_SkeletalMeshPickup_C::GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "GetInteractOptions");

	Params::BP_SkeletalMeshPickup_C_GetInteractOptions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Options != nullptr)
		*Options = std::move(Parms.Options);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.GetItemInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJigsawItem_DataAsset_C*          Info                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_RandomStatsConfig             RandomStatsConfig                                      (Parm, OutParm, HasGetValueTypeHash)
// TMap<class FString, class FString>      CustomData                                             (Parm, OutParm)

void ABP_SkeletalMeshPickup_C::GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "GetItemInfo");

	Params::BP_SkeletalMeshPickup_C_GetItemInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = Parms.Info;

	if (Count != nullptr)
		*Count = Parms.Count;

	if (RandomStatsConfig != nullptr)
		*RandomStatsConfig = std::move(Parms.RandomStatsConfig);

	if (CustomData != nullptr)
		*CustomData = std::move(Parms.CustomData);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.GetJigMultiplayerComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  JigComp                                                (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::GetJigMultiplayerComponent(class UActorComponent** JigComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "GetJigMultiplayerComponent");

	Params::BP_SkeletalMeshPickup_C_GetJigMultiplayerComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (JigComp != nullptr)
		*JigComp = Parms.JigComp;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.GetMainSceneComp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::GetMainSceneComp(class USceneComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "GetMainSceneComp");

	Params::BP_SkeletalMeshPickup_C_GetMainSceneComp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigCanInteract(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigCanInteract");

	Params::BP_SkeletalMeshPickup_C_JigCanInteract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_GetLootWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_GetLootWidget(class UWidget** Result, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_GetLootWidget");

	Params::BP_SkeletalMeshPickup_C_JigMP_GetLootWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnContainersSwap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container1                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  Container2                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnContainersSwap(class UJSIContainer_C* Container1, class UJSIContainer_C* Container2, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnContainersSwap");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnContainersSwap Parms{};

	Parms.Container1 = Container1;
	Parms.Container2 = Container2;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnItemAdded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  FromComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnItemAdded(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, const struct FGuid& ToContainerUID, class UActorComponent* FromComponent, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnItemAdded");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnItemAdded Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.FromComponent = FromComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnItemConsumed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRepItemInfo                     ConsumedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Remaining                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     InsideOf                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallbackToPlayer_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnItemConsumed(const struct FRepItemInfo& ConsumedItem, int32 Amount, int32 Remaining, const struct FRepItemInfo& InsideOf, class FName FromContainer, const class FString& CustomData, bool CallbackToPlayer_, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnItemConsumed");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnItemConsumed Parms{};

	Parms.ConsumedItem = std::move(ConsumedItem);
	Parms.Amount = Amount;
	Parms.Remaining = Remaining;
	Parms.InsideOf = std::move(InsideOf);
	Parms.FromContainer = FromContainer;
	Parms.CustomData = std::move(CustomData);
	Parms.CallbackToPlayer_ = CallbackToPlayer_;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnItemDropped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnItemDropped(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, class AActor* ActorRef, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnItemDropped");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnItemDropped Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ActorRef = ActorRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnItemMoved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnItemMoved(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, const struct FGuid& ToContainerUID, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnItemMoved");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnItemMoved Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ToContainerUID = std::move(ToContainerUID);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnItemRemoved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  ToComponent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnItemRemoved(const struct FGuid& ItemUID, const struct FGuid& FromContainerUID, const struct FGuid& ToContainerUID, class UActorComponent* ToComponent, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnItemRemoved");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnItemRemoved Parms{};

	Parms.ItemUID = std::move(ItemUID);
	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.ToComponent = ToComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnMainContainerItemAdded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ToContainerName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             FromMain                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ActorRef                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnMainContainerItemAdded(const struct FGuid& ToContainerUID, const struct FGuid& ItemUID, class FName ToContainerName, const struct FRepItemInfo& ItemInfo, class FName FromMain, bool* Result, class AActor** ActorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnMainContainerItemAdded");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnMainContainerItemAdded Parms{};

	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.ItemUID = std::move(ItemUID);
	Parms.ToContainerName = ToContainerName;
	Parms.ItemInfo = std::move(ItemInfo);
	Parms.FromMain = FromMain;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (ActorRef != nullptr)
		*ActorRef = Parms.ActorRef;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnMainContainerItemRemoved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            FromContainerUID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ContainerName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     ItemRemovedInfo                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnMainContainerItemRemoved(const struct FGuid& FromContainerUID, const struct FGuid& ItemUID, class FName ContainerName, const struct FRepItemInfo& ItemRemovedInfo, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnMainContainerItemRemoved");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnMainContainerItemRemoved Parms{};

	Parms.FromContainerUID = std::move(FromContainerUID);
	Parms.ItemUID = std::move(ItemUID);
	Parms.ContainerName = ContainerName;
	Parms.ItemRemovedInfo = std::move(ItemRemovedInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnPickupAdded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRepItemInfo                     Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FGuid                            ItemUID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnPickupAdded(const struct FRepItemInfo& Info, const struct FGuid& ItemUID, const struct FGuid& ToContainerUID, class FName ToContainer, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnPickupAdded");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnPickupAdded Parms{};

	Parms.Info = std::move(Info);
	Parms.ItemUID = std::move(ItemUID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.ToContainer = ToContainer;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnPickupEquipped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorRef                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             ToContainerName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            UID                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGuid                            ToContainerUID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRepItemInfo                     Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OverrideActor                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnPickupEquipped(class AActor* ActorRef, class FName ToContainerName, const struct FGuid& UID, const struct FGuid& ToContainerUID, const struct FRepItemInfo& Info, bool* Result, class AActor** OverrideActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnPickupEquipped");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnPickupEquipped Parms{};

	Parms.ActorRef = ActorRef;
	Parms.ToContainerName = ToContainerName;
	Parms.UID = std::move(UID);
	Parms.ToContainerUID = std::move(ToContainerUID);
	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (OverrideActor != nullptr)
		*OverrideActor = Parms.OverrideActor;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnRequestDropItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRepItemInfo                     ItemInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             ContainerName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ActorRef                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnRequestDropItem(const struct FRepItemInfo& ItemInfo, class FName ContainerName, class AActor** ActorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnRequestDropItem");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnRequestDropItem Parms{};

	Parms.ItemInfo = std::move(ItemInfo);
	Parms.ContainerName = ContainerName;

	UObject::ProcessEvent(Func, &Parms);

	if (ActorRef != nullptr)
		*ActorRef = Parms.ActorRef;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnTwoContainersSwap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FromContainer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ToContainer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnTwoContainersSwap(class FName FromContainer, class FName ToContainer, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnTwoContainersSwap");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnTwoContainersSwap Parms{};

	Parms.FromContainer = FromContainer;
	Parms.ToContainer = ToContainer;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigMP_OnUpdateChamberUID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGuid                            NewUID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigMP_OnUpdateChamberUID(const struct FGuid& NewUID, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigMP_OnUpdateChamberUID");

	Params::BP_SkeletalMeshPickup_C_JigMP_OnUpdateChamberUID Parms{};

	Parms.NewUID = std::move(NewUID);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.JigSetCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanInteract                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    EnablePhysics                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "JigSetCanInteract");

	Params::BP_SkeletalMeshPickup_C_JigSetCanInteract Parms{};

	Parms.CanInteract = CanInteract;
	Parms.EnablePhysics = EnablePhysics;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnBeginInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TMap<struct FGameplayTag, class FText>  Options                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_SkeletalMeshPickup_C::OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnBeginInteract");

	Params::BP_SkeletalMeshPickup_C_OnBeginInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.Options = std::move(Options);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnEndInteract
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SkeletalMeshPickup_C::OnEndInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnEndInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnExecuteInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnExecuteInteract");

	Params::BP_SkeletalMeshPickup_C_OnExecuteInteract Parms{};

	Parms.InteractingActor = InteractingActor;
	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnExecuteInteractDialogue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::OnExecuteInteractDialogue(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnExecuteInteractDialogue");

	Params::BP_SkeletalMeshPickup_C_OnExecuteInteractDialogue Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnExecuteInteractEnded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SkeletalMeshPickup_C::OnExecuteInteractEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnExecuteInteractEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnRequestServerInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FS_JigPayload                    Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnRequestServerInteract");

	Params::BP_SkeletalMeshPickup_C_OnRequestServerInteract Parms{};

	Parms.Actor = Actor;
	Parms.Option = std::move(Option);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnServerExecuteInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ByActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_JigPayload                    Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnServerExecuteInteract");

	Params::BP_SkeletalMeshPickup_C_OnServerExecuteInteract Parms{};

	Parms.Option = std::move(Option);
	Parms.ByActor = ByActor;
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.OnStopExecuteInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           InteractingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::OnStopExecuteInteract(class AActor* InteractingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "OnStopExecuteInteract");

	Params::BP_SkeletalMeshPickup_C_OnStopExecuteInteract Parms{};

	Parms.InteractingActor = InteractingActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.PickupBuildFromGround
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SkeletalMeshPickup_C::PickupBuildFromGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "PickupBuildFromGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SkeletalMeshPickup_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.SetInteractOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Option                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::SetInteractOption(const struct FGameplayTag& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "SetInteractOption");

	Params::BP_SkeletalMeshPickup_C_SetInteractOption Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkeletalMeshPickup.BP_SkeletalMeshPickup_C.SetPickupCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SkeletalMeshPickup_C::SetPickupCount(int32 NewCount, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkeletalMeshPickup_C", "SetPickupCount");

	Params::BP_SkeletalMeshPickup_C_SetPickupCount Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

