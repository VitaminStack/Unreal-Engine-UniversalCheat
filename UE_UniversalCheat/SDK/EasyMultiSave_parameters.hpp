#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyMultiSave

#include "Basic.hpp"

#include "EasyMultiSave_structs.hpp"


namespace SDK::Params
{

// Function EasyMultiSave.EMSActorSaveInterface.ComponentsToSave
// 0x0010 (0x0010 - 0x0000)
struct EMSActorSaveInterface_ComponentsToSave final
{
public:
	TArray<class UActorComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSActorSaveInterface_ComponentsToSave) == 0x000008, "Wrong alignment on EMSActorSaveInterface_ComponentsToSave");
static_assert(sizeof(EMSActorSaveInterface_ComponentsToSave) == 0x000010, "Wrong size on EMSActorSaveInterface_ComponentsToSave");
static_assert(offsetof(EMSActorSaveInterface_ComponentsToSave, Components) == 0x000000, "Member 'EMSActorSaveInterface_ComponentsToSave::Components' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncCheck.CheckSaveFiles
// 0x0030 (0x0030 - 0x0000)
struct EMSAsyncCheck_CheckSaveFiles final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESaveFileCheckType                            CheckType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomSaveName;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompareGameVersion;                               // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEMSAsyncCheck*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncCheck_CheckSaveFiles) == 0x000008, "Wrong alignment on EMSAsyncCheck_CheckSaveFiles");
static_assert(sizeof(EMSAsyncCheck_CheckSaveFiles) == 0x000030, "Wrong size on EMSAsyncCheck_CheckSaveFiles");
static_assert(offsetof(EMSAsyncCheck_CheckSaveFiles, WorldContextObject) == 0x000000, "Member 'EMSAsyncCheck_CheckSaveFiles::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSAsyncCheck_CheckSaveFiles, CheckType) == 0x000008, "Member 'EMSAsyncCheck_CheckSaveFiles::CheckType' has a wrong offset!");
static_assert(offsetof(EMSAsyncCheck_CheckSaveFiles, CustomSaveName) == 0x000010, "Member 'EMSAsyncCheck_CheckSaveFiles::CustomSaveName' has a wrong offset!");
static_assert(offsetof(EMSAsyncCheck_CheckSaveFiles, bCompareGameVersion) == 0x000020, "Member 'EMSAsyncCheck_CheckSaveFiles::bCompareGameVersion' has a wrong offset!");
static_assert(offsetof(EMSAsyncCheck_CheckSaveFiles, ReturnValue) == 0x000028, "Member 'EMSAsyncCheck_CheckSaveFiles::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncLoadGame.AsyncLoadActors
// 0x0018 (0x0018 - 0x0000)
struct EMSAsyncLoadGame_AsyncLoadActors final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Data;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFullReload;                                       // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEMSAsyncLoadGame*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncLoadGame_AsyncLoadActors) == 0x000008, "Wrong alignment on EMSAsyncLoadGame_AsyncLoadActors");
static_assert(sizeof(EMSAsyncLoadGame_AsyncLoadActors) == 0x000018, "Wrong size on EMSAsyncLoadGame_AsyncLoadActors");
static_assert(offsetof(EMSAsyncLoadGame_AsyncLoadActors, WorldContextObject) == 0x000000, "Member 'EMSAsyncLoadGame_AsyncLoadActors::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSAsyncLoadGame_AsyncLoadActors, Data) == 0x000008, "Member 'EMSAsyncLoadGame_AsyncLoadActors::Data' has a wrong offset!");
static_assert(offsetof(EMSAsyncLoadGame_AsyncLoadActors, bFullReload) == 0x00000C, "Member 'EMSAsyncLoadGame_AsyncLoadActors::bFullReload' has a wrong offset!");
static_assert(offsetof(EMSAsyncLoadGame_AsyncLoadActors, ReturnValue) == 0x000010, "Member 'EMSAsyncLoadGame_AsyncLoadActors::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncLoadGame.AutoLoadLevelActors
// 0x0008 (0x0008 - 0x0000)
struct EMSAsyncLoadGame_AutoLoadLevelActors final
{
public:
	class UEMSObject*                             EMSObject;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncLoadGame_AutoLoadLevelActors) == 0x000008, "Wrong alignment on EMSAsyncLoadGame_AutoLoadLevelActors");
static_assert(sizeof(EMSAsyncLoadGame_AutoLoadLevelActors) == 0x000008, "Wrong size on EMSAsyncLoadGame_AutoLoadLevelActors");
static_assert(offsetof(EMSAsyncLoadGame_AutoLoadLevelActors, EMSObject) == 0x000000, "Member 'EMSAsyncLoadGame_AutoLoadLevelActors::EMSObject' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncLoadGame.FinishTaskThreadSafe
// 0x0008 (0x0008 - 0x0000)
struct EMSAsyncLoadGame_FinishTaskThreadSafe final
{
public:
	TWeakObjectPtr<class UEMSAsyncLoadGame>       InTask;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncLoadGame_FinishTaskThreadSafe) == 0x000004, "Wrong alignment on EMSAsyncLoadGame_FinishTaskThreadSafe");
static_assert(sizeof(EMSAsyncLoadGame_FinishTaskThreadSafe) == 0x000008, "Wrong size on EMSAsyncLoadGame_FinishTaskThreadSafe");
static_assert(offsetof(EMSAsyncLoadGame_FinishTaskThreadSafe, InTask) == 0x000000, "Member 'EMSAsyncLoadGame_FinishTaskThreadSafe::InTask' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncSaveGame.AsyncSaveActors
// 0x0018 (0x0018 - 0x0000)
struct EMSAsyncSaveGame_AsyncSaveActors final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Data;                                              // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEMSAsyncSaveGame*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncSaveGame_AsyncSaveActors) == 0x000008, "Wrong alignment on EMSAsyncSaveGame_AsyncSaveActors");
static_assert(sizeof(EMSAsyncSaveGame_AsyncSaveActors) == 0x000018, "Wrong size on EMSAsyncSaveGame_AsyncSaveActors");
static_assert(offsetof(EMSAsyncSaveGame_AsyncSaveActors, WorldContextObject) == 0x000000, "Member 'EMSAsyncSaveGame_AsyncSaveActors::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSAsyncSaveGame_AsyncSaveActors, Data) == 0x000008, "Member 'EMSAsyncSaveGame_AsyncSaveActors::Data' has a wrong offset!");
static_assert(offsetof(EMSAsyncSaveGame_AsyncSaveActors, ReturnValue) == 0x000010, "Member 'EMSAsyncSaveGame_AsyncSaveActors::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncSaveGame.AutoSaveLevelActors
// 0x0008 (0x0008 - 0x0000)
struct EMSAsyncSaveGame_AutoSaveLevelActors final
{
public:
	class UEMSObject*                             EMSObject;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncSaveGame_AutoSaveLevelActors) == 0x000008, "Wrong alignment on EMSAsyncSaveGame_AutoSaveLevelActors");
static_assert(sizeof(EMSAsyncSaveGame_AutoSaveLevelActors) == 0x000008, "Wrong size on EMSAsyncSaveGame_AutoSaveLevelActors");
static_assert(offsetof(EMSAsyncSaveGame_AutoSaveLevelActors, EMSObject) == 0x000000, "Member 'EMSAsyncSaveGame_AutoSaveLevelActors::EMSObject' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncStream.InitStreamingLoadTask
// 0x0018 (0x0018 - 0x0000)
struct EMSAsyncStream_InitStreamingLoadTask final
{
public:
	class UEMSObject*                             EMSObject;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevel*                                 InLevel;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSAsyncStream_InitStreamingLoadTask) == 0x000008, "Wrong alignment on EMSAsyncStream_InitStreamingLoadTask");
static_assert(sizeof(EMSAsyncStream_InitStreamingLoadTask) == 0x000018, "Wrong size on EMSAsyncStream_InitStreamingLoadTask");
static_assert(offsetof(EMSAsyncStream_InitStreamingLoadTask, EMSObject) == 0x000000, "Member 'EMSAsyncStream_InitStreamingLoadTask::EMSObject' has a wrong offset!");
static_assert(offsetof(EMSAsyncStream_InitStreamingLoadTask, InLevel) == 0x000008, "Member 'EMSAsyncStream_InitStreamingLoadTask::InLevel' has a wrong offset!");
static_assert(offsetof(EMSAsyncStream_InitStreamingLoadTask, ReturnValue) == 0x000010, "Member 'EMSAsyncStream_InitStreamingLoadTask::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSAsyncWait.AsyncWaitForOperation
// 0x0018 (0x0018 - 0x0000)
struct EMSAsyncWait_AsyncWaitForOperation final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAsyncCheckType                               CheckType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEMSAsyncWait*                          ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSAsyncWait_AsyncWaitForOperation) == 0x000008, "Wrong alignment on EMSAsyncWait_AsyncWaitForOperation");
static_assert(sizeof(EMSAsyncWait_AsyncWaitForOperation) == 0x000018, "Wrong size on EMSAsyncWait_AsyncWaitForOperation");
static_assert(offsetof(EMSAsyncWait_AsyncWaitForOperation, WorldContextObject) == 0x000000, "Member 'EMSAsyncWait_AsyncWaitForOperation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSAsyncWait_AsyncWaitForOperation, CheckType) == 0x000008, "Member 'EMSAsyncWait_AsyncWaitForOperation::CheckType' has a wrong offset!");
static_assert(offsetof(EMSAsyncWait_AsyncWaitForOperation, ReturnValue) == 0x000010, "Member 'EMSAsyncWait_AsyncWaitForOperation::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.ClearMultiLevelSave
// 0x0008 (0x0008 - 0x0000)
struct EMSFunctionLibrary_ClearMultiLevelSave final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_ClearMultiLevelSave) == 0x000008, "Wrong alignment on EMSFunctionLibrary_ClearMultiLevelSave");
static_assert(sizeof(EMSFunctionLibrary_ClearMultiLevelSave) == 0x000008, "Wrong size on EMSFunctionLibrary_ClearMultiLevelSave");
static_assert(offsetof(EMSFunctionLibrary_ClearMultiLevelSave, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_ClearMultiLevelSave::WorldContextObject' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.ClearWorldPartition
// 0x0008 (0x0008 - 0x0000)
struct EMSFunctionLibrary_ClearWorldPartition final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_ClearWorldPartition) == 0x000008, "Wrong alignment on EMSFunctionLibrary_ClearWorldPartition");
static_assert(sizeof(EMSFunctionLibrary_ClearWorldPartition) == 0x000008, "Wrong size on EMSFunctionLibrary_ClearWorldPartition");
static_assert(offsetof(EMSFunctionLibrary_ClearWorldPartition, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_ClearWorldPartition::WorldContextObject' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.DeleteAllSaveDataForSlot
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_DeleteAllSaveDataForSlot final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_DeleteAllSaveDataForSlot) == 0x000008, "Wrong alignment on EMSFunctionLibrary_DeleteAllSaveDataForSlot");
static_assert(sizeof(EMSFunctionLibrary_DeleteAllSaveDataForSlot) == 0x000018, "Wrong size on EMSFunctionLibrary_DeleteAllSaveDataForSlot");
static_assert(offsetof(EMSFunctionLibrary_DeleteAllSaveDataForSlot, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_DeleteAllSaveDataForSlot::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DeleteAllSaveDataForSlot, SaveGameName) == 0x000008, "Member 'EMSFunctionLibrary_DeleteAllSaveDataForSlot::SaveGameName' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.DeleteCustomPlayerFile
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_DeleteCustomPlayerFile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_DeleteCustomPlayerFile) == 0x000008, "Wrong alignment on EMSFunctionLibrary_DeleteCustomPlayerFile");
static_assert(sizeof(EMSFunctionLibrary_DeleteCustomPlayerFile) == 0x000020, "Wrong size on EMSFunctionLibrary_DeleteCustomPlayerFile");
static_assert(offsetof(EMSFunctionLibrary_DeleteCustomPlayerFile, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_DeleteCustomPlayerFile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DeleteCustomPlayerFile, Filename) == 0x000008, "Member 'EMSFunctionLibrary_DeleteCustomPlayerFile::Filename' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DeleteCustomPlayerFile, ReturnValue) == 0x000018, "Member 'EMSFunctionLibrary_DeleteCustomPlayerFile::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.DeleteCustomSave
// 0x0010 (0x0010 - 0x0000)
struct EMSFunctionLibrary_DeleteCustomSave final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEMSCustomSaveGame*                     SaveGame;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_DeleteCustomSave) == 0x000008, "Wrong alignment on EMSFunctionLibrary_DeleteCustomSave");
static_assert(sizeof(EMSFunctionLibrary_DeleteCustomSave) == 0x000010, "Wrong size on EMSFunctionLibrary_DeleteCustomSave");
static_assert(offsetof(EMSFunctionLibrary_DeleteCustomSave, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_DeleteCustomSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DeleteCustomSave, SaveGame) == 0x000008, "Member 'EMSFunctionLibrary_DeleteCustomSave::SaveGame' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.DeleteSaveUser
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_DeleteSaveUser final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 username;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_DeleteSaveUser) == 0x000008, "Wrong alignment on EMSFunctionLibrary_DeleteSaveUser");
static_assert(sizeof(EMSFunctionLibrary_DeleteSaveUser) == 0x000018, "Wrong size on EMSFunctionLibrary_DeleteSaveUser");
static_assert(offsetof(EMSFunctionLibrary_DeleteSaveUser, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_DeleteSaveUser::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DeleteSaveUser, username) == 0x000008, "Member 'EMSFunctionLibrary_DeleteSaveUser::username' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.DoesSaveSlotExist
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_DoesSaveSlotExist final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bComplete;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_DoesSaveSlotExist) == 0x000008, "Wrong alignment on EMSFunctionLibrary_DoesSaveSlotExist");
static_assert(sizeof(EMSFunctionLibrary_DoesSaveSlotExist) == 0x000020, "Wrong size on EMSFunctionLibrary_DoesSaveSlotExist");
static_assert(offsetof(EMSFunctionLibrary_DoesSaveSlotExist, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_DoesSaveSlotExist::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DoesSaveSlotExist, SaveGameName) == 0x000008, "Member 'EMSFunctionLibrary_DoesSaveSlotExist::SaveGameName' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DoesSaveSlotExist, bComplete) == 0x000018, "Member 'EMSFunctionLibrary_DoesSaveSlotExist::bComplete' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_DoesSaveSlotExist, ReturnValue) == 0x000019, "Member 'EMSFunctionLibrary_DoesSaveSlotExist::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.ExportSaveThumbnail
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_ExportSaveThumbnail final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 TextureRenderTarget;                               // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_ExportSaveThumbnail) == 0x000008, "Wrong alignment on EMSFunctionLibrary_ExportSaveThumbnail");
static_assert(sizeof(EMSFunctionLibrary_ExportSaveThumbnail) == 0x000020, "Wrong size on EMSFunctionLibrary_ExportSaveThumbnail");
static_assert(offsetof(EMSFunctionLibrary_ExportSaveThumbnail, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_ExportSaveThumbnail::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_ExportSaveThumbnail, TextureRenderTarget) == 0x000008, "Member 'EMSFunctionLibrary_ExportSaveThumbnail::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_ExportSaveThumbnail, SaveGameName) == 0x000010, "Member 'EMSFunctionLibrary_ExportSaveThumbnail::SaveGameName' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.GetAllSaveUsers
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_GetAllSaveUsers final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_GetAllSaveUsers) == 0x000008, "Wrong alignment on EMSFunctionLibrary_GetAllSaveUsers");
static_assert(sizeof(EMSFunctionLibrary_GetAllSaveUsers) == 0x000018, "Wrong size on EMSFunctionLibrary_GetAllSaveUsers");
static_assert(offsetof(EMSFunctionLibrary_GetAllSaveUsers, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_GetAllSaveUsers::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetAllSaveUsers, ReturnValue) == 0x000008, "Member 'EMSFunctionLibrary_GetAllSaveUsers::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.GetCustomSave
// 0x0038 (0x0038 - 0x0000)
struct EMSFunctionLibrary_GetCustomSave final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEMSCustomSaveGame>         SaveGameClass;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveSlot;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEMSCustomSaveGame*                     ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_GetCustomSave) == 0x000008, "Wrong alignment on EMSFunctionLibrary_GetCustomSave");
static_assert(sizeof(EMSFunctionLibrary_GetCustomSave) == 0x000038, "Wrong size on EMSFunctionLibrary_GetCustomSave");
static_assert(offsetof(EMSFunctionLibrary_GetCustomSave, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_GetCustomSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetCustomSave, SaveGameClass) == 0x000008, "Member 'EMSFunctionLibrary_GetCustomSave::SaveGameClass' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetCustomSave, SaveSlot) == 0x000010, "Member 'EMSFunctionLibrary_GetCustomSave::SaveSlot' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetCustomSave, Filename) == 0x000020, "Member 'EMSFunctionLibrary_GetCustomSave::Filename' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetCustomSave, ReturnValue) == 0x000030, "Member 'EMSFunctionLibrary_GetCustomSave::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.GetNamedSlotInfo
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_GetNamedSlotInfo final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEMSInfoSaveGame*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_GetNamedSlotInfo) == 0x000008, "Wrong alignment on EMSFunctionLibrary_GetNamedSlotInfo");
static_assert(sizeof(EMSFunctionLibrary_GetNamedSlotInfo) == 0x000020, "Wrong size on EMSFunctionLibrary_GetNamedSlotInfo");
static_assert(offsetof(EMSFunctionLibrary_GetNamedSlotInfo, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_GetNamedSlotInfo::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetNamedSlotInfo, SaveGameName) == 0x000008, "Member 'EMSFunctionLibrary_GetNamedSlotInfo::SaveGameName' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetNamedSlotInfo, ReturnValue) == 0x000018, "Member 'EMSFunctionLibrary_GetNamedSlotInfo::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.GetSlotInfoSaveGame
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_GetSlotInfoSaveGame final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEMSInfoSaveGame*                       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_GetSlotInfoSaveGame) == 0x000008, "Wrong alignment on EMSFunctionLibrary_GetSlotInfoSaveGame");
static_assert(sizeof(EMSFunctionLibrary_GetSlotInfoSaveGame) == 0x000020, "Wrong size on EMSFunctionLibrary_GetSlotInfoSaveGame");
static_assert(offsetof(EMSFunctionLibrary_GetSlotInfoSaveGame, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_GetSlotInfoSaveGame::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetSlotInfoSaveGame, SaveGameName) == 0x000008, "Member 'EMSFunctionLibrary_GetSlotInfoSaveGame::SaveGameName' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetSlotInfoSaveGame, ReturnValue) == 0x000018, "Member 'EMSFunctionLibrary_GetSlotInfoSaveGame::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.GetSortedSaveSlots
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_GetSortedSaveSlots final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_GetSortedSaveSlots) == 0x000008, "Wrong alignment on EMSFunctionLibrary_GetSortedSaveSlots");
static_assert(sizeof(EMSFunctionLibrary_GetSortedSaveSlots) == 0x000018, "Wrong size on EMSFunctionLibrary_GetSortedSaveSlots");
static_assert(offsetof(EMSFunctionLibrary_GetSortedSaveSlots, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_GetSortedSaveSlots::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_GetSortedSaveSlots, ReturnValue) == 0x000008, "Member 'EMSFunctionLibrary_GetSortedSaveSlots::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.ImportSaveThumbnail
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_ImportSaveThumbnail final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_ImportSaveThumbnail) == 0x000008, "Wrong alignment on EMSFunctionLibrary_ImportSaveThumbnail");
static_assert(sizeof(EMSFunctionLibrary_ImportSaveThumbnail) == 0x000020, "Wrong size on EMSFunctionLibrary_ImportSaveThumbnail");
static_assert(offsetof(EMSFunctionLibrary_ImportSaveThumbnail, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_ImportSaveThumbnail::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_ImportSaveThumbnail, SaveGameName) == 0x000008, "Member 'EMSFunctionLibrary_ImportSaveThumbnail::SaveGameName' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_ImportSaveThumbnail, ReturnValue) == 0x000018, "Member 'EMSFunctionLibrary_ImportSaveThumbnail::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.IsLevelStreamingActive
// 0x0010 (0x0010 - 0x0000)
struct EMSFunctionLibrary_IsLevelStreamingActive final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_IsLevelStreamingActive) == 0x000008, "Wrong alignment on EMSFunctionLibrary_IsLevelStreamingActive");
static_assert(sizeof(EMSFunctionLibrary_IsLevelStreamingActive) == 0x000010, "Wrong size on EMSFunctionLibrary_IsLevelStreamingActive");
static_assert(offsetof(EMSFunctionLibrary_IsLevelStreamingActive, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_IsLevelStreamingActive::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_IsLevelStreamingActive, ReturnValue) == 0x000008, "Member 'EMSFunctionLibrary_IsLevelStreamingActive::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.IsSavingOrLoading
// 0x0010 (0x0010 - 0x0000)
struct EMSFunctionLibrary_IsSavingOrLoading final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_IsSavingOrLoading) == 0x000008, "Wrong alignment on EMSFunctionLibrary_IsSavingOrLoading");
static_assert(sizeof(EMSFunctionLibrary_IsSavingOrLoading) == 0x000010, "Wrong size on EMSFunctionLibrary_IsSavingOrLoading");
static_assert(offsetof(EMSFunctionLibrary_IsSavingOrLoading, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_IsSavingOrLoading::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_IsSavingOrLoading, ReturnValue) == 0x000008, "Member 'EMSFunctionLibrary_IsSavingOrLoading::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.IsWorldPartition
// 0x0010 (0x0010 - 0x0000)
struct EMSFunctionLibrary_IsWorldPartition final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_IsWorldPartition) == 0x000008, "Wrong alignment on EMSFunctionLibrary_IsWorldPartition");
static_assert(sizeof(EMSFunctionLibrary_IsWorldPartition) == 0x000010, "Wrong size on EMSFunctionLibrary_IsWorldPartition");
static_assert(offsetof(EMSFunctionLibrary_IsWorldPartition, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_IsWorldPartition::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_IsWorldPartition, ReturnValue) == 0x000008, "Member 'EMSFunctionLibrary_IsWorldPartition::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.LoadPlayerActorsCustom
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_LoadPlayerActorsCustom final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_LoadPlayerActorsCustom) == 0x000008, "Wrong alignment on EMSFunctionLibrary_LoadPlayerActorsCustom");
static_assert(sizeof(EMSFunctionLibrary_LoadPlayerActorsCustom) == 0x000020, "Wrong size on EMSFunctionLibrary_LoadPlayerActorsCustom");
static_assert(offsetof(EMSFunctionLibrary_LoadPlayerActorsCustom, Controller) == 0x000000, "Member 'EMSFunctionLibrary_LoadPlayerActorsCustom::Controller' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_LoadPlayerActorsCustom, Filename) == 0x000008, "Member 'EMSFunctionLibrary_LoadPlayerActorsCustom::Filename' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_LoadPlayerActorsCustom, ReturnValue) == 0x000018, "Member 'EMSFunctionLibrary_LoadPlayerActorsCustom::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.LoadRawObject
// 0x0028 (0x0028 - 0x0000)
struct EMSFunctionLibrary_LoadRawObject final
{
public:
	class AActor*                                 WorldContextActor;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRawObjectSaveData                     Data;                                              // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_LoadRawObject) == 0x000008, "Wrong alignment on EMSFunctionLibrary_LoadRawObject");
static_assert(sizeof(EMSFunctionLibrary_LoadRawObject) == 0x000028, "Wrong size on EMSFunctionLibrary_LoadRawObject");
static_assert(offsetof(EMSFunctionLibrary_LoadRawObject, WorldContextActor) == 0x000000, "Member 'EMSFunctionLibrary_LoadRawObject::WorldContextActor' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_LoadRawObject, Data) == 0x000008, "Member 'EMSFunctionLibrary_LoadRawObject::Data' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_LoadRawObject, ReturnValue) == 0x000020, "Member 'EMSFunctionLibrary_LoadRawObject::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.SaveCustom
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_SaveCustom final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEMSCustomSaveGame*                     SaveGame;                                          // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_SaveCustom) == 0x000008, "Wrong alignment on EMSFunctionLibrary_SaveCustom");
static_assert(sizeof(EMSFunctionLibrary_SaveCustom) == 0x000018, "Wrong size on EMSFunctionLibrary_SaveCustom");
static_assert(offsetof(EMSFunctionLibrary_SaveCustom, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_SaveCustom::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SaveCustom, SaveGame) == 0x000008, "Member 'EMSFunctionLibrary_SaveCustom::SaveGame' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SaveCustom, ReturnValue) == 0x000010, "Member 'EMSFunctionLibrary_SaveCustom::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.SavePlayerActorsCustom
// 0x0020 (0x0020 - 0x0000)
struct EMSFunctionLibrary_SavePlayerActorsCustom final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_SavePlayerActorsCustom) == 0x000008, "Wrong alignment on EMSFunctionLibrary_SavePlayerActorsCustom");
static_assert(sizeof(EMSFunctionLibrary_SavePlayerActorsCustom) == 0x000020, "Wrong size on EMSFunctionLibrary_SavePlayerActorsCustom");
static_assert(offsetof(EMSFunctionLibrary_SavePlayerActorsCustom, Controller) == 0x000000, "Member 'EMSFunctionLibrary_SavePlayerActorsCustom::Controller' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SavePlayerActorsCustom, Filename) == 0x000008, "Member 'EMSFunctionLibrary_SavePlayerActorsCustom::Filename' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SavePlayerActorsCustom, ReturnValue) == 0x000018, "Member 'EMSFunctionLibrary_SavePlayerActorsCustom::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.SaveRawObject
// 0x0028 (0x0028 - 0x0000)
struct EMSFunctionLibrary_SaveRawObject final
{
public:
	class AActor*                                 WorldContextActor;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRawObjectSaveData                     Data;                                              // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_SaveRawObject) == 0x000008, "Wrong alignment on EMSFunctionLibrary_SaveRawObject");
static_assert(sizeof(EMSFunctionLibrary_SaveRawObject) == 0x000028, "Wrong size on EMSFunctionLibrary_SaveRawObject");
static_assert(offsetof(EMSFunctionLibrary_SaveRawObject, WorldContextActor) == 0x000000, "Member 'EMSFunctionLibrary_SaveRawObject::WorldContextActor' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SaveRawObject, Data) == 0x000008, "Member 'EMSFunctionLibrary_SaveRawObject::Data' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SaveRawObject, ReturnValue) == 0x000020, "Member 'EMSFunctionLibrary_SaveRawObject::ReturnValue' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.SetActorSaveProperties
// 0x0010 (0x0010 - 0x0000)
struct EMSFunctionLibrary_SetActorSaveProperties final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipSave;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPersistent;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipTransform;                                    // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELoadedStateMod                               LoadedState;                                       // 0x000B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EMSFunctionLibrary_SetActorSaveProperties) == 0x000008, "Wrong alignment on EMSFunctionLibrary_SetActorSaveProperties");
static_assert(sizeof(EMSFunctionLibrary_SetActorSaveProperties) == 0x000010, "Wrong size on EMSFunctionLibrary_SetActorSaveProperties");
static_assert(offsetof(EMSFunctionLibrary_SetActorSaveProperties, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_SetActorSaveProperties::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SetActorSaveProperties, bSkipSave) == 0x000008, "Member 'EMSFunctionLibrary_SetActorSaveProperties::bSkipSave' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SetActorSaveProperties, bPersistent) == 0x000009, "Member 'EMSFunctionLibrary_SetActorSaveProperties::bPersistent' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SetActorSaveProperties, bSkipTransform) == 0x00000A, "Member 'EMSFunctionLibrary_SetActorSaveProperties::bSkipTransform' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SetActorSaveProperties, LoadedState) == 0x00000B, "Member 'EMSFunctionLibrary_SetActorSaveProperties::LoadedState' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.SetCurrentSaveGameName
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_SetCurrentSaveGameName final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveGameName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_SetCurrentSaveGameName) == 0x000008, "Wrong alignment on EMSFunctionLibrary_SetCurrentSaveGameName");
static_assert(sizeof(EMSFunctionLibrary_SetCurrentSaveGameName) == 0x000018, "Wrong size on EMSFunctionLibrary_SetCurrentSaveGameName");
static_assert(offsetof(EMSFunctionLibrary_SetCurrentSaveGameName, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_SetCurrentSaveGameName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SetCurrentSaveGameName, SaveGameName) == 0x000008, "Member 'EMSFunctionLibrary_SetCurrentSaveGameName::SaveGameName' has a wrong offset!");

// Function EasyMultiSave.EMSFunctionLibrary.SetCurrentSaveUserName
// 0x0018 (0x0018 - 0x0000)
struct EMSFunctionLibrary_SetCurrentSaveUserName final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 username;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EMSFunctionLibrary_SetCurrentSaveUserName) == 0x000008, "Wrong alignment on EMSFunctionLibrary_SetCurrentSaveUserName");
static_assert(sizeof(EMSFunctionLibrary_SetCurrentSaveUserName) == 0x000018, "Wrong size on EMSFunctionLibrary_SetCurrentSaveUserName");
static_assert(offsetof(EMSFunctionLibrary_SetCurrentSaveUserName, WorldContextObject) == 0x000000, "Member 'EMSFunctionLibrary_SetCurrentSaveUserName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(EMSFunctionLibrary_SetCurrentSaveUserName, username) == 0x000008, "Member 'EMSFunctionLibrary_SetCurrentSaveUserName::username' has a wrong offset!");

}

