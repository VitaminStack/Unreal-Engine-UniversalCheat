#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterWayPoint

#include "Basic.hpp"

#include "E_OrderOptions_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_StartingAIBehaviours_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterWayPoint.BP_MasterWayPoint_C
// 0x0070 (0x0308 - 0x0298)
class ABP_MasterWayPoint_C final : public AActor
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Way_Point_Face_Direction;                          // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wait_Time_Deviation;                               // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wait_Time;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   Way_Point_Montages;                                // 0x02E0(0x0010)(Edit, BlueprintVisible)
	E_OrderOptions                                Animations_Order;                                  // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop_Animations;                                   // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotate_To_Face_Direction;                          // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Rotation_Arrow;                               // 0x02F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Change_AI_Behaviour;                               // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StartingAIBehaviours                        New_Behaviour;                                     // 0x02F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Temporary_Behaviour;                            // 0x02F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F7[0x1];                                      // 0x02F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temporary_Time;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_In_Game;                                      // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterWayPoint_C">();
	}
	static class ABP_MasterWayPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterWayPoint_C>();
	}
};
static_assert(alignof(ABP_MasterWayPoint_C) == 0x000008, "Wrong alignment on ABP_MasterWayPoint_C");
static_assert(sizeof(ABP_MasterWayPoint_C) == 0x000308, "Wrong size on ABP_MasterWayPoint_C");
static_assert(offsetof(ABP_MasterWayPoint_C, Arrow) == 0x000298, "Member 'ABP_MasterWayPoint_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Box) == 0x0002A0, "Member 'ABP_MasterWayPoint_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Scene) == 0x0002A8, "Member 'ABP_MasterWayPoint_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Billboard) == 0x0002B0, "Member 'ABP_MasterWayPoint_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Way_Point_Face_Direction) == 0x0002B8, "Member 'ABP_MasterWayPoint_C::Way_Point_Face_Direction' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Wait_Time_Deviation) == 0x0002D0, "Member 'ABP_MasterWayPoint_C::Wait_Time_Deviation' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Wait_Time) == 0x0002D8, "Member 'ABP_MasterWayPoint_C::Wait_Time' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Way_Point_Montages) == 0x0002E0, "Member 'ABP_MasterWayPoint_C::Way_Point_Montages' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Animations_Order) == 0x0002F0, "Member 'ABP_MasterWayPoint_C::Animations_Order' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Loop_Animations) == 0x0002F1, "Member 'ABP_MasterWayPoint_C::Loop_Animations' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Rotate_To_Face_Direction) == 0x0002F2, "Member 'ABP_MasterWayPoint_C::Rotate_To_Face_Direction' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Hide_Rotation_Arrow) == 0x0002F3, "Member 'ABP_MasterWayPoint_C::Hide_Rotation_Arrow' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Change_AI_Behaviour) == 0x0002F4, "Member 'ABP_MasterWayPoint_C::Change_AI_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, New_Behaviour) == 0x0002F5, "Member 'ABP_MasterWayPoint_C::New_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Is_Temporary_Behaviour) == 0x0002F6, "Member 'ABP_MasterWayPoint_C::Is_Temporary_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Temporary_Time) == 0x0002F8, "Member 'ABP_MasterWayPoint_C::Temporary_Time' has a wrong offset!");
static_assert(offsetof(ABP_MasterWayPoint_C, Show_In_Game) == 0x000300, "Member 'ABP_MasterWayPoint_C::Show_In_Game' has a wrong offset!");

}

