#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageComponent

#include "Basic.hpp"

#include "DamageComponent_classes.hpp"
#include "DamageComponent_parameters.hpp"


namespace SDK
{

// Function DamageComponent.DamageComponent_C.BurningFinished
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Death_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::BurningFinished(bool Death_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "BurningFinished");

	Params::DamageComponent_C_BurningFinished Parms{};

	Parms.Death_ = Death_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DamageComponent.DamageComponent_C.ComponentLoaded
// (Event, Public, BlueprintEvent)

void UDamageComponent_C::ComponentLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "ComponentLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DamageComponent.DamageComponent_C.ComponentPreSave
// (Event, Public, BlueprintEvent)

void UDamageComponent_C::ComponentPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "ComponentPreSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DamageComponent.DamageComponent_C.DamageTaken
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DmgAmount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DmgType                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DmgCauser                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::DamageTaken(double DmgAmount, const class UDamageType* DmgType, class AActor* DmgCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "DamageTaken");

	Params::DamageComponent_C_DamageTaken Parms{};

	Parms.DmgAmount = DmgAmount;
	Parms.DmgType = DmgType;
	Parms.DmgCauser = DmgCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DamageComponent.DamageComponent_C.Event_BloodSplatterFX
// (BlueprintCallable, BlueprintEvent)

void UDamageComponent_C::Event_BloodSplatterFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "Event_BloodSplatterFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DamageComponent.DamageComponent_C.ExecuteUbergraph_DamageComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::ExecuteUbergraph_DamageComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "ExecuteUbergraph_DamageComponent");

	Params::DamageComponent_C_ExecuteUbergraph_DamageComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DamageComponent.DamageComponent_C.FireDamageTaken
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DmgAmount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DmgCauser                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::FireDamageTaken(double DmgAmount, class AActor* DmgCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "FireDamageTaken");

	Params::DamageComponent_C_FireDamageTaken Parms{};

	Parms.DmgAmount = DmgAmount;
	Parms.DmgCauser = DmgCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DamageComponent.DamageComponent_C.GetValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  StandardHealth                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CurrentHealth_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::GetValues(double* StandardHealth, double* CurrentHealth_0, double* MaxHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "GetValues");

	Params::DamageComponent_C_GetValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StandardHealth != nullptr)
		*StandardHealth = Parms.StandardHealth;

	if (CurrentHealth_0 != nullptr)
		*CurrentHealth_0 = Parms.CurrentHealth_0;

	if (MaxHealth_0 != nullptr)
		*MaxHealth_0 = Parms.MaxHealth_0;
}


// Function DamageComponent.DamageComponent_C.IsAlive?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Alive_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::IsAlive_(bool* Alive_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "IsAlive?");

	Params::DamageComponent_C_IsAlive_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Alive_ != nullptr)
		*Alive_ = Parms.Alive_;
}


// Function DamageComponent.DamageComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UDamageComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DamageComponent.DamageComponent_C.SetCurrent&MaxHealth_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CurrentHealth_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxHealth_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::SetCurrent_MaxHealth_Event(double CurrentHealth_0, double MaxHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "SetCurrent&MaxHealth_Event");

	Params::DamageComponent_C_SetCurrent_MaxHealth_Event Parms{};

	Parms.CurrentHealth_0 = CurrentHealth_0;
	Parms.MaxHealth_0 = MaxHealth_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DamageComponent.DamageComponent_C.SetHealth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ScaleHealth_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDamageComponent_C::SetHealth(double Health, bool ScaleHealth_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DamageComponent_C", "SetHealth");

	Params::DamageComponent_C_SetHealth Parms{};

	Parms.Health = Health;
	Parms.ScaleHealth_ = ScaleHealth_;

	UObject::ProcessEvent(Func, &Parms);
}

}

