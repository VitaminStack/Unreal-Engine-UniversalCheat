#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Game

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HUD_Game.HUD_Game_C
// 0x0090 (0x0418 - 0x0388)
class AHUD_Game_C final : public AHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDaysSurvivedWidget_C*                  DaysSurvivedUI;                                    // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNotificationParentWidget_C*            NotificationUI;                                    // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UZoneAreaWidget_C*                      AreaUI;                                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTimeUI_C*                              TimeUI;                                            // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          TimeIsOpen_;                                       // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIHealthBarUI_C*                       AiHealthBar;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPauseScreen_C*                         PauseMenu;                                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInteractionTimerUI_C*                  InteractTimerWidget;                               // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USafeZoneUI_C*                          SafeZoneUI;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractWidget_C*                   InteractWidget;                                    // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_LootContainerWidget_C*              LootContainerWidget;                               // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URadioTextUI_C*                         RadioTextUI;                                       // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBuildableRenameObject_C*               ChangeNameWidget;                                  // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USleepingUI_C*                          SleepUI;                                           // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPOIDiscoveredUI_C*                     POIDiscover;                                       // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UModularYesNoUI_C*                      YesNoUI;                                           // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BindAreaUIFinished();
	void BindEnteringFinished();
	void BindLeavingFinished();
	void Client_ForceUnpause(class UWidget* Target);
	void Client_PauseGame(bool Toggle);
	void CreateRadioTextWidget(bool Visible_, const struct FStruct_Radio& RadioStruct, class ABP_Radio_Text_C* RadioRef);
	void DaysSurvivedHUD();
	void DiscoverPOI(const struct FStruct_POI& POI);
	void ExecuteUbergraph_HUD_Game(int32 EntryPoint);
	void InteractTimerUI(bool Open_, const class FText& InteractionText);
	void Notification(const struct FS_NotificationDetails& NotificationDetails);
	void Re_Initialise();
	void ReceiveBeginPlay();
	void RemoveInteractAndLootWidgets();
	void SafeZoneAreaUI(bool Show_);
	void ShowChangeObjectNameWidget(bool Show_, class AActor* ObjectRef);
	void ShowInteractWidget(bool Visible_, const class FText& Name_0, const class FText& AdditionalText, const TMap<struct FGameplayTag, class FText>& Options, const TMap<class FName, class FText>& Stats, class UWidget** Widget);
	void ShowLootContainerWidget(bool Show_, class AActor* Actor, const class FText& Container, const class FText& LootType, bool Marked_, bool Looted_, const TMap<struct FGameplayTag, class FText>& Options);
	void ShowSleepWidget(bool Show_);
	void Time();
	void ToggleAIHealthBar(bool Toggle, const class FString& Name_0, bool Boss_);
	void UpdateHealth(double Health, double MaxHealth);
	void UpdateInteractOptions(const struct FGameplayTag& OptionToUpdate, const class FText& Text, bool ClearOptions_);
	void UpdateInteractStats(const class FName StatToUpdate, const class FText& Value, bool ClearOptions_);
	void UpdateLootOptions(const struct FGameplayTag& OptionToUpdate, const class FText& Text, bool ClearOptions_);
	void YesAndNoUI(bool Show_, const class FText& Text, class UModularYesNoUI_C** UI);
	void ZoneAreaUI(bool Entering_, const class FText& Area_Name, class UTexture* Texture, const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_Game_C">();
	}
	static class AHUD_Game_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHUD_Game_C>();
	}
};
static_assert(alignof(AHUD_Game_C) == 0x000008, "Wrong alignment on AHUD_Game_C");
static_assert(sizeof(AHUD_Game_C) == 0x000418, "Wrong size on AHUD_Game_C");
static_assert(offsetof(AHUD_Game_C, UberGraphFrame) == 0x000388, "Member 'AHUD_Game_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, DefaultSceneRoot) == 0x000390, "Member 'AHUD_Game_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, DaysSurvivedUI) == 0x000398, "Member 'AHUD_Game_C::DaysSurvivedUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, NotificationUI) == 0x0003A0, "Member 'AHUD_Game_C::NotificationUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, AreaUI) == 0x0003A8, "Member 'AHUD_Game_C::AreaUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, TimeUI) == 0x0003B0, "Member 'AHUD_Game_C::TimeUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, TimeIsOpen_) == 0x0003B8, "Member 'AHUD_Game_C::TimeIsOpen_' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, AiHealthBar) == 0x0003C0, "Member 'AHUD_Game_C::AiHealthBar' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, PauseMenu) == 0x0003C8, "Member 'AHUD_Game_C::PauseMenu' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, InteractTimerWidget) == 0x0003D0, "Member 'AHUD_Game_C::InteractTimerWidget' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, SafeZoneUI) == 0x0003D8, "Member 'AHUD_Game_C::SafeZoneUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, InteractWidget) == 0x0003E0, "Member 'AHUD_Game_C::InteractWidget' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, LootContainerWidget) == 0x0003E8, "Member 'AHUD_Game_C::LootContainerWidget' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, RadioTextUI) == 0x0003F0, "Member 'AHUD_Game_C::RadioTextUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, ChangeNameWidget) == 0x0003F8, "Member 'AHUD_Game_C::ChangeNameWidget' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, SleepUI) == 0x000400, "Member 'AHUD_Game_C::SleepUI' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, POIDiscover) == 0x000408, "Member 'AHUD_Game_C::POIDiscover' has a wrong offset!");
static_assert(offsetof(AHUD_Game_C, YesNoUI) == 0x000410, "Member 'AHUD_Game_C::YesNoUI' has a wrong offset!");

}

