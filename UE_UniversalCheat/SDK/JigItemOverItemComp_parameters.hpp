#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: JigItemOverItemComp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_ReplicatedContainerInfo_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function JigItemOverItemComp.JigItemOverItemComp_C.ArmorRepair
// 0x0150 (0x0150 - 0x0000)
struct JigItemOverItemComp_C_ArmorRepair final
{
public:
	class UJSI_Slot_C*                            Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Dropped;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DurToFix;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability_1;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability_3;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_3;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef;         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_1;         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallServerConsumeRequest_Result;  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability_4;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_4;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_UpdateDurabilityByUID_Updated; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_2;             // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_UpdateDurabilityByUID_Updated_1; // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_ArmorRepair) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_ArmorRepair");
static_assert(sizeof(JigItemOverItemComp_C_ArmorRepair) == 0x000150, "Wrong size on JigItemOverItemComp_C_ArmorRepair");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, Receiver) == 0x000000, "Member 'JigItemOverItemComp_C_ArmorRepair::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, Dropped) == 0x000008, "Member 'JigItemOverItemComp_C_ArmorRepair::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, DurToFix) == 0x000010, "Member 'JigItemOverItemComp_C_ArmorRepair::DurToFix' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, Temp_string_Variable) == 0x000018, "Member 'JigItemOverItemComp_C_ArmorRepair::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_Durability) == 0x000030, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_MaxDurability) == 0x000038, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_Durability_1) == 0x000048, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_Durability_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_MaxDurability_1) == 0x000050, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_MaxDurability_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000060, "Member 'JigItemOverItemComp_C_ArmorRepair::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'JigItemOverItemComp_C_ArmorRepair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_Durability_2) == 0x000070, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_Durability_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_MaxDurability_2) == 0x000078, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_MaxDurability_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_Durability_3) == 0x000088, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_Durability_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_MaxDurability_3) == 0x000090, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_MaxDurability_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_FClamp_ReturnValue_1) == 0x000098, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetRootContainerRef_ContainerRef) == 0x0000B8, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetRootContainerRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x0000C0, "Member 'JigItemOverItemComp_C_ArmorRepair::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'JigItemOverItemComp_C_ArmorRepair::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, K2Node_DynamicCast_AsBP_Jig_Multiplayer_1) == 0x0000D8, "Member 'JigItemOverItemComp_C_ArmorRepair::K2Node_DynamicCast_AsBP_Jig_Multiplayer_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'JigItemOverItemComp_C_ArmorRepair::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetUniqueID_UniqueServerID) == 0x0000E4, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetUniqueID_UniqueServerID_1) == 0x0000F4, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_JigComp_CallServerConsumeRequest_Result) == 0x000104, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_JigComp_CallServerConsumeRequest_Result' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_Durability_4) == 0x000108, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_Durability_4' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetDurability_MaxDurability_4) == 0x000110, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetDurability_MaxDurability_4' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_MakeVector2D_ReturnValue_1) == 0x000128, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_ServerFunc_UpdateDurabilityByUID_Updated) == 0x000138, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_ServerFunc_UpdateDurabilityByUID_Updated' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_GetUniqueID_UniqueServerID_2) == 0x00013C, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_GetUniqueID_UniqueServerID_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_ArmorRepair, CallFunc_ServerFunc_UpdateDurabilityByUID_Updated_1) == 0x00014C, "Member 'JigItemOverItemComp_C_ArmorRepair::CallFunc_ServerFunc_UpdateDurabilityByUID_Updated_1' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.GetOptionOnDrop
// 0x0038 (0x0038 - 0x0000)
struct JigItemOverItemComp_C_GetOptionOnDrop final
{
public:
	class UJSI_Slot_C*                            ReceiverItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            DroppedItem;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ReceiverContainer;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        DroppedContainer;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValid_ShowHighlight_;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValid_Valid_;                          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetValid_Tag;                             // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_GetOptionOnDrop) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_GetOptionOnDrop");
static_assert(sizeof(JigItemOverItemComp_C_GetOptionOnDrop) == 0x000038, "Wrong size on JigItemOverItemComp_C_GetOptionOnDrop");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, ReceiverItem) == 0x000000, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::ReceiverItem' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, DroppedItem) == 0x000008, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::DroppedItem' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, ReceiverContainer) == 0x000010, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::ReceiverContainer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, DroppedContainer) == 0x000018, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::DroppedContainer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, CallFunc_GetValid_ShowHighlight_) == 0x000020, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::CallFunc_GetValid_ShowHighlight_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, CallFunc_GetValid_Valid_) == 0x000021, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::CallFunc_GetValid_Valid_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, CallFunc_GetValid_Tag) == 0x000024, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::CallFunc_GetValid_Tag' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00002C, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000030, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetOptionOnDrop, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'JigItemOverItemComp_C_GetOptionOnDrop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.GetValid
// 0x0140 (0x0140 - 0x0000)
struct JigItemOverItemComp_C_GetValid final
{
public:
	class UJSI_Slot_C*                            Dropped;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Receiver;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowHighlight_;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Tag;                                               // 0x0014(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0058(0x0020)()
	double                                        CallFunc_GetDurability_Durability;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_1;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_2;                  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability_1;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_1;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x00C0(0x0020)()
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x00E8(0x0020)()
	double                                        CallFunc_GetDurability_Durability_2;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_2;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset_3;                  // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_1;                     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability_3;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_3;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue_2;                     // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_GetValid) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_GetValid");
static_assert(sizeof(JigItemOverItemComp_C_GetValid) == 0x000140, "Wrong size on JigItemOverItemComp_C_GetValid");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, Dropped) == 0x000000, "Member 'JigItemOverItemComp_C_GetValid::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, Receiver) == 0x000008, "Member 'JigItemOverItemComp_C_GetValid::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, ShowHighlight_) == 0x000010, "Member 'JigItemOverItemComp_C_GetValid::ShowHighlight_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, Valid_) == 0x000011, "Member 'JigItemOverItemComp_C_GetValid::Valid_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, Tag) == 0x000014, "Member 'JigItemOverItemComp_C_GetValid::Tag' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'JigItemOverItemComp_C_GetValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetJigDA_JigDataAsset) == 0x000020, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000030, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, Temp_int_Array_Index_Variable) == 0x000048, "Member 'JigItemOverItemComp_C_GetValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_Array_Get_Item) == 0x00004C, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000054, "Member 'JigItemOverItemComp_C_GetValid::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000058, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_Durability) == 0x000078, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_MaxDurability) == 0x000080, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_NotEqual_NameName_ReturnValue) == 0x000089, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00008A, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_BooleanAND_ReturnValue) == 0x00008B, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_HasTag_ReturnValue) == 0x00008C, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetJigDA_JigDataAsset_1) == 0x000090, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetJigDA_JigDataAsset_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000098, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000099, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00009A, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_BooleanOR_ReturnValue) == 0x00009B, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetJigDA_JigDataAsset_2) == 0x0000A0, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetJigDA_JigDataAsset_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A8, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0000A9, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_Durability_1) == 0x0000B0, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_Durability_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_MaxDurability_1) == 0x0000B8, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_MaxDurability_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0000C0, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x0000E8, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_Durability_2) == 0x000108, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_Durability_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_MaxDurability_2) == 0x000110, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_MaxDurability_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetJigDA_JigDataAsset_3) == 0x000118, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetJigDA_JigDataAsset_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_HasTag_ReturnValue_1) == 0x000121, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_HasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_Durability_3) == 0x000128, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_Durability_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_GetDurability_MaxDurability_3) == 0x000130, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_GetDurability_MaxDurability_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000138, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_GetValid, CallFunc_HasTag_ReturnValue_2) == 0x000139, "Member 'JigItemOverItemComp_C_GetValid::CallFunc_HasTag_ReturnValue_2' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.PlaceBattery
// 0x0038 (0x0038 - 0x0000)
struct JigItemOverItemComp_C_PlaceBattery final
{
public:
	class UJSI_Slot_C*                            Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Dropped;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ReceiverContainer;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        DroppedContainer;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DurToFix;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Deep_Search_for_Item_by_ID_ItemRef;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Deep_Search_for_Item_by_ID_Found_;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_PlaceBattery) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_PlaceBattery");
static_assert(sizeof(JigItemOverItemComp_C_PlaceBattery) == 0x000038, "Wrong size on JigItemOverItemComp_C_PlaceBattery");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, Receiver) == 0x000000, "Member 'JigItemOverItemComp_C_PlaceBattery::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, Dropped) == 0x000008, "Member 'JigItemOverItemComp_C_PlaceBattery::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, ReceiverContainer) == 0x000010, "Member 'JigItemOverItemComp_C_PlaceBattery::ReceiverContainer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, DroppedContainer) == 0x000018, "Member 'JigItemOverItemComp_C_PlaceBattery::DroppedContainer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, DurToFix) == 0x000020, "Member 'JigItemOverItemComp_C_PlaceBattery::DurToFix' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, CallFunc_Deep_Search_for_Item_by_ID_ItemRef) == 0x000028, "Member 'JigItemOverItemComp_C_PlaceBattery::CallFunc_Deep_Search_for_Item_by_ID_ItemRef' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PlaceBattery, CallFunc_Deep_Search_for_Item_by_ID_Found_) == 0x000030, "Member 'JigItemOverItemComp_C_PlaceBattery::CallFunc_Deep_Search_for_Item_by_ID_Found_' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.PurifyWater
// 0x02E0 (0x02E0 - 0x0000)
struct JigItemOverItemComp_C_PurifyWater final
{
public:
	class UJSI_Slot_C*                            Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Dropped;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetCount_Count;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_1;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ReplicatedContainerInfo>     K2Node_MakeArray_Array_1;                          // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_2;         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigTryAddItemSomewhere_Added_;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_JigTryAddItemSomewhere_UID;               // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo; // 0x0120(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetPickupInfoFromDT_Found;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewItemToSlot_Added;                   // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_AddNewItemToSlot_AddedItemInfo;           // 0x0200(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_PurifyWater) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_PurifyWater");
static_assert(sizeof(JigItemOverItemComp_C_PurifyWater) == 0x0002E0, "Wrong size on JigItemOverItemComp_C_PurifyWater");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, Receiver) == 0x000000, "Member 'JigItemOverItemComp_C_PurifyWater::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, Dropped) == 0x000008, "Member 'JigItemOverItemComp_C_PurifyWater::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, DA) == 0x000010, "Member 'JigItemOverItemComp_C_PurifyWater::DA' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, Amount) == 0x000018, "Member 'JigItemOverItemComp_C_PurifyWater::Amount' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_MakeArray_Array) == 0x000078, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_GetCount_Count) == 0x000088, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_Format_ReturnValue) == 0x000090, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_GetUniqueID_UniqueServerID) == 0x0000AC, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x0000C0, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_GetUniqueID_UniqueServerID_1) == 0x0000CC, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_DynamicCast_AsBP_Jig_Multiplayer_1) == 0x0000E0, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_DynamicCast_AsBP_Jig_Multiplayer_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_MakeArray_Array_1) == 0x0000F0, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_DynamicCast_AsBP_Jig_Multiplayer_2) == 0x000100, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_DynamicCast_AsBP_Jig_Multiplayer_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_JigTryAddItemSomewhere_Added_) == 0x000109, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_JigTryAddItemSomewhere_Added_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_JigTryAddItemSomewhere_UID) == 0x00010C, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_JigTryAddItemSomewhere_UID' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo) == 0x000120, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_GetPickupInfoFromDT_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_GetPickupInfoFromDT_Found) == 0x0001F8, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_GetPickupInfoFromDT_Found' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_AddNewItemToSlot_Added) == 0x0001F9, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_AddNewItemToSlot_Added' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, CallFunc_AddNewItemToSlot_AddedItemInfo) == 0x000200, "Member 'JigItemOverItemComp_C_PurifyWater::CallFunc_AddNewItemToSlot_AddedItemInfo' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_PurifyWater, K2Node_SwitchName_CmpSuccess) == 0x0002D8, "Member 'JigItemOverItemComp_C_PurifyWater::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.RefillRadFilter
// 0x00A0 (0x00A0 - 0x0000)
struct JigItemOverItemComp_C_RefillRadFilter final
{
public:
	class UJSI_Slot_C*                            Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Dropped;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        DurToFix;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_UpdateDurabilityByUID_Updated; // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef;         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallServerConsumeRequest_Result;  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_RefillRadFilter) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_RefillRadFilter");
static_assert(sizeof(JigItemOverItemComp_C_RefillRadFilter) == 0x0000A0, "Wrong size on JigItemOverItemComp_C_RefillRadFilter");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, Receiver) == 0x000000, "Member 'JigItemOverItemComp_C_RefillRadFilter::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, Dropped) == 0x000008, "Member 'JigItemOverItemComp_C_RefillRadFilter::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, DurToFix) == 0x000010, "Member 'JigItemOverItemComp_C_RefillRadFilter::DurToFix' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, Temp_string_Variable) == 0x000018, "Member 'JigItemOverItemComp_C_RefillRadFilter::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_GetDurability_Durability) == 0x000028, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_GetDurability_MaxDurability) == 0x000030, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000048, "Member 'JigItemOverItemComp_C_RefillRadFilter::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'JigItemOverItemComp_C_RefillRadFilter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_GetUniqueID_UniqueServerID) == 0x000054, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_ServerFunc_UpdateDurabilityByUID_Updated) == 0x000064, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_ServerFunc_UpdateDurabilityByUID_Updated' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000068, "Member 'JigItemOverItemComp_C_RefillRadFilter::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'JigItemOverItemComp_C_RefillRadFilter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_GetRootContainerRef_ContainerRef) == 0x000080, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_GetRootContainerRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000088, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_RefillRadFilter, CallFunc_JigComp_CallServerConsumeRequest_Result) == 0x000098, "Member 'JigItemOverItemComp_C_RefillRadFilter::CallFunc_JigComp_CallServerConsumeRequest_Result' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.SwapItem
// 0x0148 (0x0148 - 0x0000)
struct JigItemOverItemComp_C_SwapItem final
{
public:
	class UJSI_Slot_C*                            Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Dropped;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ReceiverContainer;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        DroppedContainer;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped_;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmountToDrop;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index2;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        Comp;                                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension_1;               // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_Vector2DVector2D_ReturnValue; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef;                      // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetType_Type_1;                           // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_ContextTryEquip_Result;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1;          // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetType_Type_2;                           // 0x00C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_ContextTryUnequip_Result;         // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemFromJigRef_Added;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_AddItemFromJigRef_AddedItemRef;           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemFromJigRef_Added_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_AddItemFromJigRef_AddedItemRef_1;         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByRef_Removed;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInventoryItemByRef_Removed_1;       // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension_2;               // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension_3;               // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_Vector2DVector2D_ReturnValue_1; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_SwapItem) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_SwapItem");
static_assert(sizeof(JigItemOverItemComp_C_SwapItem) == 0x000148, "Wrong size on JigItemOverItemComp_C_SwapItem");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, Receiver) == 0x000000, "Member 'JigItemOverItemComp_C_SwapItem::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, Dropped) == 0x000008, "Member 'JigItemOverItemComp_C_SwapItem::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, ReceiverContainer) == 0x000010, "Member 'JigItemOverItemComp_C_SwapItem::ReceiverContainer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, DroppedContainer) == 0x000018, "Member 'JigItemOverItemComp_C_SwapItem::DroppedContainer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, Equipped_) == 0x000020, "Member 'JigItemOverItemComp_C_SwapItem::Equipped_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, AmountToDrop) == 0x000024, "Member 'JigItemOverItemComp_C_SwapItem::AmountToDrop' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, Index2) == 0x000028, "Member 'JigItemOverItemComp_C_SwapItem::Index2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, Index1) == 0x00002C, "Member 'JigItemOverItemComp_C_SwapItem::Index1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, Comp) == 0x000030, "Member 'JigItemOverItemComp_C_SwapItem::Comp' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000040, "Member 'JigItemOverItemComp_C_SwapItem::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'JigItemOverItemComp_C_SwapItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetSlotDim_SlotDimension) == 0x000058, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetType_Type) == 0x000068, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetSlotDim_SlotDimension_1) == 0x000070, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetSlotDim_SlotDimension_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_EqualExactly_Vector2DVector2D_ReturnValue) == 0x000080, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_EqualExactly_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_UnequipItem_Unequipped) == 0x000081, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_UnequipItem_Unequipped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_UnequipItem_SlotRef) == 0x000088, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_UnequipItem_SlotRef' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_Conv_BoolToString_ReturnValue) == 0x000090, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetType_Type_1) == 0x0000A0, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetType_Type_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000A8, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_JigComp_ContextTryEquip_Result) == 0x0000A9, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_JigComp_ContextTryEquip_Result' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1) == 0x0000B0, "Member 'JigItemOverItemComp_C_SwapItem::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'JigItemOverItemComp_C_SwapItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetType_Type_2) == 0x0000C4, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetType_Type_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_IsSupportedByThis_Supported_) == 0x0000CC, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000CD, "Member 'JigItemOverItemComp_C_SwapItem::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_JigComp_ContextTryUnequip_Result) == 0x0000CE, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_JigComp_ContextTryUnequip_Result' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetUniqueID_UniqueServerID) == 0x0000D0, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetUniqueID_UniqueServerID_1) == 0x0000E0, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x0000F0, "Member 'JigItemOverItemComp_C_SwapItem::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'JigItemOverItemComp_C_SwapItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_AddItemFromJigRef_Added) == 0x0000F9, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_AddItemFromJigRef_Added' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_AddItemFromJigRef_AddedItemRef) == 0x000100, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_AddItemFromJigRef_AddedItemRef' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_AddItemFromJigRef_Added_1) == 0x000108, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_AddItemFromJigRef_Added_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_AddItemFromJigRef_AddedItemRef_1) == 0x000110, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_AddItemFromJigRef_AddedItemRef_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_RemoveInventoryItemByRef_Removed) == 0x000118, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_RemoveInventoryItemByRef_Removed' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_RemoveInventoryItemByRef_Removed_1) == 0x000119, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_RemoveInventoryItemByRef_Removed_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetSlotDim_SlotDimension_2) == 0x000120, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetSlotDim_SlotDimension_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_GetSlotDim_SlotDimension_3) == 0x000130, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_GetSlotDim_SlotDimension_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_SwapItem, CallFunc_EqualExactly_Vector2DVector2D_ReturnValue_1) == 0x000140, "Member 'JigItemOverItemComp_C_SwapItem::CallFunc_EqualExactly_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function JigItemOverItemComp.JigItemOverItemComp_C.WeaponRepair
// 0x0170 (0x0170 - 0x0000)
struct JigItemOverItemComp_C_WeaponRepair final
{
public:
	class UJSI_Slot_C*                            Receiver;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            Dropped;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Attachment_;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DurToFix;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability_1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   K2Node_DynamicCast_AsBP_Jig_Multiplayer_1;         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_Durability_3;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_3;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_GetRootContainerRef_ContainerRef;         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallServerConsumeRequest_Result;  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_Durability_4;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDurability_MaxDurability_4;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_UpdateDurabilityByUID_Updated; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_2;             // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerFunc_UpdateDurabilityByUID_Updated_1; // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(JigItemOverItemComp_C_WeaponRepair) == 0x000008, "Wrong alignment on JigItemOverItemComp_C_WeaponRepair");
static_assert(sizeof(JigItemOverItemComp_C_WeaponRepair) == 0x000170, "Wrong size on JigItemOverItemComp_C_WeaponRepair");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, Receiver) == 0x000000, "Member 'JigItemOverItemComp_C_WeaponRepair::Receiver' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, Dropped) == 0x000008, "Member 'JigItemOverItemComp_C_WeaponRepair::Dropped' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, Attachment_) == 0x000010, "Member 'JigItemOverItemComp_C_WeaponRepair::Attachment_' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, DurToFix) == 0x000018, "Member 'JigItemOverItemComp_C_WeaponRepair::DurToFix' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, Temp_string_Variable) == 0x000020, "Member 'JigItemOverItemComp_C_WeaponRepair::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, K2Node_DynamicCast_AsBP_Jig_Multiplayer) == 0x000030, "Member 'JigItemOverItemComp_C_WeaponRepair::K2Node_DynamicCast_AsBP_Jig_Multiplayer' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'JigItemOverItemComp_C_WeaponRepair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_Durability) == 0x000040, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_Durability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_MaxDurability) == 0x000048, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_MaxDurability' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_Durability_1) == 0x000050, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_Durability_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_MaxDurability_1) == 0x000058, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_MaxDurability_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_Durability_2) == 0x000070, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_Durability_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_MaxDurability_2) == 0x000078, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_MaxDurability_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000088, "Member 'JigItemOverItemComp_C_WeaponRepair::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'JigItemOverItemComp_C_WeaponRepair::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, K2Node_DynamicCast_AsBP_Jig_Multiplayer_1) == 0x0000A0, "Member 'JigItemOverItemComp_C_WeaponRepair::K2Node_DynamicCast_AsBP_Jig_Multiplayer_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'JigItemOverItemComp_C_WeaponRepair::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_SelectFloat_ReturnValue) == 0x0000B0, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_Durability_3) == 0x0000B8, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_Durability_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_MaxDurability_3) == 0x0000C0, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_MaxDurability_3' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_FClamp_ReturnValue_1) == 0x0000E0, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetRootContainerRef_ContainerRef) == 0x0000F8, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetRootContainerRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetUniqueID_UniqueServerID) == 0x000100, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_JigComp_CallServerConsumeRequest_Result) == 0x000110, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_JigComp_CallServerConsumeRequest_Result' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000114, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_Durability_4) == 0x000128, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_Durability_4' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetDurability_MaxDurability_4) == 0x000130, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetDurability_MaxDurability_4' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000138, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_MakeVector2D_ReturnValue_1) == 0x000148, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_ServerFunc_UpdateDurabilityByUID_Updated) == 0x000158, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_ServerFunc_UpdateDurabilityByUID_Updated' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_GetUniqueID_UniqueServerID_2) == 0x00015C, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_GetUniqueID_UniqueServerID_2' has a wrong offset!");
static_assert(offsetof(JigItemOverItemComp_C_WeaponRepair, CallFunc_ServerFunc_UpdateDurabilityByUID_Updated_1) == 0x00016C, "Member 'JigItemOverItemComp_C_WeaponRepair::CallFunc_ServerFunc_UpdateDurabilityByUID_Updated_1' has a wrong offset!");

}

