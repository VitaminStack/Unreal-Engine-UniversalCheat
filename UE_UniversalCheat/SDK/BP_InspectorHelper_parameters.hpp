#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InspectorHelper

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_CheckBox_147_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleX_K2Node_ComponentBoundEvent_8_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleY_K2Node_ComponentBoundEvent_10_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__BP_InspectorHelper_ScaleZ_K2Node_ComponentBoundEvent_11_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__FOVTxt_K2Node_ComponentBoundEvent_1_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__LocX_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__LocY_K2Node_ComponentBoundEvent_2_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__LocZ_K2Node_ComponentBoundEvent_3_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__RotX_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__RotY_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_InspectorHelper_C_BndEvt__RotZ_K2Node_ComponentBoundEvent_6_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.ExecuteUbergraph_BP_InspectorHelper
// 0x03A0 (0x03A0 - 0x0000)
struct BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_9;                 // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_8;                 // 0x0020(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_7;                 // 0x0038(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_6;                 // 0x0050(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_5;                 // 0x0068(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_4;                 // 0x0080(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_3;                 // 0x0098(0x0018)(ConstParm)
	class ABP_ItemInspector_C*                    K2Node_CustomEvent_InspectorBP;                    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00BC(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_CustomEvent_JigItem;                        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInitValues_ReturnValue;                // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInitValues_FOVAngle;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0178(0x0018)()
	bool                                          CallFunc_AddNewInventoryItem_Added;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddNewInventoryItem_SlotIndex;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                CallFunc_AddNewInventoryItem_ItemInfo;             // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_AddNewInventoryItem_SlotItemRef;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddNewInventoryItem_Stacked_;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0220(0x0018)()
	double                                        CallFunc_BreakVector2D_X;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0250(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0268(0x0018)()
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_4;          // 0x02A8(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_5;          // 0x02C0(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_6;          // 0x02D8(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_7;          // 0x02F0(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_8;          // 0x0308(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_9;          // 0x0320(0x0018)()
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_2;                 // 0x0340(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0358(0x0018)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0370(0x0018)(ConstParm)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_1;   // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_2;   // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper) == 0x000010, "Wrong alignment on BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper");
static_assert(sizeof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper) == 0x0003A0, "Wrong size on BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, EntryPoint) == 0x000000, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_9) == 0x000008, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_9' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_8) == 0x000020, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_8' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_7) == 0x000038, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_7' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_6) == 0x000050, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_6' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_5) == 0x000068, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_5' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_4) == 0x000080, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_4' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_3) == 0x000098, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_3' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_CustomEvent_InspectorBP) == 0x0000B0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_CustomEvent_InspectorBP' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, Temp_bool_Variable) == 0x0000B8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_Event_MyGeometry) == 0x0000BC, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_Event_InDeltaTime) == 0x0000F4, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, Temp_bool_IsClosed_Variable_1) == 0x0000F8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_CustomEvent_JigItem) == 0x000100, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_CustomEvent_JigItem' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000108, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_GetInitValues_ReturnValue) == 0x000110, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_GetInitValues_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_GetInitValues_FOVAngle) == 0x000170, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_GetInitValues_FOVAngle' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000178, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_AddNewInventoryItem_Added) == 0x000190, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_AddNewInventoryItem_Added' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_AddNewInventoryItem_SlotIndex) == 0x000194, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_AddNewInventoryItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_AddNewInventoryItem_ItemInfo) == 0x000198, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_AddNewInventoryItem_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_AddNewInventoryItem_SlotItemRef) == 0x0001A0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_AddNewInventoryItem_SlotItemRef' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_AddNewInventoryItem_Stacked_) == 0x0001A8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_AddNewInventoryItem_Stacked_' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakTransform_Location) == 0x0001B0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakTransform_Rotation) == 0x0001C8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakTransform_Scale) == 0x0001E0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector_X) == 0x0001F8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector_Y) == 0x000200, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector_Z) == 0x000208, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_GetSlotDim_SlotDimension) == 0x000210, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000220, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector2D_X) == 0x000238, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector2D_Y) == 0x000240, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_FTrunc_ReturnValue) == 0x000248, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_FTrunc_ReturnValue_1) == 0x00024C, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000250, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000268, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakRotator_Roll) == 0x000280, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakRotator_Pitch) == 0x000284, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakRotator_Yaw) == 0x000288, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector_X_1) == 0x000290, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector_Y_1) == 0x000298, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_BreakVector_Z_1) == 0x0002A0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_4) == 0x0002A8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_5) == 0x0002C0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_6) == 0x0002D8, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_7) == 0x0002F0, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_8) == 0x000308, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_ReturnValue_9) == 0x000320, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_bIsChecked) == 0x000338, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_2) == 0x000340, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_2' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text_1) == 0x000358, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, K2Node_ComponentBoundEvent_Text) == 0x000370, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000388, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_Value_ImplicitCast_1) == 0x000390, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper, CallFunc_Conv_DoubleToText_Value_ImplicitCast_2) == 0x000398, "Member 'BP_InspectorHelper_C_ExecuteUbergraph_BP_InspectorHelper::CallFunc_Conv_DoubleToText_Value_ImplicitCast_2' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.SetInitialValues
// 0x0008 (0x0008 - 0x0000)
struct BP_InspectorHelper_C_SetInitialValues final
{
public:
	class ABP_ItemInspector_C*                    InspectorBP_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorHelper_C_SetInitialValues) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_SetInitialValues");
static_assert(sizeof(BP_InspectorHelper_C_SetInitialValues) == 0x000008, "Wrong size on BP_InspectorHelper_C_SetInitialValues");
static_assert(offsetof(BP_InspectorHelper_C_SetInitialValues, InspectorBP_0) == 0x000000, "Member 'BP_InspectorHelper_C_SetInitialValues::InspectorBP_0' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.SetJigRef
// 0x0008 (0x0008 - 0x0000)
struct BP_InspectorHelper_C_SetJigRef final
{
public:
	class UJSI_Slot_C*                            JigItem_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorHelper_C_SetJigRef) == 0x000008, "Wrong alignment on BP_InspectorHelper_C_SetJigRef");
static_assert(sizeof(BP_InspectorHelper_C_SetJigRef) == 0x000008, "Wrong size on BP_InspectorHelper_C_SetJigRef");
static_assert(offsetof(BP_InspectorHelper_C_SetJigRef, JigItem_0) == 0x000000, "Member 'BP_InspectorHelper_C_SetJigRef::JigItem_0' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_InspectorHelper_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorHelper_C_Tick) == 0x000004, "Wrong alignment on BP_InspectorHelper_C_Tick");
static_assert(sizeof(BP_InspectorHelper_C_Tick) == 0x00003C, "Wrong size on BP_InspectorHelper_C_Tick");
static_assert(offsetof(BP_InspectorHelper_C_Tick, MyGeometry) == 0x000000, "Member 'BP_InspectorHelper_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_InspectorHelper_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_InspectorHelper.BP_InspectorHelper_C.UpdateTransform
// 0x0250 (0x0250 - 0x0000)
struct BP_InspectorHelper_C_UpdateTransform final
{
public:
	struct FTransform                             LocalTransform;                                    // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Attachments;                                       // 0x0060(0x0010)(Edit, BlueprintVisible)
	struct FRotator                               Rot;                                               // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Loc;                                               // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                FlotArr;                                           // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FString                                 CurrentStr;                                        // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetSpecialContainerRef_SpecialContainerRef; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllAttachments_Attachments;            // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIT_ItemSnapCaptor_C>  K2Node_DynamicCast_AsIT_Item_Snap_Captor;          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateSnapCustom_Result;                  // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UEditableTextBox*>               K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       CallFunc_Array_Get_Item;                           // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0218(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InspectorHelper_C_UpdateTransform) == 0x000010, "Wrong alignment on BP_InspectorHelper_C_UpdateTransform");
static_assert(sizeof(BP_InspectorHelper_C_UpdateTransform) == 0x000250, "Wrong size on BP_InspectorHelper_C_UpdateTransform");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, LocalTransform) == 0x000000, "Member 'BP_InspectorHelper_C_UpdateTransform::LocalTransform' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, Attachments) == 0x000060, "Member 'BP_InspectorHelper_C_UpdateTransform::Attachments' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, Rot) == 0x000070, "Member 'BP_InspectorHelper_C_UpdateTransform::Rot' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, Loc) == 0x000088, "Member 'BP_InspectorHelper_C_UpdateTransform::Loc' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, FlotArr) == 0x0000A0, "Member 'BP_InspectorHelper_C_UpdateTransform::FlotArr' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CurrentStr) == 0x0000B0, "Member 'BP_InspectorHelper_C_UpdateTransform::CurrentStr' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_InspectorHelper_C_UpdateTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_InspectorHelper_C_UpdateTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_GetJigDA_JigDataAsset) == 0x0000D0, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_IsChecked_ReturnValue) == 0x0000D8, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_GetSpecialContainerRef_SpecialContainerRef) == 0x0000E0, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_GetSpecialContainerRef_SpecialContainerRef' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Conv_StringToDouble_ReturnValue) == 0x0000E8, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000F0, "Member 'BP_InspectorHelper_C_UpdateTransform::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_InspectorHelper_C_UpdateTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_GetAllAttachments_Attachments) == 0x000108, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_GetAllAttachments_Attachments' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_IsNumeric_ReturnValue) == 0x000118, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_GetGameState_ReturnValue) == 0x000120, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, K2Node_DynamicCast_AsIT_Item_Snap_Captor) == 0x000128, "Member 'BP_InspectorHelper_C_UpdateTransform::K2Node_DynamicCast_AsIT_Item_Snap_Captor' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'BP_InspectorHelper_C_UpdateTransform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_IsValid_ReturnValue_1) == 0x000139, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_UpdateSnapCustom_Result) == 0x00013A, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_UpdateSnapCustom_Result' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_IsValid_ReturnValue_2) == 0x00013B, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeVector_ReturnValue) == 0x000140, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeVector_ReturnValue_1) == 0x000158, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeRotator_ReturnValue) == 0x000170, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Array_Add_ReturnValue) == 0x000188, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, K2Node_MakeArray_Array) == 0x0001F0, "Member 'BP_InspectorHelper_C_UpdateTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Array_Get_Item) == 0x000208, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000210, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_GetText_ReturnValue) == 0x000218, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_Conv_TextToString_ReturnValue) == 0x000230, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000240, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000244, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_InspectorHelper_C_UpdateTransform, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000248, "Member 'BP_InspectorHelper_C_UpdateTransform::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

}

