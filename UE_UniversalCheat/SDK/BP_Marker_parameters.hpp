#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Marker

#include "Basic.hpp"

#include "S_MarkerData_structs.hpp"


namespace SDK::Params
{

// Function BP_Marker.BP_Marker_C.ExecuteUbergraph_BP_Marker
// 0x0098 (0x0098 - 0x0000)
struct BP_Marker_C_ExecuteUbergraph_BP_Marker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_MinimapSystem_C*                   CallFunc_Get_Minimap_Component_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_MinimapSystem_C*                   CallFunc_Get_Minimap_Component_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_MarkerData                          K2Node_MakeStruct_S_MarkerData;                    // 0x0020(0x0070)(HasGetValueTypeHash)
	class UW_WorldMarker_C*                       CallFunc_Add_World_Marker_Markers;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Marker_C_ExecuteUbergraph_BP_Marker) == 0x000008, "Wrong alignment on BP_Marker_C_ExecuteUbergraph_BP_Marker");
static_assert(sizeof(BP_Marker_C_ExecuteUbergraph_BP_Marker) == 0x000098, "Wrong size on BP_Marker_C_ExecuteUbergraph_BP_Marker");
static_assert(offsetof(BP_Marker_C_ExecuteUbergraph_BP_Marker, EntryPoint) == 0x000000, "Member 'BP_Marker_C_ExecuteUbergraph_BP_Marker::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Marker_C_ExecuteUbergraph_BP_Marker, CallFunc_Get_Minimap_Component_ReturnValue) == 0x000008, "Member 'BP_Marker_C_ExecuteUbergraph_BP_Marker::CallFunc_Get_Minimap_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Marker_C_ExecuteUbergraph_BP_Marker, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Marker_C_ExecuteUbergraph_BP_Marker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Marker_C_ExecuteUbergraph_BP_Marker, CallFunc_Get_Minimap_Component_ReturnValue_1) == 0x000018, "Member 'BP_Marker_C_ExecuteUbergraph_BP_Marker::CallFunc_Get_Minimap_Component_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Marker_C_ExecuteUbergraph_BP_Marker, K2Node_MakeStruct_S_MarkerData) == 0x000020, "Member 'BP_Marker_C_ExecuteUbergraph_BP_Marker::K2Node_MakeStruct_S_MarkerData' has a wrong offset!");
static_assert(offsetof(BP_Marker_C_ExecuteUbergraph_BP_Marker, CallFunc_Add_World_Marker_Markers) == 0x000090, "Member 'BP_Marker_C_ExecuteUbergraph_BP_Marker::CallFunc_Add_World_Marker_Markers' has a wrong offset!");

}

