#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterTurret_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterCamera.BP_MasterCamera_C
// 0x0018 (0x0330 - 0x0318)
class ABP_MasterCamera_C : public ABP_MasterTurret_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MasterCamera_C;                  // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Rotate_Camera_Rotate_Alpha_1FCEDB2D4D69EF795AB31D9899FEACD6; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Rotate_Camera__Direction_1FCEDB2D4D69EF795AB31D9899FEACD6; // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rotate_Camera;                                     // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Actor_Attack_Target(class AActor** Attack_Target);
	void ExecuteUbergraph_BP_MasterCamera(int32 EntryPoint);
	void Multicast_Turret_Idle_Start();
	void Multicast_Turret_Idle_Stop();
	void ReceiveBeginPlay();
	void Rotate_Camera__FinishedFunc();
	void Rotate_Camera__UpdateFunc();
	void AI_Can_Interact_(bool* Can_Interact);
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void Turret_Destroyed_Effect();
	void Turret_Idle_Start();
	void Turret_Idle_Stop();
	void UserConstructionScript();

	void AI_Is_Dead_(bool* Dead) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterCamera_C">();
	}
	static class ABP_MasterCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterCamera_C>();
	}
};
static_assert(alignof(ABP_MasterCamera_C) == 0x000008, "Wrong alignment on ABP_MasterCamera_C");
static_assert(sizeof(ABP_MasterCamera_C) == 0x000330, "Wrong size on ABP_MasterCamera_C");
static_assert(offsetof(ABP_MasterCamera_C, UberGraphFrame_BP_MasterCamera_C) == 0x000318, "Member 'ABP_MasterCamera_C::UberGraphFrame_BP_MasterCamera_C' has a wrong offset!");
static_assert(offsetof(ABP_MasterCamera_C, Rotate_Camera_Rotate_Alpha_1FCEDB2D4D69EF795AB31D9899FEACD6) == 0x000320, "Member 'ABP_MasterCamera_C::Rotate_Camera_Rotate_Alpha_1FCEDB2D4D69EF795AB31D9899FEACD6' has a wrong offset!");
static_assert(offsetof(ABP_MasterCamera_C, Rotate_Camera__Direction_1FCEDB2D4D69EF795AB31D9899FEACD6) == 0x000324, "Member 'ABP_MasterCamera_C::Rotate_Camera__Direction_1FCEDB2D4D69EF795AB31D9899FEACD6' has a wrong offset!");
static_assert(offsetof(ABP_MasterCamera_C, Rotate_Camera) == 0x000328, "Member 'ABP_MasterCamera_C::Rotate_Camera' has a wrong offset!");

}

