#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Journal_SkillTreeTooltip

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Journal_SkillTreeTooltip.Journal_SkillTreeTooltip_C
// 0x0088 (0x0348 - 0x02C0)
class UJournal_SkillTreeTooltip_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             DescriptionText;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_176;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PointText;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SkillText;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SkillName;                                         // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   SkillPointsNeeded;                                 // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   SkillDescription;                                  // 0x0318(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            TitleColor;                                        // 0x0330(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Journal_SkillTreeTooltip(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Journal_SkillTreeTooltip_C">();
	}
	static class UJournal_SkillTreeTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UJournal_SkillTreeTooltip_C>();
	}
};
static_assert(alignof(UJournal_SkillTreeTooltip_C) == 0x000008, "Wrong alignment on UJournal_SkillTreeTooltip_C");
static_assert(sizeof(UJournal_SkillTreeTooltip_C) == 0x000348, "Wrong size on UJournal_SkillTreeTooltip_C");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, UberGraphFrame) == 0x0002C0, "Member 'UJournal_SkillTreeTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, DescriptionText) == 0x0002C8, "Member 'UJournal_SkillTreeTooltip_C::DescriptionText' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, Image_176) == 0x0002D0, "Member 'UJournal_SkillTreeTooltip_C::Image_176' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, PointText) == 0x0002D8, "Member 'UJournal_SkillTreeTooltip_C::PointText' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, SkillText) == 0x0002E0, "Member 'UJournal_SkillTreeTooltip_C::SkillText' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, SkillName) == 0x0002E8, "Member 'UJournal_SkillTreeTooltip_C::SkillName' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, SkillPointsNeeded) == 0x000300, "Member 'UJournal_SkillTreeTooltip_C::SkillPointsNeeded' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, SkillDescription) == 0x000318, "Member 'UJournal_SkillTreeTooltip_C::SkillDescription' has a wrong offset!");
static_assert(offsetof(UJournal_SkillTreeTooltip_C, TitleColor) == 0x000330, "Member 'UJournal_SkillTreeTooltip_C::TitleColor' has a wrong offset!");

}

