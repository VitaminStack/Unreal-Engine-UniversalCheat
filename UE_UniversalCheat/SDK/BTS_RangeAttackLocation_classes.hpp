#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_RangeAttackLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_RangeAttackLocation.BTS_RangeAttackLocation_C
// 0x0060 (0x00F8 - 0x0098)
class UBTS_RangeAttackLocation_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_SmartAIComponent_C*                 Smart_AI;                                          // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Animation_Index;                                   // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Attack_Montage;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Anim_Time;                                     // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Last_Seen;                                         // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range_Attack_Time;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Attack;                                         // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Search_Timer;                                      // 0x00E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        AnimAttackTime;                                    // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Closest_Attack_Target(class AActor** Closest_Attack_Target_0);
	void ExecuteUbergraph_BTS_RangeAttackLocation(int32 EntryPoint);
	void Get_Range_Attack_Montage(class UAnimMontage** Montage);
	void LOS_Timer();
	void Range_Attack();
	void Range_Attack_Frequancy(bool* Use_Anim_Time_0, double* Range_Attack_Frequency);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void Search_Timer_Events();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_RangeAttackLocation_C">();
	}
	static class UBTS_RangeAttackLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_RangeAttackLocation_C>();
	}
};
static_assert(alignof(UBTS_RangeAttackLocation_C) == 0x000008, "Wrong alignment on UBTS_RangeAttackLocation_C");
static_assert(sizeof(UBTS_RangeAttackLocation_C) == 0x0000F8, "Wrong size on UBTS_RangeAttackLocation_C");
static_assert(offsetof(UBTS_RangeAttackLocation_C, UberGraphFrame) == 0x000098, "Member 'UBTS_RangeAttackLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Smart_AI) == 0x0000A0, "Member 'UBTS_RangeAttackLocation_C::Smart_AI' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Animation_Index) == 0x0000A8, "Member 'UBTS_RangeAttackLocation_C::Animation_Index' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Attack_Montage) == 0x0000B0, "Member 'UBTS_RangeAttackLocation_C::Attack_Montage' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Use_Anim_Time) == 0x0000B8, "Member 'UBTS_RangeAttackLocation_C::Use_Anim_Time' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Last_Seen) == 0x0000C0, "Member 'UBTS_RangeAttackLocation_C::Last_Seen' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Range_Attack_Time) == 0x0000D8, "Member 'UBTS_RangeAttackLocation_C::Range_Attack_Time' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, In_Attack) == 0x0000E0, "Member 'UBTS_RangeAttackLocation_C::In_Attack' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, Search_Timer) == 0x0000E8, "Member 'UBTS_RangeAttackLocation_C::Search_Timer' has a wrong offset!");
static_assert(offsetof(UBTS_RangeAttackLocation_C, AnimAttackTime) == 0x0000F0, "Member 'UBTS_RangeAttackLocation_C::AnimAttackTime' has a wrong offset!");

}

