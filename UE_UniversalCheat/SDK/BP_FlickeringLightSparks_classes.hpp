#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlickeringLightSparks

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_MasterLight_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FlickeringLightSparks.BP_FlickeringLightSparks_C
// 0x0068 (0x0308 - 0x02A0)
class ABP_FlickeringLightSparks_C : public ABP_MasterLight_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LightHum_Cue;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIOSubjectComponent*                   AIOSubject;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         LightFlicker_Flicker_46544F49447690B8CFED588112D65D0C; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            LightFlicker__Direction_46544F49447690B8CFED588112D65D0C; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     LightFlicker;                                      // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        IntensityMultiplier;                               // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PointLightLength;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PointLightRadius;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticlesLocation;                                 // 0x02F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void ExecuteUbergraph_BP_FlickeringLightSparks(int32 EntryPoint);
	void LightFlicker__FinishedFunc();
	void LightFlicker__UpdateFunc();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FlickeringLightSparks_C">();
	}
	static class ABP_FlickeringLightSparks_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FlickeringLightSparks_C>();
	}
};
static_assert(alignof(ABP_FlickeringLightSparks_C) == 0x000008, "Wrong alignment on ABP_FlickeringLightSparks_C");
static_assert(sizeof(ABP_FlickeringLightSparks_C) == 0x000308, "Wrong size on ABP_FlickeringLightSparks_C");
static_assert(offsetof(ABP_FlickeringLightSparks_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_FlickeringLightSparks_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, ParticleSystem) == 0x0002A8, "Member 'ABP_FlickeringLightSparks_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, PointLight) == 0x0002B0, "Member 'ABP_FlickeringLightSparks_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, LightHum_Cue) == 0x0002B8, "Member 'ABP_FlickeringLightSparks_C::LightHum_Cue' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, AIOSubject) == 0x0002C0, "Member 'ABP_FlickeringLightSparks_C::AIOSubject' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, LightFlicker_Flicker_46544F49447690B8CFED588112D65D0C) == 0x0002C8, "Member 'ABP_FlickeringLightSparks_C::LightFlicker_Flicker_46544F49447690B8CFED588112D65D0C' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, LightFlicker__Direction_46544F49447690B8CFED588112D65D0C) == 0x0002CC, "Member 'ABP_FlickeringLightSparks_C::LightFlicker__Direction_46544F49447690B8CFED588112D65D0C' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, LightFlicker) == 0x0002D0, "Member 'ABP_FlickeringLightSparks_C::LightFlicker' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, IntensityMultiplier) == 0x0002D8, "Member 'ABP_FlickeringLightSparks_C::IntensityMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, PointLightLength) == 0x0002E0, "Member 'ABP_FlickeringLightSparks_C::PointLightLength' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, PointLightRadius) == 0x0002E8, "Member 'ABP_FlickeringLightSparks_C::PointLightRadius' has a wrong offset!");
static_assert(offsetof(ABP_FlickeringLightSparks_C, ParticlesLocation) == 0x0002F0, "Member 'ABP_FlickeringLightSparks_C::ParticlesLocation' has a wrong offset!");

}

