#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatTextW

#include "Basic.hpp"

#include "BP_StatTextW_classes.hpp"
#include "BP_StatTextW_parameters.hpp"


namespace SDK
{

// Function BP_StatTextW.BP_StatTextW_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_StatTextW_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatTextW_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StatTextW.BP_StatTextW_C.ExecuteUbergraph_BP_StatTextW
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StatTextW_C::ExecuteUbergraph_BP_StatTextW(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatTextW_C", "ExecuteUbergraph_BP_StatTextW");

	Params::BP_StatTextW_C_ExecuteUbergraph_BP_StatTextW Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StatTextW.BP_StatTextW_C.GetStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FText                             Name_0                                                 (Parm, OutParm)

void UBP_StatTextW_C::GetStat(const struct FGameplayTag& Tag, class FText* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StatTextW_C", "GetStat");

	Params::BP_StatTextW_C_GetStat Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}

}

