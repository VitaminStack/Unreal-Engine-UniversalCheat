#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlRig_Player

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass ControlRig_Player.ControlRig_Player_C
// 0x0030 (0x0640 - 0x0610)
class UControlRig_Player_C final : public UControlRig
{
public:
	struct FQuat                                  HeadRotation;                                      // 0x0610(0x0020)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          InVehicle;                                         // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ControlRig_Player_C">();
	}
	static class UControlRig_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRig_Player_C>();
	}
};
static_assert(alignof(UControlRig_Player_C) == 0x000010, "Wrong alignment on UControlRig_Player_C");
static_assert(sizeof(UControlRig_Player_C) == 0x000640, "Wrong size on UControlRig_Player_C");
static_assert(offsetof(UControlRig_Player_C, HeadRotation) == 0x000610, "Member 'UControlRig_Player_C::HeadRotation' has a wrong offset!");
static_assert(offsetof(UControlRig_Player_C, InVehicle) == 0x000630, "Member 'UControlRig_Player_C::InVehicle' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass ControlRig_Player.RigVMMemory_Literal
// 0x00B8 (0x00E0 - 0x0028)
class URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_1_Item__Const; // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_1_OffsetTransform__Const; // 0x0040(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Elements__Const; // 0x00A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___Multiply_B__Const;                    // 0x00B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_1_Weight__Const; // 0x00C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___OffsetTransformForItem_1_1_bPropagateToChildren__Const; // 0x00C4(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___OffsetTransformForItem_1_1_1_1_Item__Const; // 0x00C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___OffsetTransformForItem_1_1_1_1_Weight__Const; // 0x00D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Literal">();
	}
	static class URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Literal>();
	}
};
static_assert(alignof(URigVMMemory_Literal) == 0x000010, "Wrong alignment on URigVMMemory_Literal");
static_assert(sizeof(URigVMMemory_Literal) == 0x0000E0, "Wrong size on URigVMMemory_Literal");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_1_Item__Const) == 0x000028, "Member 'URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_1_OffsetTransform__Const) == 0x000040, "Member 'URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_1_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Elements__Const) == 0x0000A0, "Member 'URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Elements__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___Multiply_B__Const) == 0x0000B8, "Member 'URigVMMemory_Literal::RigVMModel___Multiply_B__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_1_Weight__Const) == 0x0000C0, "Member 'URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_1_Weight__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_1_bPropagateToChildren__Const) == 0x0000C4, "Member 'URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_1_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_1_1_1_Item__Const) == 0x0000C8, "Member 'URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___OffsetTransformForItem_1_1_1_1_Weight__Const) == 0x0000D4, "Member 'URigVMMemory_Literal::RigVMModel___OffsetTransformForItem_1_1_1_1_Weight__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass ControlRig_Player.RigVMMemory_Work
// 0x01F8 (0x0220 - 0x0028)
class URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___Cast_Result;                          // 0x0030(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Struct; // 0x0050(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___Multiply_Result;                      // 0x0068(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_BreakStruct_Elements; // 0x0070(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRotator                               RigVMModel___Cast_1_Result;                        // 0x0088(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	double                                        RigVMModel___Multiply_A;                           // 0x00A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Elements__IO; // 0x00A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_1_OffsetTransform__IO; // 0x00C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_1_CachedIndex; // 0x0120(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___Cast_2_1_Result;                      // 0x0130(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_1_1_Struct; // 0x0150(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_BreakStruct_1_1_Elements; // 0x0168(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRotator                               RigVMModel___Cast_1_1_1_Result;                    // 0x0180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FRotator                               RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_1_1_Elements__IO; // 0x0198(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor)
	struct FTransform                             RigVMModel___OffsetTransformForItem_1_1_1_1_OffsetTransform__IO; // 0x01B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___OffsetTransformForItem_1_1_1_1_CachedIndex; // 0x0210(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Work">();
	}
	static class URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Work>();
	}
};
static_assert(alignof(URigVMMemory_Work) == 0x000010, "Wrong alignment on URigVMMemory_Work");
static_assert(sizeof(URigVMMemory_Work) == 0x000220, "Wrong size on URigVMMemory_Work");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___Cast_Result) == 0x000030, "Member 'URigVMMemory_Work::RigVMModel___Cast_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Struct) == 0x000050, "Member 'URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Struct' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___Multiply_Result) == 0x000068, "Member 'URigVMMemory_Work::RigVMModel___Multiply_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_BreakStruct_Elements) == 0x000070, "Member 'URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_BreakStruct_Elements' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___Cast_1_Result) == 0x000088, "Member 'URigVMMemory_Work::RigVMModel___Cast_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___Multiply_A) == 0x0000A0, "Member 'URigVMMemory_Work::RigVMModel___Multiply_A' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Elements__IO) == 0x0000A8, "Member 'URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_Elements__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_1_OffsetTransform__IO) == 0x0000C0, "Member 'URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_1_CachedIndex) == 0x000120, "Member 'URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___Cast_2_1_Result) == 0x000130, "Member 'URigVMMemory_Work::RigVMModel___Cast_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_1_1_Struct) == 0x000150, "Member 'URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_1_1_Struct' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_BreakStruct_1_1_Elements) == 0x000168, "Member 'URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_BreakStruct_1_1_Elements' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___Cast_1_1_1_Result) == 0x000180, "Member 'URigVMMemory_Work::RigVMModel___Cast_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_1_1_Elements__IO) == 0x000198, "Member 'URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_MakeStruct_1_1_Elements__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_1_1_1_OffsetTransform__IO) == 0x0001B0, "Member 'URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_1_1_1_OffsetTransform__IO' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___OffsetTransformForItem_1_1_1_1_CachedIndex) == 0x000210, "Member 'URigVMMemory_Work::RigVMModel___OffsetTransformForItem_1_1_1_1_CachedIndex' has a wrong offset!");

}

