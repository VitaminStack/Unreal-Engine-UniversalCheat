#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_EndFlee

#include "Basic.hpp"

#include "BTT_EndFlee_classes.hpp"
#include "BTT_EndFlee_parameters.hpp"


namespace SDK
{

// Function BTT_EndFlee.BTT_EndFlee_C.Check If Seen
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Seen                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_EndFlee_C::Check_If_Seen(bool* Seen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_EndFlee_C", "Check If Seen");

	Params::BTT_EndFlee_C_Check_If_Seen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Seen != nullptr)
		*Seen = Parms.Seen;
}


// Function BTT_EndFlee.BTT_EndFlee_C.ExecuteUbergraph_BTT_EndFlee
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTT_EndFlee_C::ExecuteUbergraph_BTT_EndFlee(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_EndFlee_C", "ExecuteUbergraph_BTT_EndFlee");

	Params::BTT_EndFlee_C_ExecuteUbergraph_BTT_EndFlee Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTT_EndFlee.BTT_EndFlee_C.ReceiveExecute
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBTT_EndFlee_C::ReceiveExecute(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTT_EndFlee_C", "ReceiveExecute");

	Params::BTT_EndFlee_C_ReceiveExecute Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);
}

}

