#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapWidget

#include "Basic.hpp"

#include "S_MarkerData_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Struct_POI_structs.hpp"


namespace SDK::Params
{

// Function MapWidget.MapWidget_C.Add Standard Marker
// 0x0098 (0x0098 - 0x0000)
struct MapWidget_C_Add_Standard_Marker final
{
public:
	struct FS_MarkerData                          Marker;                                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_StandardMarker_C*                    Return;                                            // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_StandardMarker_C*                    CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_Add_Standard_Marker) == 0x000008, "Wrong alignment on MapWidget_C_Add_Standard_Marker");
static_assert(sizeof(MapWidget_C_Add_Standard_Marker) == 0x000098, "Wrong size on MapWidget_C_Add_Standard_Marker");
static_assert(offsetof(MapWidget_C_Add_Standard_Marker, Marker) == 0x000000, "Member 'MapWidget_C_Add_Standard_Marker::Marker' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Add_Standard_Marker, Target_Actor) == 0x000070, "Member 'MapWidget_C_Add_Standard_Marker::Target_Actor' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Add_Standard_Marker, Return) == 0x000078, "Member 'MapWidget_C_Add_Standard_Marker::Return' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Add_Standard_Marker, CallFunc_Create_ReturnValue) == 0x000080, "Member 'MapWidget_C_Add_Standard_Marker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Add_Standard_Marker, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'MapWidget_C_Add_Standard_Marker::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Add_Standard_Marker, CallFunc_AddChildToOverlay_ReturnValue) == 0x000090, "Member 'MapWidget_C_Add_Standard_Marker::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.AddPlayerCreatedMarker
// 0x00A0 (0x00A0 - 0x0000)
struct MapWidget_C_AddPlayerCreatedMarker final
{
public:
	struct FS_MarkerData                          Marker;                                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_PlayerMarker_C*                     Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayerMarker_C*                      Return;                                            // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PlayerMarker_C*                      CallFunc_Create_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_AddPlayerCreatedMarker) == 0x000008, "Wrong alignment on MapWidget_C_AddPlayerCreatedMarker");
static_assert(sizeof(MapWidget_C_AddPlayerCreatedMarker) == 0x0000A0, "Wrong size on MapWidget_C_AddPlayerCreatedMarker");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, Marker) == 0x000000, "Member 'MapWidget_C_AddPlayerCreatedMarker::Marker' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, Target_Actor) == 0x000070, "Member 'MapWidget_C_AddPlayerCreatedMarker::Target_Actor' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, Index_0) == 0x000078, "Member 'MapWidget_C_AddPlayerCreatedMarker::Index_0' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, Return) == 0x000080, "Member 'MapWidget_C_AddPlayerCreatedMarker::Return' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, CallFunc_Create_ReturnValue) == 0x000088, "Member 'MapWidget_C_AddPlayerCreatedMarker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, CallFunc_Array_AddUnique_ReturnValue) == 0x000090, "Member 'MapWidget_C_AddPlayerCreatedMarker::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPlayerCreatedMarker, CallFunc_AddChildToOverlay_ReturnValue) == 0x000098, "Member 'MapWidget_C_AddPlayerCreatedMarker::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.AddPOICreatedMarker
// 0x0118 (0x0118 - 0x0000)
struct MapWidget_C_AddPOICreatedMarker final
{
public:
	struct FS_MarkerData                          Marker;                                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Explored_;                                         // 0x0078(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_POI                            POI_Data;                                          // 0x0080(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UW_POIMarker_C*                         Return;                                            // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_POIMarker_C*                         CallFunc_Create_ReturnValue;                       // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_AddPOICreatedMarker) == 0x000008, "Wrong alignment on MapWidget_C_AddPOICreatedMarker");
static_assert(sizeof(MapWidget_C_AddPOICreatedMarker) == 0x000118, "Wrong size on MapWidget_C_AddPOICreatedMarker");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, Marker) == 0x000000, "Member 'MapWidget_C_AddPOICreatedMarker::Marker' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, Target_Actor) == 0x000070, "Member 'MapWidget_C_AddPOICreatedMarker::Target_Actor' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, Explored_) == 0x000078, "Member 'MapWidget_C_AddPOICreatedMarker::Explored_' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, POI_Data) == 0x000080, "Member 'MapWidget_C_AddPOICreatedMarker::POI_Data' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, Return) == 0x0000F0, "Member 'MapWidget_C_AddPOICreatedMarker::Return' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, CallFunc_Create_ReturnValue) == 0x0000F8, "Member 'MapWidget_C_AddPOICreatedMarker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, Temp_bool_Variable) == 0x000100, "Member 'MapWidget_C_AddPOICreatedMarker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, CallFunc_Array_AddUnique_ReturnValue) == 0x000104, "Member 'MapWidget_C_AddPOICreatedMarker::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, K2Node_Select_Default) == 0x000108, "Member 'MapWidget_C_AddPOICreatedMarker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddPOICreatedMarker, CallFunc_AddChildToOverlay_ReturnValue) == 0x000110, "Member 'MapWidget_C_AddPOICreatedMarker::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.AddQuestCreatedMarker
// 0x0098 (0x0098 - 0x0000)
struct MapWidget_C_AddQuestCreatedMarker final
{
public:
	struct FS_MarkerData                          Marker;                                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_QuestMarker_C*                      Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_QuestMarker_C*                       Return;                                            // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_QuestMarker_C*                       CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_AddQuestCreatedMarker) == 0x000008, "Wrong alignment on MapWidget_C_AddQuestCreatedMarker");
static_assert(sizeof(MapWidget_C_AddQuestCreatedMarker) == 0x000098, "Wrong size on MapWidget_C_AddQuestCreatedMarker");
static_assert(offsetof(MapWidget_C_AddQuestCreatedMarker, Marker) == 0x000000, "Member 'MapWidget_C_AddQuestCreatedMarker::Marker' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddQuestCreatedMarker, Target_Actor) == 0x000070, "Member 'MapWidget_C_AddQuestCreatedMarker::Target_Actor' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddQuestCreatedMarker, Return) == 0x000078, "Member 'MapWidget_C_AddQuestCreatedMarker::Return' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddQuestCreatedMarker, CallFunc_Create_ReturnValue) == 0x000080, "Member 'MapWidget_C_AddQuestCreatedMarker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddQuestCreatedMarker, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'MapWidget_C_AddQuestCreatedMarker::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddQuestCreatedMarker, CallFunc_AddChildToOverlay_ReturnValue) == 0x000090, "Member 'MapWidget_C_AddQuestCreatedMarker::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.AddWorldCreatedMarker
// 0x00B0 (0x00B0 - 0x0000)
struct MapWidget_C_AddWorldCreatedMarker final
{
public:
	struct FS_MarkerData                          Marker;                                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 Target_Actor;                                      // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0078(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_WorldMarker_C*                       Return;                                            // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_WorldMarker_C*                       CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_AddWorldCreatedMarker) == 0x000008, "Wrong alignment on MapWidget_C_AddWorldCreatedMarker");
static_assert(sizeof(MapWidget_C_AddWorldCreatedMarker) == 0x0000B0, "Wrong size on MapWidget_C_AddWorldCreatedMarker");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, Marker) == 0x000000, "Member 'MapWidget_C_AddWorldCreatedMarker::Marker' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, Target_Actor) == 0x000070, "Member 'MapWidget_C_AddWorldCreatedMarker::Target_Actor' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, Description) == 0x000078, "Member 'MapWidget_C_AddWorldCreatedMarker::Description' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, Return) == 0x000090, "Member 'MapWidget_C_AddWorldCreatedMarker::Return' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, CallFunc_Create_ReturnValue) == 0x000098, "Member 'MapWidget_C_AddWorldCreatedMarker::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, CallFunc_AddChildToOverlay_ReturnValue) == 0x0000A0, "Member 'MapWidget_C_AddWorldCreatedMarker::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_AddWorldCreatedMarker, CallFunc_Array_AddUnique_ReturnValue) == 0x0000A8, "Member 'MapWidget_C_AddWorldCreatedMarker::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'MapWidget_C_BndEvt__MapWidget_CheckBox_ToggleMarkers_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function MapWidget.MapWidget_C.BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'MapWidget_C_BndEvt__MapWidget_CheckBox_TogglePOIMarkers_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function MapWidget.MapWidget_C.Calculate Actor Position
// 0x0100 (0x0100 - 0x0000)
struct MapWidget_C_Calculate_Actor_Position final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_Calculate_Actor_Position) == 0x000008, "Wrong alignment on MapWidget_C_Calculate_Actor_Position");
static_assert(sizeof(MapWidget_C_Calculate_Actor_Position) == 0x000100, "Wrong size on MapWidget_C_Calculate_Actor_Position");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, Actor) == 0x000000, "Member 'MapWidget_C_Calculate_Actor_Position::Actor' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, Location) == 0x000008, "Member 'MapWidget_C_Calculate_Actor_Position::Location' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_GetDesiredSize_ReturnValue) == 0x000030, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector_X) == 0x000040, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector_Y) == 0x000048, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector_Z) == 0x000050, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector2D_X) == 0x000058, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000B8, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector2D_X_1) == 0x0000C8, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_BreakVector2D_Y_1) == 0x0000D0, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_FClamp_ReturnValue) == 0x0000E0, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_FClamp_ReturnValue_1) == 0x0000E8, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Calculate_Actor_Position, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000F0, "Member 'MapWidget_C_Calculate_Actor_Position::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function MapWidget.MapWidget_C.CalculateMarkerToWorld
// 0x0138 (0x0138 - 0x0000)
struct MapWidget_C_CalculateMarkerToWorld final
{
public:
	struct FVector2D                              Mouse_Position;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_2;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_3;     // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast_1;  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast_2;  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_CalculateMarkerToWorld) == 0x000008, "Wrong alignment on MapWidget_C_CalculateMarkerToWorld");
static_assert(sizeof(MapWidget_C_CalculateMarkerToWorld) == 0x000138, "Wrong size on MapWidget_C_CalculateMarkerToWorld");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, Mouse_Position) == 0x000000, "Member 'MapWidget_C_CalculateMarkerToWorld::Mouse_Position' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, ReturnValue) == 0x000010, "Member 'MapWidget_C_CalculateMarkerToWorld::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_GetDesiredSize_ReturnValue) == 0x000020, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_GetViewportScale_ReturnValue) == 0x000030, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000038, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_GetViewportScale_ReturnValue_1) == 0x000048, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_GetViewportSize_ReturnValue) == 0x000050, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000060, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000070, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_GetViewportScale_ReturnValue_2) == 0x000080, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_GetViewportScale_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x000088, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x0000B8, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x0000C8, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_ReturnValue_3) == 0x0000D8, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_BreakVector2D_X) == 0x0000E8, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_BreakVector2D_Y) == 0x0000F0, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_MakeVector2D_ReturnValue) == 0x000100, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000110, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x000120, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast_1) == 0x000128, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_CalculateMarkerToWorld, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast_2) == 0x000130, "Member 'MapWidget_C_CalculateMarkerToWorld::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast_2' has a wrong offset!");

// Function MapWidget.MapWidget_C.ClampSides
// 0x00F8 (0x00F8 - 0x0000)
struct MapWidget_C_ClampSides final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              ClampTo;                                           // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Clamped;                                           // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_ClampSides) == 0x000008, "Wrong alignment on MapWidget_C_ClampSides");
static_assert(sizeof(MapWidget_C_ClampSides) == 0x0000F8, "Wrong size on MapWidget_C_ClampSides");
static_assert(offsetof(MapWidget_C_ClampSides, Geometry) == 0x000000, "Member 'MapWidget_C_ClampSides::Geometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, ClampTo) == 0x000038, "Member 'MapWidget_C_ClampSides::ClampTo' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, Clamped) == 0x000048, "Member 'MapWidget_C_ClampSides::Clamped' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_BreakVector2D_X) == 0x000058, "Member 'MapWidget_C_ClampSides::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_BreakVector2D_Y) == 0x000060, "Member 'MapWidget_C_ClampSides::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_GetDesiredSize_ReturnValue) == 0x000068, "Member 'MapWidget_C_ClampSides::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_GetLocalSize_ReturnValue) == 0x000078, "Member 'MapWidget_C_ClampSides::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'MapWidget_C_ClampSides::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'MapWidget_C_ClampSides::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000A8, "Member 'MapWidget_C_ClampSides::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_BreakVector2D_X_1) == 0x0000B8, "Member 'MapWidget_C_ClampSides::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_BreakVector2D_Y_1) == 0x0000C0, "Member 'MapWidget_C_ClampSides::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'MapWidget_C_ClampSides::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'MapWidget_C_ClampSides::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_FClamp_ReturnValue) == 0x0000D8, "Member 'MapWidget_C_ClampSides::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_FClamp_ReturnValue_1) == 0x0000E0, "Member 'MapWidget_C_ClampSides::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ClampSides, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'MapWidget_C_ClampSides::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.ExecuteUbergraph_MapWidget
// 0x0218 (0x0218 - 0x0000)
struct MapWidget_C_ExecuteUbergraph_MapWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapData_C*                          CallFunc_GetActorOfClass_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x004C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UW_StandardMarker_C*                    CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Actor_Position_Location;        // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Calculate_Actor_Position_Location_1;      // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_QuestMarker_C*                       CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Actor_Position_Location_2;      // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Toggle;                         // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_MinimapSystem_C*                   CallFunc_Get_Minimap_Component_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalculateMarkerToWorld_ReturnValue;       // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayerMarker_C*                      CallFunc_Array_Get_Item_2;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Actor_Position_Location_3;      // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked_1;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_POIMarker_C*                         CallFunc_Array_Get_Item_3;                         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Actor_Position_Location_4;      // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGPSEquipped__GPS_;                      // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_1;                 // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGPSEquipped__GPS__1;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WorldMarker_C*                       CallFunc_Array_Get_Item_4;                         // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Calculate_Actor_Position_Location_5;      // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_2;                 // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGPSEquipped__GPS__2;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_ExecuteUbergraph_MapWidget) == 0x000008, "Wrong alignment on MapWidget_C_ExecuteUbergraph_MapWidget");
static_assert(sizeof(MapWidget_C_ExecuteUbergraph_MapWidget) == 0x000218, "Wrong size on MapWidget_C_ExecuteUbergraph_MapWidget");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, EntryPoint) == 0x000000, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Loop_Counter_Variable_2) == 0x000014, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Loop_Counter_Variable_3) == 0x000028, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Loop_Counter_Variable_4) == 0x000034, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Add_IntInt_ReturnValue_4) == 0x000038, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_GetActorOfClass_ReturnValue) == 0x000040, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_Event_MyGeometry) == 0x00004C, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_Event_InDeltaTime) == 0x000084, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000088, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000090, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Calculate_Actor_Position_Location) == 0x0000C8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Calculate_Actor_Position_Location' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Calculate_Actor_Position_Location_1) == 0x0000D8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Calculate_Actor_Position_Location_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsValid_ReturnValue_2) == 0x0000F9, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Calculate_Actor_Position_Location_2) == 0x000100, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Calculate_Actor_Position_Location_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Length_ReturnValue_2) == 0x000110, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_CustomEvent_Toggle) == 0x000114, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_CustomEvent_Toggle' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Less_IntInt_ReturnValue_2) == 0x000115, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000118, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Get_Minimap_Component_ReturnValue) == 0x000128, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Get_Minimap_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_CalculateMarkerToWorld_ReturnValue) == 0x000130, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_CalculateMarkerToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, Temp_int_Array_Index_Variable_4) == 0x000140, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Get_Item_2) == 0x000148, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsValid_ReturnValue_3) == 0x000150, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Calculate_Actor_Position_Location_3) == 0x000158, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Calculate_Actor_Position_Location_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_ComponentBoundEvent_bIsChecked_1) == 0x000168, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_ComponentBoundEvent_bIsChecked_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Get_Item_3) == 0x000170, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Length_ReturnValue_3) == 0x000178, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Less_IntInt_ReturnValue_3) == 0x00017C, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsValid_ReturnValue_4) == 0x00017D, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Calculate_Actor_Position_Location_4) == 0x000180, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Calculate_Actor_Position_Location_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_ComponentBoundEvent_bIsChecked) == 0x000190, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000198, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_DynamicCast_AsBPI_Player) == 0x0001A0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsGPSEquipped__GPS_) == 0x0001B1, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsGPSEquipped__GPS_' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0001B8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_DynamicCast_AsBPI_Player_1) == 0x0001C0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_DynamicCast_AsBPI_Player_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_DynamicCast_bSuccess_1) == 0x0001D0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsGPSEquipped__GPS__1) == 0x0001D1, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsGPSEquipped__GPS__1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Get_Item_4) == 0x0001D8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Array_Length_ReturnValue_4) == 0x0001E0, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001E4, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsValid_ReturnValue_5) == 0x0001E5, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_Calculate_Actor_Position_Location_5) == 0x0001E8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_Calculate_Actor_Position_Location_5' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0001F8, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_DynamicCast_AsBPI_Player_2) == 0x000200, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_DynamicCast_AsBPI_Player_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, K2Node_DynamicCast_bSuccess_2) == 0x000210, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_ExecuteUbergraph_MapWidget, CallFunc_IsGPSEquipped__GPS__2) == 0x000211, "Member 'MapWidget_C_ExecuteUbergraph_MapWidget::CallFunc_IsGPSEquipped__GPS__2' has a wrong offset!");

// Function MapWidget.MapWidget_C.OnMouseButtonDoubleClick
// 0x0220 (0x0220 - 0x0000)
struct MapWidget_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(MapWidget_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on MapWidget_C_OnMouseButtonDoubleClick");
static_assert(sizeof(MapWidget_C_OnMouseButtonDoubleClick) == 0x000220, "Wrong size on MapWidget_C_OnMouseButtonDoubleClick");
static_assert(offsetof(MapWidget_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'MapWidget_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000038, "Member 'MapWidget_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000B0, "Member 'MapWidget_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonDoubleClick, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'MapWidget_C_OnMouseButtonDoubleClick::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct MapWidget_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(MapWidget_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on MapWidget_C_OnMouseButtonDown");
static_assert(sizeof(MapWidget_C_OnMouseButtonDown) == 0x000220, "Wrong size on MapWidget_C_OnMouseButtonDown");
static_assert(offsetof(MapWidget_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'MapWidget_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'MapWidget_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'MapWidget_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'MapWidget_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.OnMouseButtonUp
// 0x0220 (0x0220 - 0x0000)
struct MapWidget_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(MapWidget_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on MapWidget_C_OnMouseButtonUp");
static_assert(sizeof(MapWidget_C_OnMouseButtonUp) == 0x000220, "Wrong size on MapWidget_C_OnMouseButtonUp");
static_assert(offsetof(MapWidget_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'MapWidget_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'MapWidget_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'MapWidget_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'MapWidget_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.OnMouseMove
// 0x0268 (0x0268 - 0x0000)
struct MapWidget_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01A0(0x00B8)()
	struct FVector2D                              CallFunc_ClampSides_Clamped;                       // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_OnMouseMove) == 0x000008, "Wrong alignment on MapWidget_C_OnMouseMove");
static_assert(sizeof(MapWidget_C_OnMouseMove) == 0x000268, "Wrong size on MapWidget_C_OnMouseMove");
static_assert(offsetof(MapWidget_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'MapWidget_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'MapWidget_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'MapWidget_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000168, "Member 'MapWidget_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000178, "Member 'MapWidget_C_OnMouseMove::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000188, "Member 'MapWidget_C_OnMouseMove::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000190, "Member 'MapWidget_C_OnMouseMove::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x0001A0, "Member 'MapWidget_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseMove, CallFunc_ClampSides_Clamped) == 0x000258, "Member 'MapWidget_C_OnMouseMove::CallFunc_ClampSides_Clamped' has a wrong offset!");

// Function MapWidget.MapWidget_C.OnMouseWheel
// 0x04C0 (0x04C0 - 0x0000)
struct MapWidget_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue_1; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Minus_One__Int__Return_Value;             // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01F0(0x00B8)()
	struct FVector2D                              CallFunc_ClampAxes2D_ReturnValue;                  // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02D0(0x00B8)()
	int32                                         Temp_int_Variable_2;                               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x03E8(0x00B8)()
	struct FVector2D                              CallFunc_ClampSides_Clamped;                       // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_OnMouseWheel) == 0x000008, "Wrong alignment on MapWidget_C_OnMouseWheel");
static_assert(sizeof(MapWidget_C_OnMouseWheel) == 0x0004C0, "Wrong size on MapWidget_C_OnMouseWheel");
static_assert(offsetof(MapWidget_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'MapWidget_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'MapWidget_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'MapWidget_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, Temp_bool_Variable) == 0x000168, "Member 'MapWidget_C_OnMouseWheel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x00016C, "Member 'MapWidget_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000170, "Member 'MapWidget_C_OnMouseWheel::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000180, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_AbsoluteToLocal_ReturnValue) == 0x000188, "Member 'MapWidget_C_OnMouseWheel::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue_1) == 0x000198, "Member 'MapWidget_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_GetLocalSize_ReturnValue) == 0x0001A0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0001B8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001C8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, Temp_int_Variable) == 0x0001D8, "Member 'MapWidget_C_OnMouseWheel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, Temp_int_Variable_1) == 0x0001DC, "Member 'MapWidget_C_OnMouseWheel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Minus_One__Int__Return_Value) == 0x0001E0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Minus_One__Int__Return_Value' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001E4, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001E8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x0001F0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_ClampAxes2D_ReturnValue) == 0x0002A8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_ClampAxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0002B8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Greater_IntInt_ReturnValue) == 0x0002C8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Less_IntInt_ReturnValue) == 0x0002C9, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Handled_ReturnValue_1) == 0x0002D0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, Temp_int_Variable_2) == 0x000388, "Member 'MapWidget_C_OnMouseWheel::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000390, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, K2Node_Select_Default) == 0x000398, "Member 'MapWidget_C_OnMouseWheel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0003A0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0003A8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Add_IntInt_ReturnValue) == 0x0003C0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0003C8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x0003D8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Handled_ReturnValue_2) == 0x0003E8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_ClampSides_Clamped) == 0x0004A0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_ClampSides_Clamped' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0004B0, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0004B8, "Member 'MapWidget_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function MapWidget.MapWidget_C.OnScroll
// 0x0018 (0x0018 - 0x0000)
struct MapWidget_C_OnScroll final
{
public:
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_OnScroll) == 0x000008, "Wrong alignment on MapWidget_C_OnScroll");
static_assert(sizeof(MapWidget_C_OnScroll) == 0x000018, "Wrong size on MapWidget_C_OnScroll");
static_assert(offsetof(MapWidget_C_OnScroll, CallFunc_Conv_IntToString_ReturnValue) == 0x000000, "Member 'MapWidget_C_OnScroll::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnScroll, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'MapWidget_C_OnScroll::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MapWidget_C_OnScroll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000011, "Member 'MapWidget_C_OnScroll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.SetScreenPositionToPlayer
// 0x0058 (0x0058 - 0x0000)
struct MapWidget_C_SetScreenPositionToPlayer final
{
public:
	struct FGeometry                              CallFunc_GetTickSpaceGeometry_ReturnValue;         // 0x0000(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_ClampSides_Clamped;                       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_SetScreenPositionToPlayer) == 0x000008, "Wrong alignment on MapWidget_C_SetScreenPositionToPlayer");
static_assert(sizeof(MapWidget_C_SetScreenPositionToPlayer) == 0x000058, "Wrong size on MapWidget_C_SetScreenPositionToPlayer");
static_assert(offsetof(MapWidget_C_SetScreenPositionToPlayer, CallFunc_GetTickSpaceGeometry_ReturnValue) == 0x000000, "Member 'MapWidget_C_SetScreenPositionToPlayer::CallFunc_GetTickSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapWidget_C_SetScreenPositionToPlayer, CallFunc_ClampSides_Clamped) == 0x000038, "Member 'MapWidget_C_SetScreenPositionToPlayer::CallFunc_ClampSides_Clamped' has a wrong offset!");
static_assert(offsetof(MapWidget_C_SetScreenPositionToPlayer, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'MapWidget_C_SetScreenPositionToPlayer::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function MapWidget.MapWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct MapWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_Tick) == 0x000004, "Wrong alignment on MapWidget_C_Tick");
static_assert(sizeof(MapWidget_C_Tick) == 0x00003C, "Wrong size on MapWidget_C_Tick");
static_assert(offsetof(MapWidget_C_Tick, MyGeometry) == 0x000000, "Member 'MapWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MapWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'MapWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function MapWidget.MapWidget_C.ToggleMap
// 0x0001 (0x0001 - 0x0000)
struct MapWidget_C_ToggleMap final
{
public:
	bool                                          Toggle;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapWidget_C_ToggleMap) == 0x000001, "Wrong alignment on MapWidget_C_ToggleMap");
static_assert(sizeof(MapWidget_C_ToggleMap) == 0x000001, "Wrong size on MapWidget_C_ToggleMap");
static_assert(offsetof(MapWidget_C_ToggleMap, Toggle) == 0x000000, "Member 'MapWidget_C_ToggleMap::Toggle' has a wrong offset!");

}

