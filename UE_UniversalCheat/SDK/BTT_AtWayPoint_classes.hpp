#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_AtWayPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_AIBehaviour_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_AtWayPoint.BTT_AtWayPoint_C
// 0x0030 (0x00D8 - 0x00A8)
class UBTT_AtWayPoint_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_SmartAIComponent_C*                 AI_Component;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Current_Montage;                                   // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Next_Montage_Timer;                                // 0x00C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Way_Point_Timer;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Montage_Index;                             // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void End_Way_Point_Wait();
	void ExecuteUbergraph_BTT_AtWayPoint(int32 EntryPoint);
	void Get_Next_Montage();
	void Next_Montage();
	void ReceiveAbort(class AActor* OwnerActor);
	void ReceiveExecute(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_AtWayPoint_C">();
	}
	static class UBTT_AtWayPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_AtWayPoint_C>();
	}
};
static_assert(alignof(UBTT_AtWayPoint_C) == 0x000008, "Wrong alignment on UBTT_AtWayPoint_C");
static_assert(sizeof(UBTT_AtWayPoint_C) == 0x0000D8, "Wrong size on UBTT_AtWayPoint_C");
static_assert(offsetof(UBTT_AtWayPoint_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_AtWayPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_AtWayPoint_C, AI_Component) == 0x0000B0, "Member 'UBTT_AtWayPoint_C::AI_Component' has a wrong offset!");
static_assert(offsetof(UBTT_AtWayPoint_C, Current_Montage) == 0x0000B8, "Member 'UBTT_AtWayPoint_C::Current_Montage' has a wrong offset!");
static_assert(offsetof(UBTT_AtWayPoint_C, Next_Montage_Timer) == 0x0000C0, "Member 'UBTT_AtWayPoint_C::Next_Montage_Timer' has a wrong offset!");
static_assert(offsetof(UBTT_AtWayPoint_C, Way_Point_Timer) == 0x0000C8, "Member 'UBTT_AtWayPoint_C::Way_Point_Timer' has a wrong offset!");
static_assert(offsetof(UBTT_AtWayPoint_C, Current_Montage_Index) == 0x0000D0, "Member 'UBTT_AtWayPoint_C::Current_Montage_Index' has a wrong offset!");

}

