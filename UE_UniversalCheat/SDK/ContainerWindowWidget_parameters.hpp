#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ContainerWindowWidget

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function ContainerWindowWidget.ContainerWindowWidget_C.ExecuteUbergraph_ContainerWindowWidget
// 0x00B8 (0x00B8 - 0x0000)
struct ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_Widget;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Name;                                 // 0x0010(0x0018)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InspectorWindowWidget_C*            K2Node_Event_Inspector;                            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0038(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_NewWeight;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            K2Node_Event_ItemRef;                              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_ActorRef;                             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPos_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget");
static_assert(sizeof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget) == 0x0000B8, "Wrong size on ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, EntryPoint) == 0x000000, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_Widget) == 0x000008, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_Widget' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_Name) == 0x000010, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_Inspector) == 0x000030, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_Inspector' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_MyGeometry) == 0x000038, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_InDeltaTime) == 0x000070, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_NewWeight) == 0x000080, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_NewWeight' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_IsInputKeyDown_ReturnValue) == 0x000089, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_ItemRef) == 0x000090, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_ItemRef' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, K2Node_Event_ActorRef) == 0x000098, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::K2Node_Event_ActorRef' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0000A0, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget, CallFunc_GetPos_ReturnValue) == 0x0000A8, "Member 'ContainerWindowWidget_C_ExecuteUbergraph_ContainerWindowWidget::CallFunc_GetPos_ReturnValue' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetAllAttachments
// 0x0010 (0x0010 - 0x0000)
struct ContainerWindowWidget_C_GetAllAttachments final
{
public:
	TArray<class FName>                           Attachments;                                       // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(ContainerWindowWidget_C_GetAllAttachments) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetAllAttachments");
static_assert(sizeof(ContainerWindowWidget_C_GetAllAttachments) == 0x000010, "Wrong size on ContainerWindowWidget_C_GetAllAttachments");
static_assert(offsetof(ContainerWindowWidget_C_GetAllAttachments, Attachments) == 0x000000, "Member 'ContainerWindowWidget_C_GetAllAttachments::Attachments' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetContainerByAttachmentType
// 0x0018 (0x0018 - 0x0000)
struct ContainerWindowWidget_C_GetContainerByAttachmentType final
{
public:
	struct FGameplayTag                           Type;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        JigContainer;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ContainerIndex;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_GetContainerByAttachmentType) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetContainerByAttachmentType");
static_assert(sizeof(ContainerWindowWidget_C_GetContainerByAttachmentType) == 0x000018, "Wrong size on ContainerWindowWidget_C_GetContainerByAttachmentType");
static_assert(offsetof(ContainerWindowWidget_C_GetContainerByAttachmentType, Type) == 0x000000, "Member 'ContainerWindowWidget_C_GetContainerByAttachmentType::Type' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetContainerByAttachmentType, JigContainer) == 0x000008, "Member 'ContainerWindowWidget_C_GetContainerByAttachmentType::JigContainer' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetContainerByAttachmentType, ContainerIndex) == 0x000010, "Member 'ContainerWindowWidget_C_GetContainerByAttachmentType::ContainerIndex' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetDropWidget
// 0x0008 (0x0008 - 0x0000)
struct ContainerWindowWidget_C_GetDropWidget final
{
public:
	class UDropItemBackGwidget_C*                 DropWRef;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_GetDropWidget) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetDropWidget");
static_assert(sizeof(ContainerWindowWidget_C_GetDropWidget) == 0x000008, "Wrong size on ContainerWindowWidget_C_GetDropWidget");
static_assert(offsetof(ContainerWindowWidget_C_GetDropWidget, DropWRef) == 0x000000, "Member 'ContainerWindowWidget_C_GetDropWidget::DropWRef' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetJSIContainerByPlayerSlots
// 0x0020 (0x0020 - 0x0000)
struct ContainerWindowWidget_C_GetJSIContainerByPlayerSlots final
{
public:
	struct FGameplayTag                           Slot_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            EquippedItem;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPending_;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_GetJSIContainerByPlayerSlots) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetJSIContainerByPlayerSlots");
static_assert(sizeof(ContainerWindowWidget_C_GetJSIContainerByPlayerSlots) == 0x000020, "Wrong size on ContainerWindowWidget_C_GetJSIContainerByPlayerSlots");
static_assert(offsetof(ContainerWindowWidget_C_GetJSIContainerByPlayerSlots, Slot_0) == 0x000000, "Member 'ContainerWindowWidget_C_GetJSIContainerByPlayerSlots::Slot_0' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetJSIContainerByPlayerSlots, Container) == 0x000008, "Member 'ContainerWindowWidget_C_GetJSIContainerByPlayerSlots::Container' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetJSIContainerByPlayerSlots, EquippedItem) == 0x000010, "Member 'ContainerWindowWidget_C_GetJSIContainerByPlayerSlots::EquippedItem' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetJSIContainerByPlayerSlots, IsPending_) == 0x000018, "Member 'ContainerWindowWidget_C_GetJSIContainerByPlayerSlots::IsPending_' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetListOfNonAddContainers
// 0x0010 (0x0010 - 0x0000)
struct ContainerWindowWidget_C_GetListOfNonAddContainers final
{
public:
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(ContainerWindowWidget_C_GetListOfNonAddContainers) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetListOfNonAddContainers");
static_assert(sizeof(ContainerWindowWidget_C_GetListOfNonAddContainers) == 0x000010, "Wrong size on ContainerWindowWidget_C_GetListOfNonAddContainers");
static_assert(offsetof(ContainerWindowWidget_C_GetListOfNonAddContainers, Containers) == 0x000000, "Member 'ContainerWindowWidget_C_GetListOfNonAddContainers::Containers' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetLootContent
// 0x0008 (0x0008 - 0x0000)
struct ContainerWindowWidget_C_GetLootContent final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_GetLootContent) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetLootContent");
static_assert(sizeof(ContainerWindowWidget_C_GetLootContent) == 0x000008, "Wrong size on ContainerWindowWidget_C_GetLootContent");
static_assert(offsetof(ContainerWindowWidget_C_GetLootContent, Widget) == 0x000000, "Member 'ContainerWindowWidget_C_GetLootContent::Widget' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetPos
// 0x0298 (0x0298 - 0x0000)
struct ContainerWindowWidget_C_GetPos final
{
public:
	class UWidget*                                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewPos;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              ViewPG;                                            // 0x0028(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector2D                              Half;                                              // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Des;                                               // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_2;               // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_3;               // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_9;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_9;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_10;                       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_10;                       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetViewportWidgetGeometry_ReturnValue;    // 0x021C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_11;                       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_11;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_GetPos) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetPos");
static_assert(sizeof(ContainerWindowWidget_C_GetPos) == 0x000298, "Wrong size on ContainerWindowWidget_C_GetPos");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, Target) == 0x000000, "Member 'ContainerWindowWidget_C_GetPos::Target' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, ReturnValue) == 0x000008, "Member 'ContainerWindowWidget_C_GetPos::ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, NewPos) == 0x000018, "Member 'ContainerWindowWidget_C_GetPos::NewPos' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, ViewPG) == 0x000028, "Member 'ContainerWindowWidget_C_GetPos::ViewPG' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, Half) == 0x000060, "Member 'ContainerWindowWidget_C_GetPos::Half' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, Des) == 0x000070, "Member 'ContainerWindowWidget_C_GetPos::Des' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetDesiredSize_ReturnValue) == 0x000080, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000090, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetLocalSize_ReturnValue) == 0x0000B0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_2) == 0x0000D0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_2) == 0x0000D8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000E0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_3) == 0x0000F0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_3) == 0x0000F8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000100, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_4) == 0x000110, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_4) == 0x000118, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_MakeVector2D_ReturnValue) == 0x000120, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetLocalSize_ReturnValue_2) == 0x000130, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetLocalSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000140, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_5) == 0x000150, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_5) == 0x000158, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_MakeVector2D_ReturnValue_1) == 0x000160, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_6) == 0x000170, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_6) == 0x000178, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_MakeVector2D_ReturnValue_2) == 0x000180, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_7) == 0x000190, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_7) == 0x000198, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_8) == 0x0001A8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_8) == 0x0001B0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001B9, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_MakeVector2D_ReturnValue_3) == 0x0001C0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetLocalSize_ReturnValue_3) == 0x0001D8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetLocalSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001E8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_9) == 0x0001F8, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_9) == 0x000200, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_10) == 0x000208, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_10) == 0x000210, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetViewportWidgetGeometry_ReturnValue) == 0x00021C, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetViewportWidgetGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000258, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_X_11) == 0x000268, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_BreakVector2D_Y_11) == 0x000270, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_MakeVector2D_ReturnValue_4) == 0x000278, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPos, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000288, "Member 'ContainerWindowWidget_C_GetPos::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetPosInViewport
// 0x0020 (0x0020 - 0x0000)
struct ContainerWindowWidget_C_GetPosInViewport final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_GetPosInViewport) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetPosInViewport");
static_assert(sizeof(ContainerWindowWidget_C_GetPosInViewport) == 0x000020, "Wrong size on ContainerWindowWidget_C_GetPosInViewport");
static_assert(offsetof(ContainerWindowWidget_C_GetPosInViewport, ReturnValue) == 0x000000, "Member 'ContainerWindowWidget_C_GetPosInViewport::ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetPosInViewport, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000010, "Member 'ContainerWindowWidget_C_GetPosInViewport::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetValidReloadContainers
// 0x0010 (0x0010 - 0x0000)
struct ContainerWindowWidget_C_GetValidReloadContainers final
{
public:
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(ContainerWindowWidget_C_GetValidReloadContainers) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetValidReloadContainers");
static_assert(sizeof(ContainerWindowWidget_C_GetValidReloadContainers) == 0x000010, "Wrong size on ContainerWindowWidget_C_GetValidReloadContainers");
static_assert(offsetof(ContainerWindowWidget_C_GetValidReloadContainers, Containers) == 0x000000, "Member 'ContainerWindowWidget_C_GetValidReloadContainers::Containers' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetWeight
// 0x0148 (0x0148 - 0x0000)
struct ContainerWindowWidget_C_GetWeight final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0130(0x0018)()
};
static_assert(alignof(ContainerWindowWidget_C_GetWeight) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetWeight");
static_assert(sizeof(ContainerWindowWidget_C_GetWeight) == 0x000148, "Wrong size on ContainerWindowWidget_C_GetWeight");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, Temp_bool_Variable) == 0x000000, "Member 'ContainerWindowWidget_C_GetWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000001, "Member 'ContainerWindowWidget_C_GetWeight::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'ContainerWindowWidget_C_GetWeight::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'ContainerWindowWidget_C_GetWeight::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, K2Node_MakeArray_Array) == 0x000070, "Member 'ContainerWindowWidget_C_GetWeight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'ContainerWindowWidget_C_GetWeight::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, CallFunc_Format_ReturnValue) == 0x000088, "Member 'ContainerWindowWidget_C_GetWeight::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0000A0, "Member 'ContainerWindowWidget_C_GetWeight::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'ContainerWindowWidget_C_GetWeight::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, K2Node_MakeArray_Array_1) == 0x000108, "Member 'ContainerWindowWidget_C_GetWeight::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, CallFunc_Format_ReturnValue_1) == 0x000118, "Member 'ContainerWindowWidget_C_GetWeight::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_GetWeight, K2Node_Select_Default) == 0x000130, "Member 'ContainerWindowWidget_C_GetWeight::K2Node_Select_Default' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.JigSetLootContent
// 0x0020 (0x0020 - 0x0000)
struct ContainerWindowWidget_C_JigSetLootContent final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Name_0;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ContainerWindowWidget_C_JigSetLootContent) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_JigSetLootContent");
static_assert(sizeof(ContainerWindowWidget_C_JigSetLootContent) == 0x000020, "Wrong size on ContainerWindowWidget_C_JigSetLootContent");
static_assert(offsetof(ContainerWindowWidget_C_JigSetLootContent, Widget) == 0x000000, "Member 'ContainerWindowWidget_C_JigSetLootContent::Widget' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_JigSetLootContent, Name_0) == 0x000008, "Member 'ContainerWindowWidget_C_JigSetLootContent::Name_0' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.JSIOnWeightUpdated
// 0x0008 (0x0008 - 0x0000)
struct ContainerWindowWidget_C_JSIOnWeightUpdated final
{
public:
	double                                        NewWeight;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_JSIOnWeightUpdated) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_JSIOnWeightUpdated");
static_assert(sizeof(ContainerWindowWidget_C_JSIOnWeightUpdated) == 0x000008, "Wrong size on ContainerWindowWidget_C_JSIOnWeightUpdated");
static_assert(offsetof(ContainerWindowWidget_C_JSIOnWeightUpdated, NewWeight) == 0x000000, "Member 'ContainerWindowWidget_C_JSIOnWeightUpdated::NewWeight' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.On_TitleBorder_MouseButtonDown_0
// 0x0310 (0x0310 - 0x0000)
struct ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0168(0x00B8)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosInViewport_ReturnValue;             // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x0248(0x00B8)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0");
static_assert(sizeof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0) == 0x000310, "Wrong size on ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, ReturnValue) == 0x0000B0, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000168, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000220, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_GetPosInViewport_ReturnValue) == 0x000228, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_GetPosInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_GetPosition_ReturnValue) == 0x000238, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_CaptureMouse_ReturnValue) == 0x000248, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000300, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0, CallFunc_IsValid_ReturnValue) == 0x000308, "Member 'ContainerWindowWidget_C_On_TitleBorder_MouseButtonDown_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.OnMouseButtonDown
// 0x0230 (0x0230 - 0x0000)
struct ContainerWindowWidget_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0178(0x00B8)()
};
static_assert(alignof(ContainerWindowWidget_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_OnMouseButtonDown");
static_assert(sizeof(ContainerWindowWidget_C_OnMouseButtonDown) == 0x000230, "Wrong size on ContainerWindowWidget_C_OnMouseButtonDown");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'ContainerWindowWidget_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'ContainerWindowWidget_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'ContainerWindowWidget_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonDown, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000168, "Member 'ContainerWindowWidget_C_OnMouseButtonDown::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x000170, "Member 'ContainerWindowWidget_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000178, "Member 'ContainerWindowWidget_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.OnMouseButtonUp
// 0x03B0 (0x03B0 - 0x0000)
struct ContainerWindowWidget_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0168(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0220(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x0238(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x02F8(0x00B8)()
};
static_assert(alignof(ContainerWindowWidget_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_OnMouseButtonUp");
static_assert(sizeof(ContainerWindowWidget_C_OnMouseButtonUp) == 0x0003B0, "Wrong size on ContainerWindowWidget_C_OnMouseButtonUp");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000168, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000220, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x000238, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002F0, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x0002F8, "Member 'ContainerWindowWidget_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.OnMouseMove
// 0x0258 (0x0258 - 0x0000)
struct ContainerWindowWidget_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetPosInViewport_ReturnValue;             // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01A0(0x00B8)()
};
static_assert(alignof(ContainerWindowWidget_C_OnMouseMove) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_OnMouseMove");
static_assert(sizeof(ContainerWindowWidget_C_OnMouseMove) == 0x000258, "Wrong size on ContainerWindowWidget_C_OnMouseMove");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'ContainerWindowWidget_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'ContainerWindowWidget_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'ContainerWindowWidget_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, CallFunc_GetPosInViewport_ReturnValue) == 0x000168, "Member 'ContainerWindowWidget_C_OnMouseMove::CallFunc_GetPosInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000178, "Member 'ContainerWindowWidget_C_OnMouseMove::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000188, "Member 'ContainerWindowWidget_C_OnMouseMove::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000190, "Member 'ContainerWindowWidget_C_OnMouseMove::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x0001A0, "Member 'ContainerWindowWidget_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.SetActionbarFollower
// 0x0010 (0x0010 - 0x0000)
struct ContainerWindowWidget_C_SetActionbarFollower final
{
public:
	class UJSI_Slot_C*                            JigRef;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_SetActionbarFollower) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_SetActionbarFollower");
static_assert(sizeof(ContainerWindowWidget_C_SetActionbarFollower) == 0x000010, "Wrong size on ContainerWindowWidget_C_SetActionbarFollower");
static_assert(offsetof(ContainerWindowWidget_C_SetActionbarFollower, JigRef) == 0x000000, "Member 'ContainerWindowWidget_C_SetActionbarFollower::JigRef' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_SetActionbarFollower, Return) == 0x000008, "Member 'ContainerWindowWidget_C_SetActionbarFollower::Return' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.SetActorOwner
// 0x0008 (0x0008 - 0x0000)
struct ContainerWindowWidget_C_SetActorOwner final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_SetActorOwner) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_SetActorOwner");
static_assert(sizeof(ContainerWindowWidget_C_SetActorOwner) == 0x000008, "Wrong size on ContainerWindowWidget_C_SetActorOwner");
static_assert(offsetof(ContainerWindowWidget_C_SetActorOwner, ActorRef) == 0x000000, "Member 'ContainerWindowWidget_C_SetActorOwner::ActorRef' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.SetInspectorRef
// 0x0008 (0x0008 - 0x0000)
struct ContainerWindowWidget_C_SetInspectorRef final
{
public:
	class UBP_InspectorWindowWidget_C*            Inspector;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_SetInspectorRef) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_SetInspectorRef");
static_assert(sizeof(ContainerWindowWidget_C_SetInspectorRef) == 0x000008, "Wrong size on ContainerWindowWidget_C_SetInspectorRef");
static_assert(offsetof(ContainerWindowWidget_C_SetInspectorRef, Inspector) == 0x000000, "Member 'ContainerWindowWidget_C_SetInspectorRef::Inspector' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.SetItemReference
// 0x0008 (0x0008 - 0x0000)
struct ContainerWindowWidget_C_SetItemReference final
{
public:
	class UJSI_Slot_C*                            ItemRef_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_SetItemReference) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_SetItemReference");
static_assert(sizeof(ContainerWindowWidget_C_SetItemReference) == 0x000008, "Wrong size on ContainerWindowWidget_C_SetItemReference");
static_assert(offsetof(ContainerWindowWidget_C_SetItemReference, ItemRef_0) == 0x000000, "Member 'ContainerWindowWidget_C_SetItemReference::ItemRef_0' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct ContainerWindowWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ContainerWindowWidget_C_Tick) == 0x000004, "Wrong alignment on ContainerWindowWidget_C_Tick");
static_assert(sizeof(ContainerWindowWidget_C_Tick) == 0x00003C, "Wrong size on ContainerWindowWidget_C_Tick");
static_assert(offsetof(ContainerWindowWidget_C_Tick, MyGeometry) == 0x000000, "Member 'ContainerWindowWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ContainerWindowWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'ContainerWindowWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function ContainerWindowWidget.ContainerWindowWidget_C.GetListOfContainers
// 0x0010 (0x0010 - 0x0000)
struct ContainerWindowWidget_C_GetListOfContainers final
{
public:
	TArray<class UJSIContainer_C*>                Containers;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(ContainerWindowWidget_C_GetListOfContainers) == 0x000008, "Wrong alignment on ContainerWindowWidget_C_GetListOfContainers");
static_assert(sizeof(ContainerWindowWidget_C_GetListOfContainers) == 0x000010, "Wrong size on ContainerWindowWidget_C_GetListOfContainers");
static_assert(offsetof(ContainerWindowWidget_C_GetListOfContainers, Containers) == 0x000000, "Member 'ContainerWindowWidget_C_GetListOfContainers::Containers' has a wrong offset!");

}

