#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawnPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_StartingAIBehaviours_structs.hpp"
#include "S_TriggerResponse_structs.hpp"
#include "S_AIRespawn_structs.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AISpawnPoint.BP_AISpawnPoint_C
// 0x0118 (0x03B0 - 0x0298)
class ABP_AISpawnPoint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Proximity_Deactivation_Sphere;                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Proximity_Activation_Sphere;                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Spawn_Point_Rotation;                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Spawn_AI;                                   // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Spawn_AI;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Spawn_AI_Count;                                    // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Change_Default_Behaviour;                          // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StartingAIBehaviours                        Starting_Behaviour;                                // 0x02E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_Rotation;                                   // 0x02E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E7[0x1];                                      // 0x02E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Time;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spawn_Time_Deviation;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Respawn_AI;                                        // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Respawn_Time;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Respawn_Time_Variation;                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Spawned_AI;                                        // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Show_Rotation;                                     // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Player_Proximity_Activation;                   // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Player_Activation_Range;                           // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Deactivation_Proximity;                       // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Activation_Proximity;                         // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Player_Proximity_Deactivation;                 // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333[0x5];                                      // 0x0333(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Player_Deactivation_Range;                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player_In_Area;                                    // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_AI_Spawned;                                // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_AIRespawn>                   AI_Respawning_Timers;                              // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        AI_Spawn_Hight;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AIBase;                                            // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Spawned_AI_Tags;                                   // 0x0368(0x0010)(Edit, BlueprintVisible)
	TArray<class ABP_MasterWayPoint_C*>           Way_Points;                                        // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FS_TriggerResponse>             Trigger_Activated_Responses;                       // 0x0388(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_TriggerResponse>             Trigger_Deactivated_Responses;                     // 0x0398(0x0010)(Edit, BlueprintVisible)
	class FName                                   StreamLevelPackageName;                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_AI_Respawn_Timer(class ACharacter* AI_Character);
	void AI_Respawn_Timer_Finished(class ACharacter* AI_Character);
	void BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ExecuteUbergraph_BP_AISpawnPoint(int32 EntryPoint);
	void PlayerInAreaCheck();
	void ReceiveBeginPlay();
	void Reset_Proximity_Activation();
	void Reset_Proximity_Deactivation();
	void Respawn_AI_Actor(class ACharacter* AI_Character);
	void Respawn_Timer();
	void RespawnAI(class APawn* Pawn);
	void Spawn_AI_Actor();
	void Spawn_Timer();
	void Start_Spawning_AI();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AISpawnPoint_C">();
	}
	static class ABP_AISpawnPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AISpawnPoint_C>();
	}
};
static_assert(alignof(ABP_AISpawnPoint_C) == 0x000008, "Wrong alignment on ABP_AISpawnPoint_C");
static_assert(sizeof(ABP_AISpawnPoint_C) == 0x0003B0, "Wrong size on ABP_AISpawnPoint_C");
static_assert(offsetof(ABP_AISpawnPoint_C, UberGraphFrame) == 0x000298, "Member 'ABP_AISpawnPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Proximity_Deactivation_Sphere) == 0x0002A0, "Member 'ABP_AISpawnPoint_C::Proximity_Deactivation_Sphere' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Proximity_Activation_Sphere) == 0x0002A8, "Member 'ABP_AISpawnPoint_C::Proximity_Activation_Sphere' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Billboard) == 0x0002B0, "Member 'ABP_AISpawnPoint_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawn_Point_Rotation) == 0x0002B8, "Member 'ABP_AISpawnPoint_C::Spawn_Point_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Box) == 0x0002C0, "Member 'ABP_AISpawnPoint_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Scene) == 0x0002C8, "Member 'ABP_AISpawnPoint_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Enable_Spawn_AI) == 0x0002D0, "Member 'ABP_AISpawnPoint_C::Enable_Spawn_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawn_AI) == 0x0002D8, "Member 'ABP_AISpawnPoint_C::Spawn_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawn_AI_Count) == 0x0002E0, "Member 'ABP_AISpawnPoint_C::Spawn_AI_Count' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Change_Default_Behaviour) == 0x0002E4, "Member 'ABP_AISpawnPoint_C::Change_Default_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Starting_Behaviour) == 0x0002E5, "Member 'ABP_AISpawnPoint_C::Starting_Behaviour' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Random_Rotation) == 0x0002E6, "Member 'ABP_AISpawnPoint_C::Random_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawn_Time) == 0x0002E8, "Member 'ABP_AISpawnPoint_C::Spawn_Time' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawn_Time_Deviation) == 0x0002F0, "Member 'ABP_AISpawnPoint_C::Spawn_Time_Deviation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Respawn_AI) == 0x0002F8, "Member 'ABP_AISpawnPoint_C::Respawn_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Respawn_Time) == 0x000300, "Member 'ABP_AISpawnPoint_C::Respawn_Time' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Respawn_Time_Variation) == 0x000308, "Member 'ABP_AISpawnPoint_C::Respawn_Time_Variation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawned_AI) == 0x000310, "Member 'ABP_AISpawnPoint_C::Spawned_AI' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Show_Rotation) == 0x000320, "Member 'ABP_AISpawnPoint_C::Show_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Use_Player_Proximity_Activation) == 0x000321, "Member 'ABP_AISpawnPoint_C::Use_Player_Proximity_Activation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Player_Activation_Range) == 0x000328, "Member 'ABP_AISpawnPoint_C::Player_Activation_Range' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Show_Deactivation_Proximity) == 0x000330, "Member 'ABP_AISpawnPoint_C::Show_Deactivation_Proximity' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Show_Activation_Proximity) == 0x000331, "Member 'ABP_AISpawnPoint_C::Show_Activation_Proximity' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Use_Player_Proximity_Deactivation) == 0x000332, "Member 'ABP_AISpawnPoint_C::Use_Player_Proximity_Deactivation' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Player_Deactivation_Range) == 0x000338, "Member 'ABP_AISpawnPoint_C::Player_Deactivation_Range' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Player_In_Area) == 0x000340, "Member 'ABP_AISpawnPoint_C::Player_In_Area' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Current_AI_Spawned) == 0x000344, "Member 'ABP_AISpawnPoint_C::Current_AI_Spawned' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, AI_Respawning_Timers) == 0x000348, "Member 'ABP_AISpawnPoint_C::AI_Respawning_Timers' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, AI_Spawn_Hight) == 0x000358, "Member 'ABP_AISpawnPoint_C::AI_Spawn_Hight' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, AIBase) == 0x000360, "Member 'ABP_AISpawnPoint_C::AIBase' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Spawned_AI_Tags) == 0x000368, "Member 'ABP_AISpawnPoint_C::Spawned_AI_Tags' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Way_Points) == 0x000378, "Member 'ABP_AISpawnPoint_C::Way_Points' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Trigger_Activated_Responses) == 0x000388, "Member 'ABP_AISpawnPoint_C::Trigger_Activated_Responses' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, Trigger_Deactivated_Responses) == 0x000398, "Member 'ABP_AISpawnPoint_C::Trigger_Deactivated_Responses' has a wrong offset!");
static_assert(offsetof(ABP_AISpawnPoint_C, StreamLevelPackageName) == 0x0003A8, "Member 'ABP_AISpawnPoint_C::StreamLevelPackageName' has a wrong offset!");

}

