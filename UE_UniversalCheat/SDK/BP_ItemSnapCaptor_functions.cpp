#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemSnapCaptor

#include "Basic.hpp"

#include "BP_ItemSnapCaptor_classes.hpp"
#include "BP_ItemSnapCaptor_parameters.hpp"


namespace SDK
{

// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.CaptureFromTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           TextureTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    GoNext_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::CaptureFromTarget(class UTextureRenderTarget2D* TextureTarget, bool* GoNext_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "CaptureFromTarget");

	Params::BP_ItemSnapCaptor_C_CaptureFromTarget Parms{};

	Parms.TextureTarget = TextureTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (GoNext_ != nullptr)
		*GoNext_ = Parms.GoNext_;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.CaptureFromTargetCustom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           TextureTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    GoNext_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::CaptureFromTargetCustom(class UTextureRenderTarget2D* TextureTarget, bool* GoNext_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "CaptureFromTargetCustom");

	Params::BP_ItemSnapCaptor_C_CaptureFromTargetCustom Parms{};

	Parms.TextureTarget = TextureTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (GoNext_ != nullptr)
		*GoNext_ = Parms.GoNext_;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.CaptureSnap
// (BlueprintCallable, BlueprintEvent)

void ABP_ItemSnapCaptor_C::CaptureSnap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "CaptureSnap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.ClearAttachments
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ItemSnapCaptor_C::ClearAttachments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "ClearAttachments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.DelayedCaptureSnap
// (BlueprintCallable, BlueprintEvent)

void ABP_ItemSnapCaptor_C::DelayedCaptureSnap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "DelayedCaptureSnap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.ExecuteUbergraph_BP_ItemSnapCaptor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::ExecuteUbergraph_BP_ItemSnapCaptor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "ExecuteUbergraph_BP_ItemSnapCaptor");

	Params::BP_ItemSnapCaptor_C_ExecuteUbergraph_BP_ItemSnapCaptor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetActiveComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  Comp                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::GetActiveComponent(class USceneComponent** Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "GetActiveComponent");

	Params::BP_ItemSnapCaptor_C_GetActiveComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Comp != nullptr)
		*Comp = Parms.Comp;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetAttachSocketByInContainerIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJigsawItem_DataAsset_C*          Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   InContainerIndex                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Socket                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::GetAttachSocketByInContainerIndex(class UJigsawItem_DataAsset_C* Info, int32 InContainerIndex, class FName* Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "GetAttachSocketByInContainerIndex");

	Params::BP_ItemSnapCaptor_C_GetAttachSocketByInContainerIndex Parms{};

	Parms.Info = Info;
	Parms.InContainerIndex = InContainerIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Socket != nullptr)
		*Socket = Parms.Socket;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetDefaultDim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        SlotDimension                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::GetDefaultDim(class UJSI_Slot_C* Target, struct FVector2D* SlotDimension)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "GetDefaultDim");

	Params::BP_ItemSnapCaptor_C_GetDefaultDim Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (SlotDimension != nullptr)
		*SlotDimension = std::move(Parms.SlotDimension);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetInitValues
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FOVAngle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ABP_ItemSnapCaptor_C::GetInitValues(double* FOVAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "GetInitValues");

	Params::BP_ItemSnapCaptor_C_GetInitValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FOVAngle != nullptr)
		*FOVAngle = Parms.FOVAngle;

	return Parms.ReturnValue;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetSnap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShareRTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           Output_Get                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FromShared_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::GetSnap(bool ShareRTarget, class UTextureRenderTarget2D** Output_Get, bool* FromShared_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "GetSnap");

	Params::BP_ItemSnapCaptor_C_GetSnap Parms{};

	Parms.ShareRTarget = ShareRTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;

	if (FromShared_ != nullptr)
		*FromShared_ = Parms.FromShared_;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.GetSnapNoCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ShareRTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           Output_Get                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FromShared_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::GetSnapNoCapture(class UJSI_Slot_C* Item, bool ShareRTarget, class UTextureRenderTarget2D** Output_Get, bool* FromShared_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "GetSnapNoCapture");

	Params::BP_ItemSnapCaptor_C_GetSnapNoCapture Parms{};

	Parms.Item = Item;
	Parms.ShareRTarget = ShareRTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;

	if (FromShared_ != nullptr)
		*FromShared_ = Parms.FromShared_;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.InstallAttachments
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      JigItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::InstallAttachments(class UJSI_Slot_C* JigItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "InstallAttachments");

	Params::BP_ItemSnapCaptor_C_InstallAttachments Parms{};

	Parms.JigItem = JigItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.IsActionbar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::IsActionbar(class UJSI_Slot_C* ItemRef, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "IsActionbar");

	Params::BP_ItemSnapCaptor_C_IsActionbar Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.IsLocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsLocked__0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::IsLocked(bool* IsLocked__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "IsLocked");

	Params::BP_ItemSnapCaptor_C_IsLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsLocked__0 != nullptr)
		*IsLocked__0 = Parms.IsLocked__0;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ItemSnapCaptor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.RemoveIronsights
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_AMainLocalAttachment_C*       Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  SceneComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::RemoveIronsights(bool Hide_, class ABP_AMainLocalAttachment_C* Attachment, class USceneComponent* SceneComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "RemoveIronsights");

	Params::BP_ItemSnapCaptor_C_RemoveIronsights Parms{};

	Parms.Hide_ = Hide_;
	Parms.Attachment = Attachment;
	Parms.SceneComp = SceneComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.SetJigitem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShareRenderTargetWithSimilarItems                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::SetJigitem(class UJSI_Slot_C* ItemRef, bool* Found, bool* ShareRenderTargetWithSimilarItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "SetJigitem");

	Params::BP_ItemSnapCaptor_C_SetJigitem Parms{};

	Parms.ItemRef = ItemRef;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (ShareRenderTargetWithSimilarItems != nullptr)
		*ShareRenderTargetWithSimilarItems = Parms.ShareRenderTargetWithSimilarItems;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.SetJigitem_Custom
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShareRenderTargetWithSimilarItems                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::SetJigitem_Custom(class UJSI_Slot_C* ItemRef, const struct FTransform& Transform, double FOV, bool* Found, bool* ShareRenderTargetWithSimilarItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "SetJigitem_Custom");

	Params::BP_ItemSnapCaptor_C_SetJigitem_Custom Parms{};

	Parms.ItemRef = ItemRef;
	Parms.Transform = std::move(Transform);
	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (ShareRenderTargetWithSimilarItems != nullptr)
		*ShareRenderTargetWithSimilarItems = Parms.ShareRenderTargetWithSimilarItems;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.SetLocked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLocked__0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::SetLocked(bool IsLocked__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "SetLocked");

	Params::BP_ItemSnapCaptor_C_SetLocked Parms{};

	Parms.IsLocked__0 = IsLocked__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.UpdateSnap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSI_Slot_C*                      ItemRef                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           TextureTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           Output_Get                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ItemSnapCaptor_C::UpdateSnap(class UJSI_Slot_C* ItemRef, class UTextureRenderTarget2D* TextureTarget, class UTextureRenderTarget2D** Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "UpdateSnap");

	Params::BP_ItemSnapCaptor_C_UpdateSnap Parms{};

	Parms.ItemRef = ItemRef;
	Parms.TextureTarget = TextureTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}


// Function BP_ItemSnapCaptor.BP_ItemSnapCaptor_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ItemSnapCaptor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemSnapCaptor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

