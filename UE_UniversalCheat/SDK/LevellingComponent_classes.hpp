#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LevellingComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BaseComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LevellingComponent.LevellingComponent_C
// 0x0068 (0x0120 - 0x00B8)
class ULevellingComponent_C final : public UBaseComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_LevellingComponent_C;               // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         CurrentLevel;                                      // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelCap;                                          // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentXP;                                         // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMaxXP;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentPercentage;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BufferXP;                                          // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RemainingXP;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MultiplyValue;                                     // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Difficulty_MultiplierValue;                        // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 Level)>   UpdateLevelUI;                                     // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(double CurrentXP, double MaxXP)> UpdateXPUI;                                        // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ActorLoaded();
	void ActorPreLoad();
	void ActorPreSave();
	void ActorSaved();
	void AddXP(double XP, bool LevelUp_, double* XPOutput);
	void CalculateMaxXP();
	void CalculatePercentage();
	void ComponentsToSave(TArray<class UActorComponent*>* Components);
	void Event_levelBar();
	void Event_LevelBarTimer();
	void Event_Multiplier(float NewValue);
	void Event_XPDeath();
	void ExecuteUbergraph_LevellingComponent(int32 EntryPoint);
	void LevelUp();
	void LoadComponent();
	void Reset();
	void XPDeath();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LevellingComponent_C">();
	}
	static class ULevellingComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULevellingComponent_C>();
	}
};
static_assert(alignof(ULevellingComponent_C) == 0x000008, "Wrong alignment on ULevellingComponent_C");
static_assert(sizeof(ULevellingComponent_C) == 0x000120, "Wrong size on ULevellingComponent_C");
static_assert(offsetof(ULevellingComponent_C, UberGraphFrame_LevellingComponent_C) == 0x0000B8, "Member 'ULevellingComponent_C::UberGraphFrame_LevellingComponent_C' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, CurrentLevel) == 0x0000C0, "Member 'ULevellingComponent_C::CurrentLevel' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, LevelCap) == 0x0000C4, "Member 'ULevellingComponent_C::LevelCap' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, CurrentXP) == 0x0000C8, "Member 'ULevellingComponent_C::CurrentXP' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, CurrentMaxXP) == 0x0000D0, "Member 'ULevellingComponent_C::CurrentMaxXP' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, CurrentPercentage) == 0x0000D8, "Member 'ULevellingComponent_C::CurrentPercentage' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, BufferXP) == 0x0000E0, "Member 'ULevellingComponent_C::BufferXP' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, RemainingXP) == 0x0000E8, "Member 'ULevellingComponent_C::RemainingXP' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, MultiplyValue) == 0x0000F0, "Member 'ULevellingComponent_C::MultiplyValue' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, Difficulty_MultiplierValue) == 0x0000F8, "Member 'ULevellingComponent_C::Difficulty_MultiplierValue' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, UpdateLevelUI) == 0x000100, "Member 'ULevellingComponent_C::UpdateLevelUI' has a wrong offset!");
static_assert(offsetof(ULevellingComponent_C, UpdateXPUI) == 0x000110, "Member 'ULevellingComponent_C::UpdateXPUI' has a wrong offset!");

}

