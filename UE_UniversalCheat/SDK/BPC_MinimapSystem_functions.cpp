#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_MinimapSystem

#include "Basic.hpp"

#include "BPC_MinimapSystem_classes.hpp"
#include "BPC_MinimapSystem_parameters.hpp"


namespace SDK
{

// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Player Marker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ABP_PlayerMarker_C*               Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UW_PlayerMarker_C*>        Markers_0                                              (Parm, OutParm, ContainsInstancedReference)

void UBPC_MinimapSystem_C::Add_Player_Marker(const struct FS_MarkerData& Marker_Data, class ABP_PlayerMarker_C* Target_Actor, TArray<class UW_PlayerMarker_C*>* Markers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Add Player Marker");

	Params::BPC_MinimapSystem_C_Add_Player_Marker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Markers_0 != nullptr)
		*Markers_0 = std::move(Parms.Markers_0);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add POI Marker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FStruct_POI                      POI_Data                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Explored_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UW_POIMarker_C*                   Markers_0                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Add_POI_Marker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, const struct FStruct_POI& POI_Data, bool Explored_, class UW_POIMarker_C** Markers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Add POI Marker");

	Params::BPC_MinimapSystem_C_Add_POI_Marker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;
	Parms.POI_Data = std::move(POI_Data);
	Parms.Explored_ = Explored_;

	UObject::ProcessEvent(Func, &Parms);

	if (Markers_0 != nullptr)
		*Markers_0 = Parms.Markers_0;
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Quest Marker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ABP_QuestMarker_C*                Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UW_QuestMarker_C*>         Markers_0                                              (Parm, OutParm, ContainsInstancedReference)

void UBPC_MinimapSystem_C::Add_Quest_Marker(const struct FS_MarkerData& Marker_Data, class ABP_QuestMarker_C* Target_Actor, TArray<class UW_QuestMarker_C*>* Markers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Add Quest Marker");

	Params::BPC_MinimapSystem_C_Add_Quest_Marker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Markers_0 != nullptr)
		*Markers_0 = std::move(Parms.Markers_0);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Saved Player Marker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ABP_PlayerMarker_C*               Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UW_PlayerMarker_C*>        Markers_0                                              (Parm, OutParm, ContainsInstancedReference)

void UBPC_MinimapSystem_C::Add_Saved_Player_Marker(const struct FS_MarkerData& Marker_Data, class ABP_PlayerMarker_C* Target_Actor, int32 Index_0, TArray<class UW_PlayerMarker_C*>* Markers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Add Saved Player Marker");

	Params::BPC_MinimapSystem_C_Add_Saved_Player_Marker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Markers_0 != nullptr)
		*Markers_0 = std::move(Parms.Markers_0);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add Standard Marker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UW_StandardMarker_C*>      Markers_0                                              (Parm, OutParm, ContainsInstancedReference)

void UBPC_MinimapSystem_C::Add_Standard_Marker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, TArray<class UW_StandardMarker_C*>* Markers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Add Standard Marker");

	Params::BPC_MinimapSystem_C_Add_Standard_Marker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Markers_0 != nullptr)
		*Markers_0 = std::move(Parms.Markers_0);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Add World Marker
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MarkerData                    Marker_Data                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Target_Actor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UW_WorldMarker_C*                 Markers_0                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Add_World_Marker(const struct FS_MarkerData& Marker_Data, class AActor* Target_Actor, const class FText& Description, class UW_WorldMarker_C** Markers_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Add World Marker");

	Params::BPC_MinimapSystem_C_Add_World_Marker Parms{};

	Parms.Marker_Data = std::move(Marker_Data);
	Parms.Target_Actor = Target_Actor;
	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);

	if (Markers_0 != nullptr)
		*Markers_0 = Parms.Markers_0;
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Create Checkpoint Marker
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Map_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Create_Checkpoint_Marker(const struct FVector2D& Map_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Create Checkpoint Marker");

	Params::BPC_MinimapSystem_C_Create_Checkpoint_Marker Parms{};

	Parms.Map_Location = std::move(Map_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Event_ConstructMap
// (BlueprintCallable, BlueprintEvent)

void UBPC_MinimapSystem_C::Event_ConstructMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Event_ConstructMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.ExecuteUbergraph_BPC_MinimapSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::ExecuteUbergraph_BPC_MinimapSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "ExecuteUbergraph_BPC_MinimapSystem");

	Params::BPC_MinimapSystem_C_ExecuteUbergraph_BPC_MinimapSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Marker Location
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Map_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ImpactPoint                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Marker_Location(const struct FVector2D& Map_Location, struct FVector* ImpactPoint, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Marker Location");

	Params::BPC_MinimapSystem_C_Marker_Location Parms{};

	Parms.Map_Location = std::move(Map_Location);

	UObject::ProcessEvent(Func, &Parms);

	if (ImpactPoint != nullptr)
		*ImpactPoint = std::move(Parms.ImpactPoint);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove Player Marker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_PlayerMarker_C*                Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PlayerMarker_C*               Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Remove_Player_Marker(class UW_PlayerMarker_C* Marker, int32 Index_0, class ABP_PlayerMarker_C* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Remove Player Marker");

	Params::BPC_MinimapSystem_C_Remove_Player_Marker Parms{};

	Parms.Marker = Marker;
	Parms.Index_0 = Index_0;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove Quest Marker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_QuestMarker_C*                 Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_QuestMarker_C*                Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Remove_Quest_Marker(class UW_QuestMarker_C* Marker, class ABP_QuestMarker_C* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Remove Quest Marker");

	Params::BPC_MinimapSystem_C_Remove_Quest_Marker Parms{};

	Parms.Marker = Marker;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove Standard Marker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_StandardMarker_C*              Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Remove_Standard_Marker(class UW_StandardMarker_C* Marker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Remove Standard Marker");

	Params::BPC_MinimapSystem_C_Remove_Standard_Marker Parms{};

	Parms.Marker = Marker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Remove World Marker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_WorldMarker_C*                 Marker                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_Marker_C*                     Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::Remove_World_Marker(class UW_WorldMarker_C* Marker, class ABP_Marker_C* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Remove World Marker");

	Params::BPC_MinimapSystem_C_Remove_World_Marker Parms{};

	Parms.Marker = Marker;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.SERVER Spawn Player Marker
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Hit_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_MinimapSystem_C::SERVER_Spawn_Player_Marker(const struct FVector& Hit_Location, bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "SERVER Spawn Player Marker");

	Params::BPC_MinimapSystem_C_SERVER_Spawn_Player_Marker Parms{};

	Parms.Hit_Location = std::move(Hit_Location);
	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_MinimapSystem.BPC_MinimapSystem_C.Toggle Bigmap
// (BlueprintCallable, BlueprintEvent)

void UBPC_MinimapSystem_C::Toggle_Bigmap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_MinimapSystem_C", "Toggle Bigmap");

	UObject::ProcessEvent(Func, nullptr);
}

}

