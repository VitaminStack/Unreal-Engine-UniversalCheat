#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DragWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function DragWidget.DragWidget_C.AddContainer
// 0x0010 (0x0010 - 0x0000)
struct DragWidget_C_AddContainer final
{
public:
	const class UJSIContainer_C*                  NewContainer;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_AddContainer) == 0x000008, "Wrong alignment on DragWidget_C_AddContainer");
static_assert(sizeof(DragWidget_C_AddContainer) == 0x000010, "Wrong size on DragWidget_C_AddContainer");
static_assert(offsetof(DragWidget_C_AddContainer, NewContainer) == 0x000000, "Member 'DragWidget_C_AddContainer::NewContainer' has a wrong offset!");
static_assert(offsetof(DragWidget_C_AddContainer, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'DragWidget_C_AddContainer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function DragWidget.DragWidget_C.ClearVisualHighlight
// 0x0050 (0x0050 - 0x0000)
struct DragWidget_C_ClearVisualHighlight final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_Highlight;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_ClearVisualHighlight) == 0x000008, "Wrong alignment on DragWidget_C_ClearVisualHighlight");
static_assert(sizeof(DragWidget_C_ClearVisualHighlight) == 0x000050, "Wrong size on DragWidget_C_ClearVisualHighlight");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'DragWidget_C_ClearVisualHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, Temp_int_Array_Index_Variable) == 0x000008, "Member 'DragWidget_C_ClearVisualHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'DragWidget_C_ClearVisualHighlight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'DragWidget_C_ClearVisualHighlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'DragWidget_C_ClearVisualHighlight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Array_Get_Item) == 0x000028, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_SetHighlight_Highlight) == 0x000035, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_SetHighlight_Highlight' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ClearVisualHighlight, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'DragWidget_C_ClearVisualHighlight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function DragWidget.DragWidget_C.ExecuteUbergraph_DragWidget
// 0x01D0 (0x01D0 - 0x0000)
struct DragWidget_C_ExecuteUbergraph_DragWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0014)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0064(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00C0(0x00D0)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetBorderColorByRarity_Color;             // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_ExecuteUbergraph_DragWidget) == 0x000010, "Wrong alignment on DragWidget_C_ExecuteUbergraph_DragWidget");
static_assert(sizeof(DragWidget_C_ExecuteUbergraph_DragWidget) == 0x0001D0, "Wrong size on DragWidget_C_ExecuteUbergraph_DragWidget");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, EntryPoint) == 0x000000, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_bool_IsClosed_Variable) == 0x000008, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_bool_Has_Been_Initd_Variable) == 0x000009, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000018, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_LinearColor) == 0x000024, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_Event_MyGeometry) == 0x000064, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_Event_InDeltaTime) == 0x00009C, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_2) == 0x0000AC, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000AD, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsInputKeyDown_ReturnValue) == 0x0000B9, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000BA, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_Not_PreBool_ReturnValue) == 0x0000BB, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsValid_ReturnValue_4) == 0x0000BC, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000BD, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_SlateBrush) == 0x0000C0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000190, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_LinearColor_1) == 0x000194, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_GetBorderColorByRarity_Color) == 0x0001A4, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_GetBorderColorByRarity_Color' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_IsEquipTo__ReturnValue) == 0x0001B4, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_BooleanAND_ReturnValue) == 0x0001B5, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0001B8, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0001C0, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_ExecuteUbergraph_DragWidget, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0001C4, "Member 'DragWidget_C_ExecuteUbergraph_DragWidget::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function DragWidget.DragWidget_C.HandleRotation
// 0x01B8 (0x01B8 - 0x0000)
struct DragWidget_C_HandleRotation final
{
public:
	bool                                          CenterC;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated_;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0074(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isRotated__ReturnValue;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0124(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_HandleRotation) == 0x000008, "Wrong alignment on DragWidget_C_HandleRotation");
static_assert(sizeof(DragWidget_C_HandleRotation) == 0x0001B8, "Wrong size on DragWidget_C_HandleRotation");
static_assert(offsetof(DragWidget_C_HandleRotation, CenterC) == 0x000000, "Member 'DragWidget_C_HandleRotation::CenterC' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Rotated_) == 0x000001, "Member 'DragWidget_C_HandleRotation::Rotated_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_bool_Variable) == 0x000002, "Member 'DragWidget_C_HandleRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_struct_Variable) == 0x000008, "Member 'DragWidget_C_HandleRotation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_bool_Variable_1) == 0x000018, "Member 'DragWidget_C_HandleRotation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_struct_Variable_1) == 0x000020, "Member 'DragWidget_C_HandleRotation::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_struct_Variable_2) == 0x000030, "Member 'DragWidget_C_HandleRotation::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_bool_Variable_2) == 0x000040, "Member 'DragWidget_C_HandleRotation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_bool_Variable_3) == 0x000041, "Member 'DragWidget_C_HandleRotation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_bool_Variable_4) == 0x000042, "Member 'DragWidget_C_HandleRotation::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'DragWidget_C_HandleRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_struct_Variable_3) == 0x000048, "Member 'DragWidget_C_HandleRotation::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, Temp_struct_Variable_4) == 0x000058, "Member 'DragWidget_C_HandleRotation::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'DragWidget_C_HandleRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000070, "Member 'DragWidget_C_HandleRotation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_GetCachedGeometry_ReturnValue) == 0x000074, "Member 'DragWidget_C_HandleRotation::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_GetLocalSize_ReturnValue) == 0x0000B0, "Member 'DragWidget_C_HandleRotation::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, K2Node_Select_Default) == 0x0000C0, "Member 'DragWidget_C_HandleRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_BreakVector2D_X) == 0x0000D0, "Member 'DragWidget_C_HandleRotation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_BreakVector2D_Y) == 0x0000D8, "Member 'DragWidget_C_HandleRotation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_MakeVector2D_ReturnValue) == 0x0000E0, "Member 'DragWidget_C_HandleRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, K2Node_Select_Default_1) == 0x0000F0, "Member 'DragWidget_C_HandleRotation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_Not_PreBool_ReturnValue_2) == 0x000100, "Member 'DragWidget_C_HandleRotation::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, K2Node_Select_Default_2) == 0x000108, "Member 'DragWidget_C_HandleRotation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_SelectFloat_ReturnValue_1) == 0x000118, "Member 'DragWidget_C_HandleRotation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_isRotated__ReturnValue) == 0x000120, "Member 'DragWidget_C_HandleRotation::CallFunc_isRotated__ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000121, "Member 'DragWidget_C_HandleRotation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000124, "Member 'DragWidget_C_HandleRotation::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_GetLocalSize_ReturnValue_1) == 0x000160, "Member 'DragWidget_C_HandleRotation::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_BreakVector2D_X_1) == 0x000170, "Member 'DragWidget_C_HandleRotation::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_BreakVector2D_Y_1) == 0x000178, "Member 'DragWidget_C_HandleRotation::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_MakeVector2D_ReturnValue_1) == 0x000180, "Member 'DragWidget_C_HandleRotation::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, K2Node_Select_Default_3) == 0x000190, "Member 'DragWidget_C_HandleRotation::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, K2Node_Select_Default_4) == 0x0001A0, "Member 'DragWidget_C_HandleRotation::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0001B0, "Member 'DragWidget_C_HandleRotation::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HandleRotation, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x0001B4, "Member 'DragWidget_C_HandleRotation::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function DragWidget.DragWidget_C.HighlightAllValidContainers
// 0x0228 (0x0228 - 0x0000)
struct DragWidget_C_HighlightAllValidContainers final
{
public:
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStack_;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Dim;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CurrentContainer;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ItemType;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemId;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0044(0x0014)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWeight_ReturnValue;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x007C(0x0014)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCanAddToSpecial_CanAdd;            // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_CheckIfCanAddToSpecial_ToContainer;       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCanStack_Sucess;                   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_CheckIfCanStack_ItemRef;                  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported_;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x010C(0x0014)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_Highlight;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_Highlight_1;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWeight_ReturnValue_1;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AbleToStackTo__ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWeightLimit_Result;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x2];                                      // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_Highlight_2;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemPending__IsPending_1;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWeightLimit_Result_1;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported__1;           // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCanStack_Sucess_1;                 // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_CheckIfCanStack_ItemRef_1;                // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_Found_;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSupportedByThis_Supported__2;           // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__CanStack;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack__FreeSpaceAvailable;             // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetType_Type;                             // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0200(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_HighlightAllValidContainers) == 0x000008, "Wrong alignment on DragWidget_C_HighlightAllValidContainers");
static_assert(sizeof(DragWidget_C_HighlightAllValidContainers) == 0x000228, "Wrong size on DragWidget_C_HighlightAllValidContainers");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, DA) == 0x000000, "Member 'DragWidget_C_HighlightAllValidContainers::DA' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CanStack_) == 0x000008, "Member 'DragWidget_C_HighlightAllValidContainers::CanStack_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Dim) == 0x000010, "Member 'DragWidget_C_HighlightAllValidContainers::Dim' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CurrentContainer) == 0x000020, "Member 'DragWidget_C_HighlightAllValidContainers::CurrentContainer' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, ItemType) == 0x000028, "Member 'DragWidget_C_HighlightAllValidContainers::ItemType' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, ItemId) == 0x000030, "Member 'DragWidget_C_HighlightAllValidContainers::ItemId' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Array_Index_Variable) == 0x000038, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_MakeStruct_SlateColor) == 0x000044, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_bool_True_if_break_was_hit_Variable) == 0x000064, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetWeight_ReturnValue) == 0x000070, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000078, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_MakeStruct_SlateColor_1) == 0x00007C, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000090, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetEquippedItemRef_Found_) == 0x000099, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000A0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetEquippedItemRef_IsPending) == 0x0000A8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsEquipTo__ReturnValue) == 0x0000A9, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckIfCanAddToSpecial_CanAdd) == 0x0000AA, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckIfCanAddToSpecial_CanAdd' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckIfCanAddToSpecial_ToContainer) == 0x0000B0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckIfCanAddToSpecial_ToContainer' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsItemPending__IsPending) == 0x0000B8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsItemPending__IsPending' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000C0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000C8, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetListOfContainers_Containers) == 0x0000E0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckIfCanStack_Sucess) == 0x0000FC, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckIfCanStack_Sucess' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckIfCanStack_ItemRef) == 0x000100, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckIfCanStack_ItemRef' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsSupportedByThis_Supported_) == 0x000108, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsSupportedByThis_Supported_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_MakeStruct_SlateColor_2) == 0x00010C, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Loop_Counter_Variable_2) == 0x000120, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000124, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000128, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_BooleanAND_ReturnValue) == 0x00012C, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Loop_Counter_Variable_3) == 0x000130, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Add_IntInt_ReturnValue_3) == 0x000134, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Array_Index_Variable_2) == 0x000138, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, Temp_int_Array_Index_Variable_3) == 0x00013C, "Member 'DragWidget_C_HighlightAllValidContainers::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_SetHighlight_Highlight) == 0x000148, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_SetHighlight_Highlight' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Add_ReturnValue_1) == 0x00014C, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_SetHighlight_Highlight_1) == 0x000150, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_SetHighlight_Highlight_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Add_ReturnValue_2) == 0x000154, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetWeight_ReturnValue_1) == 0x000158, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_AbleToStackTo__ReturnValue) == 0x000160, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_AbleToStackTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckWeightLimit_Result) == 0x000161, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckWeightLimit_Result' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Add_ReturnValue_3) == 0x000164, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_SetHighlight_Highlight_2) == 0x000168, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_SetHighlight_Highlight_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsItemPending__IsPending_1) == 0x000169, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsItemPending__IsPending_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000170, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000178, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'DragWidget_C_HighlightAllValidContainers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsValid_ReturnValue_1) == 0x000189, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetListOfContainers_Containers_1) == 0x000190, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Get_Item_2) == 0x0001A0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckWeightLimit_Result_1) == 0x0001A8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckWeightLimit_Result_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsSupportedByThis_Supported__1) == 0x0001A9, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsSupportedByThis_Supported__1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckIfCanStack_Sucess_1) == 0x0001AA, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckIfCanStack_Sucess_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CheckIfCanStack_ItemRef_1) == 0x0001B0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CheckIfCanStack_ItemRef_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetEmptySlotTryRotated_Found_) == 0x0001B8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetEmptySlotTryRotated_Found_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Length_ReturnValue_2) == 0x0001BC, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001C0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_BooleanAND_ReturnValue_1) == 0x0001C1, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsValid_ReturnValue_2) == 0x0001C2, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsSupportedByThis_Supported__2) == 0x0001C3, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsSupportedByThis_Supported__2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetJigDA_JigDataAsset) == 0x0001C8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CanStack__CanStack) == 0x0001D0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CanStack__CanStack' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_CanStack__FreeSpaceAvailable) == 0x0001D1, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_CanStack__FreeSpaceAvailable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetSlotDim_SlotDimension) == 0x0001D8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetType_Type) == 0x0001E8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetType_Type' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetItemID_ItemID) == 0x0001F0, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Add_ReturnValue_4) == 0x0001F8, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000200, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Length_ReturnValue_3) == 0x000210, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Array_Get_Item_3) == 0x000218, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Less_IntInt_ReturnValue_3) == 0x000220, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsEquipTo__ReturnValue_1) == 0x000221, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_Not_PreBool_ReturnValue_2) == 0x000222, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_IsVisible_ReturnValue) == 0x000223, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightAllValidContainers, CallFunc_BooleanAND_ReturnValue_2) == 0x000224, "Member 'DragWidget_C_HighlightAllValidContainers::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function DragWidget.DragWidget_C.HighlightItemOverItemValidContainers
// 0x00B8 (0x00B8 - 0x0000)
struct DragWidget_C_HighlightItemOverItemValidContainers final
{
public:
	class UJSIContainer_C*                        CurrentContainer;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetJigDA_JigDataAsset;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0014)()
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigItemOverItemComp_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumGameplayTagsInContainer_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_Highlight;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValid_ShowHighlight_;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValid_Valid_;                          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetValid_Tag;                             // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_HighlightItemOverItemValidContainers) == 0x000008, "Wrong alignment on DragWidget_C_HighlightItemOverItemValidContainers");
static_assert(sizeof(DragWidget_C_HighlightItemOverItemValidContainers) == 0x0000B8, "Wrong size on DragWidget_C_HighlightItemOverItemValidContainers");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CurrentContainer) == 0x000000, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CurrentContainer' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, DA) == 0x000008, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::DA' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, Temp_int_Array_Index_Variable) == 0x000010, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetJigDA_JigDataAsset) == 0x000028, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetJigDA_JigDataAsset' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetNumGameplayTagsInContainer_ReturnValue) == 0x000058, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetNumGameplayTagsInContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Array_Get_Item) == 0x000060, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_SetHighlight_Highlight) == 0x00006C, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_SetHighlight_Highlight' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetValid_ShowHighlight_) == 0x000074, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetValid_ShowHighlight_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetValid_Valid_) == 0x000075, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetValid_Valid_' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetValid_Tag) == 0x000078, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetValid_Tag' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000090, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_IsVisible_ReturnValue) == 0x0000B1, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_HighlightItemOverItemValidContainers, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'DragWidget_C_HighlightItemOverItemValidContainers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DragWidget.DragWidget_C.OnKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct DragWidget_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_OnKeyDown) == 0x000008, "Wrong alignment on DragWidget_C_OnKeyDown");
static_assert(sizeof(DragWidget_C_OnKeyDown) == 0x0002C0, "Wrong size on DragWidget_C_OnKeyDown");
static_assert(offsetof(DragWidget_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'DragWidget_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'DragWidget_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'DragWidget_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'DragWidget_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'DragWidget_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'DragWidget_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(DragWidget_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002B8, "Member 'DragWidget_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function DragWidget.DragWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct DragWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DragWidget_C_Tick) == 0x000004, "Wrong alignment on DragWidget_C_Tick");
static_assert(sizeof(DragWidget_C_Tick) == 0x00003C, "Wrong size on DragWidget_C_Tick");
static_assert(offsetof(DragWidget_C_Tick, MyGeometry) == 0x000000, "Member 'DragWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(DragWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'DragWidget_C_Tick::InDeltaTime' has a wrong offset!");

}

