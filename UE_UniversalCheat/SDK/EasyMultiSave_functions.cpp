#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EasyMultiSave

#include "Basic.hpp"

#include "EasyMultiSave_classes.hpp"
#include "EasyMultiSave_parameters.hpp"


namespace SDK
{

// Function EasyMultiSave.EMSActorSaveInterface.ActorLoaded
// (Native, Event, Public, BlueprintEvent)

void IEMSActorSaveInterface::ActorLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSActorSaveInterface", "ActorLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSActorSaveInterface.ActorPreLoad
// (Native, Event, Public, BlueprintEvent)

void IEMSActorSaveInterface::ActorPreLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSActorSaveInterface", "ActorPreLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSActorSaveInterface.ActorPreSave
// (Native, Event, Public, BlueprintEvent)

void IEMSActorSaveInterface::ActorPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSActorSaveInterface", "ActorPreSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSActorSaveInterface.ActorSaved
// (Native, Event, Public, BlueprintEvent)

void IEMSActorSaveInterface::ActorSaved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSActorSaveInterface", "ActorSaved");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSActorSaveInterface.ComponentsToSave
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UActorComponent*>          Components                                             (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void IEMSActorSaveInterface::ComponentsToSave(TArray<class UActorComponent*>* Components)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSActorSaveInterface", "ComponentsToSave");

	Params::EMSActorSaveInterface_ComponentsToSave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Components != nullptr)
		*Components = std::move(Parms.Components);
}


// Function EasyMultiSave.EMSAsyncCheck.CheckSaveFiles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESaveFileCheckType                      CheckType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomSaveName                                         (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompareGameVersion                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSAsyncCheck*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSAsyncCheck* UEMSAsyncCheck::CheckSaveFiles(class UObject* WorldContextObject, ESaveFileCheckType CheckType, const class FString& CustomSaveName, bool bCompareGameVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncCheck", "CheckSaveFiles");

	Params::EMSAsyncCheck_CheckSaveFiles Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CheckType = CheckType;
	Parms.CustomSaveName = std::move(CustomSaveName);
	Parms.bCompareGameVersion = bCompareGameVersion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSAsyncLoadGame.AsyncLoadActors
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFullReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSAsyncLoadGame*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSAsyncLoadGame* UEMSAsyncLoadGame::AsyncLoadActors(class UObject* WorldContextObject, int32 Data, bool bFullReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncLoadGame", "AsyncLoadActors");

	Params::EMSAsyncLoadGame_AsyncLoadActors Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Data = Data;
	Parms.bFullReload = bFullReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSAsyncLoadGame.AutoLoadLevelActors
// (Final, Native, Static, Public)
// Parameters:
// class UEMSObject*                       EMSObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSAsyncLoadGame::AutoLoadLevelActors(class UEMSObject* EMSObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncLoadGame", "AutoLoadLevelActors");

	Params::EMSAsyncLoadGame_AutoLoadLevelActors Parms{};

	Parms.EMSObject = EMSObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSAsyncLoadGame.FinishTaskThreadSafe
// (Final, Native, Static, Public)
// Parameters:
// TWeakObjectPtr<class UEMSAsyncLoadGame> InTask                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSAsyncLoadGame::FinishTaskThreadSafe(const TWeakObjectPtr<class UEMSAsyncLoadGame> InTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncLoadGame", "FinishTaskThreadSafe");

	Params::EMSAsyncLoadGame_FinishTaskThreadSafe Parms{};

	Parms.InTask = InTask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSAsyncSaveGame.AsyncSaveActors
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSAsyncSaveGame*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSAsyncSaveGame* UEMSAsyncSaveGame::AsyncSaveActors(class UObject* WorldContextObject, int32 Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncSaveGame", "AsyncSaveActors");

	Params::EMSAsyncSaveGame_AsyncSaveActors Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSAsyncSaveGame.AutoSaveLevelActors
// (Final, Native, Static, Public)
// Parameters:
// class UEMSObject*                       EMSObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSAsyncSaveGame::AutoSaveLevelActors(class UEMSObject* EMSObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncSaveGame", "AutoSaveLevelActors");

	Params::EMSAsyncSaveGame_AutoSaveLevelActors Parms{};

	Parms.EMSObject = EMSObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSAsyncStream.InitStreamingLoadTask
// (Final, Native, Static, Public)
// Parameters:
// class UEMSObject*                       EMSObject                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevel*                           InLevel                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSAsyncStream::InitStreamingLoadTask(class UEMSObject* EMSObject, class ULevel* InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncStream", "InitStreamingLoadTask");

	Params::EMSAsyncStream_InitStreamingLoadTask Parms{};

	Parms.EMSObject = EMSObject;
	Parms.InLevel = InLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSAsyncWait.AsyncWaitForOperation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAsyncCheckType                         CheckType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSAsyncWait*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSAsyncWait* UEMSAsyncWait::AsyncWaitForOperation(class UObject* WorldContextObject, EAsyncCheckType CheckType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSAsyncWait", "AsyncWaitForOperation");

	Params::EMSAsyncWait_AsyncWaitForOperation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CheckType = CheckType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSCompSaveInterface.ComponentLoaded
// (Native, Event, Public, BlueprintEvent)

void IEMSCompSaveInterface::ComponentLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSCompSaveInterface", "ComponentLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSCompSaveInterface.ComponentPreSave
// (Native, Event, Public, BlueprintEvent)

void IEMSCompSaveInterface::ComponentPreSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EMSCompSaveInterface", "ComponentPreSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.ClearMultiLevelSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::ClearMultiLevelSave(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "ClearMultiLevelSave");

	Params::EMSFunctionLibrary_ClearMultiLevelSave Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.ClearWorldPartition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::ClearWorldPartition(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "ClearWorldPartition");

	Params::EMSFunctionLibrary_ClearWorldPartition Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.DeleteAllSaveDataForSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::DeleteAllSaveDataForSlot(class UObject* WorldContextObject, const class FString& SaveGameName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "DeleteAllSaveDataForSlot");

	Params::EMSFunctionLibrary_DeleteAllSaveDataForSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGameName = std::move(SaveGameName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.DeleteCustomPlayerFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::DeleteCustomPlayerFile(class UObject* WorldContextObject, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "DeleteCustomPlayerFile");

	Params::EMSFunctionLibrary_DeleteCustomPlayerFile Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.DeleteCustomSave
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSCustomSaveGame*               SaveGame                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::DeleteCustomSave(class UObject* WorldContextObject, class UEMSCustomSaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "DeleteCustomSave");

	Params::EMSFunctionLibrary_DeleteCustomSave Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGame = SaveGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.DeleteSaveUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::DeleteSaveUser(class UObject* WorldContextObject, const class FString& username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "DeleteSaveUser");

	Params::EMSFunctionLibrary_DeleteSaveUser Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.username = std::move(username);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.DoesSaveSlotExist
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bComplete                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::DoesSaveSlotExist(class UObject* WorldContextObject, const class FString& SaveGameName, bool bComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "DoesSaveSlotExist");

	Params::EMSFunctionLibrary_DoesSaveSlotExist Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGameName = std::move(SaveGameName);
	Parms.bComplete = bComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.ExportSaveThumbnail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           TextureRenderTarget                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::ExportSaveThumbnail(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const class FString& SaveGameName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "ExportSaveThumbnail");

	Params::EMSFunctionLibrary_ExportSaveThumbnail Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TextureRenderTarget = TextureRenderTarget;
	Parms.SaveGameName = std::move(SaveGameName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.GetAllSaveUsers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEMSFunctionLibrary::GetAllSaveUsers(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "GetAllSaveUsers");

	Params::EMSFunctionLibrary_GetAllSaveUsers Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.GetCustomSave
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UEMSCustomSaveGame>   SaveGameClass                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveSlot                                               (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSCustomSaveGame*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSCustomSaveGame* UEMSFunctionLibrary::GetCustomSave(class UObject* WorldContextObject, TSubclassOf<class UEMSCustomSaveGame> SaveGameClass, const class FString& SaveSlot, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "GetCustomSave");

	Params::EMSFunctionLibrary_GetCustomSave Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGameClass = SaveGameClass;
	Parms.SaveSlot = std::move(SaveSlot);
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.GetNamedSlotInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSInfoSaveGame*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSInfoSaveGame* UEMSFunctionLibrary::GetNamedSlotInfo(class UObject* WorldContextObject, const class FString& SaveGameName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "GetNamedSlotInfo");

	Params::EMSFunctionLibrary_GetNamedSlotInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGameName = std::move(SaveGameName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.GetSlotInfoSaveGame
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSInfoSaveGame*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEMSInfoSaveGame* UEMSFunctionLibrary::GetSlotInfoSaveGame(class UObject* WorldContextObject, class FString* SaveGameName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "GetSlotInfoSaveGame");

	Params::EMSFunctionLibrary_GetSlotInfoSaveGame Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SaveGameName != nullptr)
		*SaveGameName = std::move(Parms.SaveGameName);

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.GetSortedSaveSlots
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEMSFunctionLibrary::GetSortedSaveSlots(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "GetSortedSaveSlots");

	Params::EMSFunctionLibrary_GetSortedSaveSlots Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.ImportSaveThumbnail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UEMSFunctionLibrary::ImportSaveThumbnail(class UObject* WorldContextObject, const class FString& SaveGameName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "ImportSaveThumbnail");

	Params::EMSFunctionLibrary_ImportSaveThumbnail Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGameName = std::move(SaveGameName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.IsLevelStreamingActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::IsLevelStreamingActive(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "IsLevelStreamingActive");

	Params::EMSFunctionLibrary_IsLevelStreamingActive Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.IsSavingOrLoading
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::IsSavingOrLoading(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "IsSavingOrLoading");

	Params::EMSFunctionLibrary_IsSavingOrLoading Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.IsWorldPartition
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::IsWorldPartition(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "IsWorldPartition");

	Params::EMSFunctionLibrary_IsWorldPartition Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.LoadPlayerActorsCustom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::LoadPlayerActorsCustom(class AController* Controller, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "LoadPlayerActorsCustom");

	Params::EMSFunctionLibrary_LoadPlayerActorsCustom Parms{};

	Parms.Controller = Controller;
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.LoadRawObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           WorldContextActor                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRawObjectSaveData               Data                                                   (Parm, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UEMSFunctionLibrary::LoadRawObject(class AActor* WorldContextActor, const struct FRawObjectSaveData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "LoadRawObject");

	Params::EMSFunctionLibrary_LoadRawObject Parms{};

	Parms.WorldContextActor = WorldContextActor;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.SaveCustom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEMSCustomSaveGame*               SaveGame                                               (Parm, ZeroConstructor, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::SaveCustom(class UObject* WorldContextObject, class UEMSCustomSaveGame* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "SaveCustom");

	Params::EMSFunctionLibrary_SaveCustom Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGame = SaveGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.SavePlayerActorsCustom
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*                      Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::SavePlayerActorsCustom(class AController* Controller, const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "SavePlayerActorsCustom");

	Params::EMSFunctionLibrary_SavePlayerActorsCustom Parms{};

	Parms.Controller = Controller;
	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.SaveRawObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           WorldContextActor                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRawObjectSaveData               Data                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEMSFunctionLibrary::SaveRawObject(class AActor* WorldContextActor, const struct FRawObjectSaveData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "SaveRawObject");

	Params::EMSFunctionLibrary_SaveRawObject Parms{};

	Parms.WorldContextActor = WorldContextActor;
	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EasyMultiSave.EMSFunctionLibrary.SetActorSaveProperties
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipSave                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipTransform                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELoadedStateMod                         LoadedState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::SetActorSaveProperties(class UObject* WorldContextObject, bool bSkipSave, bool bPersistent, bool bSkipTransform, ELoadedStateMod LoadedState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "SetActorSaveProperties");

	Params::EMSFunctionLibrary_SetActorSaveProperties Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bSkipSave = bSkipSave;
	Parms.bPersistent = bPersistent;
	Parms.bSkipTransform = bSkipTransform;
	Parms.LoadedState = LoadedState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.SetCurrentSaveGameName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SaveGameName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::SetCurrentSaveGameName(class UObject* WorldContextObject, const class FString& SaveGameName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "SetCurrentSaveGameName");

	Params::EMSFunctionLibrary_SetCurrentSaveGameName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SaveGameName = std::move(SaveGameName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EasyMultiSave.EMSFunctionLibrary.SetCurrentSaveUserName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           username                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEMSFunctionLibrary::SetCurrentSaveUserName(class UObject* WorldContextObject, const class FString& username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EMSFunctionLibrary", "SetCurrentSaveUserName");

	Params::EMSFunctionLibrary_SetCurrentSaveUserName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.username = std::move(username);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

