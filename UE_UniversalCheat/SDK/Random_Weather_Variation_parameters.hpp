#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Random_Weather_Variation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UDS_TemperatureType_structs.hpp"
#include "Engine_structs.hpp"
#include "UDS_Season_structs.hpp"
#include "UDS_RandomWeatherTiming_structs.hpp"
#include "RandomWeatherVariation_State_structs.hpp"


namespace SDK::Params
{

// Function Random_Weather_Variation.Random_Weather_Variation_C.Apply State
// 0x0090 (0x0090 - 0x0000)
struct Random_Weather_Variation_C_Apply_State final
{
public:
	struct FRandomWeatherVariation_State          Random_Weather_State;                              // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_DynamicCast_AsUDS_Weather_Settings;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_DynamicCast_AsUDS_Weather_Settings_1;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_DynamicCast_AsUDS_Weather_Settings_2;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Apply_State) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Apply_State");
static_assert(sizeof(Random_Weather_Variation_C_Apply_State) == 0x000090, "Wrong size on Random_Weather_Variation_C_Apply_State");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, Random_Weather_State) == 0x000000, "Member 'Random_Weather_Variation_C_Apply_State::Random_Weather_State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Random_Weather_Variation_C_Apply_State::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Random_Weather_Variation_C_Apply_State::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_Array_Get_Item) == 0x000050, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, K2Node_DynamicCast_AsUDS_Weather_Settings) == 0x000058, "Member 'Random_Weather_Variation_C_Apply_State::K2Node_DynamicCast_AsUDS_Weather_Settings' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Random_Weather_Variation_C_Apply_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, K2Node_DynamicCast_AsUDS_Weather_Settings_1) == 0x000068, "Member 'Random_Weather_Variation_C_Apply_State::K2Node_DynamicCast_AsUDS_Weather_Settings_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'Random_Weather_Variation_C_Apply_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, K2Node_DynamicCast_AsUDS_Weather_Settings_2) == 0x000080, "Member 'Random_Weather_Variation_C_Apply_State::K2Node_DynamicCast_AsUDS_Weather_Settings_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'Random_Weather_Variation_C_Apply_State::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Bind to UDS
// 0x0020 (0x0020 - 0x0000)
struct Random_Weather_Variation_C_Bind_to_UDS final
{
public:
	TDelegate<void(int32 Hour)>                   K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Hour)>                   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Bind_to_UDS) == 0x000004, "Wrong alignment on Random_Weather_Variation_C_Bind_to_UDS");
static_assert(sizeof(Random_Weather_Variation_C_Bind_to_UDS) == 0x000020, "Wrong size on Random_Weather_Variation_C_Bind_to_UDS");
static_assert(offsetof(Random_Weather_Variation_C_Bind_to_UDS, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Random_Weather_Variation_C_Bind_to_UDS::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Bind_to_UDS, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'Random_Weather_Variation_C_Bind_to_UDS::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Change to Next Random Weather Type
// 0x0080 (0x0080 - 0x0000)
struct Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type final
{
public:
	double                                        Threshold;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Float;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Max_Range;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Create_Composite_Probability_Map_Out;     // 0x0028(0x0050)()
	class UUDS_Weather_Settings_C*                CallFunc_Select_Random_Weather_Type_Out;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type");
static_assert(sizeof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type) == 0x000080, "Wrong size on Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, Threshold) == 0x000000, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::Threshold' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, Random_Float) == 0x000008, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::Random_Float' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, Random_Max_Range) == 0x000010, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::Random_Max_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, CallFunc_Array_Get_Item) == 0x000018, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000021, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, CallFunc_Create_Composite_Probability_Map_Out) == 0x000028, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::CallFunc_Create_Composite_Probability_Map_Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type, CallFunc_Select_Random_Weather_Type_Out) == 0x000078, "Member 'Random_Weather_Variation_C_Change_to_Next_Random_Weather_Type::CallFunc_Select_Random_Weather_Type_Out' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Check For Season Instant Refresh
// 0x0070 (0x0070 - 0x0000)
struct Random_Weather_Variation_C_Check_For_Season_Instant_Refresh final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Season_Season;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   CallFunc_Get_Season_Season_Enum;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_Season_Probability_Map_Map;           // 0x0018(0x0050)()
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Check_For_Season_Instant_Refresh");
static_assert(sizeof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh) == 0x000070, "Wrong size on Random_Weather_Variation_C_Check_For_Season_Instant_Refresh");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_Get_Season_Season) == 0x000008, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_Get_Season_Season' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_Get_Season_Season_Enum) == 0x000010, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_Get_Season_Season_Enum' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_FFloor_ReturnValue) == 0x000014, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_Get_Season_Probability_Map_Map) == 0x000018, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_Get_Season_Probability_Map_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_Map_Contains_ReturnValue) == 0x000068, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Check_For_Season_Instant_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'Random_Weather_Variation_C_Check_For_Season_Instant_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Create Composite Probability Map
// 0x02A8 (0x02A8 - 0x0000)
struct Random_Weather_Variation_C_Create_Composite_Probability_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Out;                                               // 0x0000(0x0050)(Parm, OutParm)
	TArray<double>                                Season_Probability_Totals;                         // 0x0050(0x0010)(Edit, BlueprintVisible)
	TMap<class UUDS_Weather_Settings_C*, double>  Composite_Map;                                     // 0x0060(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_Season_Probability_Map_Map;           // 0x00C8(0x0050)()
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_Season_Probability_Map_Map_1;         // 0x0168(0x0050)()
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x01B8(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_4;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Season_Season;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Season                                   CallFunc_Get_Season_Season_Enum;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_Season_Probability_Map_Map_2;         // 0x0210(0x0050)()
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ReferenceParm)
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_5;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Create_Composite_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Create_Composite_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Create_Composite_Probability_Map) == 0x0002A8, "Wrong size on Random_Weather_Variation_C_Create_Composite_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Out) == 0x000000, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Season_Probability_Totals) == 0x000050, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Season_Probability_Totals' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Composite_Map) == 0x000060, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Composite_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable) == 0x0000C0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Get_Season_Probability_Map_Map) == 0x0000C8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Get_Season_Probability_Map_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000118, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000128, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item) == 0x000130, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_Value) == 0x000138, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_ReturnValue) == 0x000140, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x000144, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x000160, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_1) == 0x000164, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Get_Season_Probability_Map_Map_1) == 0x000168, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Get_Season_Probability_Map_Map_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Values_Values) == 0x0001B8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_2) == 0x0001C8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_3) == 0x0001D0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x0001DC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001E1, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001E4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_4) == 0x0001E8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Get_Season_Season) == 0x0001F0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Get_Season_Season' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Get_Season_Season_Enum) == 0x0001F8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Get_Season_Season_Enum' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000200, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_FFloor_ReturnValue) == 0x000208, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Get_Season_Probability_Map_Map_2) == 0x000210, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Get_Season_Probability_Map_Map_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_MakeArray_Array) == 0x000260, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_Value_1) == 0x000270, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_ReturnValue_1) == 0x000278, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_5) == 0x000280, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000288, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000290, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_SafeDivide_ReturnValue) == 0x000298, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002A0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Current Hour Changed
// 0x0018 (0x0018 - 0x0000)
struct Random_Weather_Variation_C_Current_Hour_Changed final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      CallFunc_Random_Weather_Mode_Mode;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Current_Hour_Changed) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Current_Hour_Changed");
static_assert(sizeof(Random_Weather_Variation_C_Current_Hour_Changed) == 0x000018, "Wrong size on Random_Weather_Variation_C_Current_Hour_Changed");
static_assert(offsetof(Random_Weather_Variation_C_Current_Hour_Changed, Hour) == 0x000000, "Member 'Random_Weather_Variation_C_Current_Hour_Changed::Hour' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Current_Hour_Changed, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Current_Hour_Changed::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Current_Hour_Changed, CallFunc_Random_Weather_Mode_Mode) == 0x000010, "Member 'Random_Weather_Variation_C_Current_Hour_Changed::CallFunc_Random_Weather_Mode_Mode' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Current_Hour_Changed, CallFunc_HasAuthority_ReturnValue) == 0x000011, "Member 'Random_Weather_Variation_C_Current_Hour_Changed::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Current_Hour_Changed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Random_Weather_Variation_C_Current_Hour_Changed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ExecuteUbergraph_Random_Weather_Variation
// 0x0008 (0x0008 - 0x0000)
struct Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000004, "Wrong alignment on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(sizeof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000008, "Wrong size on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, EntryPoint) == 0x000000, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::EntryPoint' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Fill Weather Forecast
// 0x00D0 (0x00D0 - 0x0000)
struct Random_Weather_Variation_C_Fill_Weather_Forecast final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Current_Probabilities;                             // 0x0000(0x0050)(Edit, BlueprintVisible)
	class UUDS_Weather_Settings_C*                Last_Step_Weather;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Create_Composite_Probability_Map_Out;     // 0x0058(0x0050)()
	class UUDS_Weather_Settings_C*                CallFunc_Select_Random_Weather_Type_Out;           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Fill_Weather_Forecast) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Fill_Weather_Forecast");
static_assert(sizeof(Random_Weather_Variation_C_Fill_Weather_Forecast) == 0x0000D0, "Wrong size on Random_Weather_Variation_C_Fill_Weather_Forecast");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, Current_Probabilities) == 0x000000, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::Current_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, Last_Step_Weather) == 0x000050, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::Last_Step_Weather' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Create_Composite_Probability_Map_Out) == 0x000058, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Create_Composite_Probability_Map_Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Select_Random_Weather_Type_Out) == 0x0000A8, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Select_Random_Weather_Type_Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Array_LastIndex_ReturnValue) == 0x0000B4, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000C0, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Fill_Weather_Forecast, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'Random_Weather_Variation_C_Fill_Weather_Forecast::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Filter Probability Map
// 0x01C0 (0x01C0 - 0x0000)
struct Random_Weather_Variation_C_Filter_Probability_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Probability_Map;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUDS_Weather_Settings_C*                Current_Random_Type;                               // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Filtered_Probability_Map;                          // 0x0058(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Map;                                               // 0x00A8(0x0050)(Edit, BlueprintVisible)
	TArray<class UUDS_Weather_Settings_C*>        Weather_Types_to_Filter;                           // 0x00F8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0130(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys_1;                          // 0x0160(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_2;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Filter_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Filter_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Filter_Probability_Map) == 0x0001C0, "Wrong size on Random_Weather_Variation_C_Filter_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Probability_Map) == 0x000000, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Current_Random_Type) == 0x000050, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Current_Random_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Filtered_Probability_Map) == 0x000058, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Map) == 0x0000A8, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Weather_Types_to_Filter) == 0x0000F8, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Weather_Types_to_Filter' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Temp_int_Array_Index_Variable) == 0x000108, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x000110, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x000118, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x00011C, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Temp_int_Array_Index_Variable_2) == 0x000120, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000124, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000125, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable_2) == 0x000128, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000130, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Get_Item) == 0x000140, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Add_ReturnValue) == 0x00014C, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000151, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_BooleanAND_ReturnValue) == 0x000152, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000153, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x000154, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_BooleanAND_ReturnValue_1) == 0x000158, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_BooleanOR_ReturnValue) == 0x000159, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Map_Keys_Keys_1) == 0x000160, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000180, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x000188, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Abs_ReturnValue) == 0x000190, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000198, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Get_Item_2) == 0x0001A0, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_AddUnique_ReturnValue) == 0x0001A8, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Map_Remove_ReturnValue) == 0x0001AC, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue_2) == 0x0001B0, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B4, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Filter_Probability_Map, CallFunc_Array_Add_ReturnValue_1) == 0x0001B8, "Member 'Random_Weather_Variation_C_Filter_Probability_Map::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get Climate Temperature Ranges
// 0x00D0 (0x00D0 - 0x0000)
struct Random_Weather_Variation_C_Get_Climate_Temperature_Ranges final
{
public:
	class UUDS_Climate_Preset_C*                  Climate_Object;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Scale;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Summer_Range;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Autumn_Range;                                      // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Winter_Range;                                      // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Spring_Range;                                      // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low_1;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low_2;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High_2; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low_3;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High_3; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_Climate_Temperature_Ranges");
static_assert(sizeof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges) == 0x0000D0, "Wrong size on Random_Weather_Variation_C_Get_Climate_Temperature_Ranges");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Climate_Object) == 0x000000, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Climate_Object' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Scale) == 0x000008, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Scale' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Summer_Range) == 0x000010, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Summer_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Autumn_Range) == 0x000020, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Autumn_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Winter_Range) == 0x000030, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Winter_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Spring_Range) == 0x000040, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Spring_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low) == 0x000050, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High) == 0x000058, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low_1) == 0x000060, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High_1) == 0x000068, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue_1) == 0x000080, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low_2) == 0x000090, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High_2) == 0x000098, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low_3) == 0x0000A0, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High_3) == 0x0000A8, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000B0, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000C0, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get Current Lerp Alpha
// 0x00C0 (0x00C0 - 0x0000)
struct Random_Weather_Variation_C_Get_Current_Lerp_Alpha final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      CallFunc_Random_Weather_Mode_Mode;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_Current_Lerp_Alpha");
static_assert(sizeof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha) == 0x0000C0, "Wrong size on Random_Weather_Variation_C_Get_Current_Lerp_Alpha");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Random_Weather_Mode_Mode) == 0x000008, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Random_Weather_Mode_Mode' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_SafeDivide_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000068, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_SafeDivide_ReturnValue_1) == 0x000078, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_FClamp_ReturnValue_1) == 0x000080, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_FMax_ReturnValue_1) == 0x000090, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000098, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Current_Lerp_Alpha, CallFunc_FClamp_ReturnValue_2) == 0x0000B8, "Member 'Random_Weather_Variation_C_Get_Current_Lerp_Alpha::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get Material State Manager
// 0x0008 (0x0008 - 0x0000)
struct Random_Weather_Variation_C_Get_Material_State_Manager final
{
public:
	class UUDW_Material_State_Manager_C*          Material_State_Manager;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_Material_State_Manager) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_Material_State_Manager");
static_assert(sizeof(Random_Weather_Variation_C_Get_Material_State_Manager) == 0x000008, "Wrong size on Random_Weather_Variation_C_Get_Material_State_Manager");
static_assert(offsetof(Random_Weather_Variation_C_Get_Material_State_Manager, Material_State_Manager) == 0x000000, "Member 'Random_Weather_Variation_C_Get_Material_State_Manager::Material_State_Manager' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get Season Probability Map
// 0x0100 (0x0100 - 0x0000)
struct Random_Weather_Variation_C_Get_Season_Probability_Map final
{
public:
	int32                                         Season;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  Map;                                               // 0x0008(0x0050)(Parm, OutParm)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default;                             // 0x0060(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default_1;                           // 0x00B0(0x0050)()
};
static_assert(alignof(Random_Weather_Variation_C_Get_Season_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_Season_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Get_Season_Probability_Map) == 0x000100, "Wrong size on Random_Weather_Variation_C_Get_Season_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Get_Season_Probability_Map, Season) == 0x000000, "Member 'Random_Weather_Variation_C_Get_Season_Probability_Map::Season' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Season_Probability_Map, Map) == 0x000008, "Member 'Random_Weather_Variation_C_Get_Season_Probability_Map::Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Season_Probability_Map, Temp_int_Variable) == 0x000058, "Member 'Random_Weather_Variation_C_Get_Season_Probability_Map::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Season_Probability_Map, Temp_int_Variable_1) == 0x00005C, "Member 'Random_Weather_Variation_C_Get_Season_Probability_Map::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Season_Probability_Map, K2Node_Select_Default) == 0x000060, "Member 'Random_Weather_Variation_C_Get_Season_Probability_Map::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Season_Probability_Map, K2Node_Select_Default_1) == 0x0000B0, "Member 'Random_Weather_Variation_C_Get_Season_Probability_Map::K2Node_Select_Default_1' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get State for Saving
// 0x00C8 (0x00C8 - 0x0000)
struct Random_Weather_Variation_C_Get_State_for_Saving final
{
public:
	struct FRandomWeatherVariation_State          State;                                             // 0x0000(0x0040)(Parm, OutParm, HasGetValueTypeHash)
	struct FRandomWeatherVariation_State          K2Node_MakeStruct_RandomWeatherVariation_State;    // 0x0040(0x0040)(HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      CallFunc_Random_Weather_Mode_Mode;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomWeatherVariation_State          K2Node_MakeStruct_RandomWeatherVariation_State_1;  // 0x0088(0x0040)(HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_State_for_Saving) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_State_for_Saving");
static_assert(sizeof(Random_Weather_Variation_C_Get_State_for_Saving) == 0x0000C8, "Wrong size on Random_Weather_Variation_C_Get_State_for_Saving");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, State) == 0x000000, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, K2Node_MakeStruct_RandomWeatherVariation_State) == 0x000040, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::K2Node_MakeStruct_RandomWeatherVariation_State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, CallFunc_Random_Weather_Mode_Mode) == 0x000080, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::CallFunc_Random_Weather_Mode_Mode' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, K2Node_MakeStruct_RandomWeatherVariation_State_1) == 0x000088, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::K2Node_MakeStruct_RandomWeatherVariation_State_1' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Hourly
// 0x0018 (0x0018 - 0x0000)
struct Random_Weather_Variation_C_Hourly final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      CallFunc_Random_Weather_Mode_Mode;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Hourly) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Hourly");
static_assert(sizeof(Random_Weather_Variation_C_Hourly) == 0x000018, "Wrong size on Random_Weather_Variation_C_Hourly");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, Hour) == 0x000000, "Member 'Random_Weather_Variation_C_Hourly::Hour' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Hourly::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, CallFunc_Random_Weather_Mode_Mode) == 0x000010, "Member 'Random_Weather_Variation_C_Hourly::CallFunc_Random_Weather_Mode_Mode' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, CallFunc_HasAuthority_ReturnValue) == 0x000011, "Member 'Random_Weather_Variation_C_Hourly::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Random_Weather_Variation_C_Hourly::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000013, "Member 'Random_Weather_Variation_C_Hourly::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Hourly, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'Random_Weather_Variation_C_Hourly::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Change Timer
// 0x0028 (0x0028 - 0x0000)
struct Random_Weather_Variation_C_Increment_Change_Timer final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RandomWeatherTiming                      CallFunc_Random_Weather_Mode_Mode;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Change_Timer) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Change_Timer");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Change_Timer) == 0x000028, "Wrong size on Random_Weather_Variation_C_Increment_Change_Timer");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Random_Weather_Mode_Mode) == 0x000009, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Random_Weather_Mode_Mode' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000B, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Random Weather
// 0x0028 (0x0028 - 0x0000)
struct Random_Weather_Variation_C_Increment_Random_Weather final
{
public:
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Current_Lerp_Alpha_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000028, "Wrong size on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Ease_ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Get_Current_Lerp_Alpha_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Get_Current_Lerp_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Instant Material Update
// 0x0068 (0x0068 - 0x0000)
struct Random_Weather_Variation_C_Instant_Material_Update final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Get_Weather_Presets_Used_By_Local_Weather_Sources; // 0x0000(0x0050)()
	double                                        CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDW_Material_State_Manager_C*          CallFunc_Get_Material_State_Manager_Material_State_Manager; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Instant_Material_Update) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Instant_Material_Update");
static_assert(sizeof(Random_Weather_Variation_C_Instant_Material_Update) == 0x000068, "Wrong size on Random_Weather_Variation_C_Instant_Material_Update");
static_assert(offsetof(Random_Weather_Variation_C_Instant_Material_Update, CallFunc_Get_Weather_Presets_Used_By_Local_Weather_Sources) == 0x000000, "Member 'Random_Weather_Variation_C_Instant_Material_Update::CallFunc_Get_Weather_Presets_Used_By_Local_Weather_Sources' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Instant_Material_Update, CallFunc_Map_Find_Value) == 0x000050, "Member 'Random_Weather_Variation_C_Instant_Material_Update::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Instant_Material_Update, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'Random_Weather_Variation_C_Instant_Material_Update::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Instant_Material_Update, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000059, "Member 'Random_Weather_Variation_C_Instant_Material_Update::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Instant_Material_Update, CallFunc_Get_Material_State_Manager_Material_State_Manager) == 0x000060, "Member 'Random_Weather_Variation_C_Instant_Material_Update::CallFunc_Get_Material_State_Manager_Material_State_Manager' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Make Climate Probability Map
// 0x0460 (0x0460 - 0x0000)
struct Random_Weather_Variation_C_Make_Climate_Probability_Map final
{
public:
	class UUDS_Climate_Preset_C*                  Climate;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Season;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  Probability_Map;                                   // 0x0010(0x0050)(Parm, OutParm)
	double                                        Probability_Total;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Precipitation_Percentage;                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        Precipitation_Types;                               // 0x0070(0x0010)(Edit, BlueprintVisible)
	double                                        Remaining_Allocation_Percentage;                   // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Allocation_Fraction;                               // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snowing_Percentage;                                // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Raining_Percentage;                                // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Current_Type;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Weather_Probability_Map;                           // 0x00A8(0x0050)(Edit, BlueprintVisible)
	double                                        Current_Type_Probability;                          // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Precipitating_Percentage;                          // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sunny_Percentage;                                  // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloudy_Percentage;                                 // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snowfall__mm_;                                     // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rainfall__mm_;                                     // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Low_Temp__C_;                                      // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        High_Temp__C_;                                     // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	TArray<class UUDS_Weather_Settings_C*>        K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0190(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UUDS_Weather_Settings_C*          Temp_object_Variable;                              // 0x01B0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x01B8(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_1;                            // 0x01F0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_2;                            // 0x0210(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_3;                            // 0x0240(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_2;                         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_4;                            // 0x0328(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys_1;                          // 0x0340(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_3;                         // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x6];                                      // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_5;                            // 0x0388(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_6;                            // 0x03E0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_2;                          // 0x03E8(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_4;                         // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_3;                          // 0x0400(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_5;                         // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_4;                          // 0x0418(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_6;                         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_5;                          // 0x0430(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_7;                         // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_6;                          // 0x0448(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_8;                         // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Make_Climate_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Make_Climate_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Make_Climate_Probability_Map) == 0x000460, "Wrong size on Random_Weather_Variation_C_Make_Climate_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Climate) == 0x000000, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Climate' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Season) == 0x000008, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Season' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Probability_Map) == 0x000010, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Probability_Total) == 0x000060, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Probability_Total' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Current_Precipitation_Percentage) == 0x000068, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Current_Precipitation_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Precipitation_Types) == 0x000070, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Precipitation_Types' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Remaining_Allocation_Percentage) == 0x000080, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Remaining_Allocation_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Allocation_Fraction) == 0x000088, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Allocation_Fraction' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Snowing_Percentage) == 0x000090, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Snowing_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Raining_Percentage) == 0x000098, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Raining_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Current_Type) == 0x0000A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Current_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Weather_Probability_Map) == 0x0000A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Weather_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Current_Type_Probability) == 0x0000F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Current_Type_Probability' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Precipitating_Percentage) == 0x000100, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Precipitating_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Sunny_Percentage) == 0x000108, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Sunny_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Cloudy_Percentage) == 0x000110, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Cloudy_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Snowfall__mm_) == 0x000118, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Snowfall__mm_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Rainfall__mm_) == 0x000120, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Rainfall__mm_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Low_Temp__C_) == 0x000128, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Low_Temp__C_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, High_Temp__C_) == 0x000130, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::High_Temp__C_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable) == 0x00013C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Conv_IntToBool_ReturnValue) == 0x000144, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000145, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x00014C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x000150, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable) == 0x000154, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x000158, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable_2) == 0x00015C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_3) == 0x000160, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable_2) == 0x000164, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array) == 0x000168, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_1) == 0x000178, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable_3) == 0x000188, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000190, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x0001A4, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable) == 0x0001B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Values_Values) == 0x0001B8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_1) == 0x0001F0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue) == 0x0001F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000200, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000208, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_2) == 0x000210, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000220, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000228, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000230, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_3) == 0x000240, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000248, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000250, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue) == 0x000258, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable_1) == 0x000260, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_Select_Default) == 0x000268, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000270, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000278, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMin_ReturnValue) == 0x000280, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable_3) == 0x000288, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000290, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_2) == 0x000298, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_Value) == 0x0002A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_ReturnValue) == 0x0002A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue_2) == 0x0002B8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002C0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_real_Variable) == 0x0002D0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002D8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue_1) == 0x0002E0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0002E8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002F0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0002F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000300, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_real_Variable_1) == 0x000308, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000310, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable_2) == 0x000318, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_Select_Default_1) == 0x000320, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_4) == 0x000328, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000330, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Lerp_ReturnValue) == 0x000338, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Keys_Keys_1) == 0x000340, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_3) == 0x000350, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue_3) == 0x000358, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Remove_ReturnValue) == 0x00035C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue_3) == 0x00035D, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_Value_1) == 0x000360, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_ReturnValue_1) == 0x000368, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000369, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000370, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000378, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000380, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_5) == 0x000388, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000390, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue_2) == 0x000398, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0003A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0003A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0003B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0003B8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0003C0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0003C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue_3) == 0x0003D0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Lerp_ReturnValue_1) == 0x0003D8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_6) == 0x0003E0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_2) == 0x0003E8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_4) == 0x0003F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_3) == 0x000400, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_5) == 0x000410, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_4) == 0x000418, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_6) == 0x000428, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_5) == 0x000430, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_7) == 0x000440, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_6) == 0x000448, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_8) == 0x000458, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_8' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Random Weather Mode
// 0x0001 (0x0001 - 0x0000)
struct Random_Weather_Variation_C_Random_Weather_Mode final
{
public:
	EUDS_RandomWeatherTiming                      Mode;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Random_Weather_Mode) == 0x000001, "Wrong alignment on Random_Weather_Variation_C_Random_Weather_Mode");
static_assert(sizeof(Random_Weather_Variation_C_Random_Weather_Mode) == 0x000001, "Wrong size on Random_Weather_Variation_C_Random_Weather_Mode");
static_assert(offsetof(Random_Weather_Variation_C_Random_Weather_Mode, Mode) == 0x000000, "Member 'Random_Weather_Variation_C_Random_Weather_Mode::Mode' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Recalculate Forecast
// 0x0010 (0x0010 - 0x0000)
struct Random_Weather_Variation_C_Recalculate_Forecast final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Recalculate_Forecast) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Recalculate_Forecast");
static_assert(sizeof(Random_Weather_Variation_C_Recalculate_Forecast) == 0x000010, "Wrong size on Random_Weather_Variation_C_Recalculate_Forecast");
static_assert(offsetof(Random_Weather_Variation_C_Recalculate_Forecast, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Recalculate_Forecast::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Recalculate_Forecast, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Recalculate_Forecast::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Random_Weather_Variation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong alignment on Random_Weather_Variation_C_ReceiveTick");
static_assert(sizeof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong size on Random_Weather_Variation_C_ReceiveTick");
static_assert(offsetof(Random_Weather_Variation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Random_Weather_Variation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Select Random Weather Type
// 0x01C8 (0x01C8 - 0x0000)
struct Random_Weather_Variation_C_Select_Random_Weather_Type final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Probability_Map;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUDS_Weather_Settings_C*                Previous_Weather;                                  // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Out;                                               // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Selected_Weather;                                  // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Threshold;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Float;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Max_Range;                                  // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Current_Probabilities;                             // 0x0080(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x00E8(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Filter_Probability_Map_Filtered_Probability_Map; // 0x0100(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0158(0x0010)(ReferenceParm)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Random_Float_ImplicitCast;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Select_Random_Weather_Type) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Select_Random_Weather_Type");
static_assert(sizeof(Random_Weather_Variation_C_Select_Random_Weather_Type) == 0x0001C8, "Wrong size on Random_Weather_Variation_C_Select_Random_Weather_Type");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Probability_Map) == 0x000000, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Previous_Weather) == 0x000050, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Previous_Weather' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Out) == 0x000058, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Selected_Weather) == 0x000060, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Selected_Weather' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Threshold) == 0x000068, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Threshold' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Random_Float) == 0x000070, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Random_Float' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Random_Max_Range) == 0x000078, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Random_Max_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Current_Probabilities) == 0x000080, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Current_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D8, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Temp_int_Array_Index_Variable_1) == 0x0000E4, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Map_Values_Values) == 0x0000E8, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Filter_Probability_Map_Filtered_Probability_Map) == 0x000100, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Filter_Probability_Map_Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Map_Keys_Keys) == 0x000158, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000168, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Map_Find_Value) == 0x000178, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Map_Find_ReturnValue) == 0x000180, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Array_Length_ReturnValue_1) == 0x000184, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000190, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_BooleanAND_ReturnValue) == 0x000198, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, Temp_int_Loop_Counter_Variable_1) == 0x00019C, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A0, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A4, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x0001B8, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_Random_Weather_Type, K2Node_VariableSet_Random_Float_ImplicitCast) == 0x0001C0, "Member 'Random_Weather_Variation_C_Select_Random_Weather_Type::K2Node_VariableSet_Random_Float_ImplicitCast' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Set New Random Interval Timer
// 0x0028 (0x0028 - 0x0000)
struct Random_Weather_Variation_C_Set_New_Random_Interval_Timer final
{
public:
	double                                        CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Random_Value_in_Float_Range_Structure_Out; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Set_New_Random_Interval_Timer");
static_assert(sizeof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer) == 0x000028, "Wrong size on Random_Weather_Variation_C_Set_New_Random_Interval_Timer");
static_assert(offsetof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer, CallFunc_Map_Find_Value) == 0x000000, "Member 'Random_Weather_Variation_C_Set_New_Random_Interval_Timer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Set_New_Random_Interval_Timer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Set_New_Random_Interval_Timer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Set_New_Random_Interval_Timer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Set_New_Random_Interval_Timer, CallFunc_Random_Value_in_Float_Range_Structure_Out) == 0x000020, "Member 'Random_Weather_Variation_C_Set_New_Random_Interval_Timer::CallFunc_Random_Value_in_Float_Range_Structure_Out' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Start Up Random Weather Variation
// 0x0050 (0x0050 - 0x0000)
struct Random_Weather_Variation_C_Start_Up_Random_Weather_Variation final
{
public:
	class AUltra_Dynamic_Weather_C*               UDW_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             Volume_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Start_with_a_Random_Type;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                Starting_Weather_Settings;                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Start_Up_Random_Weather_Variation");
static_assert(sizeof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation) == 0x000050, "Wrong size on Random_Weather_Variation_C_Start_Up_Random_Weather_Variation");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, UDW_0) == 0x000000, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::UDW_0' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Volume_0) == 0x000008, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Volume_0' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Start_with_a_Random_Type) == 0x000010, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Start_with_a_Random_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Starting_Weather_Settings) == 0x000018, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Starting_Weather_Settings' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_K2_SetTimer_ReturnValue) == 0x000040, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_SpawnObject_ReturnValue) == 0x000048, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.State Source Map
// 0x0100 (0x0100 - 0x0000)
struct Random_Weather_Variation_C_State_Source_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Source_Map;                                        // 0x0000(0x0050)(Parm, OutParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_MakeMap_Map;                                // 0x0058(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_MakeMap_Map_1;                              // 0x00A8(0x0050)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_State_Source_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_State_Source_Map");
static_assert(sizeof(Random_Weather_Variation_C_State_Source_Map) == 0x000100, "Wrong size on Random_Weather_Variation_C_State_Source_Map");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, Source_Map) == 0x000000, "Member 'Random_Weather_Variation_C_State_Source_Map::Source_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Random_Weather_Variation_C_State_Source_Map::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, K2Node_MakeMap_Map) == 0x000058, "Member 'Random_Weather_Variation_C_State_Source_Map::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, K2Node_MakeMap_Map_1) == 0x0000A8, "Member 'Random_Weather_Variation_C_State_Source_Map::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'Random_Weather_Variation_C_State_Source_Map::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F9, "Member 'Random_Weather_Variation_C_State_Source_Map::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_State_Source_Map, CallFunc_BooleanOR_ReturnValue) == 0x0000FA, "Member 'Random_Weather_Variation_C_State_Source_Map::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

